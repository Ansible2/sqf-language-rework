export const compiledDocs = {"BIN Functions\\BIN_fnc_addButtonEvents.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addButtonEvents` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addButtonEvents;\n``` -->","BIN Functions\\BIN_fnc_addDangerZone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addDangerZone` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addDangerZone;\n``` -->","BIN Functions\\BIN_fnc_addEntitiesToArea.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addEntitiesToArea` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addEntitiesToArea;\n``` -->","BIN Functions\\BIN_fnc_addFaradayCage.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addFaradayCage` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addFaradayCage;\n``` -->","BIN Functions\\BIN_fnc_addIDWMapMeasurementPoint.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tAdds measurement point to IDWMap\n\n\tParameter(s):\n\t\tARRAY (Optional) - position in format [x,y] or [x,y,z] in which case z is ignored. Default: position player\n\n\tReturns:\n\t\tNUMBER \n\t\t\t0 ... 1 - strength at given coordinates \n\t\t\t-1 - point is out of bounds\n\t\t\t-999 - error\n\t\t\n\tExample:\n\t\tcall BIN_fnc_addIDWMapMeasurementPoint\n\t\t[x,y] call BIN_fnc_addIDWMapMeasurementPoint\n\t\t[x,y,z] call BIN_fnc_addIDWMapMeasurementPoint\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addIDWMapMeasurementPoint` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addIDWMapMeasurementPoint;\n``` -->","BIN Functions\\BIN_fnc_addObjectsToArea.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tAdds given array of objects to area, ovewriting previous objects data stored for the area in extension\n\n\tParameter(s):\n\t\t0: STRING - area name\n\t\t1: ARRAY - array of objects to add\n\n\tReturns:\n\t\tNUMBER - number of objects added\n\t\t\n\tExample:\n\t\t[\"myArea\", [obj1,ob2,...]]  call BIN_fnc_addObjectsToArea\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addObjectsToArea` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addObjectsToArea;\n``` -->","BIN Functions\\BIN_fnc_addRecordedSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addRecordedSignal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addRecordedSignal;\n``` -->","BIN Functions\\BIN_fnc_addRotation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addRotation` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addRotation;\n``` -->","BIN Functions\\BIN_fnc_addSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addSignal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addSignal;\n``` -->","BIN Functions\\BIN_fnc_addSiteEntities.md":"<pre>/*\n\n\tDescription:\n\t\tRegister entities to a site, so they can be despawned with the rest when player leaves the area.\n\n\tParameter(s):\n\t\t0: OBJECT - site logic. The site must be spawned for the function to work.\n\t\t1: ARRAY - entities to be added. Types can be mixed, the system will sort them out itself.\n\n\tReturns:\n\t\tBOOL - true if added\n*/\n\n#define ADD(ID)\\\n\t(_entities select ID) pushback _x;\\\n\t(_entityIDs select ID) pushback -1;\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addSiteEntities` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addSiteEntities;\n``` -->","BIN Functions\\BIN_fnc_addTranslation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addTranslation` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addTranslation;\n``` -->","BIN Functions\\BIN_fnc_addTravelPoint.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_addTravelPoint` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_addTravelPoint;\n``` -->","BIN Functions\\BIN_fnc_allIDWMapMeasurementPoints.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tRetrieves user measurements data with strengths\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tARRAY - user measurements in format [x,y,strength] or empty array [] on error\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getAllMeasurementPoints\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_allIDWMapMeasurementPoints` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_allIDWMapMeasurementPoints;\n``` -->","BIN Functions\\BIN_fnc_allowAntennaReveal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_allowAntennaReveal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_allowAntennaReveal;\n``` -->","BIN Functions\\BIN_fnc_allowedAntennaReveal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_allowedAntennaReveal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_allowedAntennaReveal;\n``` -->","BIN Functions\\BIN_fnc_animateSmooth.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_animateSmooth` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_animateSmooth;\n``` -->","BIN Functions\\BIN_fnc_assignAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_assignAntenna` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_assignAntenna;\n``` -->","BIN Functions\\BIN_fnc_assignedAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_assignedAntenna` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_assignedAntenna;\n``` -->","BIN Functions\\BIN_fnc_attachChemlight.md":"<pre>#define VAR_LIGHT\t\"BIN_fnc_attachChemlight_light\"\n#define VAR_KILLED\t\"BIN_fnc_attachChemlight_killed\"\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_attachChemlight` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_attachChemlight;\n``` -->","BIN Functions\\BIN_fnc_bakeAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_bakeAntenna` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_bakeAntenna;\n``` -->","BIN Functions\\BIN_fnc_behaviorInit.md":"<pre>#define HISTORY_CAPACITY\t5\n#define HIT_DELAY\t\t5\n#define SIZE_COEF\t\t3\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_behaviorInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_behaviorInit;\n``` -->","BIN Functions\\BIN_fnc_bezier.md":"<pre>/*\n\n\tDescription:\n\tCalculate bezier curve\n\n\tParameter(s):\n\t\t0: ARRAY - list of control points in format [x,y,z], can be any number of them\n\t\t1: NUMBER - progress in range 0 to 1\n\n\tReturns:\n\tARRAY - position curve in format [x,y,z]\n*/\n\n#define NEW\n\n#ifdef NEW\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_bezier` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_bezier;\n``` -->","BIN Functions\\BIN_fnc_bezierAverage.md":"<pre>#define STEPS\t101\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_bezierAverage` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_bezierAverage;\n``` -->","BIN Functions\\BIN_fnc_bezierBoundingBox.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_bezierBoundingBox` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_bezierBoundingBox;\n``` -->","BIN Functions\\BIN_fnc_bezierEditor.md":"<pre>#define POINT_W\t\t\t(0.03)\n#define POINT_H\t\t\t(POINT_W / 0.75)\n#define RESOLUTION\t\t50\n#define MAX_POINTS\t\t16\n#define GRIDS\t\t\t10\n#define REFRESH\t\t\t([_ctrlParent] call (_ctrlArea getvariable \"fnc_draw\"))\n#define POINTS\t\t\t(_ctrlArea getvariable \"points\")\n#define LINES\t\t\t(_ctrlArea getvariable \"lines\")\n#define CURVE\t\t\t(_ctrlArea getvariable \"curve\")\n#define BUTTONS\t\t\t(_ctrlArea getvariable \"buttons\")\n#define HOVER\t\t\t(_ctrlArea getvariable \"hover\")\n#define SELECTED\t\t(_ctrlArea getvariable \"selected\")\n#define SET_HOVER(CTRL)\t\t_ctrlArea setvariable [\"hover\",CTRL]; CTRL ctrlsettextcolor COLOR_SELECTED\n#define SET_SELECTED(CTRL)\t_ctrlArea setvariable [\"selected\",CTRL]\n#define COLOR_BACKGROUND\t[0.4,0.4,0.4,1]\n#define COLOR\t\t\t[0,0,0,1]\n#define COLOR_SELECTED\t\t[1,1,1,1]\n#define COLOR_CURVE\t\t[1,0,0,1]\n#define COLOR_LINE\t\t[0,0,0,0.2]\n#define COLOR_TIMELINE\t\t[1,1,1,1]\n#define COLOR_GRID\t\t[1,1,1,0.3]\n#define POINT_POS\t\t[\\\n\t\t\t\t\t(_posX - POINT_W / 2) max 0 min ((ctrlposition _ctrlArea select 2) - POINT_W),\\\n\t\t\t\t\t(_posY - POINT_H / 2) max 0 min ((ctrlposition _ctrlArea select 3) - POINT_H),\\\n\t\t\t\t\tPOINT_W,\\\n\t\t\t\t\tPOINT_H\\\n\t\t\t\t]\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_bezierEditor` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_bezierEditor;\n``` -->","BIN Functions\\BIN_fnc_bezierNormalize.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_bezierNormalize` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_bezierNormalize;\n``` -->","BIN Functions\\BIN_fnc_bezierVelocity.md":"<pre>/*\n\n\tDescription:\n\tCalculate bezier curve velocity\n\n\tParameter(s):\n\t\t0: ARRAY - list of control points in format [x,y,z], can be any number of them\n\t\t1: NUMBER - progress in range 0 to 1\n\n\tReturns:\n\tARRAY - velocity vector in format [x,y,z]\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_bezierVelocity` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_bezierVelocity;\n``` -->","BIN Functions\\BIN_fnc_breatheInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_breatheInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_breatheInit;\n``` -->","BIN Functions\\BIN_fnc_calculateLinkBudget.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_calculateLinkBudget` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_calculateLinkBudget;\n``` -->","BIN Functions\\BIN_fnc_calculateSpectrumAnalyzerValues.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_calculateSpectrumAnalyzerValues` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_calculateSpectrumAnalyzerValues;\n``` -->","BIN Functions\\BIN_fnc_callButtonEvent.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_callButtonEvent` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_callButtonEvent;\n``` -->","BIN Functions\\BIN_fnc_cargoPlatform_01_adjust.md":"Adjust Military Cargo Platform legs length in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIN_fnc_cargoPlatform_01_adjust`\n\n---\n*Example 1:*\n\n```sqf\nplatform call BIN_fnc_cargoPlatform_01_adjust;\n```","BIN Functions\\BIN_fnc_cargoPlatform_01_destruction.md":"<pre>/*\n\tBIN_fnc_CargoPlatform_01_destruction\n\n\tApply texture & materials of parent object to ruins. Function is attached to killed event handler.\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_cargoPlatform_01_destruction`; -->\n\n---\n","BIN Functions\\BIN_fnc_cargoPlatform_01_update.md":"<pre>/*\n\tBIN_fnc_cargoPlatform_01_update\n\n\tUpdate cargo platform position\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_cargoPlatform_01_update`; -->\n\n---\n","BIN Functions\\BIN_fnc_CBRNCharacterAdd.md":"<pre>/*\n\n\tDescription:\n\tEnables CBRN systems on a specific character entity.\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\t\t0: OBJECT - character entity to enable CBRN systems on\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_CBRNCharacterAdd` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_CBRNCharacterAdd;\n``` -->","BIN Functions\\BIN_fnc_CBRNContaminantAdd.md":"<pre>/*\n\n\tDescription:\n\tRegisters a CBRN contaminant.\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\t\t0: \n\t\t\tOBJECT - trigger representing a CBRN contaminated area\n\t\t\tOBJECT - entity representing an active CBRN contaminant\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_CBRNContaminantAdd` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_CBRNContaminantAdd;\n``` -->","BIN Functions\\BIN_fnc_CBRNContaminantRemove.md":"<pre>/*\n\n\tDescription:\n\tUnregisters a CBRN contaminant.\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\t\t0: OBJECT - trigger representing a CBRN contaminated area\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_CBRNContaminantRemove` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_CBRNContaminantRemove;\n``` -->","BIN Functions\\BIN_fnc_CBRNGearActivate.md":"<pre>/*\n\n\tDescription:\n\tActivates a specific piece of CBRN gear for a character entity.\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\t\t0: OBJECT - character entity to activate CBRN gear for\n\t\t1: STRING - CBRN gear class name to activate\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_CBRNGearActivate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_CBRNGearActivate;\n``` -->","BIN Functions\\BIN_fnc_CBRNGearDeactivate.md":"<pre>/*\n\n\tDescription:\n\tDeactivates a specific piece of CBRN gear for a character entity.\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\t\t0: OBJECT - character entity to deactivate CBRN gear for\n\t\t1: STRING - CBRN gear class name to deactivate\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_CBRNGearDeactivate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_CBRNGearDeactivate;\n``` -->","BIN Functions\\BIN_fnc_CBRNGearUpdate.md":"<pre>/*\n\n\tDescription:\n\tProcesses CBRN gear updates on a specific character entity.\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\t\t0: OBJECT - character entity to process CBRN gear for\n\t\t1: STRING - CBRN gear class name to process\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_CBRNGearUpdate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_CBRNGearUpdate;\n``` -->","BIN Functions\\BIN_fnc_CBRNHoseInit.md":"Initializes CBRN Hose for given unit.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIN_fnc_CBRNHoseInit`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIN_fnc_CBRNHoseInit;\n```","BIN Functions\\BIN_fnc_CBRNInContaminant.md":"<pre>/*\n\n\tDescription:\n\tReturns whether or not a character entity is within a CBRN contaminated area.\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\t\t0: OBJECT - character entity to test for\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_CBRNInContaminant` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_CBRNInContaminant;\n``` -->","BIN Functions\\BIN_fnc_circleSmokeMissile.md":"<pre>/*\n\tBIN_fnc_circleSmokeMissile\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_circleSmokeMissile` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_circleSmokeMissile;\n``` -->","BIN Functions\\BIN_fnc_clearIDWMap.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tClears IDWMap on the main map\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tBOOL - true if EH existed and was removed\n\t\t\n\tExample:\n\t\tcall BIN_fnc_clearIDWMap\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_clearIDWMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_clearIDWMap;\n``` -->","BIN Functions\\BIN_fnc_clearTXScan.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tClears TXScan drawing\n\n\tParameter(s):\n\t\t0: STRING - scan name, \"\" - all scans\n\n\tReturns:\n\t\tBOOL - false if error occured\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_clearTXScan\n\t\t\"\" call BIN_fnc_clearTXScan - all scans\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_clearTXScan` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_clearTXScan;\n``` -->","BIN Functions\\BIN_fnc_colorHSLtoRGB.md":"Converts [HSL colour format](https://en.wikipedia.org/wiki/HSL and HSV) to RGB.\n\n\n---\n*Syntaxes:*\n\n[hue, saturation, lightness] call `BIN_fnc_colorHSLtoRGB`\n\n---\n*Example 1:*\n\n```sqf\nprivate _rgb = [0, 100, 50] call BIN_fnc_colorHSLtoRGB;\n```","BIN Functions\\BIN_fnc_crearAllData.md":"This function contains no code.\n\n\n---\n*Syntaxes:*\n\n[] call `BIN_fnc_crearAllData`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIN_fnc_crearAllData;\n```","BIN Functions\\BIN_fnc_createScriptedSoundSource.md":"<pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_createScriptedSoundSource` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_createScriptedSoundSource;\n``` -->","BIN Functions\\BIN_fnc_createScriptedSoundSourceVehicle.md":"<pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_createScriptedSoundSourceVehicle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_createScriptedSoundSourceVehicle;\n``` -->","BIN Functions\\BIN_fnc_createTXScan.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tCreates a scan with the name defined as class in CfgTXScans or from given params. \n\t\tIf name doesn't exists in config and params are not provided, default scan is created which could be tweaked later\n\n\tParameter(s):\n\t\t0: STRING - \"\" create every scan from config\n\t\tor\n\t\t0: STRING - scan name\n\t\t1: ARRAY (Optional) - TX position\n\t\t2: NUMBER (Optional) - scan angle\n\t\t3: NUMBER (Optional) - scan precision\n\t\t4: ARRAY (Optional) - scan polygon\n\n\tReturns:\n\t\tBOOL - false on error\n\t\t\n\tExamples:\n\t\t\"MyScan\" call BIN_fnc_createTXScan\n\t\t\"\" call BIN_fnc_createTXScan - creates every scan from config\n\t\t[\"MyScan\", [1,2,3], 20, 0.1] call BIN_fnc_createTXScan - creates every scan from config\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_createTXScan` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_createTXScan;\n``` -->","BIN Functions\\BIN_fnc_cropTXScan.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tCrops given scan\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t1: NUMBER - crop rectangle center X\n\t\t2: NUMBER - crop rectangle center Y\n\t\t3: NUMBER - crop rectangle center W\n\t\t4: NUMBER - crop rectangle center H\n\n\tReturns:\n\t\tARRAY - crop rectangle corners\n\t\t\n\tExample:\n\t\t[\"MyScan\", 100, 100, 1000, 500] call BIN_fnc_cropTXScan\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_cropTXScan` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_cropTXScan;\n``` -->","BIN Functions\\BIN_fnc_curatorInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_curatorInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_curatorInit;\n``` -->","BIN Functions\\BIN_fnc_debugDraw.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_debugDraw` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_debugDraw;\n``` -->","BIN Functions\\BIN_fnc_debugDrawMapInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_debugDrawMapInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_debugDrawMapInit;\n``` -->","BIN Functions\\BIN_fnc_debugQuests.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_debugQuests` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_debugQuests;\n``` -->","BIN Functions\\BIN_fnc_debugText.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_debugText` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_debugText;\n``` -->","BIN Functions\\BIN_fnc_deconShowerAnim.md":"<pre>/*\n\tBIN_fnc_deconShowerAnim\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deconShowerAnim` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deconShowerAnim;\n``` -->","BIN Functions\\BIN_fnc_deconShowerAnimLarge.md":"<pre>/*\n\tBIN_fnc_deconShowerAnimLarge\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deconShowerAnimLarge` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deconShowerAnimLarge;\n``` -->","BIN Functions\\BIN_fnc_deconShowerAnimStop.md":"<pre>/*\n\tBIN_fnc_deconShowerAnimStop\n\tDelete all sound sources attachted to decon shower in case it is destroyed or deleted\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deconShowerAnimStop` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deconShowerAnimStop;\n``` -->","BIN Functions\\BIN_fnc_deconShowerCollision.md":"<pre>/*\n\tBIN_fnc_deconShowerCollision\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deconShowerCollision` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deconShowerCollision;\n``` -->","BIN Functions\\BIN_fnc_deconShowerDelete.md":"<pre>/*\n\tBIN_fnc_deconShowerDelete\n\tDelete all sound sources attachted to decon shower in case it is destroyed or deleted\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deconShowerDelete` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deconShowerDelete;\n``` -->","BIN Functions\\BIN_fnc_deconShowerMove.md":"<pre>/*\n\tBIN_fnc_deconShowerMove\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deconShowerMove` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deconShowerMove;\n``` -->","BIN Functions\\BIN_fnc_deleteAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteAntenna` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteAntenna;\n``` -->","BIN Functions\\BIN_fnc_deleteDangerZone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteDangerZone` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteDangerZone;\n``` -->","BIN Functions\\BIN_fnc_deleteDiaryRecord.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteDiaryRecord` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteDiaryRecord;\n``` -->","BIN Functions\\BIN_fnc_deleteFaradayCage.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteFaradayCage` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteFaradayCage;\n``` -->","BIN Functions\\BIN_fnc_deleteLoopedRadioSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteLoopedRadioSignal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteLoopedRadioSignal;\n``` -->","BIN Functions\\BIN_fnc_deleteSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteSignal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteSignal;\n``` -->","BIN Functions\\BIN_fnc_deleteSpectrumAnalyzer.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteSpectrumAnalyzer` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteSpectrumAnalyzer;\n``` -->","BIN Functions\\BIN_fnc_deleteTravelPoint.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteTravelPoint` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteTravelPoint;\n``` -->","BIN Functions\\BIN_fnc_deleteTXScan.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tDeletes scan with given name from extension and the map\n\n\tParameter(s):\n\t\t0: STRING - TXScan name\n\n\tReturns:\n\t\tBOOL - false on error\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_deleteTXScan\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_deleteTXScan` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_deleteTXScan;\n``` -->","BIN Functions\\BIN_fnc_diag_addAllSpectrumAnalyzers.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_addAllSpectrumAnalyzers` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_addAllSpectrumAnalyzers;\n``` -->","BIN Functions\\BIN_fnc_diag_drawAllAreaObjectsBounds.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tDraws all area objects bounds\n\n\tParameter(s):\n\t\t0: STRING - area name\n\n\tReturns:\n\t\tNUMBER - event handler id\n\t\t\n\tExample:\n\t\t\"MyArea\" call BIN_fnc_diag_drawAllAreaObjectsBounds\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_drawAllAreaObjectsBounds` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_drawAllAreaObjectsBounds;\n``` -->","BIN Functions\\BIN_fnc_diag_getAllAreaEntities.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_getAllAreaEntities` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_getAllAreaEntities;\n``` -->","BIN Functions\\BIN_fnc_diag_getAllAreaObjects.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns stored area objects for diagnostics\n\n\tParameter(s):\n\t\t0: STRING - area name\n\t\t1: NUMBER - multipart number\n\n\tReturns:\n\t\tARRAY of arays in format [[posX,posY,posMinZ,posMaxZ,radius],...]\n\t\t\n\tExample:\n\t\t\"MyArea\" call BIN_fnc_diag_getAllAreaObjects\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_getAllAreaObjects` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_getAllAreaObjects;\n``` -->","BIN Functions\\BIN_fnc_diag_IDWMap.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tAdds user action menu to the player with different IDWMap diag options\n\n\tParameter(s):\n\t\t0: STRING - command\n\t\t1: BOOL (Optional) - extended option\n\n\tReturns:\n\t\tNOTHING\n\t\t\n\tExample:\n\t\tcall BIN_fnc_diag_IDWMap\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_IDWMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_IDWMap;\n``` -->","BIN Functions\\BIN_fnc_diag_logAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_logAntenna` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_logAntenna;\n``` -->","BIN Functions\\BIN_fnc_diag_revealAllAntennas.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_revealAllAntennas` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_revealAllAntennas;\n``` -->","BIN Functions\\BIN_fnc_diag_showLinkBudgetMap.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_showLinkBudgetMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_showLinkBudgetMap;\n``` -->","BIN Functions\\BIN_fnc_diag_TXScan.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tAdds user action menu to the player with different TXScan diag options\n\n\tParameter(s):\n\t\t0: STRING - command\n\n\tReturns:\n\t\tNOTHING\n\t\t\n\tExample:\n\t\tcall BIN_fnc_diag_TXScan\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_diag_TXScan` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_diag_TXScan;\n``` -->","BIN Functions\\BIN_fnc_distanceToAreaBorder.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_distanceToAreaBorder` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_distanceToAreaBorder;\n``` -->","BIN Functions\\BIN_fnc_dockModule.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_dockModule` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_dockModule;\n``` -->","BIN Functions\\BIN_fnc_drawAntennas.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawAntennas` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawAntennas;\n``` -->","BIN Functions\\BIN_fnc_drawIconFixed.md":"<pre>/*\n\n\tDescription:\n\t\tSet fixed size marker to be drawn in main map\n\n\tParameter(s):\n\t\t0: STRING - unique marker ID\n\t\t1:\n\t\t\tARRAY - marker parameters in format used by drawIcon command\n\t\t\tBOOL - delete the marker\n\n\tReturns:\n\t\tBOOL - true if successful\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawIconFixed` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawIconFixed;\n``` -->","BIN Functions\\BIN_fnc_drawIDWMap.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tDraws IDWMap on the main map\n\n\tParameter(s):\n\t\tNONE\n\t\t\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\tcall BIN_fnc_drawIDWMap\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawIDWMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawIDWMap;\n``` -->","BIN Functions\\BIN_fnc_drawMap.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawMap;\n``` -->","BIN Functions\\BIN_fnc_drawProbeMap.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawProbeMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawProbeMap;\n``` -->","BIN Functions\\BIN_fnc_drawSpectrum.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawSpectrum` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawSpectrum;\n``` -->","BIN Functions\\BIN_fnc_drawTooltip.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawTooltip` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawTooltip;\n``` -->","BIN Functions\\BIN_fnc_drawTXScan.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tDraws TXScan with given name\n\n\tParameter(s):\n\t\tSTRING - scan name or \"\" to draw all scans\n\t\t\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_drawTXScan\n\t\t\"\" call BIN_fnc_drawTXScan - draw all scans\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_drawTXScan` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_drawTXScan;\n``` -->","BIN Functions\\BIN_fnc_droneDestructionFX.md":"<pre>/*\n\tBIN_fnc_droneDestructionFX\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_droneDestructionFX` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_droneDestructionFX;\n``` -->","BIN Functions\\BIN_fnc_droneModuleDestruction.md":"<pre>/*\n\tBIN_fnc_droneModuleDestruction\n\tAlien Module destruction\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_droneModuleDestruction` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_droneModuleDestruction;\n``` -->","BIN Functions\\BIN_fnc_editMoveProperties.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_editMoveProperties` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_editMoveProperties;\n``` -->","BIN Functions\\BIN_fnc_empVehicle.md":"<pre>/*\n\n\tDescription: Sets EMP parameters to a vehicle. Destroys lights and optionally prevents vehicle from starting\n\n\tParameter(s):\n\t\t0: OBJECT - Vehicle that will get destroyed electronics\n\t\t1: (Optional): BOOL - Sets engine destroyed - true = engine destroyed, false = engine operating (default: true)\n\t\t2: (Optional): BOOL - Handle AI in EMP vehicle - true = AI will exit vehicle and not enter new vehicles, false = AI will remain in vehicle (default: true)\n\n\tNote that the player has to be defined as bin_player for the voice lines to be spoken\n\n\tExamples:\n\n\t\t[bin_vehicle,true,true] call BIN_fnc_empVehicle; //Destroys lights and prevents vehicle from starting, AI will exit vehicle after it has stopped\n\n\t\t[bin_vehicle,false,false] call BIN_fnc_empVehicle; //Destroys lights, but engine can still start and vehicle can be driven, AI will remain in vehicle\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_empVehicle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_empVehicle;\n``` -->","BIN Functions\\BIN_fnc_enableSaving.md":"Sets a variable used in `Arma 3 Contact` which handels saving.\n\n\n---\n*Syntaxes:*\n\n[enableSaving, saveGame] call `BIN_fnc_enableSaving`\n\n---\n*Example 1:*\n\n```sqf\n[true, true] call BIN_fnc_enableSaving;\n```","BIN Functions\\BIN_fnc_eulerToVector.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_eulerToVector` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_eulerToVector;\n``` -->","BIN Functions\\BIN_fnc_exit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exit;\n``` -->","BIN Functions\\BIN_fnc_exitAntennas.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exitAntennas` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exitAntennas;\n``` -->","BIN Functions\\BIN_fnc_exitDiary.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exitDiary` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exitDiary;\n``` -->","BIN Functions\\BIN_fnc_exitGroup.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exitGroup` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exitGroup;\n``` -->","BIN Functions\\BIN_fnc_exitPersistentObjects.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exitPersistentObjects` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exitPersistentObjects;\n``` -->","BIN Functions\\BIN_fnc_exitQuests.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exitQuests` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exitQuests;\n``` -->","BIN Functions\\BIN_fnc_exitSites.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exitSites` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exitSites;\n``` -->","BIN Functions\\BIN_fnc_exitTasks.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_exitTasks` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_exitTasks;\n``` -->","BIN Functions\\BIN_fnc_findNearestGrid.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_findNearestGrid` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_findNearestGrid;\n``` -->","BIN Functions\\BIN_fnc_findPath.md":"<pre>/*\n\n\tDescription:\n\tA* search algorithm.\n\tUses hard-coded Manhattan distance to measure distance.\n\n\tParameter(s):\n\t\t0: ARRAY of ARRAYs in format:\n\t\t\t0: NUMBER - node cost\n\t\t\t1: ARRAY - array of neighbor indexes\n\t\t\t2: ARRAY - XYZ position of the node, used to measure distance from end pos\n\t\t1: NUMBER - index of starting point\n\t\t2: NUMBER - index of ending point\n\n\tReturns:\n\tARRAY of NUMBERs - indexes of nodes which are traversed on the way to the ending point\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_findPath` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_findPath;\n``` -->","BIN Functions\\BIN_fnc_findSafePositions.md":"<pre>/*\n\tBIN_fnc_findSafePositions\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_findSafePositions` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_findSafePositions;\n``` -->","BIN Functions\\BIN_fnc_findTargetWeight.md":"<pre>/*\n\tBIN_fnc_findTargetWeight\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_findTargetWeight` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_findTargetWeight;\n``` -->","BIN Functions\\BIN_fnc_frequencyToString.md":"<pre>/*\n\n\tDescription:\n\t\tReturns frequency as a string\n\n\tParameter(s):\n\t\t0:\n\t\t\tNUMBER - frequency in MHz, returned value is in format \"<value> <unit>\"\n\t\t\tARRAY in format [NUMBER,NUMBER] - frequency range in MHz, returned value is in format \"<value1> <unit1> - <value2> <unit2>\"\n\t\t1: NUMBER - order offset. When 0, frequency 1000 will return \"1 GHz\". When -1, returned value will be \"1000 MHz\"\n\t\t2: BOOL - true if input values are in Hz, false if in MHz (standard across the game)\n\n\tReturns:\n\t\tSTRING\n*/\n\n#define UNITS [\\\n\tlocalize \"STR_A3_C_fnc_frequencyToString_Hz0\",\\\n\tlocalize \"STR_A3_C_fnc_frequencyToString_Hz1\",\\\n\tlocalize \"STR_A3_C_fnc_frequencyToString_Hz2\",\\\n\tlocalize \"STR_A3_C_fnc_frequencyToString_Hz3\",\\\n\tlocalize \"STR_A3_C_fnc_frequencyToString_Hz4\",\\\n\tlocalize \"STR_A3_C_fnc_frequencyToString_Hz5\",\\\n\tlocalize \"STR_A3_C_fnc_frequencyToString_Hz6\"\\\n]\n//              ^0   ^3    ^6    ^9    ^12   ^15   ^18\n//#define UNITS [\"Hz\",\"kHz\",\"MHz\",\"GHz\",\"THz\",\"PHz\",\"EHz\"]\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_frequencyToString` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_frequencyToString;\n``` -->","BIN Functions\\BIN_fnc_getAISquadID.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAISquadID` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAISquadID;\n``` -->","BIN Functions\\BIN_fnc_getAISquadPosition.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAISquadPosition` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAISquadPosition;\n``` -->","BIN Functions\\BIN_fnc_getAllAISquads.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAllAISquads` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAllAISquads;\n``` -->","BIN Functions\\BIN_fnc_getAllAreas.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAllAreas` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAllAreas;\n``` -->","BIN Functions\\BIN_fnc_getAllTXScans.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns array of names of all TXScans stored in extension\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tARRAY - scan names\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getAllTXScans \n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAllTXScans` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAllTXScans;\n``` -->","BIN Functions\\BIN_fnc_getAntennaAngle.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaAngle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaAngle;\n``` -->","BIN Functions\\BIN_fnc_getAntennaCanReveal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaCanReveal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaCanReveal;\n``` -->","BIN Functions\\BIN_fnc_getAntennaFrequency.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaFrequency` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaFrequency;\n``` -->","BIN Functions\\BIN_fnc_getAntennaFrequencyClass.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaFrequencyClass` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaFrequencyClass;\n``` -->","BIN Functions\\BIN_fnc_getAntennaGain.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaGain` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaGain;\n``` -->","BIN Functions\\BIN_fnc_getAntennaName.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaName` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaName;\n``` -->","BIN Functions\\BIN_fnc_getAntennaObject.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaObject` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaObject;\n``` -->","BIN Functions\\BIN_fnc_getAntennaPower.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaPower` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaPower;\n``` -->","BIN Functions\\BIN_fnc_getAntennaRevealValue.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaRevealValue` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaRevealValue;\n``` -->","BIN Functions\\BIN_fnc_getAntennas.md":"<pre>/*\n\n\tDescription:\n\t\tGet all antennas, transmitters and receivers alike\n\n\tParameter(s):\n\t\t0: BOOL - true to ignore player's antennas (default: false)\n\n\tReturns:\n\t\tARRAY of STRINGs - antenna IDs\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennas` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennas;\n``` -->","BIN Functions\\BIN_fnc_getAntennaScanPolygon.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaScanPolygon` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaScanPolygon;\n``` -->","BIN Functions\\BIN_fnc_getAntennaScans.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaScans` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaScans;\n``` -->","BIN Functions\\BIN_fnc_getAntennaScanSignals.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaScanSignals` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaScanSignals;\n``` -->","BIN Functions\\BIN_fnc_getAntennaSensitivity.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaSensitivity` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaSensitivity;\n``` -->","BIN Functions\\BIN_fnc_getAntennaSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaSignal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaSignal;\n``` -->","BIN Functions\\BIN_fnc_getAntennaSignalHistory.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaSignalHistory` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaSignalHistory;\n``` -->","BIN Functions\\BIN_fnc_getAntennaType.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getAntennaType` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getAntennaType;\n``` -->","BIN Functions\\BIN_fnc_getBehaviorCoef.md":"<pre>/*\n\tBIN_fnc_getBehaviorCoef\n\tGet behavior coefficients\n\n\tExamples:\n\n\t\t[bin_drone,\"gravityCannon\"] call BIN_fnc_getBehaviorCoef - returns coefficients for gravity cannon behavior\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getBehaviorCoef` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getBehaviorCoef;\n``` -->","BIN Functions\\BIN_fnc_getCharacterSounds.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getCharacterSounds` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getCharacterSounds;\n``` -->","BIN Functions\\BIN_fnc_getCurrentSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getCurrentSignal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getCurrentSignal;\n``` -->","BIN Functions\\BIN_fnc_getEntityBoundingBarrel.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getEntityBoundingBarrel` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getEntityBoundingBarrel;\n``` -->","BIN Functions\\BIN_fnc_getFollowingSignals.md":"<pre>/*\n\n\tDescription:\n\t\tGet signals which follow after given one.\n\n\tParameter(s):\n\t\t0: STRING - signal class\n\n\tReturns:\n\t\tARRAY of STRINGs (including input signal when it is not a link)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getFollowingSignals` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getFollowingSignals;\n``` -->","BIN Functions\\BIN_fnc_getFormattedControl.md":"<pre>/*\n\n\tDescription:\n\tReturn a formatted string of a mapped control (same style as the Field Manual and Hints)\n\n\tParameter(s):\n\t\t0: STRING - name of the control action\n\t\t1 (Optional): SCALAR - 0-based index of the mapped control\n\n\tReturns:\n\tSTRING - formatted control\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getFormattedControl` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getFormattedControl;\n``` -->","BIN Functions\\BIN_fnc_getGridCollisions.md":"<pre>#define BUSH_WIDTH\t\t2\n#define BUSH_HEIGHT\t\t2\n#define TREE_TRUNK_WIDTH\t0.5\n#define TREE_TRUNK_HEIGHT\t4\n\n#define GET_POS\\\n\tprivate _pos = _x modelToWorld (boundingcenter _x vectormultiply -1);\n\n#define GET_BBOX\\\n\tprivate _bbox = boundingboxreal _x;\\\n\tprivate _bboxX = abs ((_bbox select 0 select 0) - (_bbox select 1 select 0)) / 2 + _cellSizeXHalf*0;\\\n\tprivate _bboxY = abs ((_bbox select 0 select 1) - (_bbox select 1 select 1)) / 2 + _cellSizeYHalf*0;\\\n\tprivate _bboxZ = abs ((_bbox select 0 select 2) - (_bbox select 1 select 2)) / 2 + _cellSizeZHalf*0;\n\n\t//_bboxZ = (abs (_bbox select 0 select 2) + abs (_bbox select 1 select 2)) + _cellSizeZHalf*0;\n\n#define GET_BBOX_FIXED(SIZE)\\\n\tprivate _bboxX = SIZE + _cellSizeXHalf;\\\n\tprivate _bboxY = SIZE + _cellSizeYHalf;\\\n\tprivate _bboxZ = SIZE + _cellSizeZHalf;\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getGridCollisions` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getGridCollisions;\n``` -->","BIN Functions\\BIN_fnc_getGridMap.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getGridMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getGridMap;\n``` -->","BIN Functions\\BIN_fnc_getGridPath.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getGridPath` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getGridPath;\n``` -->","BIN Functions\\BIN_fnc_getGroupSeed.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getGroupSeed` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getGroupSeed;\n``` -->","BIN Functions\\BIN_fnc_getIDWMapDrawColorSet.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tGets stored draw colors\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tARRAY - draw colors\n\t\tor\n\t\t[] on error\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getIDWMapDrawColorSet\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getIDWMapDrawColorSet` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getIDWMapDrawColorSet;\n``` -->","BIN Functions\\BIN_fnc_getIDWMapDrawPatternIndex.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tGets stored draw pattern index\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tNUMBER - draw pattern index (0..3)\n\t\tor\n\t\t-1 on error\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getIDWMapDrawPatternIndex\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getIDWMapDrawPatternIndex` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getIDWMapDrawPatternIndex;\n``` -->","BIN Functions\\BIN_fnc_getIDWMapParams.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns currently set IDWMap params\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tARRAY in format: [[mapMinX, mapMinY, mapMaxX, mapMaxY], idwCellSize, idwSpreadRadius, idwSpreadPower, curvePointsInterval, curvePointSpreadRadius] \n\t\tor \n\t\t[] on error\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getIDWMapParams\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getIDWMapParams` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getIDWMapParams;\n``` -->","BIN Functions\\BIN_fnc_getIDWMapSaveData.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns array with IDWMap data which is used for saving/loading\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tARRAY - save data\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getIDWMapSaveData\n*/\n\n#define MAPDRAWPATTERNINDEX_DEFAULT 0\n#define MAPDRAWCOLORSET_DEFAULT `0,0,0.514,0.7],[0,0,0.875,0.7],[0,0.247,1,0.7],[0,0.659,1,0.7],[0.035,1,0.961,0.7],[0.443,1,0.553,0.7],[0.843,1,0.153,0.7],[1,0.749,0,0.7],[1,0.357,0,0.7],[0.941,0,0,0.7],[0.522,0,0,0.7`\n#define MAPDRAWIDC_DEFAULT 51\n\n// if the data was not yet set\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getIDWMapSaveData` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getIDWMapSaveData;\n``` -->","BIN Functions\\BIN_fnc_getIDWMapStaticDataLayers.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tGets static data from extension\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tARRAY in format:\n\t\t[\n\t\t\t[[x,y,strengh],[x,y,strengh],...], // data layer 0\n\t\t\t[[x,y,strengh],[x,y,strengh],...], // data layer 1\n\t\t\t...\n\t\t\t[[x,y,strengh],[x,y,strengh],...] // data layer N\n\t\t]\n\t\tor \n\t\t[] - on error\n\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getIDWMapStaticDataLayers\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getIDWMapStaticDataLayers` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getIDWMapStaticDataLayers;\n``` -->","BIN Functions\\BIN_fnc_getLinkBudget.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getLinkBudget` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getLinkBudget;\n``` -->","BIN Functions\\BIN_fnc_getLinkDir.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getLinkDir` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getLinkDir;\n``` -->","BIN Functions\\BIN_fnc_getLinkedAntennas.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getLinkedAntennas`; -->\n\n---\n","BIN Functions\\BIN_fnc_getLinkStrength.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getLinkStrength` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getLinkStrength;\n``` -->","BIN Functions\\BIN_fnc_getObjectAntennas.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getObjectAntennas` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getObjectAntennas;\n``` -->","BIN Functions\\BIN_fnc_getObjectBoundingBarrel.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns bounding barrel of the given object\n\n\tParameter(s):\n\t\t0: OBJECT - object to measure\n\n\tReturns:\n\t\tARRAY in format [radius, height, offset]. Offset is negative if object Z position is higher than the lower bound\n\t\t\n\tExample:\n\t\tmyObj call BIN_fnc_getObjectBoundingBarrel\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getObjectBoundingBarrel` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getObjectBoundingBarrel;\n``` -->","BIN Functions\\BIN_fnc_getPatrolRoutes.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getPatrolRoutes` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getPatrolRoutes;\n``` -->","BIN Functions\\BIN_fnc_getRadioConversation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getRadioConversation` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getRadioConversation;\n``` -->","BIN Functions\\BIN_fnc_getRecordedSignals.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getRecordedSignals` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getRecordedSignals;\n``` -->","BIN Functions\\BIN_fnc_getRoleIcon.md":"<pre>/*\n\n\tDescription:\n\t\tGet soldier's role icon (e.g., sniper, machine-gunner, etc.)\n\n\tParameter(s):\n\t\t0: OBJECT\n\n\tReturns:\n\t\tSTRING - image path\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getRoleIcon` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getRoleIcon;\n``` -->","BIN Functions\\BIN_fnc_getRotation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getRotation` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getRotation;\n``` -->","BIN Functions\\BIN_fnc_getSignalAge.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getSignalAge` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getSignalAge;\n``` -->","BIN Functions\\BIN_fnc_getSignalTypeClass.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getSignalTypeClass` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getSignalTypeClass;\n``` -->","BIN Functions\\BIN_fnc_getSignalTypes.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getSignalTypes` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getSignalTypes;\n``` -->","BIN Functions\\BIN_fnc_getSiteLayerEntities.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getSiteLayerEntities` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getSiteLayerEntities;\n``` -->","BIN Functions\\BIN_fnc_getTerrainObjects.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns terrain objects of the given type for the given area dimensions\n\t\t\n\tParameter(s):\n\t\t0: ARRAY - area details in Area format (see BIS_fnc_getArea)\n\t\t1: ARRAY - types of terrain objects, for example [\"HOUSE\", \"TREE\"]\n\n\tReturns:\n\t\tARRAY of objects\n\t\t\n\tExample:\n\t\t[\"myArea\", [player, 100], [\"HOUSE\", \"TREE\"]] call BIN_fnc_getTerrainObjects\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTerrainObjects` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTerrainObjects;\n``` -->","BIN Functions\\BIN_fnc_getTXScanAngle.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns TXScan angle\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t\n\tReturns:\n\t\tNUMBER - set cone angle or -1 on error\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_getTXScanAngle\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanAngle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanAngle;\n``` -->","BIN Functions\\BIN_fnc_getTXScanDrawData.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns draw data for given TXScan\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\n\tReturns:\n\t\tARRAY in format [iconData, polygonData, triangleData, rectangleData, isDefaultPolygon] where:\n\t\t\ticonData: ARRAY - position in format [x,y,0]\n\t\t\tpolygonData: ARRAY - array of polygon vertices, where each vertex is in format [x,y,0]\n\t\t\ttriangleData: ARRAY - array of triangle vrtices, where each vertex is in format [x,y,0] \n\t\t\trectangleData: ARRAY - bounding rectangle in format [center, a, b, angle]\n\t\t\tisDefaultPolygon: BOOL - if a scan polygon has not yet been calculated, this will be true\n\t\t\n\tExample:\n\t\t\"myScan\" call BIN_fnc_getTXScanDrawData\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanDrawData` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanDrawData;\n``` -->","BIN Functions\\BIN_fnc_getTXScanPolygon.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns current intersection polygon for given scan\n\n\tParameter(s):\n\t\t0: STRING - TXScan name\n\n\tReturns:\n\t\tARRAY - polygon points or [] on error\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_getTXScanPolygon\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanPolygon` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanPolygon;\n``` -->","BIN Functions\\BIN_fnc_getTXScanPolygonDetails.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns estimated area and perimeter of the given scan polygon \n\n\tParameter(s):\n\t\t0: STRING - TXScan name\n\n\tReturns:\n\t\tARRAY in format [area, perimeter]\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_getTXScanPolygonDetails\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanPolygonDetails` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanPolygonDetails;\n``` -->","BIN Functions\\BIN_fnc_getTXScanPosition.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tGets stored TXScan transmitter position\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t\n\tReturns:\n\t\tARRAY - set transmitter position or [] on error\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_setTXScanPosition\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanPosition` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanPosition;\n``` -->","BIN Functions\\BIN_fnc_getTXScanPrecision.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns stored TXScan precision\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t\n\tReturns:\n\t\tNUMBER - set cone precision or -1 on error\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_getTXScanPrecision\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanPrecision` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanPrecision;\n``` -->","BIN Functions\\BIN_fnc_getTXScanSaveData.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns array with given TXScan data which is used for saving/loading\n\n\tParameter(s):\n\t\t0: STRING - TXScan name or \"\" to return all saved scan names\n\n\tReturns:\n\t\tARRAY - save data for given scan name \n\t\tor if argument was \"\"\n\t\tARRAY in format [allscannames, activeareaboundaries]\n\t\t\n\tExample:\n\t\t\"MyScan\" call BIN_fnc_getTXScanSaveData\n\t\t\"\" call BIN_fnc_getTXScanSaveData\n*/\n\n#define SAVEVAR_NAME \"BIN_fnc_TXScan_saveData\"\n#define IDD_DEFAULT 12\n#define IDC_DEFAULT 51\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanSaveData` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanSaveData;\n``` -->","BIN Functions\\BIN_fnc_getTXScanWorldBounds.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns currently set boundaries of active area\n\t\t\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tARRAY in format: [minX, minY, maxX, maxY] \n\t\tor \n\t\t[] on error\n\t\t\n\tExample:\n\t\tcall BIN_fnc_getTXScanWorldBounds\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_getTXScanWorldBounds` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_getTXScanWorldBounds;\n``` -->","BIN Functions\\BIN_fnc_gravityBurst.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_gravityBurst` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_gravityBurst;\n``` -->","BIN Functions\\BIN_fnc_gravityCannon_01_ai.md":"<pre>/*\n\tBIN_fnc_gravityCannon_01_AI\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_gravityCannon_01_ai`; -->\n\n---\n","BIN Functions\\BIN_fnc_grenadeThrowback.md":"<pre>/*\n\tBIN_fnc_grenadeThrowback\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_grenadeThrowback` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_grenadeThrowback;\n``` -->","BIN Functions\\BIN_fnc_hackAIDrone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_hackAIDrone` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_hackAIDrone;\n``` -->","BIN Functions\\BIN_fnc_handDrawBezier.md":"<pre>/*\n\n\tDescription:\n\t\tShow hand-drawn bezier curve in the map\n\n\tParameter(s):\n\t\t0: STRING - Unique ID of the ellipse. When such ellipse already exists, it will override it.\n\t\t1: ARRAY - control points of bezier curve\n\t\t2: ARRAY - color in [r,g,b,a] format\n\t\t3: STRING - fill texture\n\t\t   BOOL - true for default pen-blue color, false for the same, but faded\n\n\t\tOptional:\n\t\t4: NUMBER or ARRAY: thickness\n\t\t5: ARRAY - random thickness offset in format [min,mid,max]\n\t\t6: NUMBER - number od drawing steps\n\n\tReturns:\n\t\tNOTHING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_handDrawBezier` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_handDrawBezier;\n``` -->","BIN Functions\\BIN_fnc_handDrawEllipse.md":"<pre>/*\n\n\tDescription:\n\t\tShow hand-drawn ellipse in the map\n\n\tParameter(s):\n\t\t0: STRING - Unique ID of the ellipse. When such ellipse already exists, it will override it.\n\t\t1: ARRAY - center position\n\t\t2: NUMBER - semi-major axis\n\t\t3: NUMBER - semi-minor axis\n\t\t4: NUMBER - angle\n\t\t5: ARRAY - color in [r,g,b,a] format\n\t\t6: STRING - fill texture\n\t\t   BOOL - true for default pen-blue color, false for the same, but faded\n\n\t\tOptional:\n\t\t7: NUMBER - radius coef\n\t\t8: NUMBER - length coef\n\t\t9: NUMBER or ARRAY: thickness\n\t\t10: ARRAY - radius curve\n\t\t11: BOOL - true if clockwise\n\t\t12: NUMBER - starting angle\n\t\t13: ARRAY - random thickness offset in format [min,mid,max]\n\t\t14: NUMBER - number od drawing steps\n\n\tReturns:\n\t\tNOTHING\n\n\tExamples:\n\t\t//--- Show an ellipse on player's position\n\t\t[\"test1\",position player,300,400,15] call BIN_fnc_handDrawEllipse;\n\n\t\t//--- Show the same ellipse, but faded\n\t\t[\"test1\",position player,300,400,15,nil,false] call BIN_fnc_handDrawEllipse;\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_handDrawEllipse` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_handDrawEllipse;\n``` -->","BIN Functions\\BIN_fnc_hasAntennaSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_hasAntennaSignal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_hasAntennaSignal;\n``` -->","BIN Functions\\BIN_fnc_inDangerZone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_inDangerZone` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_inDangerZone;\n``` -->","BIN Functions\\BIN_fnc_initAcctime.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initAcctime` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initAcctime;\n``` -->","BIN Functions\\BIN_fnc_initActors.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initActors` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initActors;\n``` -->","BIN Functions\\BIN_fnc_initAI.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initAI` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initAI;\n``` -->","BIN Functions\\BIN_fnc_initAIBase.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initAIBase` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initAIBase;\n``` -->","BIN Functions\\BIN_fnc_initAIDrone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initAIDrone` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initAIDrone;\n``` -->","BIN Functions\\BIN_fnc_initAISquad.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initAISquad` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initAISquad;\n``` -->","BIN Functions\\BIN_fnc_initAntennas.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initAntennas` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initAntennas;\n``` -->","BIN Functions\\BIN_fnc_initConstants.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initConstants` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initConstants;\n``` -->","BIN Functions\\BIN_fnc_initCutLayers.md":"<pre>//--- Register RSC layers in the correct order (they are not serialized)\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initCutLayers` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initCutLayers;\n``` -->","BIN Functions\\BIN_fnc_initDiary.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initDiary` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initDiary;\n``` -->","BIN Functions\\BIN_fnc_initDroneModule.md":"<pre>/*\n\tBIN_fnc_initDroneModule\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initDroneModule` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initDroneModule;\n``` -->","BIN Functions\\BIN_fnc_initGroup.md":"<pre>#define DEBUG\n#define GROUP\t(units player - [player])\n#define DAMAGE_COEF\t0.25\n#define DIS_LIMIT_SOFT\t400\n#define DIS_LIMIT_HARD\t600</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initGroup` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initGroup;\n``` -->","BIN Functions\\BIN_fnc_initHub.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initHub` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initHub;\n``` -->","BIN Functions\\BIN_fnc_initInspectableDiaryRecord.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initInspectableDiaryRecord` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initInspectableDiaryRecord;\n``` -->","BIN Functions\\BIN_fnc_initInventory.md":"<pre>//--- Ignored in missions without special description.ext property\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initInventory` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initInventory;\n``` -->","BIN Functions\\BIN_fnc_initLocations.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initLocations` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initLocations;\n``` -->","BIN Functions\\BIN_fnc_initMiniUGV.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initMiniUGV` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initMiniUGV;\n``` -->","BIN Functions\\BIN_fnc_initMothershipLights.md":"<pre>/*\n\n\tDescription:\n\t\tEnable scripted ET Mothership lights on baked memory points\n\t\tCreated lights can be retrieved via getVariable \"BIN_lights\" on the Mothership\n\n\tParameter(s):\n\t\t0: OBJECT - Mothership\n\n\tReturns:\n\t\tNOTHING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initMothershipLights` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initMothershipLights;\n``` -->","BIN Functions\\BIN_fnc_initPersistentObjects.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initPersistentObjects` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initPersistentObjects;\n``` -->","BIN Functions\\BIN_fnc_initProbeMap.md":"<pre>//--- Debug\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initProbeMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initProbeMap;\n``` -->","BIN Functions\\BIN_fnc_initPuzzle.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initPuzzle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initPuzzle;\n``` -->","BIN Functions\\BIN_fnc_initQuests.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initQuests` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initQuests;\n``` -->","BIN Functions\\BIN_fnc_initRevive.md":"<pre>#define BLEED_TIME\t\t160\n#define BLINK_DELAY_MAX\t\t20\n#define BLINK_TIME\t\t0.75\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initRevive` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initRevive;\n``` -->","BIN Functions\\BIN_fnc_initSideColors.md":"<pre>#define FORMAT \"Map_%1_%2\"\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initSideColors` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initSideColors;\n``` -->","BIN Functions\\BIN_fnc_initSites.md":"<pre>#define DEBUG\n#define AREA_BUFFER\t+200\n#define DEF_RADIUS\t500\n#define DEF_RADIUS_OUT\t550\n#define AREA_DEF\t[position _logic,DEF_RADIUS_OUT,DEF_RADIUS_OUT,0,false]\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initSites` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initSites;\n``` -->","BIN Functions\\BIN_fnc_initTasks.md":"<pre>//--- Obsolete, replace dby BIN_fnc_initQuests\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initTasks` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initTasks;\n``` -->","BIN Functions\\BIN_fnc_initTurret.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initTurret` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initTurret;\n``` -->","BIN Functions\\BIN_fnc_initUAV.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initUAV` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initUAV;\n``` -->","BIN Functions\\BIN_fnc_initUGV.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_initUGV` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_initUGV;\n``` -->","BIN Functions\\BIN_fnc_inList.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_inList` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_inList;\n``` -->","BIN Functions\\BIN_fnc_inRadioConversation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_inRadioConversation` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_inRadioConversation;\n``` -->","BIN Functions\\BIN_fnc_inRadioConversationWith.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_inRadioConversationWith` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_inRadioConversationWith;\n``` -->","BIN Functions\\BIN_fnc_isAIBase.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isAIBase` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isAIBase;\n``` -->","BIN Functions\\BIN_fnc_isAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isAntenna` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isAntenna;\n``` -->","BIN Functions\\BIN_fnc_isAntennaBaked.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isAntennaBaked` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isAntennaBaked;\n``` -->","BIN Functions\\BIN_fnc_isAntennaBroadcasting.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isAntennaBroadcasting` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isAntennaBroadcasting;\n``` -->","BIN Functions\\BIN_fnc_isAntennaJammed.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isAntennaJammed` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isAntennaJammed;\n``` -->","BIN Functions\\BIN_fnc_isAntennaRevealed.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isAntennaRevealed` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isAntennaRevealed;\n``` -->","BIN Functions\\BIN_fnc_isAntennaSelected.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isAntennaSelected` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isAntennaSelected;\n``` -->","BIN Functions\\BIN_fnc_isExtensionError.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns true and displays description of the error from extension if there was an error. \n\t\tWhen extension returns negative number (usually -1), it is considered an indication of some sort of error, \n\t\tin which case string output should contain the description of the error.\n\n\tParameter(s):\n\t\tExtension (arg version) output in format [<string>, <number>, <number>]\n\n\tReturns:\n\t\tBOOL - true if error\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isExtensionError` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isExtensionError;\n``` -->","BIN Functions\\BIN_fnc_isNull.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isNull` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isNull;\n``` -->","BIN Functions\\BIN_fnc_isPaused.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isPaused` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isPaused;\n``` -->","BIN Functions\\BIN_fnc_isPausedInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isPausedInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isPausedInit;\n``` -->","BIN Functions\\BIN_fnc_isPuzzleReset.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isPuzzleReset` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isPuzzleReset;\n``` -->","BIN Functions\\BIN_fnc_isPuzzleTerminated.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isPuzzleTerminated` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isPuzzleTerminated;\n``` -->","BIN Functions\\BIN_fnc_isRadioHandshake.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isRadioHandshake` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isRadioHandshake;\n``` -->","BIN Functions\\BIN_fnc_isRadioSilence.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_isRadioSilence` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_isRadioSilence;\n``` -->","BIN Functions\\BIN_fnc_joinAISquad.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_joinAISquad` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_joinAISquad;\n``` -->","BIN Functions\\BIN_fnc_lightBurst.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_lightBurst` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_lightBurst;\n``` -->","BIN Functions\\BIN_fnc_list.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_list` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_list;\n``` -->","BIN Functions\\BIN_fnc_loadIDWMap.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tLoads IDWMap data from global variable 'BIN_fnc_IDWMap_saveData' into extension\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\tcall BIN_fnc_loadIDWMap\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_loadIDWMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_loadIDWMap;\n``` -->","BIN Functions\\BIN_fnc_loadTXScanState.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tLoads TXScan data from global saved variables into extension\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\tcall BIN_fnc_loadTXScanState\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_loadTXScanState` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_loadTXScanState;\n``` -->","BIN Functions\\BIN_fnc_markDangerZone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_markDangerZone` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_markDangerZone;\n``` -->","BIN Functions\\BIN_fnc_markFreeAreaPositions.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tReturns array of booleans in place of passed positions, where true is free and false is possible collision\n\n\tParameter(s):\n\t\t0: STRING - area name\n\t\t1: ARRAY - bounding barrel in format [radius, height, offset]\n\t\t2: ARRAY - arrays of positions\n\n\tReturns:\n\t\tARRAY of booleans\n\t\t\n\tExample:\n\t\t[\"myArea\", [10,5,0], `123,123,123],[456,456,456],...` call BIN_fnc_markFreeAreaPositions\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_markFreeAreaPositions` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_markFreeAreaPositions;\n``` -->","BIN Functions\\BIN_fnc_matrixMultiply.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_matrixMultiply` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_matrixMultiply;\n``` -->","BIN Functions\\BIN_fnc_matrixTranspose.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_matrixTranspose` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_matrixTranspose;\n``` -->","BIN Functions\\BIN_fnc_matterballDestruction.md":"<pre>/*\n\tBIN_fnc_matterBallDestruction\n\tAlien Module destruction\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_matterballDestruction`; -->\n\n---\n","BIN Functions\\BIN_fnc_matterballEffects.md":"<pre>/*\n\tBIN_fnc_matterBallEffects\n\n\tAlien Matter Ball decaying effects\n\n\ta: reyhard\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_matterballEffects`; -->\n\n---\n","BIN Functions\\BIN_fnc_matterCollectionFX.md":"<pre>/*\n\tBIN_fnc_matterCollectionFX\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_matterCollectionFX`; -->\n\n---\n","BIN Functions\\BIN_fnc_missileDeflection.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_missileDeflection`; -->\n\n---\n","BIN Functions\\BIN_fnc_missileSwarm.md":"<pre>/*\n\tBIN_fnc_missileSwarm\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_missileSwarm`; -->\n\n---\n","BIN Functions\\BIN_fnc_moduleAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleAntenna` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleCBRN.md":"<pre>/*\n\n\tDescription:\n\tEnables CBRN systems in a scenario (not MP-compatible!).\n\tNOTE: Module / function set not robust nor completed - not recommended for usage at this stage!\n\n\tParameter(s):\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleCBRN` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleChargeSequence.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleChargeSequence` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleDangerZone.md":"<pre>#define AREA_BUFFER\t+50\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleDangerZone` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleFaradayCage.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleFaradayCage` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleGravityAnomaly.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleGravityAnomaly` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleMovementGrid.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleMovementGrid` -->\n\n---\n","BIN Functions\\BIN_fnc_modulePointOfInterest.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_modulePointOfInterest` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleSimpleObject.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleSimpleObject` -->\n\n---\n","BIN Functions\\BIN_fnc_moduleTravel.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moduleTravel` -->\n\n---\n","BIN Functions\\BIN_fnc_moveAI.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveAI` -->\n\n---\n","BIN Functions\\BIN_fnc_moveAIReinforcements.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveAIReinforcements` -->\n\n---\n","BIN Functions\\BIN_fnc_moveInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveInit` -->\n\n---\n","BIN Functions\\BIN_fnc_moveModule.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveModule` -->\n\n---\n","BIN Functions\\BIN_fnc_moveObject.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveObject` -->\n\n---\n","BIN Functions\\BIN_fnc_moveTo.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveTo` -->\n\n---\n","BIN Functions\\BIN_fnc_moveToModelSpace.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveToModelSpace` -->\n\n---\n","BIN Functions\\BIN_fnc_moveToOnArc.md":"<pre>/*\n\tBIN_fnc_moveToOnArc\n\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_moveToOnArc` -->\n\n---\n","BIN Functions\\BIN_fnc_onPuzzleCompleted.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_onPuzzleCompleted` -->\n\n---\n","BIN Functions\\BIN_fnc_onPuzzleProgress.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_onPuzzleProgress` -->\n\n---\n","BIN Functions\\BIN_fnc_onPuzzleReset.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_onPuzzleReset` -->\n\n---\n","BIN Functions\\BIN_fnc_onPuzzleStepCompleted.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_onPuzzleStepCompleted` -->\n\n---\n","BIN Functions\\BIN_fnc_onPuzzleTerminated.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_onPuzzleTerminated` -->\n\n---\n","BIN Functions\\BIN_fnc_persistentVariables.md":"<pre>//#define SAVE_IN_PROFILE\n#define SAVE_IN_CAMPAIGN\n\n#define PREFIX\t\"BIN_\"\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_persistentVariables` -->\n\n---\n","BIN Functions\\BIN_fnc_playAlternatingSound.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_playAlternatingSound` -->\n\n---\n","BIN Functions\\BIN_fnc_playMission.md":"<pre>//--- Disabled, campaign is now configured as traditional campaign\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_playMission` -->\n\n---\n","BIN Functions\\BIN_fnc_playPatrolAnim.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_playPatrolAnim` -->\n\n---\n","BIN Functions\\BIN_fnc_playPatrolAnimDone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_playPatrolAnimDone` -->\n\n---\n","BIN Functions\\BIN_fnc_postInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_postInit` -->\n\n---\n","BIN Functions\\BIN_fnc_preInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_preInit` -->\n\n---\n","BIN Functions\\BIN_fnc_preInitEM.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_preInitEM` -->\n\n---\n","BIN Functions\\BIN_fnc_preInitIDWMap.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tShould be called from preInit, contains saving/loading functions as well as default initisalization\n\n\tParameter(s):\n\t\t0: STRING - preInit pass through\n\n\tReturns:\n\t\tNOTHING\n\t\t\n\tExample: \n\t\t// from preinit script\n\t\tcall BIN_fnc_preInitIDWMap\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_preInitIDWMap` -->\n\n---\n","BIN Functions\\BIN_fnc_preInitTXScan.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tShould be called from preInit, contains saving/loading functions as well as default initisalization\n\n\tParameter(s):\n\t\t0: STRING - \"preInit\"\n\n\tReturns:\n\t\tNOTHING\n\t\t\n\tExample: \n\t\t// from preinit script\n\t\tcall BIN_fnc_preInitTXScan\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_preInitTXScan` -->\n\n---\n","BIN Functions\\BIN_fnc_probeAnim.md":"<pre>/*\n\tBIN_fnc_probeAnim\n\n\tExample usage:\n\t\t[probe,1] call BIN_fnc_probeAnim - expand probe core\n\t\t[probe,0] call BIN_fnc_probeAnim - retract probe core\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeAnim` -->\n\n---\n","BIN Functions\\BIN_fnc_probeCoreDelete.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeCoreDelete` -->\n\n---\n","BIN Functions\\BIN_fnc_probeCoreEffects.md":"<pre>/*\n\tBIN_fnc_probeCoreEffects\n\t[probeCore] call BIN_fnc_probeCoreEffects\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeCoreEffects` -->\n\n---\n","BIN Functions\\BIN_fnc_probeCoreInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeCoreInit` -->\n\n---\n","BIN Functions\\BIN_fnc_probeCoreLegsDestroyed.md":"<pre>/*\n\tBIN_fnc_probeCoreLegsDestroyed\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeCoreLegsDestroyed` -->\n\n---\n","BIN Functions\\BIN_fnc_probeCoreUpdate.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeCoreUpdate` -->\n\n---\n","BIN Functions\\BIN_fnc_probeDelete.md":"<pre>/*\n\tBIN_fnc_probeDelete\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeDelete` -->\n\n---\n","BIN Functions\\BIN_fnc_probeHitpoint.md":"<pre>/*\n\tBIN_fnc_probeHitpoint\n\n\tSpawns particle effects & sound\n\n\tFunction is connected to probe hitpoint and can be also manually triggered via calling following code:\n\t\t* [cursorObject,1,true] call BIN_fnc_probeHitpoint - destroy hitpoint with index 1\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeHitpoint` -->\n\n---\n","BIN Functions\\BIN_fnc_probeVeinHitpoint.md":"<pre>/*\n\tBIN_fnc_probeVeinHitpoint\n\n\tAnimate vein & spawn sound\n\n\tInput:\n\t\tDammaged EH\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_probeVeinHitpoint` -->\n\n---\n","BIN Functions\\BIN_fnc_ProbingArm_fired.md":"<pre>/*\n\tBIN_fnc_probingArm_fired\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_ProbingArm_fired` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_ProbingArm_fired;\n``` -->","BIN Functions\\BIN_fnc_ProbingBeam_fired.md":"<pre>/*\n\tBIN_fnc_probingBeam_fired\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_ProbingBeam_fired` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_ProbingBeam_fired;\n``` -->","BIN Functions\\BIN_fnc_ProbingBeam_sendData.md":"<pre>/*\n\tBIS_fnc_ProbingBeam_sendData\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_ProbingBeam_sendData` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIN_fnc_ProbingBeam_sendData;\n``` -->","BIN Functions\\BIN_fnc_prototypeCannon_01_ai.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_prototypeCannon_01_ai` -->\n\n---\n","BIN Functions\\BIN_fnc_prototypeCannon_01_player.md":"<pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_prototypeCannon_01_player` -->\n\n---\n","BIN Functions\\BIN_fnc_prototypeCannon_01_slaved.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_prototypeCannon_01_slaved` -->\n\n---\n","BIN Functions\\BIN_fnc_puzzle_mole.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_puzzle_mole` -->\n\n---\n","BIN Functions\\BIN_fnc_puzzle_outlier.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_puzzle_outlier` -->\n\n---\n","BIN Functions\\BIN_fnc_reactRadio.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_reactRadio` -->\n\n---\n","BIN Functions\\BIN_fnc_reactRadio_Base.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_reactRadio_Base` -->\n\n---\n","BIN Functions\\BIN_fnc_reactRadio_Player.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_reactRadio_Player` -->\n\n---\n","BIN Functions\\BIN_fnc_reactRadio_Squad.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_reactRadio_Squad` -->\n\n---\n","BIN Functions\\BIN_fnc_recordSignal.md":"<pre>/*\n\n\tDescription:\n\t\tAdd signal to the library.\n\n\tParameter(s):\n\t\t0: STRING - antenna ID (its currently transmitted signal will be used) or signal class from CfgContact >> Signals\n\n\tReturns:\n\t\tBOOL - true if added\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_recordSignal` -->\n\n---\n","BIN Functions\\BIN_fnc_resetPuzzle.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_resetPuzzle` -->\n\n---\n","BIN Functions\\BIN_fnc_revealAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_revealAntenna` -->\n\n---\n","BIN Functions\\BIN_fnc_revealFrequency.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_revealFrequency` -->\n\n---\n","BIN Functions\\BIN_fnc_saveIDWMap.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSaves IDWMap data into global variable 'BIN_fnc_IDWMap_saveData' so that it can be serialised and then loaded from game save when needed\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\tcall BIN_fnc_saveIDWMap\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_saveIDWMap` -->\n\n---\n","BIN Functions\\BIN_fnc_saveTXScanState.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSaves TXScan data into global variables so that it can be serialised and then loaded from game save when needed\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\tcall BIN_fnc_saveTXScanState\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_saveTXScanState` -->\n\n---\n","BIN Functions\\BIN_fnc_savingEnabled.md":"Returns the value of <sqf inline>missionNamespace getVariable [\"BIN_enableSaving\", true]\n```.\n\n\n---\n*Syntaxes:*\n\ncall `BIN_fnc_savingEnabled`\n\n---\n*Example 1:*\n\n```sqf\ncall BIN_fnc_savingEnabled == (missionNamespace getVariable [\"BIN_enableSaving\", true]); // true\n```","BIN Functions\\BIN_fnc_scan.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_scan` -->\n\n---\n","BIN Functions\\BIN_fnc_scanObject.md":"<pre>#define VAR_END\t\t\"BIN_fnc_scanObject_end\"\n#define END_NONE\t0\n#define END_RETURN\t1\n#define END_DROP\t2\n#define CURVE_POS\t`0,0,0],[0.5,0,0],[0.5,1,0],[1,1,0`\n#define CURVE_ROT\t`0,0,0],[0,1,0],[0.75,1,0`\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_scanObject` -->\n\n---\n","BIN Functions\\BIN_fnc_scanTX.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tIntersects current scan polygon (or map square if no scan exists) with triangle originated from RX position\n\t\tand returns the triangle\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t1: ARRAY (Optional) - RX position. Default: position player\n\n\tReturns:\n\t\tARRAY - triangle used for intersection\n\t\t\n\tExample:\n\t\t[\"MyScan\", position player] call BIN_fnc_scanTX\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_scanTX` -->\n\n---\n","BIN Functions\\BIN_fnc_selectDiaryCategory.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_selectDiaryCategory` -->\n\n---\n","BIN Functions\\BIN_fnc_selectDiaryRecord.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_selectDiaryRecord` -->\n\n---\n","BIN Functions\\BIN_fnc_selectDiaryTask.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_selectDiaryTask` -->\n\n---\n","BIN Functions\\BIN_fnc_sendPing.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_sendPing` -->\n\n---\n","BIN Functions\\BIN_fnc_sendRadioSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_sendRadioSignal` -->\n\n---\n","BIN Functions\\BIN_fnc_setAISquadID.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAISquadID` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntenna` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaAngle.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaAngle` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaCanReveal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaCanReveal` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaClass.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaClass` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaFrequency.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaFrequency` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaFrequencyFromList.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaFrequencyFromList` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaGain.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaGain` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaName.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaName` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaObject.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaObject` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaPower.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaPower` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaRevealValue.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaRevealValue` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaScans.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaScans` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaSensitivity.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaSensitivity` -->\n\n---\n","BIN Functions\\BIN_fnc_setAntennaType.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setAntennaType` -->\n\n---\n","BIN Functions\\BIN_fnc_setBehavior.md":"<pre>#define DEBUG\n#define HISTORY_CAPACITY\t5\n#define TERMINATE_DEFAULT\t1\n#define TERMINATE_INTERRUPT\t2\n#define BEHAVIOR_PATH \"a3\\Functions_F_Contact\\Behavior\\Drone\\\"\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setBehavior` -->\n\n---\n","BIN Functions\\BIN_fnc_setBehaviorCoef.md":"<pre>/*\n\tBIN_fnc_setBehaviorCoef\n\tSet behavior coefficients\n\n\tExamples:\n\n\t\t[bin_drone,\"gravityCannon\",0] call BIN_fnc_setBehaviorCoef\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setBehaviorCoef` -->\n\n---\n","BIN Functions\\BIN_fnc_setBreathe.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setBreathe` -->\n\n---\n","BIN Functions\\BIN_fnc_setCurrentSignal.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setCurrentSignal` -->\n\n---\n","BIN Functions\\BIN_fnc_setCustomSoundController.md":"<pre>/*\n\tBIN_fnc_setCustomSoundController\n\n\ta: reyhard\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setCustomSoundController` -->\n\n---\n","BIN Functions\\BIN_fnc_setDiaryRecord.md":"<pre>#define DEFAULT_TEXT\t\"~\"\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setDiaryRecord` -->\n\n---\n","BIN Functions\\BIN_fnc_setDroneModuleParams.md":"<pre>/*\n\tBIN_fnc_setDroneModuleParams\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setDroneModuleParams` -->\n\n---\n","BIN Functions\\BIN_fnc_setDroneModuleTarget.md":"<pre>/*\n\tBIN_fnc_setDroneModuleTarget\n\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setDroneModuleTarget` -->\n\n---\n","BIN Functions\\BIN_fnc_setGravityPulse.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setGravityPulse` -->\n\n---\n","BIN Functions\\BIN_fnc_setIDWMapDrawColorSet.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSets map draw color set\n\n\tParameter(s):\n\t\tARRAY - array of colors from 1 to 11\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t// set 3 color drawing on the fly\n\t\t`0,0,0.514,0.7],[0.843,1,0.153,0.7],[0.522,0,0,0.7` call BIN_fnc_setIDWMapDrawColorSet;\n\t\t// set from config\n\t\t[] call BIN_fnc_setIDWMapDrawColorSet;\n*/\n\n#define MAPDRAWCOLORSET_DEFAULT `0,0,0.514,0.7],[0,0,0.875,0.7],[0,0.247,1,0.7],[0,0.659,1,0.7],[0.035,1,0.961,0.7],[0.443,1,0.553,0.7],[0.843,1,0.153,0.7],[1,0.749,0,0.7],[1,0.357,0,0.7],[0.941,0,0,0.7],[0.522,0,0,0.7`\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setIDWMapDrawColorSet` -->\n\n---\n","BIN Functions\\BIN_fnc_setIDWMapDrawPatternIndex.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSets map draw pattern\n\n\tParameter(s):\n\t\tNUMBER - pattern: 0 - triangles, 1 - diamonds, 2 - squares, 3 - diamonds overlapped\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t// set on the fly\n\t\t3 call BIN_fnc_setIDWMapDrawPatternIndex; OR [3] call BIN_fnc_setIDWMapDrawPatternIndex;\n\t\t// set from config\n\t\tcall BIN_fnc_setIDWMapDrawPatternIndex; OR [] call BIN_fnc_setIDWMapDrawPatternIndex;\n*/\n\n#define MAPDRAWPATTERNINDEX_DEFAULT 0\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setIDWMapDrawPatternIndex` -->\n\n---\n","BIN Functions\\BIN_fnc_setIDWMapParams.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tResets extension data, sets IDWMap params from argument, from config or default\n\t\t*** This function must be called before any data is added to the IDWMap ***\n\n\tParameter(s):\n\t\t0: ARRAY - (Optional) areaParams in format:\n\t\t\t0: NUMBER - minMapX\n\t\t\t1: NUMBER - minMapY\n\t\t\t2: NUMBER - maxMapX\n\t\t\t3: NUMBER - maxMapY\n\t\t\tDefault: [0, 0, worldSize, worldSize]\n\t\t1: NUMBER (Optional) - idwCellSize. Default: 20\n\t\t2: NUMBER (Optional) - idwSpreadRadius. Default: 200\n\t\t3: NUMBER (Optional) - idwSpreadPower. Default: 2.0\n\t\t4: NUMBER (Optional) - curvePointsInterval. Default: 20\n\t\t5: NUMBER (Optional) - curvePointSpreadRadius. Default: idwSpreadRadius\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\tcall BIN_fnc_setIDWMapParams\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setIDWMapParams` -->\n\n---\n","BIN Functions\\BIN_fnc_setIDWMapStaticDataLayers.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSets static data for extension use from argument or config \"CfgIDWMap\"\n\n\tParameter(s):\n\t\tARRAY (optional) - static data in format:\n\t\t[\n\t\t\t[[x,y,strengh],[x,y,strengh],...], // data layer 0\n\t\t\t[[x,y,strengh],[x,y,strengh],...], // data layer 1\n\t\t\t...\n\t\t\t[[x,y,strengh],[x,y,strengh],...] // data layer N\n\t\t]\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\tcall BIN_fnc_setIDWMapStaticDataLayers\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setIDWMapStaticDataLayers` -->\n\n---\n","BIN Functions\\BIN_fnc_setModuleSpeed.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setModuleSpeed` -->\n\n---\n","BIN Functions\\BIN_fnc_setMoveProperties.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setMoveProperties` -->\n\n---\n","BIN Functions\\BIN_fnc_setObjectGrid.md":"<pre>#define DEBUG\n\n#define COST_DISABLED\t\t1000\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setObjectGrid` -->\n\n---\n","BIN Functions\\BIN_fnc_setPlayerSelectedBand.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setPlayerSelectedBand` -->\n\n---\n","BIN Functions\\BIN_fnc_setPointOfInterest.md":"<pre>/*\n\n\tDescription:\n\t\tAdd point of interest shown in the map\n\n\tParameter(s):\n\t\t0: STRING - unique ID of the point\n\t\t1:\n\t\t\tBOOL - true if the point is completed (shown faded in the map)\n\t\t\tNUMBER - status, can be:\n\t\t\t\t-1: dormant, will be activated when player gets close\n\t\t\t\t 0: shown, but not completed\n\t\t\t\t+1: completed\n\t\t2: ARRAY - position\n\t\t3: ARRAY - area in format [width,height,angle,isRectangle]\n\t\t4: STRING - type, can be \"Unknown\" or \"Warning\" (default: \"Unknown\")\n\t\t5: STRING - color, can be \"Black\", \"Blue\" or \"Red\" (default: \"Black\")\n\n\t\tor\n\n\t\t0: OBJECT - \"Point of interest\" module\n\n\tReturns:\n\t\tSTRING - ID of the point\n\n\tExamples:\n\n\t\t//--- Activate existing module\n\t\t_myID = myModule call BIN_fnc_setPointOfInterest;\n\n\t\t//--- Mark POI as completed\n\t\t[_myID,true] call BIN_fnc_setPointOfInterest;\n\n\t\t//--- Set custom POI\n\t\t[\"myID\",false,position myObject,[50,50,0,false],\"Warning\",\"Red\"] call BIN_fnc_setPointOfInterest;\n\n\t\t//--- Set custom POI using default type and color\n\t\t[\"myID\",false,position myObject,[50,50,0,false]] call BIN_fnc_setPointOfInterest;\n*/\n\n#define VAR\t\t\t\"bin_POIs\"\n#define TASK_PRIORITY\t\t2\n#define REVEAL_DISTANCE\t\t100\n\n#define POS_DEFAULT\t\t[]\n#define AREA_DEFAULT\t\t[]\n#define TYPE_DEFAULT\t\t\"\"\n#define COLOR_DEFAULT\t\t\"\"\n#define STATUS_DEFAULT\t\t0\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setPointOfInterest` -->\n\n---\n","BIN Functions\\BIN_fnc_setRadioConversation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setRadioConversation` -->\n\n---\n","BIN Functions\\BIN_fnc_setRadioHandshake.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setRadioHandshake` -->\n\n---\n","BIN Functions\\BIN_fnc_setRadioSilence.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setRadioSilence` -->\n\n---\n","BIN Functions\\BIN_fnc_setRagdoll.md":"<pre>/*\n\tInput:\n\t\t0: _unit [object] - Name of unit (works only with man type units)\n\t\t1: _force [vector] - Amount of force that will be applied to colliding object\n\t\t2: _position [string] (optional) - Name of selection from which it will try to calculate center point (default: spine1)\n\tUsage:\n\t[player,[0,100,0]] call BIN_fnc_setRagdoll -\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setRagdoll` -->\n\n---\n","BIN Functions\\BIN_fnc_setSite.md":"<pre>#define DEBUG\n#define ALPHA_ON\t1.0\n#define ALPHA_OFF\t0.4\n#define DRAW(SHOW)\\\n\t_color = `1,0,0,1],[0,1,0,1],[0,0,1,1],[1,1,0,1],[1,0,1,1],[0,1,1,1],[1,0.5,0,1` select ((_logic getvariable [\"#index\",0]) % 7);\\\n\tif !(SHOW) then {_color set [3,0.4];};\\\n\t_drawIcon = [\"\\a3\\Ui_f\\data\\Map\\LocationTypes\\borderCrossing_CA.paa\",_color,position _logic,0.75,0.75,0,_class,2,0.04,\"RobotoCondensed\",\"right\"];\\\n\t[\"bin_diagSites\",_class,\"icon\",[_drawIcon]] call BIN_fnc_debugDraw;\\\n\t_isRectangle = false;\\\n\t_drawArea = if (SHOW) then {\\\n\t\t_areaOut = _logic getvariable [\"areaOut\",[position _logic,0,0,0,false]];\\\n\t\t_isRectangle = _areaOut select 4;\\\n\t\t[_areaOut select 0,_areaOut select 1,_areaOut select 2,_areaOut select 3,_color,\"\"]\\\n\t} else {\\\n\t\t_areaIn = _logic getvariable [\"areaIn\",[position _logic,0,0,0,false]];\\\n\t\t_isRectangle = _areaIn select 4;\\\n\t\t[_areaIn select 0,_areaIn select 1,_areaIn select 2,_areaIn select 3,_color,\"\"]\\\n\t};\\\n\t[\"bin_diagSites\",_class,if (_isRectangle) then {\"rectangle\"} else {\"ellipse\"},[_drawArea]] call BIN_fnc_debugDraw;\n\n#define VAR_IGNORE\t\"$i\"\n#define VAR_KILL\t\"$k\"\n#define VAR_VISITED\t\"$v\"\n#define VAR_SPAWNED\t\"#spawned\"</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setSite` -->\n\n---\n","BIN Functions\\BIN_fnc_setSpectrumAnalyzer.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setSpectrumAnalyzer` -->\n\n---\n","BIN Functions\\BIN_fnc_setTargetWeight.md":"<pre>/*\n\tBIN_fnc_setTargetWeight\n\tSet target priroty which is used later by BIN_fnc_findTargetWeight function to find target.\n\n\tInput:\n\t\t0:\n\t\t\t_input - Unit, vehicle, group or side.\n\t\t1:\n\t\t\t_value - scalar above 0 - weight which is later used by selectRandomWeighted script command. Values equal or less than 0 are excluded from target selection\n\n\tExamples:\n\n\t\t[west,0] call BIN_fnc_setTargetWeight - all units from side \"west\" will be ignored by targeting system\n\t\t[player,10] call BIN_fnc_setTargetWeight - Increase player chance of being targeted by drone weapons\n\t\t[bis_car,0] call BIN_fnc_setTargetWeight - Vehicle & it is crew will be ignored by targeting system\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setTargetWeight` -->\n\n---\n","BIN Functions\\BIN_fnc_setTXScanAngle.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSets TXScan angle\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t1: NUMBER - cone angle\n\t\t\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t[\"MyScan\", 45] call BIN_fnc_setTXScanAngle\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setTXScanAngle` -->\n\n---\n","BIN Functions\\BIN_fnc_setTXScanPolygon.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tPre-sets intersection polygon for given scan. Can only be done with newly created scans since once the first scan is made, the polygon cannot be overwritten\n\n\tParameter(s):\n\t\t0: STRING - TXScan name\n\t\t1: ARRAY - polygon points\n\n\tReturns:\n\t\tBOOL - false on error\n\t\t\n\tExample:\n\t\t[\"MyScan\",[p1,p2,p3...]] call BIN_fnc_setTXScanPolygon\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setTXScanPolygon` -->\n\n---\n","BIN Functions\\BIN_fnc_setTXScanPosition.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSets TXScan transmitter position\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t1: ARRAY - transmitter position\n\t\t\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t[\"MyScan\", position player] call BIN_fnc_setTXScanPosition\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setTXScanPosition` -->\n\n---\n","BIN Functions\\BIN_fnc_setTXScanPrecision.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSets TXScan precision\n\n\tParameter(s):\n\t\t0: STRING - scan name\n\t\t1: NUMBER - cone precision\n\t\t\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t[\"MyScan\", 0.1] call BIN_fnc_setTXScanPrecision\n\n*/</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setTXScanPrecision` -->\n\n---\n","BIN Functions\\BIN_fnc_setTXScanWorldBounds.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tSets map bounds in which scans could be carried out. Default [0,0,worldSize,worldSize]\n\n\tParameter(s):\n\t\t0: NUMBER - minX\n\t\t1: NUMBER - minY\n\t\t2: NUMBER - maxX\n\t\t3: NUMBER - maxY\n\t\t\n\t\tor [] to use config values or default\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t[0,0,worldSize,worldSize] call BIN_fnc_setTXScanWorldBounds\n\t\t[] call BIN_fnc_setTXScanWorldBounds\n*/\n\n// get user params\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_setTXScanWorldBounds` -->\n\n---\n","BIN Functions\\BIN_fnc_showAntennaIcon.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showAntennaIcon` -->\n\n---\n","BIN Functions\\BIN_fnc_showAntennaIcons.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showAntennaIcons` -->\n\n---\n","BIN Functions\\BIN_fnc_showCurrentTask.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showCurrentTask` -->\n\n---\n","BIN Functions\\BIN_fnc_showHorizontalCompass.md":"<pre>/*\n\n\tDescription:\n\t\tShow or hide horizontal compass\n\n\tParameter(s):\n\t\t0: BOOL - true to show, false to hide\n\n\tReturns:\n\t\tNOTHING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showHorizontalCompass` -->\n\n---\n","BIN Functions\\BIN_fnc_showMapOptions.md":"<pre>/*\n\n\tDescription:\n\t\tSelect which maps will be available\n\n\tParameter(s):\n\t\t0: NUMBER - mode, can be:\n\t\t\t0 - all options available (default)\n\t\t\t1 - probe map not available\n\t\t\t2 - no options available (i.e., only main map is shown)\n\n\tReturns:\n\t\tNOTHING\n*/\n\n#define VAR\t\"BIN_fnc_showMapOptions_mode\"\n\n//--- Spawn to prevent disableSerialization affecting the script from which the function is called\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showMapOptions` -->\n\n---\n","BIN Functions\\BIN_fnc_showPlayerSpectrumAnalyzer.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showPlayerSpectrumAnalyzer` -->\n\n---\n","BIN Functions\\BIN_fnc_showSimpleNotification.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showSimpleNotification` -->\n\n---\n","BIN Functions\\BIN_fnc_showSpectrumAnalyzer.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showSpectrumAnalyzer` -->\n\n---\n","BIN Functions\\BIN_fnc_showSpectrumAnalyzerGUI.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showSpectrumAnalyzerGUI` -->\n\n---\n","BIN Functions\\BIN_fnc_showSpectrumAnalyzerMuzzle.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showSpectrumAnalyzerMuzzle` -->\n\n---\n","BIN Functions\\BIN_fnc_showSpectrumAnalyzerPiP.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showSpectrumAnalyzerPiP` -->\n\n---\n","BIN Functions\\BIN_fnc_showVision.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_showVision` -->\n\n---\n","BIN Functions\\BIN_fnc_skip.md":"<pre>//#define TIME_SKIP\t1.4 // Apex\n#define TIME_SKIP\t0.5\n\n</pre>*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_skip` -->\n\n---\n","BIN Functions\\BIN_fnc_soundDrone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_soundDrone` -->\n\n---\n","BIN Functions\\BIN_fnc_switchMap.md":"<pre>//disableserialization;\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_switchMap` -->\n\n---\n","BIN Functions\\BIN_fnc_taskActive.md":"<pre>/*\n\n\tDescription:\n\t\tReturn if task is active, i.e., added to player, but not yet completed.\n\t\tOnly in this state can player assign it.\n\n\tParameter(s):\n\t\t0: STRING - task ID\n\n\tReturns:\n\t\tBOOL\n\n\tExample:\n\t\tif (\"q_schnobble\" call BIN_fnc_taskActive) then {hint \"ACTIVE!\";};\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_taskActive` -->\n\n---\n","BIN Functions\\BIN_fnc_taskAdded.md":"<pre>/*\n\n\tDescription:\n\t\tReturn if task was added to player.\n\t\tIncludes both finished and unfinished tasks.\n\n\tParameter(s):\n\t\t0: STRING - task ID\n\n\tReturns:\n\t\tBOOL\n\n\tExample:\n\t\tif (\"q_schnobble\" call BIN_fnc_taskAdded) then {hint \"ADDED!\";};\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_taskAdded` -->\n\n---\n","BIN Functions\\BIN_fnc_terminatePuzzle.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_terminatePuzzle` -->\n\n---\n","BIN Functions\\BIN_fnc_translationDone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_translationDone` -->\n\n---\n","BIN Functions\\BIN_fnc_travelToPoint.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_travelToPoint` -->\n\n---\n","BIN Functions\\BIN_fnc_tvSaveExpanded.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_tvSaveExpanded` -->\n\n---\n","BIN Functions\\BIN_fnc_updateEM.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updateEM` -->\n\n---\n","BIN Functions\\BIN_fnc_updateGravityPulse.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updateGravityPulse` -->\n\n---\n","BIN Functions\\BIN_fnc_updateIDWMapDrawData.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tRetrieves draw data for IDWMap and stores it in 'IDWMapDrawData' variable on map control for use in 'Draw' event handler. Should be called in scheduled environment to spread the load.\n\n\tParameter(s):\n\t\tNONE\n\n\tReturns:\n\t\tBOOL - true on success if called from scheduled\n\t\tNOTHING - if called from unscheduled\n\t\t\n\tExample:\n\t\tcall BIN_fnc_updateIDWMapDrawData\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updateIDWMapDrawData` -->\n\n---\n","BIN Functions\\BIN_fnc_updatePlayerAntenna.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updatePlayerAntenna` -->\n\n---\n","BIN Functions\\BIN_fnc_updatePlayerInput.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updatePlayerInput` -->\n\n---\n","BIN Functions\\BIN_fnc_updatePlayerSpectrumAnalyzer.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updatePlayerSpectrumAnalyzer` -->\n\n---\n","BIN Functions\\BIN_fnc_updatePlayerSpectrumAnalyzerSounds.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updatePlayerSpectrumAnalyzerSounds` -->\n\n---\n","BIN Functions\\BIN_fnc_updateSignalDurations.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updateSignalDurations` -->\n\n---\n","BIN Functions\\BIN_fnc_updateSpectrumAnalyzerInput.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updateSpectrumAnalyzerInput` -->\n\n---\n","BIN Functions\\BIN_fnc_updateTXScanDrawData.md":"<pre>/*\n\t\tKillzone_Kid\n\n\tDescription:\n\t\tRetrieves draw data for TXScan and updates drawing\n\n\tParameter(s):\n\t\t0: STRING - scan name, \"\" - all scans\n\n\tReturns:\n\t\tBOOL - true on success\n\t\t\n\tExample:\n\t\t\"myScan\" call BIN_fnc_updateTXScanDrawData\n\t\t\"\" call BIN_fnc_updateTXScanDrawData - all scans\n*/\n\n#define COLOR_DEFAULT [0,0,0,0.5],\n#define TEXTURE_DEFAULT \"\\A3\\ui_f\\data\\map\\markerbrushes\\fdiagonal_ca.paa\"\n#define ICON_DEFAULT [\"#(rgb,1,1,1)color(1,1,1,1)\",[0,0,0,0],[0,0,0],0,0,0]\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_updateTXScanDrawData` -->\n\n---\n","BIN Functions\\BIN_fnc_vectorToEuler.md":"<pre>//#define NEW\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_vectorToEuler` -->\n\n---\n","BIN Functions\\BIN_fnc_wpAddScript.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_wpAddScript` -->\n\n---\n","BIN Functions\\BIN_fnc_wpDroneMove.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_wpDroneMove` -->\n\n---\n","BIN Functions\\BIN_fnc_wpMoveFast.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_wpMoveFast` -->\n\n---\n","BIN Functions\\BIN_fnc_wpPatrol.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIN_fnc_wpPatrol` -->\n\n---\n","BIS Functions\\BIS_fnc_3Dcredits.md":"Displays structured text in 3D world. GUI layer for indicator is **2733**.\n\n\n---\n*Syntaxes:*\n\n[text, position, minDist, fadeDist] spawn `BIS_fnc_3Dcredits`\n\n---\n*Example 1:*\n\n```sqf\n[\"<t size='2'>Hello World</t>\", getPosATL helloWorld, 15, 0] spawn BIS_fnc_3Dcredits;\n```\n\n*Example 2:*\n\n```sqf\n[\"<img size='2' image='img\\myImage.paa'/><br />Some text on the second line\", getPosATL someObject] spawn BIS_fnc_3Dcredits;\n```","BIS Functions\\BIS_fnc_3DENAttributeDoorStates.md":"Internal function used for the `Eden Editor` Edit Terrain Object module.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_3DENAttributeDoorStates`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3DENCamera.md":"Moves Eden's camera depending on one of two modes:\n* \"random\" - A random position over land preferring non forested areas\n* \"selected\" - The current selected Eden entity or users cursor position if nothing is selected\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_3DENCamera`\n\n---\n*Example 1:*\n\nMove Eden's camera to the currently selected Eden entity\n\n```sqf\n[\"selected\"] call BIS_fnc_3DENCamera;\n```\n\n*Example 2:*\n\nMove Eden's camera to a random position\n\n```sqf\n[\"random\"] call BIS_fnc_3DENCamera;\n```","BIS Functions\\BIS_fnc_3DENControlsHint.md":"Used by Eden to display control hints for the current Eden operation as seen in the bottom right corner of the Editor display.\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_3DENControlsHint`\n\n---\n*Example 1:*\n\n```sqf\n[\"toggle\"] call BIS_fnc_3DENControlsHint; // toggle Eden controls hints\n```","BIS Functions\\BIS_fnc_3DENDiagCreateList.md":"Copies all in `Eden Editor` available objects to the clipboard.\n\n\n---\n*Syntaxes:*\n\nclass call `BIS_fnc_3DENDiagCreateList`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_3DENDiagCreateList;\n```","BIS Functions\\BIS_fnc_3DENDiagFonts.md":"Displays given font in various different sizes. The fontID is the index of the font in <sqf inline>configFile >> \"CfgFontFamilies\"\n```.<br>\nFonts for *(Reference GVI \"arma3|2.00\")*:\n<ol start=\"0\" style=\"column-count: 3\">\n<li>LucidaConsoleB\n<li>TahomaB\n<li>EtelkaMonospacePro\n<li>LCD14\n<li>EtelkaMonospaceProBold\n<li>EtelkaNarrowMediumPro\n<li>PuristaBold\n<li>PuristaLight\n<li>PuristaMedium\n<li>PuristaSemibold\n<li>RobotoCondensed\n<li>RobotoCondensedBold\n<li>RobotoCondensedLight\n<li>Caveat\n</ol>\n\n\n---\n*Syntaxes:*\n\nfontID call `BIS_fnc_3DENDiagFonts`\n\n---\n*Example 1:*\n\n```sqf\n2 call BIS_fnc_3DENDiagFonts;\n```","BIS Functions\\BIS_fnc_3DENDiagMouseControl.md":"Creates a display which highlights currently pressed mouse buttons and CTRL, ALT or SHIFT key.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_3DENDiagMouseControl`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_3DENDiagMouseControl;\n```","BIS Functions\\BIS_fnc_3DENDrawLocations.md":"Internal function used by `Eden Editor` to draw locations.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_3DENDrawLocations`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3DENEntityMenu.md":"Excutes actions available in the entity menu (context menu).\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_3DENEntityMenu`\n\n---\n*Example 1:*\n\n```sqf\n[\"reset\"] call BIS_fnc_3DENEntityMenu;\n```","BIS Functions\\BIS_fnc_3DENExportAttributes.md":"Copies all available attributes to the clipboard.\n\n\n---\n*Syntaxes:*\n\nclass call `BIS_fnc_3DENExportAttributes`\n\n---\n*Example 1:*\n\n```sqf\n\"trigger\" call BIS_fnc_3DENExportAttributes;\n```","BIS Functions\\BIS_fnc_3DENExportOldSQM.md":"Export current mission (usually in `Eden Editor`) in `2D Editor` format to the clipboard.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_3DENExportOldSQM`\n\n---\n*Example 1:*\n\nSee `Mission Editor: Debug Console (Arma 3)|Debug Console`\n```sqf\ncall BIS_fnc_3DENExportOldSQM; // execute in debug console\n```","BIS Functions\\BIS_fnc_3DENExportSQF.md":"Export 3DEN mission to SQF script. When called, the script will dynamically recreate the mission.\n\n\n---\n*Syntaxes:*\n\n[showWindow,exportLayers,center,checkBlacklist] call `BIS_fnc_3DENExportSQF`\n\n---\n*Example 1:*\n\n```sqf\n[true, false, [1337,1337,0], true] call BIS_fnc_3DENExportSQF;\n```","BIS Functions\\BIS_fnc_3DENExportTerrainBuilder.md":"Gets all empty vehicles placed in the currently opened Eden mission and converts data into the format used by the `Terrain Builder`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_3DENExportTerrainBuilder`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_3DENExportTerrainBuilder;\n```","BIS Functions\\BIS_fnc_3DENFlashlight.md":"Toggle or set `Eden Editor` flashlight (light source snapped to the camera).\n\n\n---\n*Syntaxes:*\n\nmode call `BIS_fnc_3DENFlashlight`\n\n---\n*Example 1:*\n\n```sqf\nprivate _mode = 0 call BIS_fnc_3DENFlashlight;\n```","BIS Functions\\BIS_fnc_3DENGrid.md":"Handles action when grid button is pressed in the toolbar in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[mode, input] call `BIS_fnc_3DENGrid`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3DENIntel.md":"Is used to set the weather settings in `Eden Editor`. Internal use only.\n\n\n---\n*Syntaxes:*\n\n[controlGroup, value] call `BIS_fnc_3DENIntel`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3DENInterface.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_3DENInterface` -->\n\n---\n","BIS Functions\\BIS_fnc_3DENListLocations.md":"Used in the locations display in `Eden Editor`. Internal use only.\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_3DENListLocations`\n\n---\n*Example 1:*\n\n```sqf\n[\"init\"] call BIS_fnc_3DENListLocations;\n```","BIS Functions\\BIS_fnc_3DENMissionPreview.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3DENMissionStats.md":"This functions does nothing.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_3DENMissionStats`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3DENModuleDescription.md":"Used to display module description in the attribute window.\n\n\n---\n*Syntaxes:*\n\n[ctrl,cfg] call `BIS_fnc_3DENModuleDescription`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3DENNotification.md":"Shows notification banner with given text, animated or not, at the top of the screen in the `Eden Editor`.<br/>\nSince *(Reference GVI \"arma3|2.10\")* this function will no longer throw an error outside of `Eden Editor`. Because **Display3DEN** (<sqf inline>findDisplay 313\n```) is not available, it will only play the sound according to the message type.\nThe sound is played through the UI channel with `playSoundUI`.\n\n\n---\n*Syntaxes:*\n\n[text, type, duration, animate] call `BIS_fnc_3DENNotification`\n\n---\n*Example 1:*\n\n```sqf\n[\"This is an animated notification\", 0] call BIS_fnc_3DENNotification;\n```\n\n*Example 2:*\n\n```sqf\n[\"This is a warning that is not animated\", 1, 2, false] call BIS_fnc_3DENNotification;\n```","BIS Functions\\BIS_fnc_3DENShowMessage.md":"Shows a pop-up message.\nIn order to skip any optional parameter in between other parameters, send `nil` as parameter.\n\n\n---\n*Syntaxes:*\n\n[text, title, buttonOK, buttonCancel, icon, parentDisplay] call `BIS_fnc_3DENShowMessage`\n\n---\n*Example 1:*\n\n```sqf\n[\"Message\",\"Title of the Message\"] call BIS_fnc_3DENShowMessage;\n```\n\n*Example 2:*\n\n```sqf\n[\n\t\"Are you sure you want to delete / modify the selected variables?\",\n\t\"Delete / Modify\",\n\t[\n\t\t\"Yes\",\n\t\t{ BIS_Message_Confirmed = true }\n\t],\n\t[\n\t\t\"No\",\n\t\t{ BIS_Message_Confirmed = false }\n\t],\n\t\"\\A3\\ui_f\\data\\map\\markers\\handdrawn\\warning_CA.paa\",\n\tfindDisplay 313\n] call BIS_fnc_3DENShowMessage;\n```\n\n*Example 3:*\n\n```sqf\n// Only change the OK button's code\n[\n\t\"Are you sure you want to delete / modify the selected variables?\",\n\t\"Delete / Modify\",\n\t[\n\t\tnil,\n\t\t{ BIS_Message_Confirmed = true }\n\t],\n\tnil,\n\t\"\\A3\\ui_f\\data\\map\\markers\\handdrawn\\warning_CA.paa\",\n\tfindDisplay 313\n] call BIS_fnc_3DENShowMessage;\n```","BIS Functions\\BIS_fnc_3DENStatusBar.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_3DENStatusBar` -->\n\n---\n","BIS Functions\\BIS_fnc_3DENToolbar.md":"Interacts with the `Eden Editor` toolbar\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_3DENToolbar`\n\n---\n*Example 1:*\n\n```sqf\n\"ToggleFlashlight\" call BIS_fnc_3DENToolbar;\n```","BIS Functions\\BIS_fnc_3DENTutorial.md":"Show tutorial in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[path, index, oneStep, display] call `BIS_fnc_3DENTutorial`\n\n---\n*Example 1:*\n\n```sqf\n[[\"Editing\", \"Connecting\"], 0, false] call BIS_fnc_3DENTutorial;\n```","BIS Functions\\BIS_fnc_3DENVisionMode.md":"Toggle or set `Eden Editor` vision mode. Has to be executed while Eden interface is opened.\n\n\n---\n*Syntaxes:*\n\nmode call `BIS_fnc_3DENVisionMode`\n\n---\n*Example 1:*\n\n```sqf\nprivate _mode = 0 call BIS_fnc_3DENVisionMode;\n```","BIS Functions\\BIS_fnc_3den_init.md":"Used internally by the `Arma 3 Key Frame Animation` system. Adds needed event handlers.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3den_onKeyDown.md":"Used internally by the `Arma 3 Key Frame Animation` system. Called when a button is pressed.\n\n\n---\n*Syntaxes:*\n\n[display, button, shift, ctrl, alt] call `BIS_fnc_3den_onKeyDown`\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayAddEventHandler [\"keyDown\", { _this call BIS_fnc_3den_onKeyDown }];\n```","BIS Functions\\BIS_fnc_3den_onKeyUp.md":"Used internally by the `Arma 3 Key Frame Animation` system. Called when a button is released.\n\n\n---\n*Syntaxes:*\n\n[display, button, shift, ctrl, alt] call `BIS_fnc_3den_onKeyUp`\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayAddEventHandler [\"keyUp\", {_this call BIS_fnc_3den_onKeyUp}];\n```","BIS Functions\\BIS_fnc_3den_onMissionLoad.md":"Used internally by the `Arma 3 Key Frame Animation` system. Executed when a new mission is loaded.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3den_onMissionNew.md":"Used internally by the `Arma 3 Key Frame Animation` system. Executed when a new mission is created.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3den_onMissionPreviewEnd.md":"Used internally by the `Arma 3 Key Frame Animation` system. Executed when preview ended.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_3den_onSelectionChange.md":"Used internally by the `Arma 3 Key Frame Animation` system.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_AAN.md":"Add an AAN overlay to the screen, with one headline and a rolling text on the bottom.\n\n\n---\n*Syntaxes:*\n\n[headline, rollingText] spawn `BIS_fnc_AAN`\n\n---\n*Example 1:*\n\n```sqf\n[\n\tparseText \"<t size='2'>AAN live in Takistan</t>\",\n\tparseText \"Weather coming up hot and steamy - Takistan shelled again from border area\"\n] spawn BIS_fnc_AAN;\n```","BIS Functions\\BIS_fnc_absSpeed.md":"Returns absolute `speed` of a vehicle in kilometers per hour (km/h)\n\n\n---\n*Syntaxes:*\n\n`Object` call `BIS_fnc_absSpeed`\n\n---\n*Example 1:*\n\n```sqf\nif (((vehicle player) call BIS_fnc_absSpeed) > 150) then\n{\n  hint \"There goes my driver's license :(\";\n};\n```\n\n*Example 2:*\n\n```sqf\nprivate _kmh = (vehicle player) call BIS_fnc_absSpeed;\n_miles = _kmh / 1.609344;\n```","BIS Functions\\BIS_fnc_activateAddons.md":"Activate addons upon mission start. Doesn't work when the mission is already running.\n\n\n---\n*Syntaxes:*\n\n[addons] call `BIS_fnc_activateAddons`\n\n---\n*Example 1:*\n\n```sqf\n[\"class_1\",\"class_2\"] call BIS_fnc_activateAddons;\n```","BIS Functions\\BIS_fnc_addClassOO.md":"Registering a class for the OO scripting shell.\n\n\n---\n*Syntaxes:*\n\nclass call `BIS_fnc_addClassOO`\n\n---\n*Example 1:*\n\n```sqf\n\"someOOClass\" call BIS_fnc_addClassOO;\n```","BIS Functions\\BIS_fnc_addCommMenuItem.md":"Add `Arma 3: Communication Menu|communication menu` to the given unit.\n\nThe item will be available in the Communication menu and visualized in comm menu icon area.\n\n\n---\n*Syntaxes:*\n\n[owner, itemClass, textArguments, expressionArguments, notification] call `BIS_fnc_addCommMenuItem`\n\n---\n*Example 1:*\n\n```sqf\nprivate _supportHeli = [player,\"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem;\n_supportHeli = [player,\"Support_Request_CAS_Heli\",nil,nil,\"\"] call BIS_fnc_addCommMenuItem; // don't show notification\n```","BIS Functions\\BIS_fnc_addCuratorAreaFromTrigger.md":"Add curator editing / camera area based on triggers.\n\n\n---\n*Syntaxes:*\n\n[curatorLogic, triggers, checkedPosition, triggerType, editingArea, cameraArea] call `BIS_fnc_addCuratorAreaFromTrigger`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_curator, [trigger_1,trigger_2], [0,0,0], true, true, true] call BIS_fnc_addCuratorAreaFromTrigger;\n```","BIS Functions\\BIS_fnc_addCuratorChallenge.md":"<pre>/*\n\n\tDescription:\n\tAdd challenges for curator to complete\n\n\tParameter(s):\n\t\t0: OBJECT - curator\n\t\t1 (Optional): ARRAY - list of supported challenges from CfgCuratorChallenges (default: all challenges)\n\t\t2 (Optional): NUMBER - number of added challenges (default: 3)\n\t\t3 (Optional): CODE - condition for challenges to remain active {default: true}\n\t\t4 (optional):\n\t\t\tCODE or [CODE,STRING] - code executed upon completing all challenges and reward description\n\t\t\tArguments passed to the code are:\n\t\t\t\t0: OBJECT - curator\n\t\t\t\t1: NUMBER - number of previously completed challenges by given curator\n\t\t\t\t2: STRING - parent task ID\n\t\t5 (Optional): STRING - parent task ID\n\n\tReturns:\n\tSTRING - ID of parent task under which all challenge tasks are\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_addCuratorChallenge` -->\n\n---\n","BIS Functions\\BIS_fnc_addCuratorIcon.md":"Add an icon displayed in curator interface.\n\n\n---\n*Syntaxes:*\n\n[object, iconParams, map, 3D] call `BIS_fnc_addCuratorIcon`\n\n---\n*Example 1:*\n\n```sqf\n[ curatorModule, [\"targetIcon.paa\", [1,1,1,1], position player, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"], false ] call BIS_fnc_addCuratorIcon;\n```","BIS Functions\\BIS_fnc_addEvidence.md":"<pre>\n/*******************************************************************************\n *\n *\tversion: \t\t1.0\n *\tname:\t\t\tAdd evidence\n *\tdescription:\tadd an evidence value to global campaign variable \t\n *\tparamater:\t\tevidence variable name (defined in init.sqf of campaign\n \t\t\t\t\tmission C1) or simply number (scalar)\n *\treturn value:\tnone \t\n * \n</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_addEvidence` -->\n\n---\n","BIS Functions\\BIS_fnc_addRespawnInventory.md":"Add a respawn inventory for `Arma 3 Respawn#MenuInventory|respawn menu`.<br>\nAvailable loadouts are defined in `CfgRespawnInventory`.\n\n\n---\n*Syntaxes:*\n\n[target, inventoryParams] call `BIS_fnc_addRespawnInventory`\n\n---\n*Example 1:*\n\n```sqf\n[west, \"WEST1\"] call BIS_fnc_addRespawnInventory;\n```\n\n*Example 2:*\n\n```sqf\nprivate _myRespawnInventory = [missionNamespace, \"ATSniper\"] call BIS_fnc_addRespawnInventory;\n```","BIS Functions\\BIS_fnc_addRespawnPosition.md":"Add a respawn position for the `Arma 3: Respawn|{{arma3}} Respawn Menu`.\n\n\n---\n*Syntaxes:*\n\n[target, position, name] call `BIS_fnc_addRespawnPosition`\n\n---\n*Example 1:*\n\n```sqf\n[west, myRespawnAPC] call BIS_fnc_addRespawnPosition;\n```\n\n*Example 2:*\n\n```sqf\nmyRespawn = [missionNamespace,\"arena\",\"Battle Arena\"] call BIS_fnc_addRespawnPosition;\n```","BIS Functions\\BIS_fnc_addScore.md":"Adds a set amount of points to the score of a unit `(MP only)`\n\n\n---\n*Syntaxes:*\n\n[object, number] call `BIS_fnc_addScore`\n\n---\n*Example 1:*\n\n```sqf\n[player,20] call BIS_fnc_addScore;\n```","BIS Functions\\BIS_fnc_addScriptedEventHandler.md":"Adds a Scripted Event Handler and returns its ID. Additionally, the \"ScriptedEventHandlerAdded\" Scripted EH is called. For the full list of all available Scripted EHs see `Arma 3: Scripted Event Handlers`.\n\n\n---\n*Syntaxes:*\n\n[namespace, name, code] call `BIS_fnc_addScriptedEventHandler`\n\n---\n*Example 1:*\n\n```sqf\n[missionNamespace, \"event\", { hint \"Hello World\" }] call BIS_fnc_addScriptedEventHandler;\n```\n\n*Example 2:*\n\n```sqf\n[true, \"event\", { hint \"Hello World\" }] call BIS_fnc_addScriptedEventHandler;\n``` \nBoolean will default to `missionNamespace`.","BIS Functions\\BIS_fnc_addStackedEventHandler.md":"array. Note that if you try to add an empty EH, i.e. with empty code, it will simply be ignored.\n\n\n---\n*Syntaxes:*\n\n[id, event, code, arguments] call `BIS_fnc_addStackedEventHandler`\n\n---\n*Example 1:*\n\n```sqf\n[\"someId\", \"onEachFrame\", { hintSilent str time }] call BIS_fnc_addStackedEventHandler;\n```\n\n*Example 2:*\n\n```sqf\n[\"someId\", \"onEachFrame\", {hintSilent str position (_this select 0)}, [player]] call BIS_fnc_addStackedEventHandler;\n```\n\n*Example 3:*\n\n```sqf\nprivate _eventName = \"OnEachFrame\";\nmissionNamespace getVariable [format [\"BIS_stackedEventHandlers_%1\", _eventName], []]; // gets an array with all existing ids\n```","BIS Functions\\BIS_fnc_addSupportLink.md":"Adds support types during a mission.\n\n\n---\n*Syntaxes:*\n\n[requesterUnit, requesterMod, providerMod] call `BIS_fnc_addSupportLink`\n\n---\n*Example 1:*\n\n```sqf\n[player, BIS_requesterMod, BIS_providerMod] call BIS_fnc_addSupportLink;\n```","BIS Functions\\BIS_fnc_addToPairs.md":"Adds given value to pair array, stored under unique key.<br><br>\n\n If value is found:<br>\n a) both values are scalars: values are added and stored as a single scalar<br>\n b) one or both values are array: values are added and stored as a single array<br>\n c) anything else: an array is created and both values are stored there<br><br>\n\n\n---\n*Syntaxes:*\n\n[array, key, value, copyArray] call `BIS_fnc_addToPairs`\n\n---\n*Example 1:*\n\n```sqf\n`[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_addToPairs; // Returns [[\"apple\",3],[\"pear\",12`\n```\n\n*Example 2:*\n\n```sqf\n`[\"apple\",3],[\"pear\",2]],\"apple\",-2] call BIS_fnc_addToPairs; // Returns [[\"apple\",1],[\"pear\",2`\n```\n\n*Example 3:*\n\n```sqf\n`[\"greetings\",\"Hello!\"],[\"rudewords\",\"\"`,\"greetings\",\"Hi!\"] call BIS_fnc_addToPairs; // Returns `\"greetings\",[\"Hello!\",\"Hi!\"`,[\"rudewords\",\"\"]]\n```","BIS Functions\\BIS_fnc_addVirtualBackpackCargo.md":"Add virtual backpacks to an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\n[object,backpackClasses,addItemsGlobal,arsenal] call `BIS_fnc_addVirtualBackpackCargo`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualBackpackCargo;\n```","BIS Functions\\BIS_fnc_addVirtualItemCargo.md":"Add virtual items to an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\nIf parameters 4 and 5 are used this function can replace `BIS_fnc_addVirtualWeaponCargo`, `BIS_fnc_addVirtualMagazineCargo` and `BIS_fnc_addVirtualBackpackCargo`.\n\n\n---\n*Syntaxes:*\n\n[object, itemClasses, addItemsGlobal, arsenal, mode, itemType] call `BIS_fnc_addVirtualItemCargo`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_ammoBox, [\"class_1\", \"class_2\"], false, true] call BIS_fnc_addVirtualItemCargo;\n```","BIS Functions\\BIS_fnc_addVirtualMagazineCargo.md":"Add virtual magazines to an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\n[object,magClasses,addItemsGlobal,arsenal] call `BIS_fnc_addVirtualMagazineCargo`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualMagazineCargo;\n```","BIS Functions\\BIS_fnc_addVirtualWeaponCargo.md":"Add virtual weapons to an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\n[object,weaponClasses,addItemsGlobal,arsenal] call `BIS_fnc_addVirtualWeaponCargo`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualWeaponCargo;\n```","BIS Functions\\BIS_fnc_addWeapon.md":"Adds a weapon to the specified unit, with magazine classnames taken from the weapon's config (in `CfgWeapons`).\nThis function does not remove magazines nor weapons prior to adding the new weapon, so that still has to be done manually.\n\n\n---\n*Syntaxes:*\n\n[unit, weaponClassName, quantity, type] call `BIS_fnc_addWeapon`\n\n---\n*Example 1:*\n\nAdd 6 dual-purpose magazines and the underwater gun to the player:\n\n```sqf\n[player, \"arifle_SDAR_F\", 6] call BIS_fnc_addWeapon;\n```\n\n*Example 2:*\n\nAdds 2 &times; 30 Rnd Stanag Tracer (Red) magazines to bluforUnit, with an Mk20_F:\n\n```sqf\n[bluforUnit, \"arifle_Mk20_F\", 2, 1] call BIS_fnc_addWeapon;\n```\n\n*Example 3:*\n\nAlternative syntax of second example, with magazine name written out:\n\n```sqf\n[bluforUnit, \"arifle_Mk20_F\", 2, \"30Rnd_556x45_Stanag_Tracer_red\"] call BIS_fnc_addWeapon;\n```","BIS Functions\\BIS_fnc_adjustSimpleObject.md":"Adjust simple object vertical position, animations and selection according to provided data.<br>\nIn case both adjustment data and class are being used, data has higher priority and only undefined parts are filled from config.\n\n\n---\n*Syntaxes:*\n\n[object, [class, model, reversed, verticalOffset, animAdjustments, selectionToHide]] call `BIS_fnc_adjustSimpleObject`\n\n---\n*Example 1:*\n\n```sqf\n[myCar, [\"B_MyCar_F\", \"path\\to\\file.p3d\"]] call BIS_fnc_adjustSimpleObject;\n```","BIS Functions\\BIS_fnc_admin.md":"Returns the admin state of a client the function is called on. Complements `admin` script command and used for self check on a local client.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_admin`\n\n---\n*Example 1:*\n\n```sqf\nprivate _adminState = call BIS_fnc_admin;\n```","BIS Functions\\BIS_fnc_advHint.md":"Shows advanced hint to player.\n\n\n---\n*Syntaxes:*\n\n[classes, duration1, condition1, duration2, condition2, showing, onlyFullHint, onlyOnce, useSound] call `BIS_fnc_advHint`\n\n---\n*Example 1:*\n\n```sqf\n`\"Common\", \"GPS\"` call BIS_fnc_advHint;\n```\n\n*Example 2:*\n\n```sqf\n[[\"Common\", \"GPS\"], 15, \"\", 35, \"\", false, false, false, true] call BIS_fnc_advHint; // default\n```","BIS Functions\\BIS_fnc_advHintArg.md":"Advanced hint arguments preprocess.\n\n\n---\n*Syntaxes:*\n\n[arguments,HTMLColour,hintClass] call `BIS_fnc_advHintArg`\n\n---\n","BIS Functions\\BIS_fnc_advHintCall.md":"Advanced hint call, creates hint itself.<br>\nThis function gets parameters from variable `BIS_fnc_advHint_hint`:<br>\n\tBIS_fnc_advHint_hint select 0: `String` - Class of hint<br>\n\tBIS_fnc_advHint_hint select 1: `String` - Structured text of full hint<br>\n\tBIS_fnc_advHint_hint select 2: `String` - Structured text of short hint<br>\n\tBIS_fnc_advHint_hint select 3: `Number` - Duration of short hint in seconds<br>\n\tBIS_fnc_advHint_hint select 4: `String` - Condition for hiding of short hint (default: \"false\")<br>\n\tBIS_fnc_advHint_hint select 5: `Number` - Duration of full hint in seconds<br>\n\tBIS_fnc_advHint_hint select 6: `String` - Condition for hiding of full hint (default: \"false\")<br>\n\tBIS_fnc_advHint_hint select 7: `Boolean` - True shows directly full hint (default: `false`)<br>\n\tBIS_fnc_advHint_hint select 8: `Boolean` - True for using of sound (default: `true`)\n\n\n---\n*Syntaxes:*\n\nfullTextcall call `BIS_fnc_advHintCall`\n\n---\n*Example 1:*\n\n```sqf\nfalse call BIS_fnc_advHintCall;\n```","BIS Functions\\BIS_fnc_advHintCredits.md":"Advanced hint credits preprocessor.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_advHintCredits`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_advHintCredits;\n```","BIS Functions\\BIS_fnc_advHintFormat.md":"Return formatted texts of a CfgHints hint.\n\n\n---\n*Syntaxes:*\n\n[topic,hint,subHint,colour] call `BIS_fnc_advHintFormat`\n\n---\n*Example 1:*\n\n```sqf\n[\"Arma3\",\"Feedback\",\"\",[0.5,0.3,0.6,1]] call BIS_fnc_advHintFormat;\n```","BIS Functions\\BIS_fnc_aircraftCatapultLaunch.md":"Accelerates an aircraft off the aircraft carrier. For this to work the aircraft must be properly configured in config. See `Arma 3: Aircraft Systems` for information about needed config changes.\n\n\n---\n*Syntaxes:*\n\n[aircraft, direction] call `BIS_fnc_aircraftCatapultLaunch`\n\n---\n*Example 1:*\n\n```sqf\n[_plane] call BIS_fnc_aircraftCatapultLaunch;\n```","BIS Functions\\BIS_fnc_aircraftFoldingWings.md":"Handles foldable wings of aircrafts. Is supposed to be used from within class Eventhandlers of the vehicle. See `Arma 3: Aircraft Systems` for information about needed config changes.\n```cpp\nclass Eventhandlers: Eventhandlers\n{\n\tengine = \"_this call BIS_fnc_aircraftFoldingWings\";\n\tgear = \"_this call BIS_fnc_aircraftFoldingWings\";\n};\n```\n\n\n---\n*Syntaxes:*\n\n[aircraft, animationState] call `BIS_fnc_aircraftFoldingWings`\n\n---\n*Example 1:*\n\n```sqf\n[_aircraft, 1] call BIS_fnc_aircraftFoldingWings;\n```","BIS Functions\\BIS_fnc_aircraftSystemsInit.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- Init function to invoke scripted features required for Jets DLC content.\n\n\tExucution:\n\t- Call the function via int EH on each aircrfat config\n\t\tclass Eventhandlers: Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_AircraftSystemsInit\";\n\t\t};\n\n\tRequirments:\n\t- Compatible aircrfat must have a config definition for all sub-systems that will be invoked by this function\n\n\t\texample of cfgVehicles subclass definitions;\n\t\tclass AircraftAutomatedSystems\n\t\t{\n\t\t\twingStateControl = 1;\t\t\t\t\t\t\t\t\t\t\t//enable automated wing state control to prevent player to take off with folded wings\n\t\t\twingFoldAnimations[] = {\"wing_fold_l\",\"wing_fold_r\",\"wing_fold_cover_l\", \"wing_fold_cover_r\"};\t\t//foldable wing animation list\n\t\t\twingStateFolded = 1;\t\t\t\t\t\t\t\t\t\t\t//animation state when folded\n\t\t\twingStateUnFolded = 0;\t\t\t\t\t\t\t\t\t\t\t//animation state when un-folded\n\t\t\twingAutoUnFoldSpeed = 40;\t\t\t\t\t\t\t\t\t\t//speed treshold when triger this feature, and unfold wings for player\n\n\t\t};\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: plane/object\n\n\tReturns: nothing\n\tResult: Aircrfat additional functionality added\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_aircraftSystemsInit` -->\n\n---\n","BIS Functions\\BIS_fnc_aircraftTailhook.md":"Aircraft carrier arrest/recovery function for USS Freedom aircraft carrier. If the aircraft exceeds the speed defined in config a wire snap will be simulated.\n\n\n---\n*Syntaxes:*\n\n[aircraft] call `BIS_fnc_aircraftTailhook`\n\n---\n*Example 1:*\n\n```sqf\n[_aircraft] call BIS_fnc_aircraftTailhook;\n```","BIS Functions\\BIS_fnc_aircraftTailhookAi.md":"Handles landing on the aircraft carrier for AI and player autopilot.\n\n\n---\n*Syntaxes:*\n\n[params, isLanding] call `BIS_fnc_aircraftTailhookAi`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_aircraftWingStateCheck.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This function is designed to prevent take off with folded wings on the Jets DLC aircraft that have such useraction/function enabled.\n\n\tExucution:\n\t- Call the function via int EH on each aircrfat config\n\t\tclass Eventhandlers: Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_AircraftSystemsInit\";\n\t\t};\n\n\tRequirments:\n\t- Compatible aircrfat must have a config definition for all subsytems that will be invoked by this function\n\n\t\texample of cfgVehicles subclass definitions;\n\t\tclass AircraftAutomatedSystems\n\t\t{\n\t\t\twingStateControl = 1;\t\t\t\t\t\t\t\t\t\t\t//enable automated wing state control to prevent player to take off with folded wings\n\t\t\twingFoldAnimations[] = {\"wing_fold_l\",\"wing_fold_r\",\"wing_fold_cover_l\", \"wing_fold_cover_r\"};\t\t//foldable wing animation list\n\t\t\twingStateFolded = 1;\t\t\t\t\t\t\t\t\t\t\t//animation state when folded\n\t\t\twingStateUnFolded = 0;\t\t\t\t\t\t\t\t\t\t\t//animation state when un-folded\n\t\t\twingAutoUnFoldSpeed = 40;\t\t\t\t\t\t\t\t\t\t//speed treshold when triger this feature, and unfold wings for player\n\n\t\t};\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: plane/object\n\n\tReturns: nothing\n\tResult: Aircrfat should not be able to take off/ fly with wings folded\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_aircraftWingStateCheck` -->\n\n---\n","BIS Functions\\BIS_fnc_alignTabs.md":"Align two columns divided by tabs. A tab counts for 8 characters.\n\n\n---\n*Syntaxes:*\n\narray call `BIS_fnc_alignTabs`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t[\"Player:\", str player],\n\t[\"Name:\", name player],\n\t[\"Type:\", typeOf player],\n\t[\"Location:\", str getPosATL player],\n\t[\"Direction:\", str getDir player]\n] call BIS_fnc_alignTabs;\n```","BIS Functions\\BIS_fnc_allSynchronizedObjects.md":"Return all synchronized objects, including those synced to synced and so on.\n\n\n---\n*Syntaxes:*\n\n[object, filter] call `BIS_fnc_allSynchronizedObjects`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_allSynchronizedObjects;\n```","BIS Functions\\BIS_fnc_allTurrets.md":"Returns all vehicle turrets from config with options. Does what `allTurrets` command does, except the param is vehicle's config classname.\n\n\n---\n*Syntaxes:*\n\nvehicleClass call `BIS_fnc_allTurrets`\n\n[vehicleClass, personTurrets] call `BIS_fnc_allTurrets`\n\n---\n*Example 1:*\n\n```sqf\nprivate _allTurrets = \"C_Offroad_01_F\" call BIS_fnc_allTurrets; // []\n```\n\n*Example 2:*\n\n```sqf\nprivate _allTurrets = [\"C_Offroad_01_F\", true] call BIS_fnc_allTurrets; // `0],[1],[2],[3`\n```\n\n*Example 3:*\n\n```sqf\nprivate _allTurrets = [\"C_Offroad_01_F\", false] call BIS_fnc_allTurrets; // []\n```","BIS Functions\\BIS_fnc_ambientAnim.md":"Play set of ambient animations on given unit. If the unit should react to combat, use `BIS_fnc_ambientAnimCombat` instead.\n\n\n---\n*Syntaxes:*\n\n[unit, animationSet, equipmentLevel, snapTo, interpolate, attachToLogic] call `BIS_fnc_ambientAnim`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"STAND1\", \"ASIS\"] call BIS_fnc_ambientAnim;\n```\n\n*Example 2:*\n\n```sqf\n// will search for a chair within 2 meters around the unit and will place the unit on it\n[_unit, \"SIT\", \"NONE\"] call BIS_fnc_ambientAnim;\n```","BIS Functions\\BIS_fnc_ambientAnimCombat.md":"Play set of ambient animations on given unit AND allows the unit to leave the ambient state and engage enemy or move away.\n\n\n---\n*Syntaxes:*\n\n[unit, animationSet, equipmentLevel, condition, behaviour] call `BIS_fnc_ambientAnimCombat`\n\n---\n*Example 1:*\n\n```sqf\n[_unit, \"STAND\", \"FULL\", { (player distance _this) < 5 }] call BIS_fnc_ambientAnimCombat;\n```","BIS Functions\\BIS_fnc_ambientAnimGetParams.md":"Feeds params of given animset to `BIS_fnc_ambientAnim`.\n\n\n---\n*Syntaxes:*\n\nanimType call `BIS_fnc_ambientAnimGetParams`\n\n---\n*Example 1:*\n\n```sqf\nprivate _animParams = \"KNEEL\" call BIS_fnc_ambientAnimGetParams;\n```","BIS Functions\\BIS_fnc_ambientBlacklist.md":"Check if area is blacklisted. Blacklist triggers are to be named 'bis_ambientBlacklist_#', where # is number from 0 to 99.\n\n\n---\n*Syntaxes:*\n\n[input] call `BIS_fnc_ambientBlacklist`\n\n---\n*Example 1:*\n\n```sqf\n[1337,1337,0] call BIS_fnc_ambientBlacklist;\n```\n\n*Example 2:*\n\n```sqf\n[0] call BIS_fnc_ambientBlacklist;\n```","BIS Functions\\BIS_fnc_ambientBlacklistAdd.md":"Add a new ambient blacklist trigger\n\n\n---\n*Syntaxes:*\n\n[trigger] call `BIS_fnc_ambientBlacklistAdd`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_trigger] call BIS_fnc_ambientBlacklistAdd;\n```","BIS Functions\\BIS_fnc_ambientBoats.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_ambientBoats` -->\n\n---\n","BIS Functions\\BIS_fnc_ambientFlyby.md":"Spawns an air unit that moves from point A to point B, never engaging nor being engaged. It is set as captive and will despawn once it reaches its destination.\n\n\n---\n*Syntaxes:*\n\n[startPos, endPos, altitude, speedMode, classname, side] call `BIS_fnc_ambientFlyby`\n\n---\n*Example 1:*\n\n```sqf\n// spawns a Littlebird that flies from position 200,200,50 to 250,250,75 at altitude 100 and normal speed\n`200,200,50], [250,250,75` call BIS_fnc_ambientFlyby;\n```\n\n*Example 2:*\n\n```sqf\n[getPosATL player, getPosATL opforUnit, 400, \"FULL\", \"B_Heli_Light_01_Armed_F\", west] call BIS_fnc_ambientFlyby;\n```","BIS Functions\\BIS_fnc_ambientHelicopters.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_ambientHelicopters` -->\n\n---\n","BIS Functions\\BIS_fnc_ambientPlanes.md":"Creates ambient airplanes fly-by near airports around the `player`. It will automatically get classes from <sqf inline>configFile >> \"CfgVehicles\"\n``` on all planes that have \"ambientType\" attribute > 0.\n\n\n---\n*Syntaxes:*\n\n[quantity, areaRadius, dirStep] call `BIS_fnc_ambientPlanes`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_ambientPlanes;\n```\n\n*Example 2:*\n\n```sqf\n[30, 3000] call BIS_fnc_ambientPlanes;\n```","BIS Functions\\BIS_fnc_ambientPostprocess.md":"Initialize terrain-related postprocess effects.\n\n\n---\n*Syntaxes:*\n\n[terrain, activation] call `BIS_fnc_ambientPostprocess`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_ambientPostprocess;\n```\n\n*Example 2:*\n\n```sqf\n[\"Malden\", \"ColorCorrections\"] call BIS_fnc_ambientPostprocess;\n```","BIS Functions\\BIS_fnc_animalBehaviour.md":"Animal behaviour control. Called by **Animals_F\\Data\\Scripts\\main.fsm**.\n\n\n---\n*Syntaxes:*\n\n[animal] call `BIS_fnc_animalBehaviour`\n\n---\n*Example 1:*\n\n```sqf\n[animal] call BIS_fnc_animalBehaviour;\n```","BIS Functions\\BIS_fnc_animalRandomization.md":"Randomise animals skin.<br>\nWorks on:\n* \"Alsatian_Random_F\"\n* \"ButterFly_random\"\n* \"Cock_random_F\"\n* \"Fin_random_F\"\n* \"Goat_random_F\"\n* \"Sheep_random_F\"\n* \"Snake_random_F\"\n\n\n---\n*Syntaxes:*\n\nanimal call `BIS_fnc_animalRandomization`\n\n---\n*Example 1:*\n\n```sqf\nmyDog call BIS_fnc_animalRandomization;\n```","BIS Functions\\BIS_fnc_animalSiteSpawn.md":"Create an area that spawns animals. The animals will be created or deleted if a player is inside or outside the area's radius.\n\n\n---\n*Syntaxes:*\n\n[animalSite, classnamesToSpawn, radius] call `BIS_fnc_animalSiteSpawn`\n\n---\n*Example 1:*\n\n```sqf\n[player, [\"rabbit_f\", \"turtle_f\", \"hen_random_f\"], 200] call BIS_fnc_animalSiteSpawn;\n```","BIS Functions\\BIS_fnc_animatedBriefing.md":"Plays the Animated Briefings. Basically, it is a wrap function for the eventTimeline function.\n\n\n---\n*Syntaxes:*\n\n[timeline, indexEvent, markersHide, markersShow, endPosition] call `BIS_fnc_animatedBriefing`\n\n---\n*Example 1:*\n\n```sqf\n// timeline of events\n_timeline =\n[\n [0.0, { hint \"Start of the Timeline\" } ],\n [1.0, { hint \"Event 1\" }     ],\n [3.0, { hint \"End of the timeline\" }  ]\n];\n\n// get markers to be shown at end by using the layer's name\nprivate _showMarkers = (getMissionLayerEntities \"showAtEnd\") select 1;\n\n// start the Animated Briefing at index 0\n// hide all markers and show the markers from the \"showAtEnd\" layer after the briefing is done\n// zoom on marker_rect_1 at the end of the briefing\n[_timeline, 0, nil, allMapMarkers, _showMarkers, \"marker_rect_1\"] spawn BIS_fnc_animatedBriefing;\n\n// Wait until timeline is over\nwaitUntil { !(missionNamespace getVariable \"BIS_fnc_eventTimeline_playing\"); };\n```","BIS Functions\\BIS_fnc_animatedOpening.md":"<pre>/*\n\tAuthor: BIS\n\n\tDescription:\n\n \tParameters:\n\n\tReturns:\n\tnone\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_animatedOpening`\n\n---\n","BIS Functions\\BIS_fnc_animatedScreen.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n\tExample:\n\t[_mode] call BIS_fnc_animatedScreen;\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_animatedScreen`\n\n---\n","BIS Functions\\BIS_fnc_animateFlag.md":"Smoothly animates given flag from current position on the flag pole to the given position. When flag animation is done, the scripted event handler \"FlagAnimationDone\" is called.\n\n\n---\n*Syntaxes:*\n\n[flag, phase, instant] call `BIS_fnc_animateFlag`\n\n---\n*Example 1:*\n\n```sqf\n[flag1, 0] call BIS_fnc_animateFlag;\n```\n\n*Example 2:*\n\n```sqf\n// Adding the \"FlagAnimationDone\" EH\nprivate _eh = [<yourflag>, \"FlagAnimationDone\", { /* your code */ }] call BIS_fnc_addScriptedEventHandler;\n```","BIS Functions\\BIS_fnc_animatePicture.md":"<pre>/*\n\tAuthor: Riccardo Argiolas\n\n\tDescription:\n\t\tTranslates (relative or absolute), scales (relative or absolute), sets the alpha over time.\n\n\tParameters:\n\tSelect 0 - CONTROL: picture that has to be modified\n\tSelect 1 - NUMBER: duration of the animation (or speed of the translation, in case _translateUsingDuration is set to false)\n\tSelect 2 - ARRAY: array containing translation parameters\n\t\tSelect 0 - ARRAY: x and y translation coordinates\n\t\tSelect 1 - BOOL: whether the coordinates are relative (ie: will be added to the picture's current position) or absolute (move picture to those coordinates, ignoring current position)\n\t\tSelect 2 - BOOL: whether the _durationOrSpeed variable will be treated as a normal duration (by default) or as the translation speed.\n\tSelect 3 - ARRAY: array containing scaling parameters\n\t\tSelect 0 - ARRAY or NUMBER: x and y scale \"amounts\". If only a number is passed, both the x and y will be equal to that number\n\t\tSelect 1 - BOOL: whether the amounts are relative or absolute\n\t\tSelect 2 - STRING: the pivot/center of the scaling process\n\tSelect 4 - NUMBER: alpha/transparency of the image at the end of the animation (1 = invisible)\n\n\tReturns: \n\tNUMBER: Duration of the animation. (Useful for determining how much sleep time is needed between animations)\n\n\tExamples:\n\t_t =\n\t[\n\t\t_controlFront,\n\t\t1,\n\t\t[[0.5, 0.5], true, false],\n\t\t[],\n\t\t0.5\n\t] \n\tcall BIS_fnc_animatePicture;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_animatePicture`\n\n---\n","BIS Functions\\BIS_fnc_animateTaskWaypoint.md":"Plays an animation that pushes the active task waypoint up and down.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_animateTaskWaypoint`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_animateTaskWaypoint;\n```","BIS Functions\\BIS_fnc_animType.md":"Function that returns a categorized array using a single string with the animation name.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_animType`\n\n---\n*Example 1:*\n\n```sqf\nanimType = [\"AmovPsitMstpSrasWrflDnon\"] call BIS_fnc_animType;\n// Returns `\"Action\",\"Move\"],[\"Pose\",\"Sit\"],[\"Movement\",\"Stop\"],[\"Stance\",\"Raised\"],[\"Hand item\",\"Rifle\"],[\"Direction\",\"Not specified\"`\n```","BIS Functions\\BIS_fnc_animViewer.md":"Opens the `Arma 3: Splendid Animation Viewer|Splendid&trade; Animation Viewer`.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_animViewer`\n\n<!--\np0= arrayFromHeader: `Array` - forced animation in format [<unit class>, <animation class>]\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_animViewer;\n```","BIS Functions\\BIS_fnc_areEqual.md":"This function returns true if all of the passed data elements are of the same type and value. One or more elements can be passed.\n\n operator, because it can handle any data type in any combination.\n* For arrays, it returns true if both arrays hold the same elements in the same order.\n* If both values are undefined / nil / null, then this function will return true.\n* `WARNING:` EXTREMELY large strings (>&nbsp;4k) or compiled code (from a file, for example) might not be properly compared if they are only different near the end of the file.\n\n\n---\n*Syntaxes:*\n\n[anything1, anything2, …, anythingN] call `BIS_fnc_areEqual`\n\n---\n*Example 1:*\n\n```sqf\n[0, \"0\"]\t\tcall BIS_fnc_areEqual; // false\n[0, 1 + 1 - 2]\tcall BIS_fnc_areEqual; // true\n[str 50, \"50\"]\tcall BIS_fnc_areEqual; // true\n```","BIS Functions\\BIS_fnc_areEqualNotNil.md":"Compares all elements of passed array between each other and returns true is all are defined and identical.<br>\nVery fast, different from `BIS_fnc_areEqual` in that `nil` values will not be considered equal to each other.\n\n\n---\n*Syntaxes:*\n\n[anything1, anything2, …] call `BIS_fnc_areEqualNotNil`\n\n---\n*Example 1:*\n\n```sqf\n`1, 2, [3, [4, 5]]],\t[1, 2, [3, [4, 5]]`\tcall BIS_fnc_areEqualNotNil; // true\n`1, 2, [3, [4, nil]]],\t[1, 2, [3, [4, nil]]`\tcall BIS_fnc_areEqualNotNil; // false\n```\n\n*Example 2:*\n\n```sqf\n[nil, nil] call BIS_fnc_areEqualNotNil; // false\n```","BIS Functions\\BIS_fnc_areFriendly.md":"Function that takes two `Side`s and compares them, returning whether they are friendly or not.\n\n\n---\n*Syntaxes:*\n\n[side1, side2] call `BIS_fnc_areFriendly`\n\n---\n*Example 1:*\n\n```sqf\nprivate _areFriendly = [west, east] call BIS_fnc_areFriendly;\n```","BIS Functions\\BIS_fnc_arithmeticMean.md":"Returns the [arithmetic mean](https://en.wikipedia.org/wiki/Mean#Arithmetic mean (AM)) (\"average value\") of an array of numbers.\n\n\n---\n*Syntaxes:*\n\nnumbers call `BIS_fnc_arithmeticMean`\n\n---\n*Example 1:*\n\n```sqf\n[1, 3] call BIS_fnc_arithmeticMean; // returns 2\n```\n\n*Example 2:*\n\n```sqf\n[1, 9, 8, 2] call BIS_fnc_arithmeticMean; // returns 5\n```","BIS Functions\\BIS_fnc_arrayCompare.md":"This function checks if two arrays are containing the same elements in the same order.\n\n\n---\n*Syntaxes:*\n\n[array1, array2] call `BIS_fnc_arrayCompare`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array1 = [0,1,2];\nprivate _array2 = [0,1,2];\n[_array1, _array2] call BIS_fnc_arrayCompare; // returns true\n```","BIS Functions\\BIS_fnc_arrayFindDeep.md":"Searches an array for a specific value and returns its index.\n\n\n---\n*Syntaxes:*\n\n[array,value] call `BIS_fnc_arrayFindDeep`\n\n---\n*Example 1:*\n\n```sqf\n[ [1,2,3,4,5], 3 ] call BIS_fnc_arrayFindDeep;//Returns [2]\n```","BIS Functions\\BIS_fnc_arrayInsert.md":"Inserts the elements of one array into another, at a specified index. Neither arrays are touched by reference, a new array is returned.\n\n\n---\n*Syntaxes:*\n\n[array1, array2, index] call `BIS_fnc_arrayInsert`\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = [[0,1,2,3,4], [\"a\",\"b\",\"c\"], 1] call BIS_fnc_arrayInsert; // returns [0,\"a\",\"b\",\"c\",1,2,3,4]\n```","BIS Functions\\BIS_fnc_arrayPop.md":"This function removes the last (rightmost) element of an array and returns it.<br>\n`The array is passed by reference` so changes inside the function will be reflected outside of it.\n\n\n---\n*Syntaxes:*\n\narray call `BIS_fnc_arrayPop`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = [1,2,3,4];\n_removedElement = _array call BIS_fnc_arrayPop; // _array is now [1,2,3] and _removedElement = 4\n```","BIS Functions\\BIS_fnc_arrayPush.md":"This function adds an element to the end of an array and returns the array.<br>\n`The array is passed by reference` so changes inside the function will be reflected outside of it.\n\n\n---\n*Syntaxes:*\n\n[array, element] call `BIS_fnc_arrayPush`\n\n---\n*Example 1:*\n\n```sqf\n_newArray = [[0,1,2], 3] call BIS_fnc_arrayPush; // _newArray is [0,1,2,3]\n```\n\n*Example 2:*\n\n```sqf\nprivate _array = [0,1,2]; [_array, [3]] call BIS_fnc_arrayPush; // _array is [0,1,2,[3]]\n```","BIS Functions\\BIS_fnc_arrayPushStack.md":"This function is similar to the array push function; however, it pushes the contents of an array onto the stack array.\n\n\n---\n*Syntaxes:*\n\n[array1, array2] call `BIS_fnc_arrayPushStack`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = [0,1,2];\n[_array, [3,4,5]] call BIS_fnc_arrayPushStack; // _array is [0,1,2,3,4,5]\n```\n\n*Example 2:*\n\n```sqf\nprivate _array = `5, 6, 7], [8, [9], 10` call BIS_fnc_arrayPushStack; // _array is [5, 6, 7, 8, [9], 10]\n```","BIS Functions\\BIS_fnc_arrayShift.md":"This function removes the first (leftmost) element of an array and returns it.<br>\nThe array is passed by reference so changes inside the function will be reflected outside of it.\n\n\n---\n*Syntaxes:*\n\n[array] call `BIS_fnc_arrayShift`\n\n---\n*Example 1:*\n\n```sqf\nprivate _myArray = [\"2\", \"report\", \"status\"];\n_removedElement = [_myArray] call BIS_fnc_arrayShift;\t// array is -within an array-\n_removedElement == \"2\";\t\t\t\t\t\t\t\t\t// true\n_myArray isEqualTo [\"report\", \"status\"];\t\t\t\t// true\n```","BIS Functions\\BIS_fnc_arrayShuffle.md":"Return a new array with randomized order of elements from input array.\n\n\n---\n*Syntaxes:*\n\narray call `BIS_fnc_arrayShuffle`\n\n---\n*Example 1:*\n\n```sqf\n[1,2,3] call BIS_fnc_arrayShuffle; // can return [1,2,3] (the original order), [3,1,2], [2,3,1], [1,3,2], [2,1,3] or [3,2,1]\n```","BIS Functions\\BIS_fnc_arrayUnShift.md":"This function adds an element to the beginning of an array and returns the array.\nThe array is passed by reference so changes inside the function will be reflected outside of it.\n\n\n---\n*Syntaxes:*\n\n[array, value] call `BIS_fnc_arrayUnShift`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = [2,3,4];\n[_array, 1] call BIS_fnc_arrayUnShift;\t\t\t\t\t\t// _array is now [1,2,3,4]\n```\n\n*Example 2:*\n\n```sqf\nprivate _array = [[2,3,4], 1] call BIS_fnc_arrayUnShift;\t// _array is now [1,2,3,4]\n```","BIS Functions\\BIS_fnc_arsenal.md":"Function used for the `Arma 3: Arsenal|Virtual Arsenal`. The function features four different modes, each mode comes with its own parameters.\n\n\n---\n*Syntaxes:*\n\n[mode, params] call `BIS_fnc_arsenal`\n\n---\n*Example 1:*\n\nOpens `Arma 3: Arsenal|Arsenal` with all items:\n\n```sqf\n[\"Open\", [true]] call BIS_fnc_arsenal;\n```\n\n*Example 2:*\n\nPreloads `Arma 3: Arsenal|Arsenal`'s config:\n\n```sqf\n[\"Preload\"] call BIS_fnc_arsenal;\n```\n\n*Example 3:*\n\nAdds full `Arsenal` to the `player` object and makes the `action` available when the player is closer than 10 meters from ammoBox:\n\n```sqf\n[\"AmmoboxInit\", [ammoBox, true, { _this distance _target  < 10 }]] call BIS_fnc_arsenal;\n```\n\n*Example 4:*\n\nRemoves Arsenal from player object:\n\n```sqf\n[\"AmmoboxExit\", player] call BIS_fnc_arsenal;\n```","BIS Functions\\BIS_fnc_assignPlayerRole.md":"Ensures the player can only get in the specific vehicle role.\n\n\n---\n*Syntaxes:*\n\n[vehicle, role, path] call `BIS_fnc_assignPlayerRole`\n\n---\n*Example 1:*\n\n```sqf\n[myVehicle, \"turret\", [0, 1]] call BIS_fnc_assignPlayerRole;\n```","BIS Functions\\BIS_fnc_attachToRelative.md":"Attaches object 1 to object 2, while preserving object 1 initial position and orientation against object 2.\n\n\n---\n*Syntaxes:*\n\n[object1, object2, visual] call `BIS_fnc_attachToRelative`\n\n---\n*Example 1:*\n\n```sqf\n[tank, car] call BIS_fnc_attachToRelative;\n```","BIS Functions\\BIS_fnc_baseVehicle.md":"Returns base vehicle (i.e., vehicle which is not just derivative of other with different textures / animations).\n\n\n---\n*Syntaxes:*\n\nclass call `BIS_fnc_baseVehicle`\n\n---\n*Example 1:*\n\n```sqf\n[\"O_MBT_04_cannon_F\"] call BIS_fnc_baseVehicle;\n```","BIS Functions\\BIS_fnc_baseWeapon.md":"Determines base weapon class, with no attachments.\n\n\n---\n*Syntaxes:*\n\n[weaponName] call `BIS_fnc_baseWeapon`\n\n---\n*Example 1:*\n\n```sqf\n[\"arifle_Mk20_MRCO_pointer_F\"] call BIS_fnc_baseWeapon; // Returns \"arifle_Mk20_F\"\n```","BIS Functions\\BIS_fnc_basicBackpack.md":"Determines basic backpack with no equipment present (ie empty).\n\n\n---\n*Syntaxes:*\n\nbackPackClassName call `BIS_fnc_basicBackpack`\n\n---\n*Example 1:*\n\n```sqf\nbaseBackpack = \"b_assaultpack_rgr_medic\" call BIS_fnc_basicBackpack; // returns \"b_assaultpack_rgr\", the base class\n```","BIS Functions\\BIS_fnc_basicTask.md":"\n\n\n---\n*Syntaxes:*\n\n\n\n---\n","BIS Functions\\BIS_fnc_berp.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_berp`\n\n---\n","BIS Functions\\BIS_fnc_berpVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_berpVector`\n\n---\n","BIS Functions\\BIS_fnc_bezierInterpolate.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bezierInterpolate`\n\n---\n","BIS Functions\\BIS_fnc_bezierInterpolateVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bezierInterpolateVector`\n\n---\n","BIS Functions\\BIS_fnc_bezierLength.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bezierLength`\n\n---\n","BIS Functions\\BIS_fnc_bitflagsCheck.md":"Checks if one or more flags are set in the given flagset, represented with decimal or hexadecimal number<br>\n(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br>\nIn other words, it simply performs a `bitwise AND (&)` operation on the two numbers: **flags & flagset > 0**<br>\nTo check which flags are present in given flagset use `BIS_fnc_bitflagsToArray`<br><br>\n\n\n---\n*Syntaxes:*\n\n[flagset, flag] call `BIS_fnc_bitflagsCheck`\n\n---\n*Example 1:*\n\n```sqf\n[2 + 4 + 8, 8] call BIS_fnc_bitflagsCheck; // true\n[2 + 4 + 8, 2 + 32] call BIS_fnc_bitflagsCheck; // true\n[2 + 4 + 8, 1] call BIS_fnc_bitflagsCheck; // false\n[2 + 4 + 8, 1 + 32] call BIS_fnc_bitflagsCheck; // false\n```","BIS Functions\\BIS_fnc_bitflagsFlip.md":"Flips one or more flags (set gets unset and vice versa) in the given flagset, represented with decimal or hexadecimal number<br>\n(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br>\nTo check which flags are present in given flagset use `BIS_fnc_bitflagsToArray`<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\n[flagset, flag] call `BIS_fnc_bitflagsFlip`\n\n---\n*Example 1:*\n\n```sqf\n[1 + 16, 8] call BIS_fnc_bitflagsFlip; // 25 (which is 1 + 8 + 16)\n[25, 8] call BIS_fnc_bitflagsFlip; // 17 (which is 1 + 16)\n[2 + 4 + 8, 2 + 8] call BIS_fnc_bitflagsFlip; // 4\n[4, 2 + 8] call BIS_fnc_bitflagsFlip; // 14 (which is 2 + 4 + 8)\n```","BIS Functions\\BIS_fnc_bitflagsSet.md":"Sets one or more flags in the given flagset, represented with decimal or hexadecimal number<br>\n(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br>\nTo check which flags are present in given flagset use `BIS_fnc_bitflagsToArray`<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\n[flagset, flag] call `BIS_fnc_bitflagsSet`\n\n---\n*Example 1:*\n\n```sqf\n[0, 16] call BIS_fnc_bitflagsSet; // 16\n[16, 2] call BIS_fnc_bitflagsSet; // 18 (which is 2 + 16)\n[18, 2 + 8 + 16] call BIS_fnc_bitflagsSet; // 26 (which is 2 + 8 + 16)\n```","BIS Functions\\BIS_fnc_bitflagsToArray.md":"Returns array with all bit flags which are set in the given flagset<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\nflagset call `BIS_fnc_bitflagsToArray`\n\n---\n*Example 1:*\n\n```sqf\n15 call BIS_fnc_bitflagsToArray; // [1,2,4,8]\n2342 call BIS_fnc_bitflagsToArray; // [2,4,32,256,2048]\n[2 + 4 + 8] call BIS_fnc_bitflagsToArray; // [2,4,8]\n[2 + 2 + 2 + 4 + 8 + 8 + 8] call BIS_fnc_bitflagsToArray; // [2,32]\n```","BIS Functions\\BIS_fnc_bitflagsUnset.md":"Unsets one or more flags in the given flagset, represented with decimal or hexadecimal number<br>\n(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br>\nTo check which flags are present in given flagset use `BIS_fnc_bitflagsToArray`<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\n[flagset, flag] call `BIS_fnc_bitflagsUnset`\n\n---\n*Example 1:*\n\n```sqf\n[2 + 4 + 8, 8] call BIS_fnc_bitflagsUnset; // 6 (which is 2 + 4)\n[2 + 4 + 8, 2 + 8] call BIS_fnc_bitflagsUnset; // 4\n[2 + 4 + 8, 1 + 8] call BIS_fnc_bitflagsUnset; // 6 (which is 2 + 4)\n[2 + 4 + 8, 1 + 8 + 8 + 2 + 2] call BIS_fnc_bitflagsUnset; // 10 (which is 2 + 8, since 1 + 8 + 8 + 2 + 2 is in fact 1 + 4 + 16)\n```","BIS Functions\\BIS_fnc_bitwiseAND.md":"Performs bitwise AND operation on two decimal or hexadecimal unsigned 24 bit integers <br>(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\n[num1, num2] call `BIS_fnc_bitwiseAND`\n\n---\n*Example 1:*\n\n```sqf\n[2 + 4 + 8 + 32, 1] call BIS_fnc_bitwiseAND; // 0\n[2 + 4 + 8 + 32, 2] call BIS_fnc_bitwiseAND; // 2\n[1 + 2 + 16 + 32, 4 + 8] call BIS_fnc_bitwiseAND; // 0\n[1 + 2 + 16 + 32, 4 + 32] call BIS_fnc_bitwiseAND; // 32\n[1 + 2 + 16 + 32, 16 + 32] call BIS_fnc_bitwiseAND; // 48\n```","BIS Functions\\BIS_fnc_bitwiseNOT.md":"Performs bitwise NOT operation on decimal or hexadecimal unsigned 24 bit integer <br>(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\nnum call `BIS_fnc_bitwiseNOT`\n\n---\n*Example 1:*\n\n```sqf\n873687 call BIS_fnc_bitwiseNOT; // 15903528\n[2 + 4 + 8 + 32 + 256 + 1024] call BIS_fnc_bitwiseNOT; // 16775889\n```","BIS Functions\\BIS_fnc_bitwiseOR.md":"Performs bitwise OR operation on two decimal or hexadecimal unsigned 24 bit integers <br>(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\n[num1, num2] call `BIS_fnc_bitwiseOR`\n\n---\n*Example 1:*\n\n```sqf\n[2 + 4 + 8 + 32, 1] call BIS_fnc_bitwiseOR; // 47\n[1 + 2 + 16 + 32, 4 + 8] call BIS_fnc_bitwiseOR; // 63\n[1 + 2 + 16 + 32, 4 + 32] call BIS_fnc_bitwiseOR; // 55\n[1 + 2 + 16 + 32, 16 + 32] call BIS_fnc_bitwiseOR; // 51\n```","BIS Functions\\BIS_fnc_bitwiseXOR.md":"Performs bitwise XOR operation on two decimal or hexadecimal unsigned 24 bit integers <br>(Hexadecimal number representation is simply auto-converted into decimal by the engine)<br><br>\n`Limitations`:<br>\nDue to various limitations of the Real Virtuality engine this function is \nintended to work with unsigned 24 bit integers only. This means that the \nsupported range is 2^0...2^24 (1...16777216)\n\n\n---\n*Syntaxes:*\n\n[num1, num2] call `BIS_fnc_bitwiseXOR`\n\n---\n*Example 1:*\n\n```sqf\n[1 + 4 + 16, 1] call BIS_fnc_bitwiseXOR; // 20\n[1 + 2 + 32, 4 + 8] call BIS_fnc_bitwiseXOR; // 47\n[16 + 32, 4 + 16] call BIS_fnc_bitwiseXOR; // 36\n[1 + 16 + 32, 2 + 32] call BIS_fnc_bitwiseXOR; // 19\n```","BIS Functions\\BIS_fnc_blackIn.md":"Unregister a black screen. When none other black screen is registered, fade it out.\n\n\n---\n*Syntaxes:*\n\n[id, smoothing, fadeSpeed] call `BIS_fnc_blackIn`\n\n---\n*Example 1:*\n\n```sqf\n[\"TAG_aVeryUniqueID\", false, 5] call BIS_fnc_blackIn;\n```","BIS Functions\\BIS_fnc_blackOut.md":"Register a black screen. Start the black screen when the first request is registered.\n\n\n---\n*Syntaxes:*\n\n[id, smoothing, fadeSpeed] call `BIS_fnc_blackOut`\n\n---\n*Example 1:*\n\n```sqf\n[\"TAG_aVeryUniqueID\", false, 5] call BIS_fnc_blackOut;\n```","BIS Functions\\BIS_fnc_bleedTickets.md":"Function that handles bleeding ticket system. Tickets are set beforehand using `BIS_fnc_respawnTickets`.\n\n\n---\n*Syntaxes:*\n\n[sides, dominanceRatio, bleedingAmount, bleedingDelay] call `BIS_fnc_bleedTickets`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_bleedTickets;\n```\n\n*Example 2:*\n\n```sqf\n[[west, east], 1, 1, 10] call BIS_fnc_bleedTickets;\n```","BIS Functions\\BIS_fnc_blinkMarker.md":"Makes given marker blink.\n\n\n---\n*Syntaxes:*\n\n[marker, blinkDuration, blinkAmount] spawn `BIS_fnc_blinkMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\", 3, 10] spawn BIS_fnc_blinkMarker; // blinks `10` times using `3` seconds intervals\n```\n\n*Example 2:*\n\n```sqf\n[\"BIS_marker\"] spawn BIS_fnc_blinkMarker; // keeps blinking\n```","BIS Functions\\BIS_fnc_bloodEffect.md":"Adds the bleeding effect post-processing effect to the players screen.\n\n\n---\n*Syntaxes:*\n\n[10] call `BIS_fnc_bloodEffect`\n\n---\n*Example 1:*\n\n```sqf\n[10] call BIS_fnc_bloodEffect; // Adds the blood effect for 10 (milli)seconds.\n```","BIS Functions\\BIS_fnc_boatRack01ActionAdd.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is sub function for 'boat recovery' functionality.\n\n\tExecution:\n\t- Call from trigger that is added to object (boat rack).\n\n\tExample:\n\t\t\"[thisTrigger,thisList] call BIS_fnc_boatRack01ActionAdd;\"\n\n\tRequired:\n\t\tObject (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport).\n\t\tObject (boat rack) must have triggers set up with continuous actions.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: trigger object\n\t\tand\n\t\tother parameters from trigger's & players vehicle's names-pace's.\n\n\tReturns: nothing\n\tResult: Continuous action added for players vehicle.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_boatRack01ActionAdd`\n\n---\n","BIS Functions\\BIS_fnc_BoatRack01ActionCondition.md":"\n\n\n---\n*Syntaxes:*\n\n`BIS_fnc_BoatRack01ActionCondition`\n\n---\n","BIS Functions\\BIS_fnc_boatRack01ActionRemove.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is sub function for 'boat recovery' functionality.\n\n\tExecution:\n\t- Call from trigger that is added to object (boat rack).\n\n\tExample:\n\t\t\"[thisTrigger] call BIS_fnc_boatRack01ActionRemove;\"\n\n\tRequired:\n\t\tObject (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport).\n\t\tObject (boat rack) must have triggers set up with continuous actions.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: trigger object\n\t\tand\n\t\tother parameters from trigger's & players vehicle's names-pace's.\n\n\tReturns: nothing\n\tResult: Continuous action removed from player.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_boatRack01ActionRemove`\n\n---\n","BIS Functions\\BIS_fnc_boatRack01AdjustZOffset.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is sub function for 'boat recovery' functionality.\n\n\tExecution:\n\t- Call from Init EH script that is added to object (boat rack) or from action code.\n\n\tExample:\n\t\t[_boatRack, _boat] call BIS_fnc_boatRack01AdjustZOffset;\n\n\tRequired:\n\t\tObject (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport).\n\t\tObject (boat rack) must have triggers set up with continuous actions.\n\t\tObject (boat rack) must have set of Z offset's predefined in cfgVehicles for know/supported boat types.\n\n\t\tParameters used from cfgVehicles configuration:\n\t\tcargoBayAnimationSelection \t\t= \"CargoBay_Move_Z\";\n\t\tsupportedVehicleOffsetsZ[]\t\t= {{\"C_Boat_Civil_01_F\",0.55}};\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: boat rack object\n\t\t1: boat in cargo\n\t\tand\n\t\tother parameters from boat rack's cfgVehicles configuration.\n\n\tReturns: nothing\n\tResult: Adjusts the hight (Z offset) of boat rack suspension to prevent different boats clipping with visual mesh.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_boatRack01AdjustZOffset`\n\n---\n","BIS Functions\\BIS_fnc_boatRack01CanExetuteAction.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is sub function for 'boat recovery' functionality.\n\n\tExecution:\n\t- Call from script that invokes the \"Hold Action\" for boat recovery.\n\n\tExample:\n\t\t[_target,_boatRack] call BIS_fnc_boatRack01CanExetuteAction;\n\n\tRequired:\n\t\tObject (boat)\n\t\tObject (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport).\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: Object (boat)\n\t\t1: Object (boat rack)\n\n\tReturns: true if all conditions are met to display the \"Hold Action\"\n\tResult: Check to show \"Hold Action\" to player.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_boatRack01CanExetuteAction`\n\n---\n","BIS Functions\\BIS_fnc_boatRack01CanProgressAction.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is sub function for 'boat recovery' functionality.\n\n\tExecution:\n\t- Call from script that invokes the \"Hold Action\" for boat recovery.\n\n\tExample:\n\t\t[_target,_boatRack] call BIS_fnc_boatRack01CanProgressAction;\n\n\tRequired:\n\t\tObject (boat)\n\t\tObject (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport).\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: Object (boat)\n\t\t1: Object (boat rack)\n\n\tReturns: true if all conditions are met during the process of \"Hold Action\", can continue with action\n\tResult: Check to allow continue with \"Hold Action\".\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_boatRack01CanProgressAction`\n\n---\n","BIS Functions\\BIS_fnc_boatRack01Init.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is main function for 'boat recovery' functionality.\n\n\tExecution:\n\t- Call from assets init EH.\n\n\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_BoatRack01Init;\";\n\t\t};\n\n\tRequired:\n\t\tObject (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport).\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: boat rack object\n\t\tand\n\t\tother parameters from configuration\n\n\tReturns: nothing\n\tResult: Two triggers are added near object to allow user to interact with feature.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_boatRack01Init`\n\n---\n","BIS Functions\\BIS_fnc_boatRack01InitAdjustZOffsets.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is sub function for 'boat recovery' functionality.\n\n\tExecution:\n\t- Call from Init EH script that is added to object (boat rack).\n\n\tExample:\n\t\t[_boatRack] spawn BIS_fnc_boatRack01InitAdjustZOffsets;\n\n\tRequired:\n\t\tObject (boat rack) must have vehicle in vehicle behavior configured (https://community.bistudio.com/wiki/Arma_3_Vehicle_in_Vehicle_Transport).\n\t\tObject (boat rack) must have triggers set up with continuous actions.\n\t\tObject (boat rack) must have set of Z offset's predefined in cfgVehicles for know/supported boat types.\n\n\t\tParameters used from cfgVehicles configuration:\n\t\tcargoBayAnimationSelection \t\t= \"CargoBay_Move_Z\";\n\t\tsupportedVehicleOffsetsZ[]\t\t= {{\"C_Boat_Civil_01_F\",0.55}};\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: boat rack object\n\t\tand\n\t\tother parameters from boat rack's cfgVehicles configuration.\n\n\tReturns: nothing\n\tResult: On mission startup adjusts the hight (Z offset) of boat rack suspension to prevent different boats clipping with visual mesh.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_boatRack01InitAdjustZOffsets`\n\n---\n","BIS Functions\\BIS_fnc_bounceIn.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bounceIn`\n\n---\n","BIS Functions\\BIS_fnc_bounceInOut.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bounceInOut`\n\n---\n","BIS Functions\\BIS_fnc_bounceInOutVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bounceInOutVector`\n\n---\n","BIS Functions\\BIS_fnc_bounceInVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bounceInVector`\n\n---\n","BIS Functions\\BIS_fnc_bounceOut.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bounceOut`\n\n---\n","BIS Functions\\BIS_fnc_bounceOutVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_bounceOutVector`\n\n---\n","BIS Functions\\BIS_fnc_boundingBoxCorner.md":"<pre>\n/*\n\n\tDescription:\n\t\tReturns position of all four bounding box corners\n\t\tOR\n\t\tReturns position of the nearest corner to the given position\n\n\tParameter(s):\n\t\t_this: OBJECT - object with bounding box\n\t\tOR\n\t\t_this: ARRAY in format:\n\t\t\t0: OBJECT - object with bounding box\n\t\t\t1: ARRAY or OBJECT - position for which the nearest corner is returned\n\tReturns:\n\t\tARRAY in format [pos1, pos2, pos3, pos4] - 4 corners of the bounding box\n\t\tOR\n\t\tARRAY in format [x,y,z] - position of the nearest corner\n\t\t\n\tExample 1:\n\t\t_corners = car call BIS_fnc_boundingBoxCorner;\n\t\t\n\tExample 2:\n\t\t_nearestCorner = [car, player] call BIS_fnc_boundingBoxCorner;\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_boundingBoxCorner` -->\n\n---\n","BIS Functions\\BIS_fnc_boundingBoxDimensions.md":"Returns the sizes of the three dimensions of an object's bounding box.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_boundingBoxDimensions`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_boundingBoxDimensions;//Returns [1.6,2.2,2] for soldier\n```","BIS Functions\\BIS_fnc_boundingBoxMarker.md":"Creates marker on object with size of objects' bounding box.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_boundingBoxMarker`\n\n---\n*Example 1:*\n\n```sqf\nBIS_Vehicle call BIS_fnc_boundingBoxMarker;\n```","BIS Functions\\BIS_fnc_boundingCircle.md":"Returns size of bounding circle (calculated from X and Y coordinates). This is actually the 2D horizontal diagonal length of the `boundingBox`.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_boundingCircle`\n\n---\n*Example 1:*\n\n```sqf\nvehicle player call BIS_fnc_boundingCircle;\n```","BIS Functions\\BIS_fnc_briefingAnimate.md":"Animate briefing markers.\n\n\n---\n*Syntaxes:*\n\n[markerName, stepId, delay] call `BIS_fnc_briefingAnimate`\n\n---\n*Example 1:*\n\n```sqf\n// given you have 6 markers:\n// - \"myMarker\"\n// - \"myMarker_0\"\n// - \"myMarker_1\"\n// - \"myMarker_2\"\n// - \"myMarker_3\"\n// - \"myMarker_4\"\nfor \"_i\" from 0 to 4 do {\n\tprivate _commit = 1;\n\t[\"myMarker\", 5, _commit] call BIS_fnc_briefingAnimate;\n\tsleep _commit;\n};\n```","BIS Functions\\BIS_fnc_briefingInit.md":"Initialize animated briefing markers.\n\n\n---\n*Syntaxes:*\n\nmarker call `BIS_fnc_briefingInit`\n\n---\n*Example 1:*\n\n\"marker_1\" `call` `BIS_fnc_briefingInit`;","BIS Functions\\BIS_fnc_buildingPositions.md":"Get all available positions within a building or structure.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_buildingPositions`\n\n---\n*Example 1:*\n\n```sqf\n[_building] call BIS_fnc_buildingPositions;\n```\n\n*Example 2:*\n\n```sqf\n[_building, _maxNumberOfPositions] call BIS_fnc_buildingPositions;\n```","BIS Functions\\BIS_fnc_calculateDateTime.md":"Returns the end datetime if an offset is passed, or the offset between start and end dates.\n\n\n---\n*Syntaxes:*\n\n[startDate, endDateOrOffset, timeUnit] call `BIS_fnc_calculateDateTime`\n\n---\n*Example 1:*\n\n```sqf\n[date, 3600] call BIS_fnc_calculateDateTime;\t\t\t\t\t\t\t\t// returns date in 3600 seconds (60min, 1h)\n[date, 60, \"m\"] call BIS_fnc_calculateDateTime;\t\t\t\t\t\t\t\t// returns date in 60 minutes (1h)\n[[2035,8,28,11,55], [2035,8,29,11,55], \"h\"] call BIS_fnc_calculateDateTime;\t// returns 24\n```","BIS Functions\\BIS_fnc_call.md":"Execute given code with or without parameter.\n\n\n---\n*Syntaxes:*\n\n[params, code] call `BIS_fnc_call`\n\ncode call `BIS_fnc_call`\n\n---\n*Example 1:*\n\nShow a message for the current player.\n\n```sqf\n[[\"Hello\"], {hint (_this select 0);}] call BIS_fnc_call;\n```\n\n*Example 2:*\n\nAlternative syntax\n\n```sqf\n{ hint \"Hello\"; } call BIS_fnc_call;\n```","BIS Functions\\BIS_fnc_callScriptedEventHandler.md":"Calls all the codes assigned to scripted event handler with given name. Since *(Reference GVI \"arma3|1.68\")* the code receives current EH id in the special variable: **_thisScriptedEventHandler**\n\n\n---\n*Syntaxes:*\n\n[namespace, name, arguments, returnResults] call `BIS_fnc_callScriptedEventHandler`\n\n---\n*Example 1:*\n\n```sqf\n[missionNamespace, \"event\", [player, 123]] call BIS_fnc_callScriptedEventHandler;\n```","BIS Functions\\BIS_fnc_camera.md":"Splendid™ Camera, `\"Ultimate Screenshot Simulator\"`\n\n\n---\n*Syntaxes:*\n\n[mode, parameter] call `BIS_fnc_camera`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_camera;\n```\n\n*Example 2:*\n\n```sqf\n[] spawn BIS_fnc_camera;\n```\n\n*Example 3:*\n\n```sqf\n[\"Init\"] call BIS_fnc_camera;\n```","BIS Functions\\BIS_fnc_cameraOld.md":"Classic camera script, replaced by the Splendid™ `BIS_fnc_camera`.\n\n\n---\n*Syntaxes:*\n\n[target] call `BIS_fnc_cameraOld`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_cameraOld; // starts the camera on the player\n```","BIS Functions\\BIS_fnc_camera_deleted.md":"Deletes given camera.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_deleted`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_deleted;\n```","BIS Functions\\BIS_fnc_camera_edenAttributesChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a camera\n\n\tParameter(s):\n\t_this select 0: Object\t- The camera\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenAttributesChanged`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenConnectionChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\t3DEN connections of a camera are changed\n\n\tParameter(s):\n\t_this select 0: Object\t- The camera\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenConnectionChanged`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenDeleted.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tCamera is deleted\n\n\tParameter(s):\n\t_this select 0: Object - The destroyed camera\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenDeleted`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenInit.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tCamera is initialized in 3den\n\n\tParameter(s):\n\t_this select 0: Object\t- The camera\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenInit`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenIsSelected.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tWhether this camera is selected in 3den\n\n\tParameter(s):\n\t_this select 0: Object\t- The camera\n\n\tReturns:\n\tBool - True if selected, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenIsSelected`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenRegisteredToWorld.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenRegisteredToWorld`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenReset.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tResets camera in 3DEN\n\n\tParameter(s):\n\t_this select 0: Object\t- The camera\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenReset`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenSelectionChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tThe selection state of given camera changes\n\n\tParameter(s):\n\t_this select 0: Object\t- The camera\n\t_this select 1: Bool\t- True if selected, false if not\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenSelectionChanged`\n\n---\n","BIS Functions\\BIS_fnc_camera_edenUnregisteredFromWorld.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a camera\n\n\tParameter(s):\n\t_this select 0: Object\t- The camera\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_camera_edenUnregisteredFromWorld`\n\n---\n","BIS Functions\\BIS_fnc_camera_getCam.md":"Gets camera instance of camerea object\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_getCam`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_getCam;\n```","BIS Functions\\BIS_fnc_camera_getCinemaBordersEnabled.md":"Check if camera uses cinema borders.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_getCinemaBordersEnabled`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_getCinemaBordersEnabled;\n```","BIS Functions\\BIS_fnc_camera_getFocus.md":"Returns camera focus.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_getFocus`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_getFocus;\n```","BIS Functions\\BIS_fnc_camera_getFOV.md":"Gets FOV of camera.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_getFOV`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_getFOV;\n```","BIS Functions\\BIS_fnc_camera_getHUDEnabled.md":"Returns wether camera HUD is enabled.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_getHUDEnabled`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_getHUDEnabled;\n```","BIS Functions\\BIS_fnc_camera_getVisionMode.md":"Returns camera vision mode.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_getVisionMode`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_getVisionMode;\n```","BIS Functions\\BIS_fnc_camera_init.md":"Initialises a camera.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_init`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_init;\n```","BIS Functions\\BIS_fnc_camera_setCam.md":"Sets camera instance of camera object.\n\n\n---\n*Syntaxes:*\n\n[camera, cameraInstance] call `BIS_fnc_camera_setCam`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera,BIS_camera_instance] call BIS_fnc_camera_setCam;\n```","BIS Functions\\BIS_fnc_camera_setCinemaBordersEnabled.md":"Sets cinema borders.\n\n\n---\n*Syntaxes:*\n\n[camera, enabled] call `BIS_fnc_camera_setCinemaBordersEnabled`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera,true] call BIS_fnc_camera_setCinemaBordersEnabled;\n```","BIS Functions\\BIS_fnc_camera_setFocus.md":"Sets camera focus.\n\n\n---\n*Syntaxes:*\n\n[camera, focusValues] call `BIS_fnc_camera_setFocus`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera, [0.5,0.5]] call BIS_fnc_camera_setFocus;\n```","BIS Functions\\BIS_fnc_camera_setFOV.md":"Sets the FOV of given camera.\n\n\n---\n*Syntaxes:*\n\n[camera, FOV] call `BIS_fnc_camera_setFOV`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera,0.5] call BIS_fnc_camera_setFOV;\n```","BIS Functions\\BIS_fnc_camera_setHUDEnabled.md":"Enables or disables camera HUD.\n\n\n---\n*Syntaxes:*\n\n[camera, state] call `BIS_fnc_camera_setHUDEnabled`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera,true] call BIS_fnc_camera_setHUDEnabled;\n```","BIS Functions\\BIS_fnc_camera_setVisionMode.md":"Sets camera vision mode.\n\n\n---\n*Syntaxes:*\n\n[camera, mode] call `BIS_fnc_camera_setVisionMode`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera,1] call BIS_fnc_camera_setVisionMode;\n```","BIS Functions\\BIS_fnc_camera_tick.md":"Ticks a camera. Updates position and view mode.\n\n\n---\n*Syntaxes:*\n\n[camera] call `BIS_fnc_camera_tick`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_camera] call BIS_fnc_camera_tick;\n```","BIS Functions\\BIS_fnc_camFollow.md":"Refresh a camera Field of View according to its distance with the target.\n\n\n---\n*Syntaxes:*\n\n[camera, target, refreshTime] call `BIS_fnc_camFollow`\n\n---\n*Example 1:*\n\n```sqf\nprivate _camera = \"camera\" camCreate ((getPos player) vectorAdd [0,0,3]);\n[_camera, player, -2] call BIS_fnc_camFollow;\n```","BIS Functions\\BIS_fnc_cancelMarker.md":"Cancels a marker by a red 'X' marker. Also sets its variable to \"Canceled\" to `true`.\n\n\n---\n*Syntaxes:*\n\n[marker, duration, fadeTime, sizeMultiplier, angleOffset] spawn `BIS_fnc_cancelMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",2,1.5,75] spawn BIS_fnc_cancelMarker;\n```","BIS Functions\\BIS_fnc_carAlarm.md":"Play car alarm effect.\n\n\n---\n*Syntaxes:*\n\n[mode, car] call `BIS_fnc_carAlarm`\n\n---\n*Example 1:*\n\n```sqf\n[\"init\", myCar] call BIS_fnc_carAlarm;\n```","BIS Functions\\BIS_fnc_cargoTurretIndex.md":"Return cargo index of a person turret and the other way around.\n\n\n---\n*Syntaxes:*\n\n[vehicle, personOrTurretPath] call `BIS_fnc_cargoTurretIndex`\n\n---\n*Example 1:*\n\n```sqf\nprivate _vehicle = vehicle player;\nprivate _turretCargoIndex = [_vehicle, [0, 1]] call BIS_fnc_cargoTurretIndex;\nprivate _playerTurretPath = [_vehicle, player] call BIS_fnc_cargoTurretIndex;\n```","BIS Functions\\BIS_fnc_carrier01AnimateDeflectors.md":"Plays a set of animations to animate the carriers' catapult jet blast deflectors. See `Arma 3: Aircraft Systems` for information about needed config changes.\n\n\n---\n*Syntaxes:*\n\n[carrierPart, animations, animationState] spawn `BIS_fnc_carrier01AnimateDeflectors`\n\n---\n*Example 1:*\n\n```sqf\n[_carrierPart, [\"Deflector_1\", \"Deflector_1_hydraulic_1\", \"Deflector_1_hydraulic_2\", \"Deflector_1_hydraulic_3\"], 10] spawn BIS_fnc_carrier01AnimateDeflectors;\n```","BIS Functions\\BIS_fnc_carrier01CatapultActionAdd.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01CatapultActionAdd` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01CatapultActionRemove.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01CatapultActionRemove` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01CatapultID.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01CatapultID` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01CatapultLockTo.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01CatapultLockTo` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01CrewInAnim.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01CrewInAnim` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01CrewPlayAnim.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01CrewPlayAnim` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01EdenDelete.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to delete dynamic aircrfat carrier in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space.\n\tFunction will delete carrier parts in EDEN editor after main object is deleted.\n\n\tExucution:\n\t- Call from EH on the main carrier base model (blank model with momory points and reference config).\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_Carrier01Init\";\t\t\t\t\t\t\t\t//main init fnc, will assemble carrier in game\n\t\t\tAttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\";\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tDragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\";\t\t\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tRegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\";\t\t\t//initial EDEN init fnc (main init is still called)\n\t\t\tUnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\";\t//function  to delete all carrier objects in EDEN editor\n\t\t};\n\n\tRequirments:\n\t- An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: carrier Base/object\n\t\tand\n\t\t1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []];\n\n\tReturns: nothing\n\tResult: Aircraft Carrier's parts are deleted in EDEN editor.\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01EdenDelete` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01EdenInit.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to assemble dynamic aircrfat carrier in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space.\n\tFunction will update initial init setup on EDEN editor invoked.\n\n\tExucution:\n\t- Call from EH on the main carrier base model (blank model with momory points and reference config).\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_Carrier01Init\";\t\t\t\t\t\t\t\t//main init fnc, will assemble carrier in game\n\t\t\tAttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\";\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tDragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\";\t\t\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tRegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\";\t\t\t//initial EDEN init fnc (main init is still called)\n\t\t\tUnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\";\t//function  to delete all carrier objects in EDEN editor\n\t\t};\n\n\tRequirments:\n\t- An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: carrier Base/object\n\t\tand\n\t\t1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []];\n\n\tReturns: nothing\n\tResult: Aircraft Carrier's possition is updated in EDEN editor.\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01EdenInit` -->\n\n---\n","BIS Functions\\BIS_fnc_carrier01Init.md":"This is a main function designed to assemble a dynamic aircraft carrier.\nA carrier consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space.\n\n\n---\n*Syntaxes:*\n\ncarrier call `BIS_fnc_carrier01Init`\n\n---\n*Example 1:*\n\n```sqf\nmyCarrier call BIS_fnc_carrier01Init;\n```","BIS Functions\\BIS_fnc_carrier01PosUpdate.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to update dynamic aircraft carriers position in EDEN editor. Carrier consists of multiple sub-objects that are linked together bnased on precise memory point positions in 3D space.\n\tFunction will update initial object positions when player drggs the object in EDEN editor.\n\n\tExucution:\n\t- Call from EH on the main carrier base model (blank model with momory points and reference config).\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_Carrier01Init\";\t\t\t\t\t\t\t\t//main init fnc, will assemble carrier in game\n\t\t\tAttributesChanged3DEN = \"_this call BIS_fnc_Carrier01EdenInit\";\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tDragged3DEN = \"_this call BIS_fnc_Carrier01PosUpdate\";\t\t\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tRegisteredToWorld3DEN = \"_this call BIS_fnc_Carrier01EdenInit\";\t\t\t//initial EDEN init fnc (main init is still called)\n\t\t\tUnregisteredFromWorld3DEN = \"_this call BIS_fnc_Carrier01EdenDelete\";\t//function  to delete all carrier objects in EDEN editor\n\t\t};\n\n\tRequirments:\n\t- An array of carrier parts/objects as a variable attached to main carrier base. This array is created by main BIS_fnc_Carrier01Init.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: carrier Base/object\n\t\tand\n\t\t1: array of objects in variable in base objects namespace [\"bis_carrierParts\", []];\n\n\tReturns: nothing\n\tResult: Aircraft Carrier's possition is updated in EDEN editor.\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_carrier01PosUpdate` -->\n\n---\n","BIS Functions\\BIS_fnc_changeColorMarker.md":"Makes the marker go from its original color to a specified color over time\n\n\n---\n*Syntaxes:*\n\n[marker, color, duration] spawn `BIS_fnc_changeColorMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",\"ColorRed\"] spawn BIS_fnc_changeColorMarker;\n```","BIS Functions\\BIS_fnc_changeSupportRadioChannel.md":"<pre>/*\n\n\tDescription:\n\tChanges the radio channel for Support module-related protocol.\n\n\tParameter(s):\n\t_this select 0: SIDE - Affected side\n\t_this select 1: ANY - Channel setting\n\n\tReturns:\n\tnothing\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_changeSupportRadioChannel` -->\n\n---\n","BIS Functions\\BIS_fnc_cinemaBorder.md":"Creates cinematic borders. Player cannot move during cutscene.\n\n\n---\n*Syntaxes:*\n\n[mode, duration, sound, view] call `BIS_fnc_cinemaBorder`\n\n---\n*Example 1:*\n\n```sqf\n[1, 2, true, true ] call BIS_fnc_cinemaBorder;\n```","BIS Functions\\BIS_fnc_clamp.md":"Clamps provided value within min..max range.\n\n\n---\n*Syntaxes:*\n\n[value, min, max] call `BIS_fnc_clamp`\n\n---\n*Example 1:*\n\n```sqf\n[5, 0, 10] call BIS_fnc_clamp; // returns 5\n [0, 0, 10] call BIS_fnc_clamp; // returns 0\n[10, 0, 10] call BIS_fnc_clamp; // returns 10\n[-5, 0, 10] call BIS_fnc_clamp; // returns 0\n[15, 0, 10] call BIS_fnc_clamp; // returns 10\n\n [5, `10`, 3] call BIS_fnc_clamp; // returns 10\n```","BIS Functions\\BIS_fnc_clampVector.md":"Clamps vector values between provided min/max boundaries.\n\n\n---\n*Syntaxes:*\n\n[vector, min, max] call `BIS_fnc_clampVector`\n\n---\n*Example 1:*\n\n```sqf\nprivate _newVelocity = [velocity vehicle player, -100, 100] call BIS_fnc_clampVector;\nvehicle player setVelocity _newVelocity;\n```","BIS Functions\\BIS_fnc_classMagazine.md":"Returns class of magazine given by string.\n\n\n---\n*Syntaxes:*\n\nmagazineClass call `BIS_fnc_classMagazine`\n\n---\n*Example 1:*\n\n```sqf\nprivate _magazineConfig = currentMagazine player call BIS_fnc_classMagazine;\n```","BIS Functions\\BIS_fnc_classWeapon.md":"Returns class of weapon given by string.\n\n\n---\n*Syntaxes:*\n\nweaponClass call `BIS_fnc_classWeapon`\n\n---\n*Example 1:*\n\n```sqf\nprivate _weaponConfig = currentWeapon player call BIS_fnc_classWeapon;\n```","BIS Functions\\BIS_fnc_clerp.md":"CLerp - Circular Lerp - is like lerp but handles the wraparound from 0 to 360\n This is useful when interpolating eulerAngles and the object crosses the 0/360 boundary\n The standard Lerp function causes the object to rotate in the wrong direction, clerp fixes that\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, alpha] call `BIS_fnc_clerp`\n\n---\n*Example 1:*\n\n```sqf\n[90,170,0.1] call BIS_fnc_clerp; // Returns 98\n```","BIS Functions\\BIS_fnc_codePerformance.md":"Measures how much time it takes to execute given expression.\nResults may vary based on overall performance; use this function to compare alternative scripting approaches rather than to measure specific values.\nUpon function execution, window with results is opened. The user then has a choice to copy the result into clipboard or not.<br>\nThis function is using `diag_codePerformance` command.\n\n\n---\n*Syntaxes:*\n\n[expression, arguments, cycles, display] call `BIS_fnc_codePerformance`\n\n---\n*Example 1:*\n\n```sqf\n// compare three methods of adding elements into array\ntestArray = [];\n[\"testArray = testArray + [1]\"] call BIS_fnc_codePerformance;\ntestArray = [];\n[\"testArray set [count testArray, 1]\"] call BIS_fnc_codePerformance;\ntestArray = [];\n[\"testArray pushBack 1\"] call BIS_fnc_codePerformance;\n```\n\n*Example 2:*\n\n```sqf\n[toString { hint \"Hello there\" }] call BIS_fnc_codePerformance;\n```","BIS Functions\\BIS_fnc_colorConfigToRGBA.md":"Converts config color format to RGBA array of numbers.\n\n\n---\n*Syntaxes:*\n\nconfigColor call `BIS_fnc_colorConfigToRGBA`\n\n---\n*Example 1:*\n\n```sqf\n[\"0.5 + 0.25\",0,0,1] call BIS_fnc_colorConfigToRGBA; // returns [0.75,0,0,1]\n```","BIS Functions\\BIS_fnc_colorMarker.md":"Changes color of a marker with a little effect\n\n\n---\n*Syntaxes:*\n\n[marker, color, duration] spawn `BIS_fnc_colorMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",\"ColorRed\",2] spawn BIS_fnc_colorMarker;\n```","BIS Functions\\BIS_fnc_colorRGBAtoHTML.md":"Converts RGBA color format to #AARRGGBB HTML color format.\n\n\n---\n*Syntaxes:*\n\ncolorArray call `BIS_fnc_colorRGBAtoHTML`\n\n---\n*Example 1:*\n\n```sqf\n[0,0,0,1] call BIS_fnc_colorRGBAtoHTML; // will return #FF000000\n```\n\n*Example 2:*\n\n```sqf\n[2,93,0,1] call BIS_fnc_colorRGBAtoHTML; // will return #FF025D00\n```","BIS Functions\\BIS_fnc_colorRGBAtoTexture.md":"Converts RGB color format to procedural texture, e.g **[0,0,0,1]}} becomes {{hl|\"#(argb,8,8,3)color(0,0,0,1)\"**.<br>\nValues are in range 0..1.\n\n\n---\n*Syntaxes:*\n\ncolor call `BIS_fnc_colorRGBAtoTexture`\n\n---\n*Example 1:*\n\n```sqf\nprivate _texture = [0,0,0,1] call BIS_fnc_colorRGBAtoTexture;\n```","BIS Functions\\BIS_fnc_colorRGBtoHTML.md":"Converts RGB color format to HTML color format.\n\n\n---\n*Syntaxes:*\n\ncolorArray call `BIS_fnc_colorRGBtoHTML`\n\n---\n*Example 1:*\n\n```sqf\nprivate _htmlColor = [0,0,0,1] call BIS_fnc_colorRGBtoHTML; // will return #000000\n```\n\n*Example 2:*\n\n```sqf\nprivate _htmlColor = [2,93,0,1] call BIS_fnc_colorRGBtoHTML; // will return #025D00\n```","BIS Functions\\BIS_fnc_commsMenuCreate.md":"Creates the global communications menu, if it is not already created. All entries are invisible by default. Unhide appropriate sections by using `BIS_fnc_commsMenuToggleVisibility`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_commsMenuCreate`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_commsMenuCreate;\n```","BIS Functions\\BIS_fnc_commsMenuToggleAvailability.md":"<pre>\n/*\n\tFile: fn_commsMenuToggleAvailability.sqf\n\n\tDescription:\n\tEnables or disables certain sections of the global communications menu.\n\n\tParameter(s):\n\t_this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String)\n\t\t\"som\" - SecOps section\n\t\t\"wf\" - Warfare section\n\t_this select 1: mode (Scalar)\n\t\t0 - disable\n\t\t1 - enable\n\t\n\tReturns:\n\tSuccess flag (Boolean)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_commsMenuToggleAvailability` -->\n\n---\n","BIS Functions\\BIS_fnc_commsMenuToggleVisibility.md":"<pre>\n/*\n\tFile: fn_commsMenuToggleVisibility.sqf\n\n\tDescription:\n\tShows or hides certain sections of the global communications menu.\n\n\tParameter(s):\n\t_this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String)\n\t\t\"som\" - SecOps section\n\t\t\"wf\" - Warfare section\n\t_this select 1: mode (Scalar)\n\t\t0 - hide\n\t\t1 - show\n\t\n\tReturns:\n\tSuccess flag (Boolean)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_commsMenuToggleVisibility` -->\n\n---\n","BIS Functions\\BIS_fnc_compareDateTimes.md":"Returns the newer date or returns true if they are identical.\n\n\n---\n*Syntaxes:*\n\n[date1, date2] call `BIS_fnc_compareDateTimes`\n\n---\n*Example 1:*\n\n```sqf\n`2035,5,28,13,37], [2032,5,28,13,37` call BIS_fnc_compareDateTimes;\n```","BIS Functions\\BIS_fnc_compatibleItems.md":"Return all compatible weapon attachments.\n\n\n---\n*Syntaxes:*\n\nweapon call `BIS_fnc_compatibleItems`\n\n---\n*Example 1:*\n\n```sqf\n(currentWeapon player) call BIS_fnc_compatibleItems;\n```","BIS Functions\\BIS_fnc_compatibleMagazines.md":".\n\n\n---\n*Syntaxes:*\n\n[weapon, returnHidden] call `BIS_fnc_compatibleMagazines`\n\n---\n*Example 1:*\n\n```sqf\n[\"arifle_mx_f\"] call BIS_fnc_compatibleMagazines;\n```","BIS Functions\\BIS_fnc_completedCuratorChallengesCount.md":"Return number of completed curator challenges.\n\n\n---\n*Syntaxes:*\n\ncurator call `BIS_fnc_completedCuratorChallengesCount`\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule call BIS_fnc_completedCuratorChallengesCount;\n```","BIS Functions\\BIS_fnc_conditionalSelect.md":"This returns a sub-array of elements that satisfy a specific condition `in the order they have been passed`.\n\n\nIn the condition, the currently tested element is assigned to the variable \"`_x`\".\nThe original array is `not` modified.\n\n\n---\n*Syntaxes:*\n\n[items, condition] call `BIS_fnc_conditionalSelect`\n\n---\n*Example 1:*\n\n```sqf\n[[10, 0, 8, 2, 6, 4], { _x > 5 }] call BIS_fnc_conditionalSelect; // will return [10,8,6]\n```\n\n*Example 2:*\n\n```sqf\n[[10, true, 8, player], { typeName _x == \"STRING\" }] call BIS_fnc_conditionalSelect; // will return []\n```","BIS Functions\\BIS_fnc_configExtremes.md":"Scan config paths and return min and max values for each property.<br>\nCan be used only for properties of type `Number` and `Array` (value is considered to be the geometric mean of all numbers in the array).\n\n\n---\n*Syntaxes:*\n\n[paths, properties, propertyTypes, propertyDefaults] call `BIS_fnc_configExtremes`\n\n---\n*Example 1:*\n\n```sqf\nprivate _paths = [configFile >> \"CfgWeapons\"] call BIS_fnc_returnChildren;\n[_paths, [\"maxRange\", \"reloadTime\"]] call BIS_fnc_configExtremes;\n```","BIS Functions\\BIS_fnc_configPath.md":"Returns config path to given entry in given format.\n\n\n---\n*Syntaxes:*\n\n[config, format, strict] call `BIS_fnc_configPath`\n\n---\n*Example 1:*\n\n```sqf\n[\"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"] call BIS_fnc_configPath; // [\"configFile\",\"CfgVehicles\",\"Car\"]\n```\n\n*Example 2:*\n\n```sqf\n[[\"mary\", \"had\", \"a\", \"little\", \"lamb\"], \"\"] call BIS_fnc_configPath; // \"mary >> \"\"had\"\" >> \"\"a\"\" >> \"\"little\"\" >> \"\"lamb\"\"\"\n```\n\n*Example 3:*\n\n```sqf\n`\"configFile\",\"CfgVehicles\",\"Car\"` call BIS_fnc_configPath; // bin\\config.cpp/CfgVehicles/Car\n```\n\n*Example 4:*\n\n```sqf\n[\"bin\\config.cpp/CfgVehicles/Car\"] call BIS_fnc_configPath; // [\"configFile\",\"CfgVehicles\",\"Car\"]\n```\n\n*Example 5:*\n\n```sqf\n[configFile >> \"CfgVehicles\" >> \"Car\", \"\"] call BIS_fnc_configPath; // \"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"\n```\n\n*Example 6:*\n\n```sqf\n[\"bin\\config.cpp/CfgVehicles/Car\", \"\", true] call BIS_fnc_configPath; // \"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"\n```\n\n*Example 7:*\n\n```sqf\n[\"bin\\config.cpp/CfgVehicles/Car\", \"\"] call BIS_fnc_configPath; // \"bin\\config.cpp/CfgVehicles/Car\"\n```\n\n*Example 8:*\n\n```sqf\n[[\"mary\", \"had\", \"a\", \"little\", \"lamb\"], \"\", true] call BIS_fnc_configPath; // \"\" invalid config\n```","BIS Functions\\BIS_fnc_configViewer.md":"Opens the `Arma 3: Splendid Config Viewer|Splendid&trade; Config Viewer`.\n\n\n---\n*Syntaxes:*\n\n[parent, cfg, showOk, onSelect, onAdd, header] call `BIS_fnc_configViewer`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_configViewer;\n```\n\n*Example 2:*\n\n```sqf\nprivate _return = [\n\tnil,\n\tconfigFile >> \"CfgWeapons\",\n\ttrue,\n\tnil,\n\t{\n\t\tparams [\"_cfg\"];\n\t\tif (\n\t\t\tgetNumber(_cfg >> \"scope\") == 2 &&\n\t\t\t{ // Layzy evaluation\n\t\t\t\tgetNumber(_cfg >> \"type\") in [1,2,4] && // primary, secondary, handgun weapons\n\t\t\t\t{ !isClass (_cfg >> \"LinkedItems\") or getText(_cfg >> \"baseWeapon\") == configName _cfg } // only base weapons, no accessories\n\t\t\t}\n\t\t) exitWith {\n\t\t\t[_cfg] call BIS_fnc_displayName; // add the weapon with its displayname\n\t\t};\n\t\t\"\" // don't add\n\t},\n\t\"Select Weapon\"\n] call BIS_fnc_configViewer;\n_cfgSelected = _return param [0, configNull];\nsystemChat str [configName _cfgSelected, _cfgSelected];\n```","BIS Functions\\BIS_fnc_consolidateArray.md":"Finds duplicates in the given array of anything and consolidates them into an array of sub-arrays\n\n\n---\n*Syntaxes:*\n\narray call `BIS_fnc_consolidateArray`\n\n---\n*Example 1:*\n\n```sqf\n[\"apple\",\"apple\",\"pear\",\"pear\",\"apple\"] call BIS_fnc_consolidateArray; // return: `\"apple\",3],[\"pear\",2`\n```\n\n*Example 2:*\n\n```sqf\n[\"apple\",\"apple\",1,1,nil,nil] call BIS_fnc_consolidateArray; // return: `\"apple\",2],[1,2],[any,2`\n```","BIS Functions\\BIS_fnc_controlConfigs.md":"Return config paths to all display controls.\n\n\n---\n*Syntaxes:*\n\n[display,path] call `BIS_fnc_controlConfigs`\n\n---\n*Example 1:*\n\n```sqf\n[ findDisplay 313, configFile >> \"Display3DEN\" ] call BIS_fnc_controlConfigs;\n```","BIS Functions\\BIS_fnc_controlPoint_compute.md":"Computes data for control point.\n\n\n---\n*Syntaxes:*\n\n[controlPoint] call `BIS_fnc_controlPoint_compute`\n\n---\n*Example 1:*\n\n```sqf\n[controlPoint] call BIS_fnc_controlPoint_compute;\n```","BIS Functions\\BIS_fnc_controlPoint_computeOwnerKey.md":"Returns the key owner of given control point.\n\n\n---\n*Syntaxes:*\n\n[controlPoint] call `BIS_fnc_controlPoint_computeOwnerKey`\n\n---\n*Example 1:*\n\n```sqf\nprivate _key = [controlPoint] call BIS_fnc_controlPoint_computeOwnerKey;\n```","BIS Functions\\BIS_fnc_controlPoint_edenAttributesChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a control point\n\n\tParameter(s):\n\t_this select 0: Object\t- The control point\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_controlPoint_edenAttributesChanged`\n\n---\n","BIS Functions\\BIS_fnc_controlPoint_edenConnectionChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\t3DEN connections of a control point is changed\n\n\tParameter(s):\n\t_this select 0: Object\t- The control point\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_controlPoint_edenConnectionChanged`\n\n---\n","BIS Functions\\BIS_fnc_controlPoint_edenDragged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tEntity is dragged in 3DEN\n\n\tParameter(s):\n\t_this select 0: Object\t- The control point\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_controlPoint_edenDragged`\n\n---\n","BIS Functions\\BIS_fnc_controlPoint_edenIsSelected.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tWhether given control point is selected in 3den\n\n\tParameter(s):\n\t_this select 0: Object\t- The control point object\n\n\tReturns:\n\tBool - True if selected, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_controlPoint_edenIsSelected`\n\n---\n","BIS Functions\\BIS_fnc_controlPoint_edenRegisteredToWorld.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a control point\n\n\tParameter(s):\n\t_this select 0: Object\t- The control point\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_controlPoint_edenRegisteredToWorld`\n\n---\n","BIS Functions\\BIS_fnc_controlPoint_edenUnregisteredFromWorld.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a control point\n\n\tParameter(s):\n\t_this select 0: Object\t- The control point\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_controlPoint_edenUnregisteredFromWorld`\n\n---\n","BIS Functions\\BIS_fnc_controlPoint_getOwnerKey.md":"Returns the key owner of given control point.\n\n\n---\n*Syntaxes:*\n\n[controlPoint] call `BIS_fnc_controlPoint_getOwnerKey`\n\n---\n*Example 1:*\n\n```sqf\nprivate _key = [controlPoint] call BIS_fnc_controlPoint_getOwnerKey;\n```","BIS Functions\\BIS_fnc_controlPoint_isArrive.md":"Whether given control point is arrive, not leave.\n\n\n---\n*Syntaxes:*\n\n[controlPoint] call `BIS_fnc_controlPoint_isArrive`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isArrive = [controlPoint] call BIS_fnc_controlPoint_isArrive;\n```","BIS Functions\\BIS_fnc_controlPoint_setIsArrive.md":"Set's whether this control point is arrive or leave.\n\n\n---\n*Syntaxes:*\n\n[controlPoint, isArrive] call `BIS_fnc_controlPoint_setIsArrive`\n\n---\n*Example 1:*\n\n```sqf\n[controlPoint,false] call BIS_fnc_controlPoint_setIsArrive;\n```","BIS Functions\\BIS_fnc_convertUnits.md":"Converts values to a target system of units.\n\n\n---\n*Syntaxes:*\n\n[value, from, to, mode, precision] call `BIS_fnc_convertUnits`\n\n---\n*Example 1:*\n\n```sqf\nprivate _distString = [500, 0, 5, 1, -1] call BIS_fnc_convertUnits;\n```","BIS Functions\\BIS_fnc_countdown.md":"Triggers a countdown.\n\n\n---\n*Syntaxes:*\n\n[timeInSeconds, global] call `BIS_fnc_countdown`\n\n---\n*Example 1:*\n\n```sqf\nprivate _initialCountdown = [50,false] call BIS_fnc_countdown; // sets countdown to 50 seconds where function is executed\n```\n\n*Example 2:*\n\n```sqf\nprivate _initialCountdown = [50] call BIS_fnc_countdown; // sets countdown to 50 seconds globally\n```\n\n*Example 3:*\n\n```sqf\n[-1] call BIS_fnc_countdown; // sets BIS_fnc_countdown_time to nil\n```\n\n*Example 4:*\n\n```sqf\nprivate _timeLeft = [0] call BIS_fnc_countdown; // returns the left over-time\n```\n\n*Example 5:*\n\n```sqf\nprivate _isTimeLeft = [true] call BIS_fnc_countdown; // returns true if countdown is greater than 0\n```","BIS Functions\\BIS_fnc_counter.md":"<pre>/*\n\n\tDescription:\n\tModify the given counter (create it if doesn't exist)\n\n\tParameter(s):\n\t_this select 0:\n\t\tSTRING - variable name of counter\n\t\tARRAY in format [variableName,nameSpace], where nameSpace can be object, group or missionNameSpace/uiNameSpace\n\t_this select 1 (Optional): NUMBER - added value\n\t_this select 2 (Optional): NUMBER - modulo value\n\n\tReturns:\n\tNUMBER - counter's value\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_counter` -->\n\n---\n","BIS Functions\\BIS_fnc_CPDummy.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPDummy`\n\n---\n","BIS Functions\\BIS_fnc_CPFindEmptyPosition.md":"<pre>/*\n\tAuthor: Josef Zemanek\n\n\tDescription:\n\tCombat Patrol empty position locator\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPFindEmptyPosition`\n\n---\n","BIS Functions\\BIS_fnc_CPInit.md":"<pre>/*\n\tAuthor: Josef Zemanek\n\n\tDescription:\n\tCombat Patrol init & general handle\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPInit`\n\n---\n","BIS Functions\\BIS_fnc_CPLog.md":"<pre>/*\n\tAuthor: Josef Zemanek\n\n\tDescription:\n\tCombat Patrol dedicated logging fnc\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPLog`\n\n---\n","BIS Functions\\BIS_fnc_CPPickSafeDir.md":"<pre>/*\n\tAuthor: Josef Zemanek\n\n\tDescription:\n\tCombat Patrol safe azimuth picker.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPPickSafeDir`\n\n---\n","BIS Functions\\BIS_fnc_CPSafeAzimuths.md":"<pre>/*\n\tAuthor: Josef Zemanek\n\n\tDescription:\n\tCombat Patrol safe azimuth finder. Scans around the AO for usable & convenient approach routes\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPSafeAzimuths`\n\n---\n","BIS Functions\\BIS_fnc_CPSendReinforcements.md":"<pre>/*\n\tAuthor: Josef Zemanek\n\n\tDescription:\n\tCombat Patrol reinforcements handle\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPSendReinforcements`\n\n---\n","BIS Functions\\BIS_fnc_CPSpawnGarrisonGrp.md":"<pre>/*\n\tAuthor: Josef Zemanek\n\n\tDescription:\n\tCombat Patrol garrison spawning\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_CPSpawnGarrisonGrp`\n\n---\n","BIS Functions\\BIS_fnc_CPWaitUntil.md":"Function waits until condition becomes true. Condition is checked with given interval.\n\n\n---\n*Syntaxes:*\n\n[condition, interval] spawn `BIS_fnc_CPWaitUntil`\n\n---\n*Example 1:*\n\n```sqf\n[{ not alive player }, 2] spawn BIS_fnc_CPWaitUntil;\n```","BIS Functions\\BIS_fnc_createLogRecord.md":"Create a dated, timed diary record in the owner's \"Log\" subject.\n\n\n---\n*Syntaxes:*\n\n[owner, title, text] call `BIS_fnc_createLogRecord`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"Title\", \"This is a log entry. Have fun!\"] call BIS_fnc_createLogRecord;\n```","BIS Functions\\BIS_fnc_createMenu.md":"<pre>\n/*\n\tFile: fn_createMenu.sqf\n\n\tDescription:\n\tCreate custom commanding menu (with multiple pages if necessary).\n\n\tParameter(s):\n\t\t_this select 0 - STRING or ARRAY - Name of menu or [Name, Context sensitive]\n\t\t_this select 1 - STRING - Variable in which will be menu params stored (as variable_0, variable_1, ...)\n\t\t_this select 2 - ARRAY - Array with menu items (can be either [items] or `items],[itemNames],[itemEnable` if you want to set custom params (names, enable values))\n\t\t_this select 3 - STRING - Name of submenu which will open when item is activated. Name of selected item is passed to string as %1\n\t\t_this select 4 - STRING - Expression which is executed when item is activated. Name of selected item is passed to string as %1, ID is %2.\n\t\t_this select 5 - ANYTHING (Optional) - params passed to expression. Whole argument is passed as %3\n\t\t_this select 6 - BOOLEAN - False to hide number shortcuts\n\n\tReturned value(s):\n\t\tTrue\n\t\t\n\tExample:\n\t  c = [\"first\",\"second\"]; [\"Menu\", \"b\", c, \"\",\"hint 'ahoj'\"] call BIS_FNC_createmenu; showCommandingMenu \"#USER:b_0\"  \n\t  c = `\"firstData\",\"secondData\"],[\"First\",\"Second\"`; [\"Menu\", \"b\", c, \"\",\"hint (str '%1' + str '%2' + str '%3')\"] call BIS_FNC_createmenu;  showCommandingMenu \"#USER:b_0\";\n\t  see news:g7p3po$gik$1@new-server.localdomain\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_createmenu` -->\n\n---\n","BIS Functions\\BIS_fnc_createObjectOO.md":"Instantiates an object of a certain class.\n\n\n---\n*Syntaxes:*\n\n[class,params] call `BIS_fnc_createObjectOO`\n\n---\n*Example 1:*\n\n```sqf\n[\"someOOClass\", [1,2,3]] call BIS_fnc_createObjectOO;\n```","BIS Functions\\BIS_fnc_createRuin.md":"Create a building ruin and hide the original object.\n\n\n---\n*Syntaxes:*\n\nbuilding call `BIS_fnc_createRuin`\n\n---\n*Example 1:*\n\n```sqf\naBuilding call BIS_fnc_createRuin;\n```\n\n*Example 2:*\n\n```sqf\n// will destroy every building in a 50m radius around the player\nprivate _nearBuildings = player nearObjects [\"House\", 50];\n{ _x call BIS_fnc_createRuin } forEach _nearBuildings;\n```","BIS Functions\\BIS_fnc_createSimpleObject.md":"Creates non-simulated framerate and network performance friendly object - a `Arma 3: Simple Objects|Simple Object` - and applies different adjustments to fake non-existing physX and engine interactions. The adjustments need either to be stored in the object config or provided as the function input, otherwise they need to be done manually.<br>\n<br>\nSimple objects cannot be destroyed and do not interact with the environment. They are useful for creating low performance-demanding static compositions (walls, rocks, wrecks, …) and/or environments where shooting and collisions are not expected.\n\n\n---\n*Syntaxes:*\n\n[input, position, direction, followTerrain, forceSuperSimpleObject] call `BIS_fnc_createSimpleObject`\n\n---\n*Example 1:*\n\n```sqf\n[\"B_Boat_Armed_01_minigun_F\", getPosWorld player, getDir player] call BIS_fnc_createSimpleObject;\n```\n\n*Example 2:*\n\n```sqf\n[\"B_Boat_Armed_01_minigun_F\", player modelToWorldWorld [0,5,0], getDir player + 90, false, false] call BIS_fnc_createSimpleObject;\n```","BIS Functions\\BIS_fnc_createTooltip.md":"Shows group tooltip. Adapted for Tac Ops DLC for use in the animated briefings.\n\n\n---\n*Syntaxes:*\n\n[input, ctrl, mousePos] call `BIS_fnc_createTooltip`\n\n---\n","BIS Functions\\BIS_fnc_credits.md":"Opens credits, identical to those found in main menu ({{arma3}}). Also present in {{arma3}}.\n\n\n---\n*Syntaxes:*\n\n[] spawn `BIS_fnc_credits`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn BIS_fnc_credits;\n```","BIS Functions\\BIS_fnc_credits_movie.md":"Movie credits function.\n\n\n---\n*Syntaxes:*\n\n[display, mode] call `BIS_fnc_credits_movie`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn BIS_fnc_credits_movie;\n```\n\n*Example 2:*\n\nDisplay the credits full screen:\n\n```sqf\n[] spawn {\n\tdisableSerialization;\n\t// create credits\n\t(findDisplay 46) createDisplay \"RscCredits\";\n\t[] call BIS_fnc_credits_movie;\n};\n```","BIS Functions\\BIS_fnc_credits_movieConfig.md":"<pre>/*\n\tFile: fn_credits_movieConfig.sqf\n\n\tDescription:\n\tMovie credits config preprocessor.\n\n\tParameter(s):\n\t_this select 0: Number - Index of item in config (CfgCredits >> CreditsMovie >> item)\n\t\n\tReturned value:\n\t_array: Array\n\t_array select 0: String - Position name (and tags) as structured text.\n\t_array select 1: String - Names (and tags) as structured text.\n\t_array select 2: Number - Required space coeficient (numberOfNames * textSizeCoef), -1 if config entry doesn't exist\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_credits_movieConfig` -->\n\n---\n","BIS Functions\\BIS_fnc_credits_movieSupport.md":"<pre>/*\n\tFile: fn_credits_movieSupport.sqf\n\n\tDescription:\n\tMovie credits supporters preprocessor.\n\n\tParameter(s):\n\tNone.\n\t\n\tReturned value:\n\t_array: Array\n\t_array select 0: String - Position name (and tags) as structured text.\n\t_array select 1: String - Names (and tags) as structured text - 1st paragraph.\n\t_array select 2: String - Names (and tags) as structured text - 2nd paragraph.\n\t_array select 3: String - Names (and tags) as structured text - 3rd paragraph.\n\t_array select 4: Number - Required space coeficient (numberOfNamesInOneParagraph * textSizeCoef)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_credits_movieSupport` -->\n\n---\n","BIS Functions\\BIS_fnc_crewCount.md":"Function that counts amount of seats, both for crew and cargo seats.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_crewCount`\n\n---\n*Example 1:*\n\n```sqf\ncrewCount = [\"B_Heli_Light_01_F\", false] call BIS_fnc_crewCount; // Counts all available seats excluding cargo slots. Returns 6 (see notes).\n```\n\n*Example 2:*\n\n```sqf\ncrewCount = [\"B_Heli_Transport_01_F\", true] call BIS_fnc_crewCount; // Counts all available seats including cargo slots. Returns 12.\n```","BIS Functions\\BIS_fnc_crossProduct.md":"Return the cross product of two 3D vectors.\n\n\n---\n*Syntaxes:*\n\n[vector1, vector2] call `BIS_fnc_crossProduct`\n\n---\n*Example 1:*\n\n```sqf\nprivate _product = `1,2,3], [3,2,1` call BIS_fnc_crossProduct;\n```","BIS Functions\\BIS_fnc_crows.md":"Spawns flock of crows circling the area.\n\n\n---\n*Syntaxes:*\n\n[position, `areaSize`, `number`, `height`] call `BIS_fnc_crows`\n\n---\n*Example 1:*\n\n```sqf\nbis_crows = [BIS_scientist, 20, 8, 20] call BIS_fnc_crows;\n```","BIS Functions\\BIS_fnc_ctrlFitToTextHeight.md":"Resize structured text control to fit its text height.\n\n\n---\n*Syntaxes:*\n\n[control,offset,time] call `BIS_fnc_ctrlFitToTextHeight`\n\n---\n*Example 1:*\n\n```sqf\nprivate _height = [_ctrl, 1.5, 3] call BIS_fnc_ctrlFitToTextHeight;\n```","BIS Functions\\BIS_fnc_ctrlSetScale.md":"Scale a control while maintaining its centering.\n\n\n---\n*Syntaxes:*\n\n[control,scale,time] spawn `BIS_fnc_ctrlSetScale`\n\n---\n*Example 1:*\n\n```sqf\nprivate _finalPos = [_ctrl, 1.5, 3] spawn BIS_fnc_ctrlSetScale;\n```","BIS Functions\\BIS_fnc_ctrlTextHeight.md":"Resize control according to it is text.\n\n\n---\n*Syntaxes:*\n\n[control] call `BIS_fnc_ctrlTextHeight`\n\n---\n*Example 1:*\n\n```sqf\n[_ctrl] call BIS_fnc_ctrlTextHeight;\n```","BIS Functions\\BIS_fnc_curatorAttachObject.md":"Attach an object on another one under cursor.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_curatorAttachObject`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_vehicle] call BIS_fnc_curatorAttachObject;\n```","BIS Functions\\BIS_fnc_curatorAttributes.md":"<pre>/*\n\n\tDescription:\n\tReturn attributes available for given entity\n\n\tParameter(s):\n\t\t0: OBJECT - curator\n\t\t1: OBJECT or GROUp or ARRAY or STRING - checked entity\n\n\tReturns:\n\tARRAY of STRINGs\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorAttributes` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorAutomatic.md":"Spawn units based on curator settings. Used when curator role is not taken.\n\n\n---\n*Syntaxes:*\n\n[curator, sides, cheatCoef, infantryProb, groundProb, airProb, marineProb] call `BIS_fnc_curatorAutomatic`\n\n---\n*Example 1:*\n\n```sqf\n[curator_module, [west, independent, 0.1, 40, 30, 20, 10] call BIS_fnc_curatorAutomatic;\n```","BIS Functions\\BIS_fnc_curatorAutomaticPositions.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorAutomaticPositions` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorChallengeDestroyVehicle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorChallengeDestroyVehicle` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorChallengeFindIntel.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorChallengeFindIntel` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorChallengeFireWeapon.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorChallengeFireWeapon` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorChallengeGetInVehicle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorChallengeGetInVehicle` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorChallengeIlluminate.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorChallengeIlluminate` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorChallengeSpawnLightning.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_curatorChallengeSpawnLightning` -->\n\n---\n","BIS Functions\\BIS_fnc_curatorHint.md":"Show hint in curator interface.\n\n\n---\n*Syntaxes:*\n\n[title, text, duration] call `BIS_fnc_curatorHint`\n\n---\n*Example 1:*\n\n```sqf\n[\"Title\", \"Some text\", 1337] call BIS_fnc_curatorHint;\n```","BIS Functions\\BIS_fnc_curatorObjectEdited.md":"Code executed when curator object is edited (i.e., moved or rotated). When a soldier or a vehicle is moved high above ground, create a parachute for them.\n\n\n---\n*Syntaxes:*\n\n[module, object] call `BIS_fnc_curatorObjectEdited`\n\n---\n*Example 1:*\n\n```sqf\n[ module_curator, someObject ] call BIS_fnc_curatorObjectEdited;\n```","BIS Functions\\BIS_fnc_curatorObjectPlaced.md":"Code executed when curator object is placed.\n\n\n---\n*Syntaxes:*\n\n[module,object] call `BIS_fnc_curatorObjectPlaced`\n\n---\n*Example 1:*\n\n```sqf\n[ curatorModule, player ] call BIS_fnc_curatorObjectPlaced;\n```","BIS Functions\\BIS_fnc_curatorObjectRegistered.md":"Register \"curatorObjectRegistered\" handler. Cost of vehicles with crews will be automatically calculated based on vehicle + crew cost.\n\n\n---\n*Syntaxes:*\n\n[curator, code] call `BIS_fnc_curatorObjectRegistered`\n\n---\n*Example 1:*\n\n```sqf\n[curatorModule, { hint format [\"Curator:%1, Classes:%2\", _this # 0, _this # 1] }] call BIS_fnc_curatorObjectRegistered;\n```","BIS Functions\\BIS_fnc_curatorObjectRegisteredTable.md":"Register curator object costs from a table.<br>\nA table can be exported into a spreadsheet using `BIS_fnc_exportCuratorCostTable` and used as argument for this function.\n\n\n---\n*Syntaxes:*\n\n[curatorLogic, [className, cost, className, cost...]] call `BIS_fnc_curatorObjectRegisteredTable`\n\n---\n*Example 1:*\n\n```sqf\n// Nothing but the listed flare modules will show up in the curator's unit list\n[getAssignedCuratorLogic player, [\"ModuleFlareWhite_F\",0.02,\"ModuleFlareYellow_F\",0.02,\"ModuleFlareGreen_F\",0.02]] call BIS_fnc_curatorObjectRegisteredTable;\n```","BIS Functions\\BIS_fnc_curatorPinged.md":"Show effects when player pings `curator`. Icon and entity list highlighting is handled by engine\n\n\n---\n*Syntaxes:*\n\n[module, player] call `BIS_fnc_curatorPinged`\n\n---\n*Example 1:*\n\n```sqf\n[ module_curator, player ] call BIS_fnc_curatorPinged;\n```","BIS Functions\\BIS_fnc_curatorRespawn.md":"Restore unit for curators after respawn.\nWhen curator owner, it will transfer ownership to the new unit.\nWhen editable by curator, it will remove the dead unit and register the new one.\n\n\n---\n*Syntaxes:*\n\n[newUnit,oldUnit] call `BIS_fnc_curatorRespawn`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_newUnit,BIS_oldUnit] call BIS_fnc_curatorRespawn;\n```","BIS Functions\\BIS_fnc_curatorSayMessage.md":"Plays some radio message from CfgRadio locally.\n\n\n---\n*Syntaxes:*\n\n[speaker, sentence] call `BIS_fnc_curatorSayMessage`\n\n---\n*Example 1:*\n\n```sqf\n[ player, \"mp_groundsupport_01_casrequested_BHQ_0\" ] call BIS_fnc_curatorSayMessage;\n```","BIS Functions\\BIS_fnc_curatorVisionModes.md":"Toggle curator vision mode.\n\n\n---\n*Syntaxes:*\n\n[curator] call `BIS_fnc_curatorVisionModes`\n\n---\n*Example 1:*\n\n```sqf\nprivate _visionModes = [Curator] call BIS_fnc_curatorVisionModes;\n```","BIS Functions\\BIS_fnc_curatorWaypointPlaced.md":"Code executed when curator waypoint is placed.\n\n\n---\n*Syntaxes:*\n\n[object, waypointGroup, waypointID] call `BIS_fnc_curatorWaypointPlaced`\n\n---\n*Example 1:*\n\n```sqf\n[curatorModule, group player, 5] call BIS_fnc_curatorWaypointPlaced;\n```","BIS Functions\\BIS_fnc_customGPS.md":"Replaces GPS frame.<br>\nThe following line `must` be defined in mission `Description.ext`:\n```cpp\nonMinimapScript[] = {\"BIS_fnc_customGPS_Spawn\"};\n```\n\n\n---\n*Syntaxes:*\n\n[path, `deltaX`, `deltaY`] call `BIS_fnc_customGPS`\n\n---\n*Example 1:*\n\n```sqf\n[\"ca\\missions_pmc\\data\\ui_gps_ca.paa\", -0.05, 0.16] call BIS_fnc_customGPS;\n```","BIS Functions\\BIS_fnc_customGPSVideo.md":"Plays in-game video in GPS frame.<br>\nIf `BIS_fnc_customGPS` changed GPS texture, it is used.<br>\nGPS GUI layer is **19**.\n\n\n---\n*Syntaxes:*\n\n[path, `sizeCoef`] spawn `BIS_fnc_customGPSvideo`\n\n---\n*Example 1:*\n\n```sqf\nprivate _script = [\"\\ca\\video_pmc\\CP00_Reynolds_b.ogv\",1.04] spawn BIS_fnc_customGPSvideo;\nwaitUntil {scriptDone _script};\n```","BIS Functions\\BIS_fnc_cutDecimals.md":"Function that rounds specified number to specified amount of decimals.\n\n\n---\n*Syntaxes:*\n\n[number, precision] call `BIS_fnc_cutDecimals`\n\n---\n*Example 1:*\n\n```sqf\nprivate _cutDecimals = [33.3333, 1] call BIS_fnc_cutDecimals; // returns 33.3\n```","BIS Functions\\BIS_fnc_damageChanged.md":"Handle effects caused by changing of damage.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_damageChanged`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_damageChanged;\n```","BIS Functions\\BIS_fnc_damagePulsing.md":"Game pulsing damage effect.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_damagePulsing`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_damagePulsing;\n```","BIS Functions\\BIS_fnc_dataTerminalAnimate.md":"Animate a Data Terminal (\"Land_DataTerminal_01_F\").\n\n\n---\n*Syntaxes:*\n\n[dataTerminal, step] call `BIS_fnc_dataTerminalAnimate`\n\n---\n*Example 1:*\n\n```sqf\n[myTerminal, 3] call BIS_fnc_dataTerminalAnimate;\n```","BIS Functions\\BIS_fnc_dataTerminalColor.md":"Set Data Terminal colors for its different steps. Steps are:\n# closed terminal\n# opening terminal\n# emitting terminal.\n\nDefault step colors are \"blue\", \"orange\", \"green\".\nSee `BIS_fnc_dataTerminalAnimate` to animate a terminal.\n\n\n---\n*Syntaxes:*\n\n[dataTerminal, step1color, step2color, step3color] call `BIS_fnc_dataTerminalColor`\n\n---\n*Example 1:*\n\n```sqf\n[myTerminal, \"purple\", \"red\", \"orange\"] call BIS_fnc_dataTerminalColor;\n```","BIS Functions\\BIS_fnc_dbClassCheck.md":"Check if class exists in Scripted Database.\n\n\n---\n*Syntaxes:*\n\n[databaseArray, path] call `BIS_fnc_dbClassCheck`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&NAME\", \"Miller\", \"&UID\", \"1234\", \"&MONEY\", 1000], [\"miller\"` call BIS_fnc_dbClassCheck // true\n```","BIS Functions\\BIS_fnc_dbClassId.md":"Converts string to class definition.\n\n\n---\n*Syntaxes:*\n\ntext call `BIS_fnc_dbClassId`\n\n---\n*Example 1:*\n\n```sqf\n\"miller\" call BIS_fnc_dbClassID; // \"#MILLER\"\n```","BIS Functions\\BIS_fnc_dbClassIndex.md":"Returns indices leading to given class.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbClassIndex`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&NAME\", \"Miller\", \"&UID\", \"1234\", \"&MONEY\", 1000]], [\"miller\"` call BIS_fnc_dbClassIndex; // [0]\n```","BIS Functions\\BIS_fnc_dbClassList.md":"Returns all classes within class.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbClassList`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&KILLS\", 1000], \"#TERRA\", [\"&WEAPON\", \"MX 6.5mm\"]], [` call BIS_fnc_dbClassList; // [\"MILLER\",\"TERRA\"]\n```","BIS Functions\\BIS_fnc_dbClassRemove.md":"Remove class from Scripted Database. The function does not return the modified database but modifies the passed array directly.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbClassRemove`\n\n---\n*Example 1:*\n\n```sqf\nprivate _db = [\"#MILLER\", [\"&KILLS\", 1000], \"#TERRA\", [\"&WEAPON\", \"MX 6.5mm\"]];\n[_db, [\"terra\"]] call BIS_fnc_dbClassRemove; // true\n_db // [\"#MILLER\",[\"&KILLS\",1000]]\n```","BIS Functions\\BIS_fnc_dbClassReturn.md":"Returns content of given class.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbClassReturn`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&KILLS\", 1000], \"#TERRA\", [\"&WEAPON\", \"MX 6.5mm\"]], [\"miller\"` call BIS_fnc_dbClassReturn; // [\"&KILLS\", 1000]\n```","BIS Functions\\BIS_fnc_dbClassSet.md":"Add class to Scripted Database. The function modifies the passed array and returns a success flag.\n\n\n---\n*Syntaxes:*\n\n[database, path, (value)] call `BIS_fnc_dbClassSet`\n\n---\n*Example 1:*\n\n```sqf\nprivate _db = [\"#MILLER\", [\"&KILLS\", 1000], \"#TERRA\", [\"&WEAPON\", \"MX 6.5mm\"]];\n[_db, [\"kavala\"], [\"&POPULATION\", 42]] call BIS_fnc_dbClassSet;\n_db // [\"#MILLER\",[\"&KILLS\",1000],\"#TERRA\",[\"&WEAPON\",\"MX 6.5mm\"],\"#KAVALA\",[\"&POPULATION\",42]]\n```","BIS Functions\\BIS_fnc_dbConfigPath.md":"If there is a database present in the config (config.cpp or descritpion.ext) then this function can be used to get the config path of the passed array. So it basically converts the array into a config entry.\n\n\n---\n*Syntaxes:*\n\n[path, config] call `BIS_fnc_dbConfigPath`\n\n---\n","BIS Functions\\BIS_fnc_dbImportConfig.md":"Copy config classes and adds them to Scripted Database. Config values can not be passed through this function. The passed array gets modified.\n\n\n---\n*Syntaxes:*\n\n[database, path, config] call `BIS_fnc_dbImportConfig`\n\n---\n","BIS Functions\\BIS_fnc_dbImportXML.md":"Import XML file into Scripted Database.\n\n\n---\n*Syntaxes:*\n\nxmlFile call `BIS_fnc_dbImportXML`\n\n---\n*Example 1:*\n\n```sqf\nprivate _xmlDB = \"myFile.xml\" call BIS_fnc_dbImportXML;\n```","BIS Functions\\BIS_fnc_dbIsClass.md":"Checks if string is class definition.\n\n\n---\n*Syntaxes:*\n\ntext call `BIS_fnc_dbIsClass`\n\n---\n*Example 1:*\n\n```sqf\n\"#MYCLASS\" call BIS_fnc_dbIsClass; // true\n\"#myclass\" call BIS_fnc_dbIsClass; // true\n\"MYCLASS\" call BIS_fnc_dbIsClass; // false\n1234 call BIS_fnc_dbIsClass; // false\n```","BIS Functions\\BIS_fnc_dbIsValue.md":"Checks if string is value definition.\n\n\n---\n*Syntaxes:*\n\ntext call `BIS_fnc_dbIsValue`\n\n---\n*Example 1:*\n\n```sqf\n\"&MYVALUE\" call BIS_fnc_dbIsValue; // true\n\"&myvalue\" call BIS_fnc_dbIsValue; // true\n\"MYVALUE\" call BIS_fnc_dbIsValue; // false\n1234 call BIS_fnc_dbIsValue; // false\n```","BIS Functions\\BIS_fnc_dbPrint.md":"Copy Scripted Database content into clipboard for evaluation. Text will be formatted as config.\n\n\n---\n*Syntaxes:*\n\n[database, tabs] call `BIS_fnc_dbPrint`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&KILLS\", 1000, \"&RANK\", \"CAPTAIN\"], \"#TERRA\", [\"&WEAPON\", \"MX 6.5mm\"]` call BIS_fnc_dbPrint;\n```\n\n*Example 2:*\n\n```sqf\n`\"#MILLER\", [\"&KILLS\", 1000, \"&RANK\", \"CAPTAIN\"], \"#TERRA\", [\"&WEAPON\", \"MX 6.5mm\"`, 1] call BIS_fnc_dbPrint;\n```","BIS Functions\\BIS_fnc_dbSymbolClass.md":"A getter function to return the symbol used for declaring a class.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_dbSymbolClass`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_dbSymbolClass; // #\n```","BIS Functions\\BIS_fnc_dbSymbolValue.md":"A getter function to return the symobl used for declaring a value.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_dbSymbolValue`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_dbSymbolValue; // &\n```","BIS Functions\\BIS_fnc_dbValueCheck.md":"Check if value exists in Scripted Database.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbValueCheck`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&KILLS\", 1000, \"&RANK\", \"CAPTAIN\"]` call BIS_fnc_dbValueCheck; // true\n```","BIS Functions\\BIS_fnc_dbValueId.md":"Converts string to value definition or vice versa.\n\n\n---\n*Syntaxes:*\n\nvalueString call `BIS_fnc_dbValueId`\n\n---\n*Example 1:*\n\n```sqf\n\"MYVALUE\" call BIS_fnc_dbValueId; // \"&MYVALUE\"\n```\n\n*Example 2:*\n\n```sqf\n[\"&MYVALUE\"] call BIS_fnc_dbValueId; // \"MYVALUE\"\n```","BIS Functions\\BIS_fnc_dbValueIndex.md":"Returns indexes leading to given value.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbValueIndex`\n\n---\n","BIS Functions\\BIS_fnc_dbValueList.md":"Returns all values within class.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbValueList`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&KILLS\", 1000, \"&RANK\", \"CAPTAIN\"]], [\"miller\"` call BIS_fnc_dbValueList; // [\"KILLS\", \"RANK\"]\n```","BIS Functions\\BIS_fnc_dbValueRemove.md":"Remove value from Scripted Database.\n\n\n---\n*Syntaxes:*\n\n[database, path] call `BIS_fnc_dbValueRemove`\n\n---\n","BIS Functions\\BIS_fnc_dbValueReturn.md":"Returns content of given value.\n\n\n---\n*Syntaxes:*\n\n[database, path, (defaultValue)] call `BIS_fnc_dbValueReturn`\n\n---\n*Example 1:*\n\n```sqf\n`\"#MILLER\", [\"&KILLS\", 1000, \"&RANK\", \"CAPTAIN\"]], [\"miller\",\"kills\"` call BIS_fnc_dbValueReturn; // 1000\n```","BIS Functions\\BIS_fnc_dbValueSet.md":"Add value to Scripted Database. If the provided path does not exist it is created, otherwise the value is overwritten. The passed array gets modified.\n\n\n---\n*Syntaxes:*\n\n[database, path, newvalue] call `BIS_fnc_dbValueSet`\n\n---\n*Example 1:*\n\n```sqf\nprivate _db = [\"#MILLER\", [\"&KILLS\", 1000, \"&RANK\", \"CAPTAIN\"]];\n[_db, [\"miller\",\"kills\"],200] call BIS_fnc_dbValueSet;\n_db // [\"#MILLER\",[\"&KILLS\",200,\"&RANK\",\"CAPTAIN\"]]\n```\n\n*Example 2:*\n\n```sqf\nprivate _db = [\"#MILLER\", [\"&KILLS\", 1000, \"&RANK\", \"CAPTAIN\"]];\n[_db, [\"miller\",\"iq\"],200] call BIS_fnc_dbValueSet;\n_db // [\"#MILLER\",[\"&KILLS\",1000,\"&RANK\",\"CAPTAIN\",\"&IQ\",200]]\n```","BIS Functions\\BIS_fnc_debugConsoleExec.md":"Executes Debug Console code.\n\n\n---\n*Syntaxes:*\n\n[target, code] call `BIS_fnc_debugConsoleExec`\n\n---\n*Example 1:*\n\n```sqf\n[1,{hint \"Hello Players!\"}] call BIS_fnc_debugConsoleExec;\n```","BIS Functions\\BIS_fnc_debugProfile.md":"Purges user profile from unwanted `BIS_fnc_diagAAR` data. If more than 7500 entries are found, the user is `asked` to delete `profileNamespace` variable `BIS_fnc_diagAAR_data`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_debugProfile`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_debugProfile;\n```","BIS Functions\\BIS_fnc_decodeFlags.md":"Decodes a single scalar into array of unique binary flags with indexes between 0-15.\n\n\n---\n*Syntaxes:*\n\nscalar call `BIS_fnc_decodeFlags`\n\n---\n*Example 1:*\n\n```sqf\nprivate _decodedFlags = 13 call BIS_fnc_decodeFlags;//Returns [0,2,3]\n```","BIS Functions\\BIS_fnc_decodeFlags2.md":"Decodes a single scalar into array of unique binary flags (zeroes or ones).\n\n\n---\n*Syntaxes:*\n\n[value, size] call `BIS_fnc_decodeFlags2`\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = 13 call BIS_fnc_decodeFlags2; // returns [1,0,1,1]\n```\n\n*Example 2:*\n\n```sqf\nprivate _result = [13, 8] call BIS_fnc_decodeFlags2; // returns [1,0,1,1,0,0,0,0]\n```","BIS Functions\\BIS_fnc_decodeFlags4.md":"<pre>/*\n\tDecodes a single scalar into array of unique 4-state flags (values 0,1,2,3). Max. number that can be decoded is 16777215 (= 4^12 - 1). An optional parameter can by supplied to resize the output.\n\n\tSyntax:\n\t-------\n\t_flags:array = _encodedFlags:scalar call BIS_fnc_decodeFlags4;\n\t_flags:array = [_encodedFlags:scalar,_size:scalar] call BIS_fnc_decodeFlags4;\n\n\tExample:\n\t--------\n\t[1,0,2,3] = 225 call BIS_fnc_decodeFlags4;\n\t[1,0,2,3,0,0,0,0] = [225,8] call BIS_fnc_decodeFlags4;\n\n\tExplanation:\n\t------------\n\t225 -> 11 10 00 01 -> [1,0,2,3]\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_decodeFlags4`\n\n---\n","BIS Functions\\BIS_fnc_decodeFlags8.md":"<pre>/*\n\tDecodes a single scalar into array of unique 8-state flags (values 0,1,2,3,4,5,6,7). Max. number that can be decoded is 16777215 (= 8^8 - 1). An optional parameter can by supplied to resize the output.\n\n\tSyntax:\n\t-------\n\t_flags:array = _encodedFlags:scalar call BIS_fnc_decodeFlags8;\n\t_flags:array = [_encodedFlags:scalar,_size:scalar] call BIS_fnc_decodeFlags8;\n\n\tExample:\n\t--------\n\t[7,2,3,0,1] = 4311 call BIS_fnc_decodeFlags8;\n\t[7,2,3,0,1,0,0,0] = [4311,8] call BIS_fnc_decodeFlags8;\n\n\tExplanation:\n\t------------\n\t4311 -> 0001 0000 1101 0111 -> 001 000 011 010 111 -> [7,2,3,0,1]\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_decodeFlags8`\n\n---\n","BIS Functions\\BIS_fnc_deleteCounter.md":"<pre>/*\n\tAuthor: \n\t\tKillzone_Kid\n\n\tDescription:\n\t\tDelete given counter\n\n\tParameter(s):\n\t\t0: \n\t\t\tSTRING - variable name of counter\n\t\t\tARRAY in format [variableName,nameSpace], where nameSpace can be object, group or missionNameSpace/uiNameSpace\n\tReturns:\n\t\tNOTHING\n*/\n\n#define VAR_SPACES [currentNamespace, objNull, displayNull, controlNull, grpNull, locationNull, taskNull, teamMemberNull]\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_deleteCounter` -->\n\n---\n","BIS Functions\\BIS_fnc_deleteInventory.md":"Delete loadout saved using `BIS_fnc_saveInventory`.\n\n\n---\n*Syntaxes:*\n\n[unit,input] call `BIS_fnc_deleteInventory`\n\n---\n*Example 1:*\n\n```sqf\n[ player, [missionNamespace, \"BIS_inv\"] ] call BIS_fnc_deleteInventory;\n```","BIS Functions\\BIS_fnc_deleteTask.md":"Deletes given task.\n\n\n---\n*Syntaxes:*\n\n[taskID, owner, removeFromJIP] call `BIS_fnc_deleteTask`\n\n---\n*Example 1:*\n\n```sqf\n[\"task_1\"] call BIS_fnc_deleteTask;\n```\n\n*Example 2:*\n\n```sqf\n[\"task_1\", west] call BIS_fnc_deleteTask;\n```\n\n*Example 3:*\n\n```sqf\n[\"task_1\", [west, player, group soldier]] call BIS_fnc_deleteTask;\n```","BIS Functions\\BIS_fnc_deleteVehicleCrew.md":"Deletes specific crew member directly from the vehicle.\n\n\n---\n*Syntaxes:*\n\n[vehicle, crewMember] call `BIS_fnc_deleteVehicleCrew`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_tank, gunner BIS_tank] call BIS_fnc_deleteVehicleCrew;\n```","BIS Functions\\BIS_fnc_deltaTime.md":"Calculates and returns the time's delta between previous and current call to this function.\n\n\n---\n*Syntaxes:*\n\n[id, clear] call `BIS_fnc_deltaTime`\n\n---\n*Example 1:*\n\n```sqf\n[\"TAG_duration\"] call BIS_fnc_deltaTime; // Defines the starting point\n// ...\nprivate _duration1 = [\"TAG_duration\"] call BIS_fnc_deltaTime; // Gets time between starting point and now\n// ...\nprivate _duration2 = [\"TAG_duration\"] call BIS_fnc_deltaTime; // Gets time between _duration1 and now\n[\"TAG_duration\", true] call BIS_fnc_deltaTime; // deletes the global variable \"TAG_duration\"\n```","BIS Functions\\BIS_fnc_destroyCity.md":"Destroys building in given area based on input seed.\n\n\n---\n*Syntaxes:*\n\n[position, `areaSize`, `seed`, `blacklist`] call `BIS_fnc_destroyCity`\n\n---\n*Example 1:*\n\n```sqf\n[\"destroyBase\", 500, 42, [ourHouseInTheMiddleOfTheStreet]] call BIS_fnc_destroyCity;\n```","BIS Functions\\BIS_fnc_destroyer01AnimateHangarDoors.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to handle animations of ship hangar doors. Used in Eden attributes and objects user actions.\n\n\tExecution:\n\t- Call from script.\n\n\tExample:\n\t\t[_shipPart, _value, false] spawn BIS_fnc_destroyer01AnimateHangarDoors;\n\n\tRequired:\n\t\tObject (ship) must have all animations correctly defined and user actions configured.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship-part object\n\t\tand\n\t\t1: animation state of doors\n\t\t2: animation speed (instant = true/smooth=false);\n\n\tReturns: nothing\n\tResult: Ship's hangar door animation is played with sounds added.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01AnimateHangarDoors`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01EdenDelete.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to delete dynamic ships (multi-part structure) in EDEN editor. Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space.\n\tFunction will delete ship parts in EDEN editor after main object is deleted.\n\n\tExecution:\n\t- Call from EH on the main ship base model (blank model with memory points and reference config).\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_Destroyer01Init\";\t\t\t\t\t\t\t\t//main init fnc, will assemble ship in game\n\t\t\tAttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tDragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\";\t\t\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tRegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//initial EDEN init fnc (main init is still called)\n\t\t\tUnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\";\t\t//function  to delete all ship objects in EDEN editor\n\t\t};\n\n\tRequirements:\n\t- An array of ship parts/objects as a variable attached to main ship base. This array is created by main BIS_fnc_Destroyer01Init.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship Base/object\n\t\tand\n\t\t1: array of objects in variable in base objects name-space [\"bis_carrierParts\", []];\n\n\tReturns: nothing\n\tResult: Ship's parts are deleted in EDEN editor.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01EdenDelete`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01EdenInit.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to assemble dynamic ship (multi-part structure) in EDEN editor. Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space.\n\tFunction will update initial init setup on EDEN editor invoked.\n\n\tExecution:\n\t- Call from EH on the main ship's base model (blank model with memory points and reference config).\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_Destroyer01Init\";\t\t\t\t\t\t\t\t//main init fnc, will assemble ship in game\n\t\t\tAttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tDragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\";\t\t\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tRegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//initial EDEN init fnc (main init is still called)\n\t\t\tUnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\";\t\t//function  to delete all ship objects in EDEN editor\n\t\t};\n\n\tRequirements:\n\t- An array of ship parts/objects as a variable attached to main ship base. This array is created by main BIS_fnc_Destroyer01Init.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship Base/object\n\t\tand\n\t\t1: array of objects in variable in base objects names-pace [\"bis_carrierParts\", []];\n\n\tReturns: nothing\n\tResult: Ship's position is updated in EDEN editor.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01EdenInit`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01GetShipPart.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a helper function to get ship components (objects) by class name from stored array in ships master component's name-space (\"BIS_CarrierParts\" array).\n\n\tExecution:\n\t- Call from script or config.\n\n\t\tExample:\n\t\t[_this, 'Land_Destroyer_01_hull_05_F'] call BIS_fnc_destroyer01GetShipPart;\n\n\tRequirements:\n\t- Ships master object must be present. Ships master object must have initialized the array of sub components.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship Base/object\n\t\t1: ship part class name to find\n\n\tReturns: object (ship part that matches selected class name)\n\tResult: n/a\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01GetShipPart`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01HandleDamage.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a damage visual FX simulation function designed to animate ships bridge windows when shot.\n\t  Due to engine limitation (damage simulation is disabled for indestructible objects e.g. ships components) this workaround is applied.\n\n\tExecution:\n\t- Call from EH on the ship's model part with windows.\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tHitPart = \"_this call BIS_fnc_Destroyer01HandleDamage;\";\n\t\t};\n\n\tRequirements:\n\t- Compatible object (e.g. ship component) must have a set of selections that are setup and named by convention.\n\t  Selections must be defined as hidden selections in order for setObjectTexture to work.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: event Handler Array as documented here - https://community.bistudio.com/wiki/Arma_3:_Event_Handlers#HitPart\n\n\tReturns: nothing\n\tResult: Destroyer (ship) window textures are swapped for damaged ones. Simple swap.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01HandleDamage`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01Init.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a main function designed to assemble dynamic ship (multi-part structure). Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space.\n\n\tExecution:\n\t- Call from EH on the main ship's base model (blank model with memory points and reference config).\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_Destroyer01Init\";\t\t\t\t\t\t\t\t//main init fnc, will assemble ship in game\n\t\t\tAttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tDragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\";\t\t\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tRegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//initial EDEN init fnc (main init is still called)\n\t\t\tUnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\";\t\t//function  to delete all ship objects in EDEN editor\n\t\t};\n\n\tRequirements:\n\t- Compatible object (carrier/ship) must have a base model with reference memory points and set of parts defined as separate objects in cfgVehicles config with their own models.\n\tMain ship base must have a definition of all listed sub parts and memory point position to reference it is placement in 3D space.\n\n\t\tExample in cfgVehicles class for ship base\n\t\tmultiStructureParts[] = {\n\t\t\t\t\t\t{\"Land_Destroyer_01_hull_01_F\",\"pos_hull_1\"},\n\t\t\t\t\t\t{\"Land_Destroyer_01_hull_02_F\",\"pos_hull_2\"},\n\t\t\t\t\t\t{\"Land_Destroyer_01_hull_03_F\",\"pos_hull_3\"},\n\t\t\t\t\t\t{\"Land_Destroyer_01_hull_04_F\",\"pos_hull_4\"},\n\t\t\t\t\t\t{\"Land_Destroyer_01_hull_05_F\",\"pos_hull_5\"},\n\t\t\t\t\t\t{\"Land_Destroyer_01_interior_02_F\",\"pos_hull_2\"},\n\t\t\t\t\t\t{\"Land_Destroyer_01_interior_03_F\",\"pos_hull_3\"},\n\t\t\t\t\t\t{\"Land_Destroyer_01_interior_04_F\",\"pos_hull_4\"},\n\t\t\t\t\t\t{\"Land_HelipadEmpty_F\",\"pos_heliPad\"},\n\t\t\t\t\t\t{\"ShipFlag_US_F\",\"pos_Flag\"}\n\n\t\t\t\t\t};\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship Base/object\n\n\t\tand parameters from config\n\n\tReturns: exposes and array of objects (ship parts) to other scripts for easy access as variable in it is own object name-space.\n\tResult: Destroyer (ship) is assembled\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01Init`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01InitHullNumbers.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to customize ships hull numbers.\n\n\tExecution:\n\t- Call from vehicles config of eden attributes.\n\n\t\tExample:\n\t\t\tclass CustomShipNumber1\n\t\t\t{\n\t\t\t\tdisplayName=\"$STR_3den_object_attribute_CustomShipNumber1_displayname\";\n\t\t\t\ttooltip=\"$STR_3den_object_attribute_CustomShipNumber1_tooltip\";\n\t\t\t\tproperty=\"CustomShipNumber1\";\n\t\t\t\tcontrol=\"EditShort\";\n\t\t\t\texpression=\"[([_this, 'Land_Destroyer_01_hull_01_F'] call BIS_fnc_destroyer01GetShipPart), _value, 0] spawn BIS_fnc_destroyer01InitHullNumbers;\";\n\t\t\t\tdefaultValue=\"0\";\n\t\t\t\tvalidate = \"number\";\n\t\t\t\tcondition = \"object\";\n\t\t\t\ttypeName = \"NUMBER\";\n\t\t\t};\n\n\tRequired:\n\t\tObject (ship) must have predefined hidden selections for hull number. Pass object of ship part component which contains numbered selections.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship-part object\n\t\tand\n\t\t1: number that should be displayed on the selection\n\t\t2: selection number\n\n\tReturns: nothing\n\tResult: Ship's hull number is set to specified number.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01InitHullNumbers`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01OperateHangarDoors.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to handle animations of ship hangar doors.\n\n\tExecution:\n\t- Call from vehicle user actions.\n\n\t\tExample:\n\t\t\tclass OpenHangarDoor_1\n\t\t\t{\n\t\t\t\tdisplayNameDefault\t\t=\"<img image='\\A3\\Ui_f\\data\\IGUI\\Cfg\\Actions\\open_door_ca.paa' size='2.5' />\";\n\t\t\t\tdisplayName \t\t\t= $STR_DN_OUT_O_DOOR;\n\t\t\t\tposition \t\t\t\t= \"pos_Door_Hangar_1_Trigger\";\n\t\t\t\tpriority \t\t\t\t= 0.4;\n\t\t\t\tradius \t\t\t\t\t= 1.5;\n\t\t\t\tonlyForPlayer \t\t\t= 0;\n\t\t\t\tcondition \t\t\t\t= \"(((nearestObjects [this,[\"\"Land_Destroyer_01_hull_04_F\"\"],50, false]) select 0) animationPhase \"\"Door_Hangar_1_1_open\"\") < 0.1;\";\n\t\t\t\tstatement \t\t\t\t= \"[this,1] call BIS_fnc_destroyer01OperateHangarDoors;\";\n\t\t\t};\n\t\t\tclass CloseHangarDoor_1: OpenHangarDoor_1\n\t\t\t{\n\t\t\t\tdisplayName \t\t\t= $STR_DN_OUT_C_DOOR;\n\t\t\t\tposition \t\t\t\t= \"pos_Door_Hangar_1_Trigger\";\n\t\t\t\tcondition \t\t\t\t= \"(((nearestObjects [this,[\"\"Land_Destroyer_01_hull_04_F\"\"],50, false]) select 0) animationPhase \"\"Door_Hangar_1_1_open\"\") >= 0.1;\";\n\t\t\t\tstatement \t\t\t\t= \"[this,0] call BIS_fnc_destroyer01OperateHangarDoors;\";\n\t\t\t};\n\n\tRequired:\n\t\tObject (ship) must have all animations correctly defined and user actions configured.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship-part object\n\t\tand\n\t\t1: animation state of doors\n\n\tReturns: nothing\n\tResult: Ship's hangar door animation is played with sounds added.\n\t\t\tCalls BIS_fnc_destroyer01AnimateHangarDoors to execute action.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01OperateHangarDoors`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01PlayHangarDoorSound.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to add sounds required for ship hangar door animation.\n\n\tExecution:\n\t- Call from main script that handles the hangar door animation.\n\n\t\tExample:\n\t\t[_shipPart, _soundPos, _animationState] spawn BIS_fnc_destroyer01PlayHangarDoorSound;\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship-part object\n\t\tand\n\t\t1: position in word coordinates where the sound should be played (modelToWorldWorld)\n\t\t2: animation state of hangar doors\n\n\tReturns: nothing\n\tResult: Ship's hangar door animation gets a sound source added.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01PlayHangarDoorSound`\n\n---\n","BIS Functions\\BIS_fnc_destroyer01PosUpdate.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This is a sub function designed to update dynamic ships (multi-part structure) position in EDEN editor. Ship consists of multiple sub-objects that are linked together based on precise memory point positions in 3D space.\n\tFunction will update initial object positions when player drags the object in EDEN editor.\n\n\tExecution:\n\t- Call from EH on the main ship base model (blank model with memory points and reference config).\n\n\t\tExample:\n\t\tclass Eventhandlers\n\t\t{\n\t\t\tinit = \"_this call BIS_fnc_Destroyer01Init\";\t\t\t\t\t\t\t\t//main init fnc, will assemble ship in game\n\t\t\tAttributesChanged3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tDragged3DEN = \"_this call BIS_fnc_Destroyer01PosUpdate\";\t\t\t\t\t//function to update objects position in EDEN editor if attributes changed by player\n\t\t\tRegisteredToWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenInit\";\t\t\t//initial EDEN init fnc (main init is still called)\n\t\t\tUnregisteredFromWorld3DEN = \"_this call BIS_fnc_Destroyer01EdenDelete\";\t\t//function  to delete all ship objects in EDEN editor\n\t\t};\n\n\tRequirements:\n\t- An array of ship parts/objects as a variable attached to main ship base. This array is created by main BIS_fnc_Destroyer01Init.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ship Base/object\n\t\tand\n\t\t1: array of objects in variable in base objects name-space [\"bis_carrierParts\", []];\n\n\tReturns: nothing\n\tResult: Ship's position is updated in EDEN editor.\n\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_destroyer01PosUpdate`\n\n---\n","BIS Functions\\BIS_fnc_diagAAR.md":"Fill an `AAR` (After Action Review) display with data and Event Handlers.<br>\n\n\n---\n*Syntaxes:*\n\n[mode, arguments] call `BIS_fnc_diagAAR`\n\n---\n*Example 1:*\n\n```sqf\n[\"Init\", [_anAARDisplay]] call BIS_fnc_diagAAR;\n```","BIS Functions\\BIS_fnc_diagAARrecord.md":"Starts recording units position and events for an `AAR` (After Action Review).<br>\nThe following keys must be added to `Description.ext` for AAR to work properly:\n```cpp\ndiagAAR = 1;\t\t// to enable diag AAR\ndiagAARauthor = 1;\t// if description.ext/dev == profileName, allows the creator to debug himself\ndiagAARunits = 2;\t// which units to record:\n\t\t\t\t\t\t// 1 = units player\n\t\t\t\t\t\t// 2 = allunits + alldead\n\t\t\t\t\t\t// any other value = player\ndiagAARdelay = 3;\t// delay between recording steps\n```\nThe data can be accessed with <sqf inline>profileNamespace getVariable \"BIS_fnc_diagAAR_data\"\n```.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_diagAARrecord`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagAARrecord;\n```","BIS Functions\\BIS_fnc_diagAnim.md":"Displays or logs animation states:\n*`animChanged` - When action is performed (only to debug.log)\n*`animDone` - When animation chain that was started by action is finished (only to debug.log)\n*`animStateChanged` - Each animation state changes(debug.log + globalchat).\n\n\n---\n*Syntaxes:*\n\n[target] call `BIS_fnc_diagAnim`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagAnim;\n```","BIS Functions\\BIS_fnc_diagBulletCam.md":"Add a \"bullet camera\" to shots fired by the specified unit.\n\n\n---\n*Syntaxes:*\n\nunit call `BIS_fnc_diagBulletCam`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_diagBulletCam;\n```\n\n*Example 2:*\n\n```sqf\n// bullet camera will be removed after 10s\n_unit = player;\n_unit call BIS_fnc_diagBulletCam;\n_ehIndex = _unit getVariable \"BIS_fnc_diagBulletCam_fired\";\nsleep 10;\n_unit removeEventHandler [\"fired\", _ehIndex];\n```","BIS Functions\\BIS_fnc_diagConfig.md":"<pre>/*\n\n\tDescription:\n\tPrints config entries.\n\n\tParameter(s):\n\t\t0: CONFIG - config class which will be searched (default: configFile)\n\t\t1: STRING or ARRAY - entry name(s) whose values will be printed\n\t\t2: STRING - scan mode, can be one of following:\n\t\t\t\"controls\" - recursively scans controls in root, class controls, class controlsBackground and in RscControlsGroup controls (type = 15).\n\t\t\t\"turrets\" - recursively scans vehicles's turrets.\n\t\t\t\"weapons\" - scans weapon muzzles and modes.\n\t\t\t(default) - scans just class roots.\n\n\tReturns:\n\tSTRING\n\n\tResults are printed to debug log and wiki compatible table is copied to clipboard.\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diagConfig` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diagConfig;\n``` -->","BIS Functions\\BIS_fnc_diagFindMissingAuthors.md":"Copies a list of objects to the clipboard which miss the author attribute.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_diagFindMissingAuthors`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagFindMissingAuthors;\n```","BIS Functions\\BIS_fnc_diagHit.md":"Tracks received wounds. (`getNumber` (`missionConfigFile` >> \"diagHit\") > 0) has to be `true`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_diagHit`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagHit;\n```","BIS Functions\\BIS_fnc_diagJIRAlink.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_diagJIRAlink`\n\n---\n","BIS Functions\\BIS_fnc_diagKey.md":"Tracks pressed keys. (`getNumber` (`missionConfigFile` >> \"diagKey\") > 0) has to be `true`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_diagKey`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagKey;\n```","BIS Functions\\BIS_fnc_diagKeyLayout.md":"<pre>/*\n\n\tDescription:\n\tExports default key layout to wiki template.\n\n\tParameter(s):\n\t_this select 0: STRING - category, can be one of following\n\t\t\"\" - all controls in game\n\t\t\"All\"\n\t\t\"BasicInfantryControls\"\n\t\t\"Car\"\n\t\t\"Air\"\n\t\t\"Helicopter\"\n\t\t\"Submarine\"\n\t\t\"Buldozer\"\n\t\t\"UserActions\"\n\t_this select 1: STRING - selection method, can be one of following\n\t\t\"\" - single tap\n\t\t\"double\" - double tap\n\t\t\"LCtrl\" - with left control pressed\n\t\t\"RCtrl\" - with right control pressed\n\t\t\"LShift\" - with left shift pressed\n\t\t\"RShift\" - with right shift pressed\n\n\tReturns:\n\tSTRING - wiki export text (also copied to clipboard)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diagKeyLayout` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diagKeyLayout;\n``` -->","BIS Functions\\BIS_fnc_diagKeyTest.md":"Returns all user actions according to mode.\n\n\n---\n*Syntaxes:*\n\nmode call `BIS_fnc_diagKeyTest`\n\n---\n*Example 1:*\n\n```sqf\n0 call BIS_fnc_diagKeyTest;\n```","BIS Functions\\BIS_fnc_diagKnownAsTarget.md":"<pre>/*\n\tFile: fn_diagKnownAsTarget.sqf\n\n\tDescription:\n\tVisualize and profile which units know about one specific unit and how much they do.\n\tCalling function again stops diagnostics.\n\t\n\tParameter(s):\n\t_this select 0: profile unit (Object) [default player]\n\t_this select 1: radius (Scalar - meters) [default 1000m]\n\t\n\tReturns:\n\t-\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diagKnownAsTarget` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diagKnownAsTarget;\n``` -->","BIS Functions\\BIS_fnc_diagKnownTargets.md":"Visualize and profile which units one specific unit knows about and how much. Calling function again stops diagnostics.\n\n\n---\n*Syntaxes:*\n\n[target, radius] call `BIS_fnc_diagKnownTargets`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagKnownTargets;\n```","BIS Functions\\BIS_fnc_diagLoop.md":"Runs scripted loop. Repeated call terminates previous loops.\n\n\n---\n*Syntaxes:*\n\n[code,delay] spawn `BIS_fnc_diagLoop`\n\n---\n*Example 1:*\n\n```sqf\n[{systemChat \"Loop!\"}, 0.5] spawn BIS_fnc_diagLoop;\n```","BIS Functions\\BIS_fnc_diagMacros.md":"<pre>/*\n\n\tDescription:\n\tExports config macros.\n\n\tParameter(s):\n\t\t0: CONFIG or ARRAY - config container to be searched (e.g. configFile >> \"CfgVehicles\") or list of classes or classnames\n\t\t1: ARRAY - list of macro names to be used (e.g. [\"MAPSIZE\",\"NAMESOUND\"])\n\t\t2 (Optional): STRING - macro category name (when param 0 is CONFIG, its classname is used by default - e.g. \"CfgVehicles\")\n\n\tReturns:\n\tSTRING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diagMacros` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diagMacros;\n``` -->","BIS Functions\\BIS_fnc_diagMacrosAuthor.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diagMacrosAuthor` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diagMacrosAuthor;\n``` -->","BIS Functions\\BIS_fnc_diagMacrosEditorPreview.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_diagMacrosEditorPreview`\n\n---\n","BIS Functions\\BIS_fnc_diagMacrosMapSize.md":"<pre>/*\n\n\tDescription:\n\tPrints mapSize values based on real object size and copies it to clipboard.\n\tMission has to be running on order to get the values.\n\n\tParameter(s):\n\t\t0: CONFIG or ARRAY - either config container, or list of classes or classnames\n\t\t1: STRING - output mode, can be on of following:\n\t\t\t\"wiki\" - wiki table\n\t\t\t\"config\" - #define macros with model dimension values\n\t\t\t\"config_current\" - #define macros with current config values\n\t\t2: ARRAY - list of classnames which will be excluded from the scan\n\n\tReturns:\n\tSTRING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diagMacrosMapSize` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diagMacrosMapSize;\n``` -->","BIS Functions\\BIS_fnc_diagMacrosNameSound.md":"Detects vehicle types and prints their radio protocol definitions to clipboard.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_diagMacrosNameSound`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagMacrosNameSound;\n```","BIS Functions\\BIS_fnc_diagMacrosSimpleObject.md":"<pre>/*\n\tGenerates simple object config data.\n\n\tParameters:\n\t\t0: OBJECT or ARRAY - ground position where ground objects will be created (default: position calculated 15 meters away from player)\n\t\t1: SCALAR or BOOL - autolog mode (default: false)\n\t\t\t0 or false - no autolog, results will be only stored in clipboard\n\t\t\t1 or true - autolog on, results will be stored in \\A3\\macros_CfgVehicles_simpleObject_auto_A3.hpp file.\n\t\t\t2 - autlog on + world name, random number and custom suffix are appended to name of generated file to prevent overwriting and provide extra info\n\t\t2: ARRAY - classes you want to scan, use [] to scan all (default: []).\n\t\t3: OBJECT or ARRAY - sea position where ground objects will be created (default: position calculated 15 meters away from player)\n\t\t4: STRING - custom suffix added to filename if autolog is used (default: \"\").\n\n\tExample:\n\tbis_scriptHandle = [] spawn BIS_fnc_diagMacrosSimpleObject;\n\n\tExpected output per class (animate and hide arrays can have varying amount of elements):\n\t#define CFGVEHICLES_SIMPLEOBJECT_class_F\\\n\t\tclass SimpleObject\\\n\t\t{\\\n\t\t\tanimate[] =\\\n\t\t\t{\\\n\t\t\t\t{\"animationName1\", 1},\\\n\t\t\t\t{\"animationName2\", 2}\\\n\t\t\t};\\\n\t\t\thide[] =\\\n\t\t\t{\\\n\t\t\t\t\"animationSelection1\",\\\n\t\t\t\t\"animationSelection2\"\\\n\t\t\t};\\\n\t\t\tverticalOffsetAsl = 0;\\\n\t\t};\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_diagMacrosSimpleObject`\n\n---\n","BIS Functions\\BIS_fnc_diagMacrosVerify.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diagMacrosVerify` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diagMacrosVerify;\n``` -->","BIS Functions\\BIS_fnc_diagMissionPositions.md":"Displays positions of units from all missions\n\n\n---\n*Syntaxes:*\n\n[configPath, allUnits, isCampaign] call `BIS_fnc_diagMissionPositions`\n\n---\n*Example 1:*\n\n```sqf\n[configFile >> \"CfgMissions\", true, false] call BIS_fnc_diagMissionPositions;\n```","BIS Functions\\BIS_fnc_diagMissionWeapons.md":"Lists all weapons and magazines available in a mission.\n\n\n---\n*Syntaxes:*\n\n[clipboard] call `BIS_fnc_diagMissionWeapons`\n\n---\n*Example 1:*\n\n```sqf\ntrue call BIS_fnc_diagMissionWeapons;\n```","BIS Functions\\BIS_fnc_diagObjectPerformance.md":"<pre>/*\n\tBenchmarks objects vs. simple objects performance and exports the data into .csv sheet.\n\n\tOutput format:\n\tclassname,simulation,fpsClean,fpsObjects,fpsSimpleObjects\n\n\tExample:\n\tbis_scriptHandle = [] spawn BIS_fnc_diagObjectPerformance;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_diagObjectPerformance`\n\n---\n","BIS Functions\\BIS_fnc_diagPreview.md":"Previews selected classes from given container.\n\n\n---\n*Syntaxes:*\n\n[container, parentClass, distance, startPos] call `BIS_fnc_diagPreview`\n\n---\n*Example 1:*\n\n```sqf\n[ \"CfgVehicles\", \"Car\", 15, [0,0,0] ] call BIS_fnc_diagPreview;\n```","BIS Functions\\BIS_fnc_diagPreviewCycle.md":"Previews selected class from the list. When `cheat1` is activated, classnames will be shown instead of display names.\n\n\n---\n*Syntaxes:*\n\n[container, position, vector, display] call `BIS_fnc_diagPreviewCycle`\n\n---\n*Example 1:*\n\n```sqf\n[ \"CfgVehicles\"] call BIS_fnc_diagPreviewCycle;\n```","BIS Functions\\BIS_fnc_diagPreviewVehicleCrew.md":"Creates vehicles with their crew.\n\n\n---\n*Syntaxes:*\n\n[class, numVeh, distance] call `BIS_fnc_diagPreviewVehicleCrew`\n\n---\n*Example 1:*\n\n```sqf\n[\"B_MRAP_01_F\", [5,5], 10] call BIS_fnc_diagPreviewVehicleCrew;\n```","BIS Functions\\BIS_fnc_diagRadio.md":"Tracks played radio sentences.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_diagRadio`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_diagRadio;\n```","BIS Functions\\BIS_fnc_diagVehicleIcons.md":"Previews all vehicle icons on map.\n\n\n---\n*Syntaxes:*\n\n[parentClass, position, map] call `BIS_fnc_diagVehicleIcons`\n\n---\n*Example 1:*\n\n```sqf\n[\"all\", getPos player] call BIS_fnc_diagVehicleIcons;\n```","BIS Functions\\BIS_fnc_diagWiki.md":"Scans specific config folder and outputs the values in wiki format.\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_diagWiki`\n\n---\n*Example 1:*\n\n```sqf\n[\"RadioProtocol_Sent\"] call BIS_fnc_diagWiki;\n```","BIS Functions\\BIS_fnc_diaryHints.md":"<pre>#define DIARY_CATEGORY\t\"BIS_fnc_diaryHints\"\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diaryHints` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diaryHints;\n``` -->","BIS Functions\\BIS_fnc_diaryMaps.md":"<pre>#define DIARY_CATEGORY\t\"BIS_fnc_diaryMaps\"\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_diaryMaps` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_diaryMaps;\n``` -->","BIS Functions\\BIS_fnc_didJIP.md":"Return whether or not the local player joined the game while it was already in progress. {{Feature|important|{{GVI|arma3|1.50\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_didJIP`\n\n---\n*Example 1:*\n\n```sqf\nif ([] call BIS_fnc_didJIP) then { forceRespawn player };\n```","BIS Functions\\BIS_fnc_dirIndicator.md":"Show a 4-directions indicator.<br>\nIndicator GUI layer is 17, its `Display` is accessible with <sqf inline>uiNamespace getVariable \"BIS_RscMissionScreen_dirIndicator\"\n```.<br>\nCan be reexecuted to change its colour, but once executed this function `cannot` be halted  until `origin`<nowiki/>'s death.\n\n\n---\n*Syntaxes:*\n\n[origin, target, color, sizeCoef] call `BIS_fnc_dirIndicator`\n\n---\n*Example 1:*\n\n```sqf\n[player, TheBoss, [0.706, 0.0745, 0.0196, 1]] call BIS_fnc_dirIndicator;\n```","BIS Functions\\BIS_fnc_dirtEffect.md":"Screen dirt (texture) postprocess. \nDisplays dust PP according to damage obtained from near explosion; takes array from \"Explosion\" event handler.\n\n\n---\n*Syntaxes:*\n\n[unit, damage] call `BIS_fnc_dirtEffect`\n\n---\n*Example 1:*\n\n```sqf\n[nil, 0.5] call BIS_fnc_dirtEffect;\n```","BIS Functions\\BIS_fnc_dirTo.md":"Function which returns vector direction from pos1 to pos2.\n\n\n---\n*Syntaxes:*\n\n[param1, param2] call `BIS_fnc_dirTo`\n\n---\n*Example 1:*\n\nsets unit1 in the direction of unit2\n\n```sqf\nunit1 setDir ([unit1, unit2] call BIS_fnc_dirTo);\n```","BIS Functions\\BIS_fnc_disableLoading.md":"Disables the load/restart button. Currently only for `BIS_fnc_cinemaBorder` used within the Prologue and Survive campaigns. Only works in single player.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_disableLoading`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_disableLoading;\n```","BIS Functions\\BIS_fnc_disableRevive.md":"Disable revive on given unit.\n\n\n---\n*Syntaxes:*\n\n[player] call `BIS_fnc_disableRevive`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_unit] call BIS_fnc_disableRevive;\n```","BIS Functions\\BIS_fnc_disableSaving.md":"Controls the disabling of saving, stacking each request to prevent saving being enabled too early.\n\n\n---\n*Syntaxes:*\n\nid call `BIS_fnc_disableSaving`\n\n---\n*Example 1:*\n\n```sqf\n\"savingID\" call BIS_fnc_disableSaving;\n```","BIS Functions\\BIS_fnc_displayClouds.md":"<pre>#define DISPLAY\t\t(uinamespace getvariable 'hsim_RscClouds')\n#define CONTROL\t\t(DISPLAY displayctrl _idc)\n#define RSC_LAYER\t759\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_displayClouds` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_displayClouds;\n``` -->","BIS Functions\\BIS_fnc_displayColorGet.md":"Loads custom `color settings` from CfgUIDefault.\n\nIf variables are not stored in `profileNamespace` yet, the function will declare them.\n\n\n\n{{!}} style=\"vertical-align: top; width: 50%\" {{!}}\n<!-- TKOH -->\n\n\n{{!}}}\n\n\n---\n*Syntaxes:*\n\n[tag, variable] call `BIS_fnc_displayColorGet`\n\ninit call `BIS_fnc_displayColorGet`\n\n---\n*Example 1:*\n\n```sqf\n[\"GUI\", \"BCG_RGB\"] call BIS_fnc_displayColorGet;//Returns menu color\n```","BIS Functions\\BIS_fnc_displayColorSet.md":"Applies custom `color settings` to given `Display`.\n\nDisplay must be already using color macros, function will just refresh the values according to current color settings.\n\n\n---\n*Syntaxes:*\n\n[displayClass, display, commitTime, code] call `BIS_fnc_displayColorSet`\n\n---\n*Example 1:*\n\n```sqf\n[configFile >> (GUI_classes select _forEachIndex), _x] call BIS_fnc_displayColorSet;\n```\n\n*Example 2:*\n\n```sqf\n[\n\tconfigFile >> _class,\n\t_display,\n\t0,\n\t{\n\t\t_this ctrlSetFade 0;\n\t\t_this ctrlCommit 0.5;\n\t}\n] call BIS_fnc_displayColorSet;\n```","BIS Functions\\BIS_fnc_displayControls.md":"<pre>/*\n\n\tDescription:\n\tReturn all controls of given display class\n\n\tParameter(s):\n\t_this select 0: CONFIG - display config\n\t_this select 1: NUMBER or CONFIG or STRING - type of returned values (control configs, their names or IDCs; default: configfile))\n\t_this select 2: BOOL - true to search content of controls group (default: true)\n\n\tReturns:\n\tARRAY\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_displayControls` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_displayControls;\n``` -->","BIS Functions\\BIS_fnc_displayLoading.md":"`Loading Screens` init.\n\n\n---\n*Syntaxes:*\n\n[onLoad, id] call `BIS_fnc_displayLoading`\n\n---\n*Example 1:*\n\n```sqf\n([_this, 2302] call (uiNamespace getVariable 'BIS_fnc_displayLoading')\n```","BIS Functions\\BIS_fnc_displayMission.md":"Returns main display of current mission/intro/outro. A cleaner alternative to <sqf inline>findDisplay 46\n```.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_displayMission`\n\n---\n*Example 1:*\n\n```sqf\n_mainDisplay = call BIS_fnc_displayMission;\n```","BIS Functions\\BIS_fnc_displayName.md":"Return given class displayName value. Return base class name if displayName not defined.\n\n\n---\n*Syntaxes:*\n\n[config] call `BIS_fnc_displayName`\n\n---\n*Example 1:*\n\n```sqf\nprivate _myDisplayName = [configFile >> \"CfgVehicles\" >> typeOf vehicle player] call BIS_fnc_displayName;\n```","BIS Functions\\BIS_fnc_displayResize.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_displayResize` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_displayResize;\n``` -->","BIS Functions\\BIS_fnc_distance2D.md":"Returns the distance between two `objects` or `positions`.\n\n\n---\n*Syntaxes:*\n\n[param1, param2] call `BIS_fnc_distance2D`\n\n---\n*Example 1:*\n\n```sqf\n[player, rescueHelicopter] call BIS_fnc_distance2D;\n```","BIS Functions\\BIS_fnc_distance2Dsqr.md":"Returns the SQUARE of the distance between the two objects or\npositions \"as the crow flies\" (ignoring elevation).\n\n\n---\n*Syntaxes:*\n\n[Point_1,Point_2] call `BIS_fnc_distance2Dsqr`\n\n---\n*Example 1:*\n\n```sqf\n[ player, soldier_1 ] call  BIS_fnc_distance2Dsqr\n```\n\n*Example 2:*\n\n```sqf\n[ [100,100,0],[0,0,0] ] call  BIS_fnc_distance2Dsqr\n```","BIS Functions\\BIS_fnc_door.md":"Changes animation phase of given door.\n\n\n---\n*Syntaxes:*\n\n[building, doorIndex, animationPhase] call `BIS_fnc_door`\n\n---\n*Example 1:*\n\n```sqf\n[_building, 5, 1] call BIS_fnc_door;\n```","BIS Functions\\BIS_fnc_doorClose.md":"Close a door with an animated doorhandle.\n\n\n---\n*Syntaxes:*\n\n[building, doorAnimation, handleDownAnimation, doorHandleUpAnimation, animationPhase] call `BIS_fnc_doorClose`\n\n---\n*Example 1:*\n\n```sqf\n[building,\"doorAnimation\",\"animationUp\",\"animationDown\",1] call BIS_fnc_doorClose;\n```","BIS Functions\\BIS_fnc_doorNoHandleClose.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_doorNoHandleClose`\n\n---\n","BIS Functions\\BIS_fnc_doorNoHandleOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_doorNoHandleOpen`\n\n---\n","BIS Functions\\BIS_fnc_doorOpen.md":"Open a door with an animated doorhandle.\n\n\n---\n*Syntaxes:*\n\n[building, doorAnimation, upDownAnimation, downUpAnimation, animationPhase] call `BIS_fnc_doorOpen`\n\n---\n*Example 1:*\n\n```sqf\n[_house, \"door_1_rot\", nil, nil, 0.25]  call BIS_fnc_doorOpen;\n```","BIS Functions\\BIS_fnc_dotProduct.md":"Dot product of two vectors.\n\n\n---\n*Syntaxes:*\n\n[vector1, vector2] call `BIS_fnc_dotProduct`\n\n---\n*Example 1:*\n\n```sqf\n`1,2,3], [1,2,3` call BIS_fnc_dotProduct; `//Returns: 1*1+2*2+3*3 = 14`\n```\n\n*Example 2:*\n\n```sqf\n`1,2,3,4], [1,2,3,4` call BIS_fnc_dotProduct; `//Returns: 1*1+2*2+3*3+4*4 = 30`\n```","BIS Functions\\BIS_fnc_drawAO.md":"Draws a dashed line around the outer edges of a trigger.\n\n\n---\n*Syntaxes:*\n\n[triggers, distance] call `BIS_fnc_drawAO`\n\n---\n*Example 1:*\n\n```sqf\n[Trigger1] call BIS_fnc_drawAO; // draws a dashed line around trigger1's outer edge, with 50m between each line\n```\n\n*Example 2:*\n\n```sqf\n[Trigger1, 10] call BIS_fnc_drawAO; // draws a dashed line around trigger1's outer edge, with 10m between each line\n```\n\n*Example 3:*\n\n```sqf\n`Trigger1, Trigger2` call BIS_fnc_drawAO; // draws dashed lines around multiple triggers, useful for multiple AOs in one mission\n```","BIS Functions\\BIS_fnc_drawArrow.md":"Draws a static arrow (outline or color filled) on map. See *(Reference HashLink \"#Example 4\")* for arrow removal.\n\n\n---\n*Syntaxes:*\n\n[from, to, color, pars, fill, map] call `BIS_fnc_drawArrow`\n\n---\n*Example 1:*\n\nDraw a semi-transparent, blue arrow with default geometry:\n\n```sqf\nmyArrow1 = [_pos1, _pos2, [0,0,1,0.5]] call BIS_fnc_drawArrow;\n```\n\n*Example 2:*\n\nDraw a wide, green arrow outline:\n\n```sqf\nmyArrow2 = [_pos1, _pos2, [0,1,0,1], [20], false] call BIS_fnc_drawArrow;\n```\n\n*Example 3:*\n\nDraw a thin, red arrow with custom head geometry:\n\n```sqf\nmyArrow3 = [_pos1, _pos2, [1,0,0,1], [1,1/5,5]] call BIS_fnc_drawArrow;\n```\n\n*Example 4:*\n\nRemove the arrow created in *(Reference HashLink \"#Example 3\")*:\n\n```sqf\nmyArrow3 call BIS_fnc_drawArrow;\n```\n\n*Example 5:*\n\n```sqf\nmyArrow1 = [[100,400,0], [200,500,0], [1,0,0,1], [20], true] call BIS_fnc_drawArrow;\nmyArrow2 = [[400,700,0], [300,600,0], [0,1,0,1], [20, 1/3, 2, 2], true] call BIS_fnc_drawArrow;\nmyArrow3 = [[600,700,0], [400,900,0], [0,0,1,1], [20, 1/3, 2, 0.5], true] call BIS_fnc_drawArrow;\nmyArrow4 = [[100,100,0], [200,200,0], [0,0,0,1], [20], false] call BIS_fnc_drawArrow;\nmyArrow5 = [[400,400,0], [300,300,0], [1,1,1,1], [20, 1/3, 2, 2], false] call BIS_fnc_drawArrow;\nmyArrow6 = [[600,400,0], [400,600,0], [0,1,1,1], [20, 1/3, 2, 0.5], false] call BIS_fnc_drawArrow;\n```","BIS Functions\\BIS_fnc_drawBoundingBox.md":"Draws bounding box around given objects.\n\n\n---\n*Syntaxes:*\n\n[objects, color, draw] call `BIS_fnc_drawBoundingBox`\n\n---\n*Example 1:*\n\n```sqf\n[[BIS_building], [1,0,1,1], true] call BIS_fnc_drawBoundingBox;\n```\n\n*Example 2:*\n\n```sqf\n[[], [], false] call BIS_fnc_drawBoundingBox;\n```","BIS Functions\\BIS_fnc_drawCuratorDeaths.md":"Show skull unit for curator when the unit dies.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_drawCuratorDeaths`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_drawCuratorDeaths;\n```","BIS Functions\\BIS_fnc_drawCuratorLocations.md":"<pre>/*\n\n\tDescription:\n\tLabel every vilage, town and city in curator interface\n\n\tParameter(s):\n\t\t0: OBJECT - curator module\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_drawCuratorLocations` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_drawCuratorLocations;\n``` -->","BIS Functions\\BIS_fnc_drawCuratorRespawnMarkers.md":"<pre>/*\n\n\tDescription:\n\tCreate a curator icon on every respawn marker\n\n\tParameter(s):\n\t\t0: OBJECT - curator module\n\t\t1: ARRAY of SIDEs \n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_drawCuratorRespawnMarkers` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_drawCuratorRespawnMarkers;\n``` -->","BIS Functions\\BIS_fnc_drawMinefields.md":"Draw minefields on the map. Dynamically calculated from all mines positions. Distinguishes AP and AT minefields.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_drawMinefields`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_drawMinefields;\n```","BIS Functions\\BIS_fnc_drawRespawnPositions.md":"Draws respawn positions on the map which were added by `BIS_fnc_addRespawnPosition`.\n\n\n---\n*Syntaxes:*\n\n[state] call `BIS_fnc_drawRespawnPositions`\n\n---\n*Example 1:*\n\n```sqf\n[ true ] call BIS_fnc_drawRespawnPositions;\n```","BIS Functions\\BIS_fnc_dynamicGroups.md":"Function that adds dynamic groups to the mission as seen in End Game. Function needs to be initialized on server and client. Clients can then use action TeamSwitch (\"U\" by default) to access the Dynamic Groups interface.\n\n\n---\n*Syntaxes:*\n\n[mode, params] call `BIS_fnc_dynamicGroups`\n\n---\n*Example 1:*\n\n```sqf\n[\"Initialize\"] call BIS_fnc_dynamicGroups; // exec on Server\n```\n\n*Example 2:*\n\n```sqf\n[\"InitializePlayer\", [player]] call BIS_fnc_dynamicGroups; // exec on client\n```","BIS Functions\\BIS_fnc_dynamicText.md":"Shows dynamic opening credits or any type of text.<br>\n\n\n---\n*Syntaxes:*\n\n[text, x, y, duration, fadeInTime, deltaY, rscLayer] spawn `BIS_fnc_dynamicText`\n\n---\n*Example 1:*\n\n```sqf\n[\"<nowiki><t color='#ff0000' size='.8'>Warning!<br />Stop doing what you are doing</t></nowiki>\",-1,-1,4,1,0,789] spawn BIS_fnc_dynamicText;\n```","BIS Functions\\BIS_fnc_earthquake.md":"Earthquake simulation - now just camera shake and sound. `Arma 3 Stamina|Stamina` is impacted by the earthquake too. Earthquake will last between 13 and 20 seconds. While earthquake is in progress `missionNamespace` variable **BIS_fnc_earthquake_inprogress** will be `true`.\n\n\n---\n*Syntaxes:*\n\n[intensity] spawn `BIS_fnc_earthquake`\n\n---\n*Example 1:*\n\n```sqf\n[4] spawn BIS_fnc_earthquake;\n```","BIS Functions\\BIS_fnc_easeIn.md":"Wraps `BIS_fnc_lerp`.\n\n\n---\n*Syntaxes:*\n\n[a, b, alpha, exp] call `BIS_fnc_easeIn`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_easeIn; // returns 0\n```\n\n*Example 2:*\n\n```sqf\n[0, 2, 0.5] call BIS_fnc_easeIn; // returns 0.5\n```\n\n*Example 3:*\n\n```sqf\n([0, 2, 0.5] call BIS_fnc_lerp) == ([0, 2, 0.5, 1] call BIS_fnc_easeIn); // returns true\n```","BIS Functions\\BIS_fnc_easeInOut.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_easeInOut`\n\n---\n","BIS Functions\\BIS_fnc_easeInOutVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_easeInOutVector`\n\n---\n","BIS Functions\\BIS_fnc_easeInVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_easeInVector`\n\n---\n","BIS Functions\\BIS_fnc_easeOut.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_easeOut`\n\n---\n","BIS Functions\\BIS_fnc_easeOutVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_easeOutVector`\n\n---\n","BIS Functions\\BIS_fnc_effectFired.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectFired` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectFired;\n``` -->","BIS Functions\\BIS_fnc_effectFiredArtillery.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectFiredArtillery` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectFiredArtillery;\n``` -->","BIS Functions\\BIS_fnc_effectFiredCruiseMissile.md":"<pre>/*\n\tCruise Missile Start VFX\n\tBIS_fnc_effectFiredCruiseMissile\n\n\ta: reyhard\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_effectFiredCruiseMissile`\n\n---\n","BIS Functions\\BIS_fnc_effectFiredFlares.md":"<pre>/*Arma 2 flares, by Maddmatt\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectFiredFlares` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectFiredFlares;\n``` -->","BIS Functions\\BIS_fnc_effectFiredHeliRocket.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectFiredHeliRocket` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectFiredHeliRocket;\n``` -->","BIS Functions\\BIS_fnc_effectFiredLongSmoke.md":"This function does nothing.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_effectFiredLongSmoke`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_effectFiredRifle.md":"Used to add an effect to fired bullets. Should be executed from Fired Event Handler.\n\n\n---\n*Syntaxes:*\n\n[unit, nil, nil, nil, ammoType] call `BIS_fnc_effectFiredRifle`\n\n---\n*Example 1:*\n\n```sqf\nunit addEventHandler [\"Fired\", \n{\n   _this call BIS_fnc_effectFiredRifle;\n}];\n```","BIS Functions\\BIS_fnc_effectFiredRocket.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectFiredRocket` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectFiredRocket;\n``` -->","BIS Functions\\BIS_fnc_effectFiredSmokeLauncher.md":"<pre>/*Arma 2 smokscreen, by Maddmatt\nUses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectFiredSmokeLauncher` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectFiredSmokeLauncher;\n``` -->","BIS Functions\\BIS_fnc_effectFiredSmokeLauncher_boat.md":"<pre>/*Arma 2 smokscreen, by Maddmatt\nUses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectFiredSmokeLauncher_boat` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectFiredSmokeLauncher_boat;\n``` -->","BIS Functions\\BIS_fnc_effectKilled.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectKilled` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectKilled;\n``` -->","BIS Functions\\BIS_fnc_effectKilledAirDestruction.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectKilledAirDestruction` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectKilledAirDestruction;\n``` -->","BIS Functions\\BIS_fnc_effectKilledAirDestructionStage2.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectKilledAirDestructionStage2` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectKilledAirDestructionStage2;\n``` -->","BIS Functions\\BIS_fnc_effectKilledSecondaries.md":"<pre>//Small secondary fuel explosions\n//By Maddmatt for Arma 2\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_effectKilledSecondaries` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_effectKilledSecondaries;\n``` -->","BIS Functions\\BIS_fnc_effectPlankton.md":"Create underwater plankton particle effect.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_effectPlankton`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_effectPlankton;\n```","BIS Functions\\BIS_fnc_EGObjectiveVisualizer.md":"Part of the `EG Spectator Mode`.\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_EGObjectiveVisualizerDraw.md":"Part of the `EG Spectator Mode`.\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_EGSpectator.md":"Spectator instance.\n\n\n---\n*Syntaxes:*\n\n[mode, [spectator, whitelistedSides, allowAi, allowFreeCamera, allow3PPCamera, showFocusInfo, showCameraButtons, showControlsHelper, showHeader, showLists]] call `BIS_fnc_EGSpectator`\n\n---\n*Example 1:*\n\n```sqf\n[\"Initialize\", [player]] call BIS_fnc_EGSpectator;\n```","BIS Functions\\BIS_fnc_EGSpectatorCamera.md":"Part of the `EG Spectator Mode`.\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_EGSpectatorCameraPrepareTarget.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_EGSpectatorCameraPrepareTarget` -->\n\n---\n","BIS Functions\\BIS_fnc_EGSpectatorCameraResetTarget.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_EGSpectatorCameraResetTarget` -->\n\n---\n","BIS Functions\\BIS_fnc_EGSpectatorCameraSetTarget.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_EGSpectatorCameraSetTarget` -->\n\n---\n","BIS Functions\\BIS_fnc_EGSpectatorCameraTick.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_EGSpectatorCameraTick` -->\n\n---\n","BIS Functions\\BIS_fnc_EGSpectatorDraw2D.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_EGSpectatorDraw2D` -->\n\n---\n","BIS Functions\\BIS_fnc_EGSpectatorDraw3D.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_EGSpectatorDraw3D` -->\n\n---\n","BIS Functions\\BIS_fnc_EGSpectatorGetUnitsToDraw.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_EGSpectatorGetUnitsToDraw` -->\n\n---\n","BIS Functions\\BIS_fnc_ejectionSeatRelease.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured.\n\t- Additional option for player to separate from ejetor seat via user action. default ejection function will ato deploy parachute at 350 m altitude. This is a manual override.\n\t- Generic parachute used, currently only one model in game so no need to parametarize.\n\n\tExucution:\n\t- Call the function via user action defined on the ejector seat vehicle.\n\n\t\tExample:\n\t\tclass UserActions\n\t    {\n\n\t\t\tclass Ejection_Seat_Eject\n\t\t\t{\n\t\t\t\tpriority = 0.05;\n\t\t\t\tshortcut = \"Eject\";\n\t\t\t\tdisplayName = \"$STR_A3_action_deploy_parachute\";\n\t\t\t\tcondition = \"player in this\";\n\t\t\t\tstatement = \"[this] spawn BIS_fnc_ejectionSeatRelease\";\n\t\t\t\tposition = \"pilotcontrol\";\n\t\t\t\tradius = 10;\n\t\t\t\tonlyforplayer = 1;\n\t\t\t\tshowWindow = 0;\n\t\t\t\thideOnUse = 1;\n\t\t\t};\n\t\t};\n\n\tRequirments:\n\t- Compatible ejector seat must have a user action set up to triger this fnc.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: ejector seat/object\n\n\tReturns: nothing\n\tResult: Pilot will be forced from ejection seat vehicle to parachute. Semi-authenthic behaviour.\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_ejectionSeatRelease` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_ejectionSeatRelease;\n``` -->","BIS Functions\\BIS_fnc_enableSaving.md":"Controls the enabling of saving. Will only enable saving if there are no remaining requests for disabled saving.\n\n\n---\n*Syntaxes:*\n\nid call `BIS_fnc_enableSaving`\n\n---\n*Example 1:*\n\n```sqf\n\"savingID\" call BIS_fnc_enableSaving;\n```","BIS Functions\\BIS_fnc_encodeFlags.md":"Encodes array of unique binary flags with indexes between 0-15 into a single scalar.\n\n\n---\n*Syntaxes:*\n\nflags call `BIS_fnc_encodeFlags`\n\n---\n*Example 1:*\n\n```sqf\nprivate _encodedFlags = [0,2,3] call BIS_fnc_encodeFlags;//Returns 13\n```","BIS Functions\\BIS_fnc_encodeFlags2.md":"Encodes array of unique binary flags (zeroes or ones) into a single scalar.\n\n\n---\n*Syntaxes:*\n\narrayOfNumbers call `BIS_fnc_encodeFlags2`\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = [1,0,1,1] call BIS_fnc_encodeFlags2;\nhint str _result; // Displays 13\n```","BIS Functions\\BIS_fnc_encodeFlags4.md":"<pre>/*\n\tEncodes array of unique 4-state flags (0,1,2,3) into a single number.\n\n\tSyntax:\n\t-------\n\t_encodedFlags:scalar = _flags:array call BIS_fnc_encodeFlags4;\n\n\tExample:\n\t--------\n\t225 = [1,0,2,3] call BIS_fnc_encodeFlags4;\n\n\tExplanation:\n\t------------\n\t[1,0,2,3] -> 11 10 00 01 -> 225\n\t[0,0,0,0,0,0,0,1] -> 01 00 00 00 00 00 00 00 -> 0100 0000 0000 0000 -> 16384\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_encodeFlags4`\n\n---\n","BIS Functions\\BIS_fnc_encodeFlags8.md":"<pre>/*\n\tEncodes array of unique 8-state flags (0,1,2,3,4,5,6,7) into a single number.\n\n\tSyntax:\n\t-------\n\t_encodedFlags:scalar = _flags:array call BIS_fnc_encodeFlags8;\n\n\tExample:\n\t--------\n\t4311 = [7,2,3,0,1] call BIS_fnc_encodeFlags8;\n\n\tExplanation:\n\t------------\n\t[7,2,3,0,1] -> 001 000 011 010 111 -> 0001 0000 1101 0111 -> 4311\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_encodeFlags8`\n\n---\n","BIS Functions\\BIS_fnc_endLoadingScreen.md":"Unregister a loading screen. When none other remains, end the loading.\n\n\n---\n*Syntaxes:*\n\nscreenId call `BIS_fnc_endLoadingScreen`\n\n---\n*Example 1:*\n\n```sqf\n[\"myLoadingScreen\", \"Loading… wait for my splendid™ mission!\"] call BIS_fnc_startLoadingScreen;\nuiSleep 3;\n\"myLoadingScreen\" call BIS_fnc_endLoadingScreen;\n```","BIS Functions\\BIS_fnc_endMissionServer.md":"Ends the mission properly for all players in a multiplayer environment.\n\n\n---\n*Syntaxes:*\n\nendType call `BIS_fnc_endMissionServer`\n\n---\n*Example 1:*\n\n```sqf\n\"SideScore\" call BIS_fnc_endMissionServer;\n```","BIS Functions\\BIS_fnc_enemyDetected.md":"Returns true if unit knows about nearby enemy unit or driven vehicle.\n\n\n---\n*Syntaxes:*\n\nunit call `BIS_fnc_enemyDetected`\n\n---\n*Example 1:*\n\n```sqf\nprivate _enemyDetected = _unit call BIS_fnc_enemyDetected;\n```","BIS Functions\\BIS_fnc_enemySides.md":"Returns sides hostile to the given `side` / `object`.\n\n\n---\n*Syntaxes:*\n\ninput call `BIS_fnc_enemySides`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_enemySides;\n```","BIS Functions\\BIS_fnc_enemyTargets.md":"Return list of nearby enemy targets for given unit.\n\n\n---\n*Syntaxes:*\n\nunit call `BIS_fnc_enemyTargets`\n\n---\n*Example 1:*\n\n```sqf\nprivate _targets = _unit call BIS_fnc_enemyTargets;\n```","BIS Functions\\BIS_fnc_error.md":"Log error message and display it (bottom of the UI). If it is called from a function, it'll include the function name before your content.<br/>\nOutput is: \"``profileName`/log: ERROR: <your content>`\"<br/>\n<br/>\n\n\n---\n*Syntaxes:*\n\n[message, param1, ..., param9] call `BIS_fnc_error`\n\n---\n*Example 1:*\n\n```sqf\n[\"Player is too far away (%1)\",player distance dude] call BIS_fnc_error;\n```","BIS Functions\\BIS_fnc_errorMsg.md":"Display error window.\n\n\n---\n*Syntaxes:*\n\n[message, otherParameters] call `BIS_fnc_errorMsg`\n\n---\n*Example 1:*\n\n```sqf\n[\"This is an error message\"] call BIS_fnc_errorMsg;\n```\n\n*Example 2:*\n\n```sqf\n[\"This is an error message: player is: %1\", player] call BIS_fnc_errorMsg;\n```","BIS Functions\\BIS_fnc_errorParamsType.md":"Displays a parameter type error message (using `BIS_fnc_error`) explaining the problem.\n\n\n---\n*Syntaxes:*\n\n[value, method, expected] call `BIS_fnc_errorParamsType`\n\n---\n*Example 1:*\n\n```sqf\n// show error and abort if input is not of type ARRAY:\nif !(_this isEqualType []) exitWith { [_this, \"isEqualType\", []] call BIS_fnc_errorParamsType; };\n```\n\n*Example 2:*\n\n```sqf\n// show error and abort if array input is not in format [SCALAR, STRING, BOOL]:\nif !(_this isEqualTypeArray [0, \"\", true]) exitWith { [_this, \"isEqualTypeArray\", [0, \"\", true]] call BIS_fnc_errorParamsType; };\n```\n\n*Example 3:*\n\n```sqf\n// show error and abort if array input is not in format [BOOL, BOOL, BOOL, ...]:\nif !(_this isEqualTypeAll true) exitWith { [_this, \"isEqualTypeAll\", true] call BIS_fnc_errorParamsType; };\n```\n\n*Example 4:*\n\n```sqf\n// show error and abort if input is neither ARRAY nor OBJECT:\nif !(_this isEqualTypeAny `], objNull]) exitWith { [_this, \"isEqualTypeAny\", [[], objNull` call BIS_fnc_errorParamsType; };\n```\n\n*Example 5:*\n\n```sqf\n// show error and abort if input is neither of type ARRAY nor array in format [SCALAR, ARRAY, <ANYTHING>, OBJECT]:\nif !(_this isEqualTypeParams [0, [], nil, objNull]) exitWith { [_this, \"isEqualTypeParams\", [0, [], nil, objNull]] call BIS_fnc_errorParamsType; };\n```","BIS Functions\\BIS_fnc_escortAI.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_escortAI` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_escortAI;\n``` -->","BIS Functions\\BIS_fnc_escortAIHoldAction.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_escortAIHoldAction` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_escortAIHoldAction;\n``` -->","BIS Functions\\BIS_fnc_establishingShot.md":"Plays a fake UAV observational sequence which serves as an establishing shot.<br>\n\n\n---\n*Syntaxes:*\n\n[target, text, altitude, radius, angle, rotation, iconOptions, mode, fadeIn,waitTime] spawn `BIS_fnc_establishingShot`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"I can see my house from here\", 500, 250, 75, 1, [], 0, true] spawn BIS_fnc_establishingShot;\n```\n\n*Example 2:*\n\n```sqf\n[\n\t[5229.97,5233.07,0],\n\t\"BLUFOR and OPFOR firefight\",\n\t500,\n\t250,\n\t75,\n\t1,\n\t[\n\t\t[\"\\A3\\ui_f\\data\\map\\markers\\nato\\b_inf.paa\",[0,0.3,0.6,1],group_1,1,1,0,\"BLUFOR\"],\n\t\t[\"\\A3\\ui_f\\data\\map\\markers\\nato\\o_inf.paa\",[0.5,0,0,1],group_2,1,1,0,\"OPFOR\"]\n\t],\n\t0,\n\ttrue,\n\t15\n] spawn BIS_fnc_establishingShot;\n```","BIS Functions\\BIS_fnc_estimatedTimeLeft.md":"Set mission countdown.\n\n\n---\n*Syntaxes:*\n\n[time] call `BIS_fnc_estimatedTimeLeft`\n\n---\n*Example 1:*\n\n```sqf\n[180] call BIS_fnc_estimatedTimeLeft;\n```","BIS Functions\\BIS_fnc_eventTimeline.md":"Universal system for playing sequential events defined by time.\n\n\n---\n*Syntaxes:*\n\n[timeline, index, music, codeInterrupt, codeEnd] call `BIS_fnc_eventTimeline`\n\n---\n*Example 1:*\n\n```sqf\nprivate _timeline =\n[\n\t[0.0, { hint \"Start of the Timeline\" } ],\n\t[1.0, { hint \"Event 1\" } ],\n\t[3.0, { hint \"End of the timeline\" } ]\n];\n\n[_timeline, 0, \"\", { hint \"Interrupted\" }, { hint \"Timeline done\" }] spawn BIS_fnc_eventTimeline;\n```","BIS Functions\\BIS_fnc_execFSM.md":"Execute the scripted FSM. Shell for `execFSM` command\n\n\n---\n*Syntaxes:*\n\nfilename call `BIS_fnc_execFSM`\n\n[params, filename] call `BIS_fnc_execFSM`\n\n---\n*Example 1:*\n\n```sqf\nprivate _handle = [[_param1, _param2, etc..], \"test.fsm\"] call BIS_fnc_execFSM;\n```\n\n*Example 2:*\n\n```sqf\nprivate _handle = \"test.fsm\" call BIS_fnc_execFSM;\n```","BIS Functions\\BIS_fnc_execRemote.md":"This function is now an alias to `BIS_fnc_MP`.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\nSee `BIS_fnc_MP`","BIS Functions\\BIS_fnc_executeStackedEventHandler.md":"This function executes the stacked items.\n\n\n---\n*Syntaxes:*\n\n[EHType] call `BIS_fnc_executeStackedEventHandler`\n\n---\n*Example 1:*\n\n```sqf\n[\"onEachFrame\"] call BIS_fnc_executeStackedEventHandler;\n```","BIS Functions\\BIS_fnc_execVM.md":"`execVM` desired script with desired argument(s). This function is only really useful when combined with `BIS_fnc_MP` to execute a script remotely.\n\n\n---\n*Syntaxes:*\n\nfilename call `BIS_fnc_execVM`\n\n[argument(s), filename] call `BIS_fnc_execVM`\n\n---\n*Example 1:*\n\n```sqf\n\"Bonus\\initializeExtras.sqf\" call BIS_fnc_execVM;\n```\n\n*Example 2:*\n\n```sqf\n[player,\"reposition.sqf\"] call BIS_fnc_execVM;\n```\n\n*Example 3:*\n\n```sqf\n// before Arma 3 v1.50\n[[[_param1, _param2], \"addBonus.sqf\"], \"BIS_fnc_execVM\", true] call BIS_fnc_MP;\n\n// since Arma 3 v1.50\n[[_param1, _param2], \"addBonus.sqf\"] remoteExec [\"execVM\"];\n```","BIS Functions\\BIS_fnc_exportCfgGroups.md":"<pre>/*\n\n\tDescription:\n\tExport group or object composition for use in CfgGroups. The result will be copied to clipboard.\n\n\tParameter(s):\n\t\t0: position (for supported types see BIS_fnc_position). Screen center is used by default\n\t\t1: objects to be saved. Currently selected objects in curator are used by default\n\t\t\tARRAY of OBJECTs - specific objects to be saved\n\t\t\tarray in format used by nearEntities, which automatically get nearby objects\n\t\t\t\t0: STRING or ARRAY of STRINGS - object types\n\t\t\t\t1: NUMBER - radius in metres\n\n\tReturns:\n\tSTRING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_exportCfgGroups` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_exportCfgGroups;\n``` -->","BIS Functions\\BIS_fnc_exportCfgHints.md":"Exports **CfgHints** to wiki format (see `:Category:Arma 3: Field Manual`).\n\n\n---\n*Syntaxes:*\n\n[category, class] call `BIS_fnc_exportCfgHints`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_exportCfgHints;\n```","BIS Functions\\BIS_fnc_exportCfgMagazines.md":"Export list of magazines for `:Category:Arma 3: Assets|Arma 3: Assets`.\n\n\n---\n*Syntaxes:*\n\n[classes] spawn `BIS_fnc_exportCfgMagazines`\n\n---\n*Example 1:*\n\nexports `Arma 3: CfgMagazines`: \n```sqf\n[] spawn BIS_fnc_exportCfgMagazines;\n```\n\n*Example 2:*\n\n```sqf\n`\"class1\", \"class2\"` spawn BIS_fnc_exportCfgMagazines;\n```","BIS Functions\\BIS_fnc_exportCfgPatches.md":"Export list of addons for Community Wiki - `:Category:Arma 3: Assets|Arma 3: Assets`.\n\n\n---\n*Syntaxes:*\n\n[config, classes] call `BIS_fnc_exportCfgPatches`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_exportCfgPatches;\n```\n\n*Example 2:*\n\nexport `Arma 3: CfgPatches CfgVehicles]] and [[Arma 3: CfgPatches CfgWeapons`:\n\n```sqf\n[\"CfgVehicles\"] call BIS_fnc_exportCfgPatches;\t// Arma 3: CfgPatches CfgVehicles\n[\"CfgWeapons\"]  call BIS_fnc_exportCfgPatches;\t// Arma 3: CfgPatches CfgWeapons\n```","BIS Functions\\BIS_fnc_exportCfgVehicles.md":"Export list of objects for Community Wiki (`:Category:Arma_3:_Assets|Assets`).\n\n\n---\n*Syntaxes:*\n\n[mode,sides,classes,useAI] call `BIS_fnc_exportCfgVehicles`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_exportCfgVehicles;\n```\n\n*Example 2:*\n\n```sqf\n[\"config\", [3], [\"A3_Characters_F_Beta\",\"A3_Characters_F_EPA\",\"A3_Characters_F_EPB\"], true] call BIS_fnc_exportCfgVehicles;\n```","BIS Functions\\BIS_fnc_exportCfgVehiclesAssetDB.md":"Copies `CfgVehicles` information to clipboard in wiki format.\n\n\n---\n*Syntaxes:*\n\n[side, category] call `BIS_fnc_exportCfgVehiclesAssetDB`\n\n---\n*Example 1:*\n\n```sqf\n[0]   spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles EAST\n[1]   spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles WEST\n[2]   spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles GUER\n[3,0] spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles CIV\n[3,1] spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles Structures\n[3,2] spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles Ruins & Wrecks\n[3,3] spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles Equipment\n[3,4] spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles EMPTY\n[3,5] spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles VR Objects\n[3,6] spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles Animals\n[]    spawn BIS_fnc_exportCfgVehiclesAssetDB;\t// exports Arma 3 CfgVehicles Other:\n\t\t\t\t\t\t\t\t\t\t\t\t// Unknown, Enemy, Friendly, Modules, Empty, Ambient Life\n```\nSee:\n{{Columns|4|\n* `Arma 3 CfgVehicles EAST`\n* `Arma 3 CfgVehicles WEST`\n* `Arma 3 CfgVehicles GUER`\n* `Arma 3 CfgVehicles CIV`\n* `Arma 3 CfgVehicles Structures`\n* `Arma 3 CfgVehicles Ruins & Wrecks`\n* `Arma 3 CfgVehicles Equipment`\n* `Arma 3 CfgVehicles EMPTY`\n* `Arma 3 CfgVehicles VR Objects`\n* `Arma 3 CfgVehicles Animals`\n* `Arma 3 CfgVehicles Other`\n}}","BIS Functions\\BIS_fnc_exportCfgWeapons.md":"Export list of weapons for Community Wiki `:Category:Arma 3: Assets|Arma 3 Assets Category`.\n\n\n---\n*Syntaxes:*\n\n[mode, patches, types] spawn `BIS_fnc_exportCfgWeapons`\n\n---\n*Example 1:*\n\nexport `Arma 3: CfgWeapons Weapons]], [[Arma 3: CfgWeapons Vehicle Weapons]], [[Arma 3: CfgWeapons Items]], [[Arma 3: CfgWeapons Equipment`, screenshots:\n\n```sqf\n[\"Weapon\"]\t\t\tspawn BIS_fnc_exportCfgWeapons;\t// Arma 3: CfgWeapons Weapons\n[\"VehicleWeapon\"]\tspawn BIS_fnc_exportCfgWeapons;\t// Arma 3: CfgWeapons Vehicle Weapons\n[\"Item\"]\t\t\tspawn BIS_fnc_exportCfgWeapons;\t// Arma 3: CfgWeapons Items\n[\"Equipment\"]\t\tspawn BIS_fnc_exportCfgWeapons;\t// Arma 3: CfgWeapons Equipment\n[\"screenshots\"]\t\tspawn BIS_fnc_exportCfgWeapons;\t// screenshots\n[\"screenshotsTest\"]\tspawn BIS_fnc_exportCfgWeapons;\t// screenshots test mode, does nothing\n```","BIS Functions\\BIS_fnc_exportConfigHierarchy.md":"Export config hierarchy of given config.\n\n\n---\n*Syntaxes:*\n\n[config,class] call `BIS_fnc_exportConfigHierarchy`\n\n---\n*Example 1:*\n\n```sqf\n[ configFile >> \"CfgWeapons\" ] call BIS_fnc_exportConfigHierarchy;\n```\n\n*Example 2:*\n\n```sqf\n[ configFile >> \"CfgWeapons\", \"LandVehicle\" ] call BIS_fnc_exportConfigHierarchy;\n```","BIS Functions\\BIS_fnc_exportCuratorCostTable.md":"<pre>/*\n\n\tDescription:\n\tGenerate spreadsheet with object classes and copy it to clipboard.\n\tThe table will generate export code to be used in BIS_fnc_curatorObjectRegisteredTable\n\n\tParameter(s):\n\t\t0 (Optional): ARRAY of STRINGs - supported addons (classes from CfgPatches). When empty, all preloaded addons will be added. Use empty string to export just the cost calculation.\n\t\t1 (Optional): STRING - format, can be \"ods\" or \"xls\"\n\t\t2 (Optional): STRING - name of sheet with cost calculation. When empty, the calculation will be inserted on top of the table\n\t\t3 (Optional): ARRAY of SIDEs or NUMBERs - filter only objects of listed sides or side IDs. Supported sides are west, east, resistance, civilian, sideUnknown and sideLogic\n\t\t4 (Optional): CODE - condition for class to be listed. Config path to the class is passed as an argument (default: {true})\n\t\t5 (Optional): CODE - default cost, must return STRING. When empty string is returned, no default cost will be used (default: {\"\"})\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_exportCuratorCostTable` -->\n\n---\n","BIS Functions\\BIS_fnc_exportEditorPreviews.md":"Export screenshots of objects for `Eden Editor` and Community Wiki to **<Arma 3 Profile>\\Screenshots\\EditorPreviews** directory. See `:Category:Arma 3: Assets|Arma 3 assets`.\n\n\n---\n*Syntaxes:*\n\n[duration, type, sides, mods, addons, classes] spawn `BIS_fnc_exportEditorPreviews`\n\n---\n*Example 1:*\n\n```sqf\n// All objects\n[] spawn BIS_fnc_exportEditorPreviews;\n```\n\n*Example 2:*\n\n```sqf\n// All characters and vehicles. Capturing delay will be 0.5 seconds\n[0.5, \"vehicles\"] spawn BIS_fnc_exportEditorPreviews;\n```\n\n*Example 3:*\n\n```sqf\n// BLUFOR characters and vehicles\n[nil, \"vehicles\", [west]] spawn BIS_fnc_exportEditorPreviews;\n```\n\n*Example 4:*\n\n```sqf\n// Props in Karts DLC\n[nil, \"props\", [], [\"kart\"]] spawn BIS_fnc_exportEditorPreviews;\n```\n\n*Example 5:*\n\n```sqf\n// All objects in specified addons\n[nil, \"all\", [], [], [\"A3_Armor_F_Slammer\", \"A3_Air_F_Heli_Heli_Transport_03\"]] spawn BIS_fnc_exportEditorPreviews;\n```\n\n*Example 6:*\n\n```sqf\n// BLUFOR characters and vehicles in Marksmen DLC\n[nil, \"vehicles\", [west], [\"mark\"]] spawn BIS_fnc_exportEditorPreviews;\n```\n\n*Example 7:*\n\n```sqf\n// Only the B_Soldier_F\n[nil, \"all\", [], [], [], [\"B_Soldier_F\"]] spawn BIS_fnc_exportEditorPreviews;\n```","BIS Functions\\BIS_fnc_exportFunctionsToWiki.md":"Export function descriptions to Community Wiki. Exported text will be copied to clipboard in XML format.<br>\n`Wiki Admins` can import them using ``Special:Import``.<br>\nIf the page already exists, it will be replaced only when `timestamp` is newer.\n\n\n---\n*Syntaxes:*\n\n[filter, timestamp] spawn `BIS_fnc_exportFunctionsToWiki`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn BIS_fnc_exportFunctionsToWiki; // export all functions\n```\n\n*Example 2:*\n\n```sqf\n`\"\", \"Arrays\"` spawn BIS_fnc_exportFunctionsToWiki; // export all Array functions\n```\n\n*Example 3:*\n\n```sqf\n`\"\", \"\", [\"BIS_fnc_log\", \"BIS_fnc_param\"`] spawn BIS_fnc_exportFunctionsToWiki; // export specific functions\n```","BIS Functions\\BIS_fnc_exportGroupFormations.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_exportGroupFormations` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_exportGroupFormations;\n``` -->","BIS Functions\\BIS_fnc_exportGUIBaseClasses.md":"Export GUI macros and base classes to the clipboard.\n\n\n---\n*Syntaxes:*\n\nmode call `BIS_fnc_exportGUIBaseClasses`\n\n---\n*Example 1:*\n\n```sqf\n\"all\" call BIS_fnc_exportGUIBaseClasses;\n```","BIS Functions\\BIS_fnc_exportInventory.md":"Exports unit's loadout as a `String`, also ` copies` it to clipboard.\n\n\n---\n*Syntaxes:*\n\n[unit, type, includeIdentity] call `BIS_fnc_exportInventory`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"init\", true] call BIS_fnc_exportInventory;\n```","BIS Functions\\BIS_fnc_exportMapToBiTXT.md":"Returns terrain height map to BiTXT (Universal Bistudio TXT) format, which can be imported to `Object Builder`. Output is also `copied to clipboard`.\n\n\n---\n*Syntaxes:*\n\n[resolution, size, zCoeff] call `BIS_fnc_exportMapToBiTXT`\n\n---\n*Example 1:*\n\n```sqf\n[10, 10, 1] call BIS_fnc_exportMapToBiTXT;\n```\n\n*Example 2:*\n\n```sqf\ncall BIS_fnc_exportMapToBiTXT;\n```","BIS Functions\\BIS_fnc_exportVehicle.md":"Export vehicle settings\n\n\n---\n*Syntaxes:*\n\n[vehicle,vehicleClass] call `BIS_fnc_exportVehicle`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_tank,\"\"] call BIS_fnc_exportVehicle;\n\n//Returns \n\"[\n  _this,\n  [\"\"Hex\"\",1], \n  [\"\"showCamonetHull\"\",1,\"\"showCamonetTurret\"\",1]\n] call BIS_fnc_initVehicle;\"\n```\n\n*Example 2:*\n\n```sqf\n[BIS_tank] call BIS_fnc_exportVehicle;\n\n//Returns \n\"_veh = createVehicle [\"\"O_MBT_04_cannon_F\"\",position player,[],0,\"\"NONE\"\"];\n[\n  _veh,\n  [\"\"Hex\"\",1], \n  [\"\"showCamonetHull\"\",1,\"\"showCamonetTurret\"\",1]\n] call BIS_fnc_initVehicle;\"\n```","BIS Functions\\BIS_fnc_EXP_camp_addTickets.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_addTickets`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_balanceGroup.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tBalances a group depending on the amount of connected players\n\n\tParameters:\n\t\t_group: The group to balance\n\t\t_minCount: The minimal count of units group must end up with\n\t\t_bExcludeVehicleRoles: Whether to exclude units in important vehicle roles (driver, gunner, commander)\n\n\tReturns:\n\t\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_balanceGroup`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_checkpoint.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\t\tSet's a mission checkpoint, in single-player an auto save happens, in multiplayer a new respawn position is added\n\n\tParameters:\n\t\t_target: The target namespace\n\t\t_position: The desired position\n\t\t_name: The name of the position\n\n\tReturns:\n\t\tAdded respawn position identifier\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_checkpoint`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_dynamicAISkill.md":"Changes AI skill based on player count, responding to player connected / player disconnected events. This function does exactly the same as `BIS_fnc_EXP_camp_setSkill` execept that it automatically executes when a player joins or disconnects.\n\n\n---\n*Syntaxes:*\n\n[mode, affectedSides] call `BIS_fnc_EXP_camp_dynamicAISkill`\n\n---\n*Example 1:*\n\n```sqf\n[\n\ttrue,\n\t[\n\t\t[WEST, 0.1, 0.2, 0.7, 0.6],\n\t\t[EAST, 0.1, 0.2, 0.7, 0.6]\n\t]\n] call BIS_fnc_EXP_camp_dynamicAISkill;\n```","BIS Functions\\BIS_fnc_EXP_camp_getCinematicMode.md":"Returns whether or not player is in cinematic mode.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_EXP_camp_getCinematicMode;\n```","BIS Functions\\BIS_fnc_EXP_camp_getPlayersGroup.md":"Returns group that players belong to in coop campaign scenario.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\nprivate _group = call BIS_fnc_EXP_camp_getPlayersGroup;\n```","BIS Functions\\BIS_fnc_EXP_camp_guidedProjectile.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tSpawns object of given class and makes it travel, hooming towards the target\n\tTo be used with CfgAmmo type of entity, but can be used with virtually any kind of object\n\n\tParameters:\n\t\t_startPos: \t\tARRAY \t\t\tThe initial position of the projectile (ASL)\n\t\t_class: \t\tSTRING or OBJECT\tThe class name of the object to spawn or an object entity already existing\n\t\t_target:\t\tOBJECT\t\t\tThe target object the projectile will be hooming towards to\n\t\t_speed:\t\t\tSCALAR\t\t\tThe speed the object should assume\n\t\t_destroyTarget:\t\tBOOL\t\t\tWhether to force destruction of the target object on detonation\n\t\t_localOffset:\t\tARRAY\t\t\tThe model space position offset that projectile should be hooming towards to\n\t\t_minDistanceToTarget:\tSCALAR\t\t\tThe minimal distance projectile needs to be from target position to enter ballistic mode\n\t\t_function\t\tSTRING\t\t\tThe function to execute on the created object with params [<object>]\n\t\t_isGlobalFunction\tBOOL\t\t\tWhether the executed function should be executed on all connected machine, false to execute only on the server\n\n\tReturns:\n\t\tNOTHING\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_guidedProjectile`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_hasMissionStarted.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tReturns whether the mission has actually started (see Manager)\n\n\tParameters:\n\t\tNothing\n\n\tReturns:\n\t\tTrue if mission was started, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_hasMissionStarted`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_IFF.md":"Simple handling of the Support Team's scripted IFF.\n\n\n---\n*Syntaxes:*\n\n[units] call `BIS_fnc_EXP_camp_IFF`\n\n---\n*Example 1:*\n\n```sqf\n[units group player] call BIS_fnc_EXP_camp_IFF;\n```\n\n*Example 2:*\n\n```sqf\nindividualUnit setVariable [\"BIS_iconAlways\", true];\t// to always show the icon and name of a unit\nindividualUnit setVariable [\"BIS_iconShow\", false];\t\t// to hide the icon\nindividualUnit setVariable [\"BIS_iconName\", false];\t\t// to hide the name\n```","BIS Functions\\BIS_fnc_EXP_camp_initCharacter.md":"Assigns correct appearance and loadout of story characters based upon their vehicle classnames.\n\n\n---\n*Syntaxes:*\n\n[unit, mode] call `BIS_fnc_EXP_camp_initCharacter`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_unit,\"NIGHT\"] call BIS_fnc_EXP_camp_initCharacter;\n```","BIS Functions\\BIS_fnc_EXP_camp_initClasses.md":"Initializes the classes players can choose from before spawning.\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_EXP_camp_initClasses`\n\n---\n*Example 1:*\n\n```sqf\n[\"NIGHT\"] call BIS_fnc_EXP_camp_initClasses;\n```","BIS Functions\\BIS_fnc_EXP_camp_initDifficulty.md":"Initializes difficulty settings in Apex Protocol campaign.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_EXP_camp_initDifficulty;\n```","BIS Functions\\BIS_fnc_EXP_camp_lobby.md":"<pre>/*\n\n\tPROJECT:\tR&D\n\tAUTHOR:\t\tEndstar\n\tDATE:\t\t18-04-2016\n\n\tfn_EXP_camp_lobby.sqf\n\n\t\tCampaign Lobby: Core Function\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_clearVars.md":"<pre>/*\n\n\tPROJECT:\tR&D\n\tAUTHOR:\t\tEndstar\n\tDATE:\t\t18-04-2016\n\n\tfn_EXP_camp_lobby_clearVars.sqf\n\n\t\tCampaign Lobby: Clear variables\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_clearVars`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_ctrlSetColor.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_ctrlSetColor.sqf\n\n\t\tCampaign Lobby: Updates controls with defined colors\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_ctrlSetColor`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_findHost.md":"<pre>/*\n\n\tPROJECT:\tR&D\n\tAUTHOR:\t\tEndstar\n\tDATE:\t\t18-04-2016\n\n\tfn_EXP_camp_lobby_findHost.sqf\n\n\t\tCampaign Lobby: Find host\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_findHost`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_getHostSettings.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    08-08-2016\n\n\tfn_EXP_camp_lobby_getHostSettings.sqf\n\n\t\tCampaign Lobby: Grabs the host settings for respawn and revive\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_getHostSettings`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_getPlayerSquadName.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_getPlayerSquadName.sqf\n\n\t\tCampaign Lobby: Return the player squad name\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_getPlayerSquadName`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_go.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_go.sqf\n\n\t\tCampaign Lobby: Run Mission\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_go`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_intro.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_intro.sqf\n\n\t\tCampaign Lobby: On Load Function (Does nothing)\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_intro`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_launch.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_launch.sqf\n\n\t\tCampaign Lobby: Launch Function\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_launch`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_loop.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_loop.sqf\n\n\t\tCampaign Lobby: Update UI Loop\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_loop`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_missionCountdown.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_missionCountdown.sqf\n\n\t\tCampaign Lobby: Countdown to run mission\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_missionCountdown`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_onLoad.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_onLoad.sqf\n\n\t\tCampaign Lobby: On Load Function (Does nothing)\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_onLoad`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_onUnLoad.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_onUnLoad.sqf\n\n\t\tCampaign Lobby: On display unload function - clear variables and close as necessary\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_onUnLoad`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_playMissionVideo.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_playMissionVideo.sqf\n\n\t\tCampaign Lobby: Creates the control and plays mission video\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_playMissionVideo`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_serverPing.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_serverPing.sqf\n\n\t\tCampaign Lobby: Updates player status\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_serverPing`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_serverUpdate.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_serverUpdate.sqf\n\n\t\tCampaign Lobby: Server update function (runs on \"host\" machine for dedicated servers)\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_serverUpdate`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_structuredText.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_structuredText.sqf\n\n\t\tCampaign Lobby: Formats structured text\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_structuredText`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_UIMilitaryManager.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    15-08-2016\n\n\tfn_EXP_camp_lobby_UIMilitaryManager.sqf\n\n\t\tCampaign Lobby: Updates military efficiency based on mission settings\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_UIMilitaryManager`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_UIMissionCountdown.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_missionCountdown.sqf\n\n\t\tCampaign Lobby: Countdown to run mission\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_UIMissionCountdown`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_UIMissionManager.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_UIMissionManager.sqf\n\n\t\tCampaign Lobby: Handles UI behaviour of tree mission options\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_UIMissionManager`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_UIOverlayManager.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_updateIntel.sqf\n\n\t\tCampaign Lobby: Updates the mission overview and intel from tree interactions\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_UIOverlayManager`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_UIProgressManager.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_UIProgressManager.sqf\n\n\t\tCampaign Lobby: Handles Progress button UI behaviour\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_UIProgressManager`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_UISettingsManager.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    08-08-2016\n\n\tfn_EXP_camp_lobby_UISettingsManager.sqf\n\n\t\tCampaign Lobby: Handles the mission settings for Respawn and Revive\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_UISettingsManager`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_updateHostSettings.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    08-08-2016\n\n\tfn_EXP_camp_lobby_updateHostSettings.sqf\n\n\t\tCampaign Lobby: Updates all clients with the latest host settings\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_updateHostSettings`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_updateIntel.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_updateIntel.sqf\n\n\t\tCampaign Lobby: Updates the mission overview and intel from tree interactions\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_updateIntel`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    15-08-2016\n\n\tfn_EXP_camp_lobby_updateMilitaryEfficiency.sqf\n\n\t\tCampaign Lobby: Updates military efficiency radial bar\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_updateMilitaryEfficiency`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_updatePlayers.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_updatePlayers.sqf\n\n\t\tCampaign Lobby: Updates UI based on player status changes\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_updatePlayers`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_lobby_updatePlayerStatus.md":"<pre>/*\n\n\tPROJECT: R&D\n\tAUTHOR:  Endstar\n\tDATE:    18-04-2016\n\n\tfn_EXP_camp_lobby_updatePlayerStatus.sqf\n\n\t\tCampaign Lobby: Updates player status\n\n\tParams\n\n\t\t0:\n\n\tReturn\n\n\t\t0:\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_lobby_updatePlayerStatus`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_manager.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tHandles match start synchronization between server and clients\n\n\tThe following states are valid:\n\t- Waiting\t: State is set when joining the mission\n\t- Intro\t\t: State is set when mission intro starts\n\t- Loadout\t: State is set when mission loadout selection starts\n\t- Started\t: State is set when mission gameplay starts\n\n\tParameters:\n\t\t_introVideos: The videos directory to play, empty array leads to skipping intro videos completely\n\t\t_introVideosSubtitles: The subtitles files to execute for intro videos\n\t\t_minWaitDelay: The time to wait after waiting has been completed\n\t\t_minLoadoutDelay: The time to wait after loadout has been completed\n\t\t_maxWaitDelay: The maximum time to wait for all players during the waiting, if reached, mission is forced onto next state\n\t\t_maxLoadoutDelay: The maximum time to wait for all players during the loadout, mission is forced onto next state\n\t\t_bWantsLoadoutSelection: Whether or not to go into loadout selection, if false this is skipped\n\t\t_bNoCinematics: Whether to force no cinematics, these need to be handled manually then\n\n\tReturns:\n\t\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_manager`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_manager_getState.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tGet's the mission state, can be one of \"Waiting\", \"Intro\", \"Loadout\" or \"Started\"\n\n\tParameters:\n\t\tNothing\n\n\tReturns:\n\t\tThe mission state\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_manager_getState`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_manager_onPlayerRegistered.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tA player is registered for given state\n\n\tParameters:\n\t\t_who: The player to be registered\n\t\t_listId: The state corresponding list, and where given player will be added to\n\n\tReturns:\n\t\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_manager_onPlayerRegistered`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_manager_setState.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tSet's the state of the mission\n\n\tParameters:\n\t\t_state: The new mission state to set\n\n\tReturns:\n\t\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_manager_setState`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_manager_triggerEvent.md":"<pre>/*\n\tAuthor: Nelson Duarte\n\n\tDescription:\n\tTriggers corresponding event for given mission state\n\n\tParameters:\n\t\t_state: The mission state\n\n\tReturns:\n\t\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_EXP_camp_manager_triggerEvent`\n\n---\n","BIS Functions\\BIS_fnc_EXP_camp_playerChecklist.md":"Display a checklist of players that don't meet the given condition, thus preventing mission progress.\n\n\n---\n*Syntaxes:*\n\n[conditionProceed, conditionPlayer, code] call `BIS_fnc_EXP_camp_playerChecklist`\n\n---\n*Example 1:*\n\n```sqf\n[{count allPlayers == 4}] call BIS_fnc_EXP_camp_playerChecklist;\n```","BIS Functions\\BIS_fnc_EXP_camp_playSubtitles.md":"Displays the given subtitles at the correctly defined moments. Each array added to the parameters represents one subtitle.\n\n\n---\n*Syntaxes:*\n\n[subtitleDetail1, subtitleDetail2, ...] spawn `BIS_fnc_EXP_camp_playSubtitles`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t[\"CROSSROAD\", \"Mission is a go, I repeat, mission is a go! Crossroad, out.\", 0]\n] spawn BIS_fnc_EXP_camp_playSubtitles; // Shows a subtitle immediately\n```\n\n*Example 2:*\n\n```sqf\n[\n\t[\"Speaker1\", \"Subtitle1\", 0],\n\t[\"Speaker2\", \"Subtitle2\", 5],\n\t[\"Speaker3\", \"Subtitle3\", 10],\n\t[\"Speaker4\", \"Subtitle5\", 15]\n] spawn BIS_fnc_EXP_camp_playSubtitles; // Displays 4 subtitles with 5 seconds between them\n```","BIS Functions\\BIS_fnc_EXP_camp_playTimelineVideo.md":"Plays a video with `BIS_fnc_EXP_camp_setCinematicMode` enabled.\n\n\n---\n*Syntaxes:*\n\n[videoPath] call `BIS_fnc_EXP_camp_playTimelineVideo`\n\n---\n*Example 1:*\n\n```sqf\n\"someVideoPath\" call BIS_fnc_EXP_camp_playTimelineVideo;\n```","BIS Functions\\BIS_fnc_EXP_camp_replaceVehicles.md":"Replaces textures of \"I_G_Offroad_01_armed_F\" and \"I_G_Quadbike_01_F\" randomly.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_EXP_camp_replaceVehicles;\n```","BIS Functions\\BIS_fnc_EXP_camp_setCinematicMode.md":"Sets cinematic mode, with cinematic mode enabled the sounds are muted and screen is black.\n\n\n---\n*Syntaxes:*\n\n[mode, fadeBlack, fadeSound] call `BIS_fnc_EXP_camp_setCinematicMode`\n\n---\n*Example 1:*\n\n```sqf\n[true, 3, 3] call BIS_fnc_EXP_camp_setCinematicMode;\n```","BIS Functions\\BIS_fnc_EXP_camp_setSkill.md":"Sets skill for an entire AI side. The skill will be calculated using a lerp function. Function will take player as multiplier.\n\n\n---\n*Syntaxes:*\n\n[side,skillMin,skillAimMin,skillMax,skillAimMax] call `BIS_fnc_EXP_camp_setSkill`\n\n---\n*Example 1:*\n\n```sqf\n[WEST,0.1,0.2,0.7,0.6] call BIS_fnc_EXP_camp_setSkill;\n```","BIS Functions\\BIS_fnc_EXP_camp_SITREP.md":"Displays multiple lines of text in given order.<br>\n\n\n---\n*Syntaxes:*\n\n[line1, line2, lineX] spawn `BIS_fnc_EXP_camp_SITREP`\n\n---\n*Example 1:*\n\n```sqf\n`\"line1\", 4, 5], [\"line2\", 3, 5, 8` spawn BIS_fnc_EXP_camp_SITREP;\n```","BIS Functions\\BIS_fnc_fadeEffect.md":"Easily carry out complex fading. Default values will be used if parameters are not defined or set to nil.\n\n\n---\n*Syntaxes:*\n\n[fadeInOrOut, blackOrWhite, duration, blur, music, ending, success] spawn `BIS_fnc_fadeEffect`\n\n---\n*Example 1:*\n\n```sqf\n[1, \"WHITE\", 5, 1] spawn BIS_fnc_fadeEffect;\n```","BIS Functions\\BIS_fnc_fatigueEffect.md":"Effects for high fatigue values. Internal engine use only, as it relies on internal BIS_* variables.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_fatigueEffect`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_fatigueEffect;\n```","BIS Functions\\BIS_fnc_feedbackInit.md":"Init function for feedback system. Declaration of variables, eventhandlers, etc. for in-game effects. Engine use only.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_feedbackInit`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_feedbackInit;\n```","BIS Functions\\BIS_fnc_feedbackMain.md":"Main feedback `FSM`, used for feedback effects (fatigue, drowning, injury etc.). Internal use only.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_feedbackMain`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_feedbackMain;\n```","BIS Functions\\BIS_fnc_ffvUpdate.md":"Update Firing From Vehicle feature depending on condition defined in turret's config.\n\n\n---\n*Syntaxes:*\n\nvehicle call `BIS_fnc_ffvUpdate`\n\n---\n*Example 1:*\n\n```sqf\nif (local _vehicle) then\n{\n\t_vehicle animate [\"Door_1\", 1];\n\t_vehicle call BIS_fnc_ffvUpdate;\n};\n```","BIS Functions\\BIS_fnc_filterString.md":"Removes characters from a string based on the list of allowed characters.\n\n\n---\n*Syntaxes:*\n\n[text, allowedChars] call `BIS_fnc_filterString`\n\n---\n*Example 1:*\n\n```sqf\n[\"Player 1 @%!@$\"] call BIS_fnc_filterString; // returns \"Player1\"\n```\n\n*Example 2:*\n\n```sqf\n[\"Player 1\", \"aelrPy\"] call BIS_fnc_filterString; // returns \"Player\"\n```","BIS Functions\\BIS_fnc_findAllNestedElements.md":"Returns array of paths to all matching elements in deeply nested array, similar to `BIS_fnc_findNestedElement` but with all occurences.\n\n\n---\n*Syntaxes:*\n\n[array, query] call `BIS_fnc_findAllNestedElements`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = `1, 2, 3], [[1, 2, 3], 1, 2, 3`;\n_result = [_array, 2] call BIS_fnc_findAllNestedElements; // returns `0, 1], [1, 0, 1], [1, 2`\n```","BIS Functions\\BIS_fnc_findExtreme.md":"Returns the minimum or maximum value in an array of numbers.\n\n\n---\n*Syntaxes:*\n\n[numbers, mode] call `BIS_fnc_findExtreme`\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = [[1,4,5,8,3,7], 1] call BIS_fnc_findExtreme; // returns 8\n_result = [[1,4,5,8,3,7], 0] call BIS_fnc_findExtreme; // returns 1\n```","BIS Functions\\BIS_fnc_findInPairs.md":"Searches the associative array for the first occurance of the key string and returns its index. Seach is not case-sensitive.\n\n\n---\n*Syntaxes:*\n\n[array, key] call `BIS_fnc_findInPairs`\n\n---\n*Example 1:*\n\n```sqf\n`[\"apple\",3],[\"pear\",2`,\"apple\"] call BIS_fnc_findInPairs; // Returns 0\n```","BIS Functions\\BIS_fnc_findLookAt.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGiven target location, calculates orientation vectors facing direction\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\n\tReturns:\n\tArray - In format [Dir Vector, Up Vector]\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_findLookAt`\n\n---\n","BIS Functions\\BIS_fnc_findNestedElement.md":"Function to find item in nested arrays and return a path to the first match.\n\n\n---\n*Syntaxes:*\n\n[array, query] call `BIS_fnc_findNestedElement`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = `1, 2], [3, 4`;\n_path = [_array, 3] call BIS_fnc_findNestedElement; // expected result: [1, 0]\n// ((_array select 1) select 0) == 3\n```","BIS Functions\\BIS_fnc_findOverwatch.md":"Selects a position that provides overwatch onto another position.\n\n\n---\n*Syntaxes:*\n\n[target, maxDistance, minDistance, minHeightAbove, searchCentre] call `BIS_fnc_findOverwatch`\n\n---\n*Example 1:*\n\n```sqf\n[getPosATL enemyTank, 300, 75, 20, getPosATL player] call BIS_fnc_findOverwatch;\n```","BIS Functions\\BIS_fnc_findSafePos.md":"This function generates position on a map according to several given parameters (see diagram).\n`Image:bis_fnc_findsafepos.jpg|600px|thumb|Diagram`\nThe position `pos` will be generated inside an area which resides between `minDist` and `maxDist` from the given `center`. If `objDist` is also specified, the position will be selected `objDist` away from nearest terrain object. If `maxGrad` > 0 then the position will be also checked for how flat the area around is within `objDist` radius. The function can additionally be instructed to generate position specifically on water or land (`waterMode`) or on a shoreline (`shoreMode`). The `shoreLine` param will be ignored if position is not requested specifically on land.<br><br>\nAdditionally, generated position could be checked against the list of blacklisted positions `blacklistPos`. If search for suitable position failed, `defaultPos` position will be used. The format for `defaultPos` is array with 2 positions: [posOnLand, posOnWater].\n\n\n---\n*Syntaxes:*\n\n[center, minDist, maxDist, objDist, waterMode, maxGrad, shoreMode, blacklistPos, defaultPos] call `BIS_fnc_findSafePos`\n\n---\n*Example 1:*\n\nFind position minimum 1m from from player but not further than 150m, not closer than 3m to any other object, not in the water, maximum gradient of 20, not on the shoreline:\n\n```sqf\nprivate _pos = [player, 1, 150, 3, 0, 20, 0] call BIS_fnc_findSafePos;\n```\n\n*Example 2:*\n\n```sqf\nprivate _pos = [getPos player, 2000, 5000, 1, 0, 0.7, 0, [], [getPos player, getPos player]] call BIS_fnc_findSafePos;\n```\n\n*Example 3:*\n\n```sqf\nprivate _pos = [[], 0, 1000] call BIS_fnc_findSafePos;\n```","BIS Functions\\BIS_fnc_finishCuratorChallenge.md":"Handle repeated curator challenges.\n\tWhen rewards defined in the argument are exceeded, refilling points bar fill be offered instead. Number of challenges can be retrieved by\n\n\n---\n*Syntaxes:*\n\n[curator,input,taskState]] call `BIS_fnc_finishCuratorChallenge`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_curator,[\"DestroyVehicle\",BIS_curator],\"SUCCEEDED\"] call BIS_fnc_finishCuratorChallenge;\n_number = BIS_curator getVariable \"DestroyVehicle\";\n```","BIS Functions\\BIS_fnc_fire.md":"Makes a unit or a vehicle fire given muzzle. Make sure that there is some ammo to fire, and, in case of a unit, the weapon with given muzzle is already selected. It can be used to fire pretty much any muzzle on unit or vehicle from anywhere. Available weapons could usually be found with `weapons`, `weaponsTurret` and `allTurrets` commands.\n\n\n---\n*Syntaxes:*\n\n[entity, muzzle, turret] call `BIS_fnc_fire`\n\n---\n*Example 1:*\n\n```sqf\nmarshall = \"B_APC_Wheeled_01_cannon_F\" createVehicle position player;\ncreateVehicleCrew marshall;\n\n[marshall, \"HE\"] call BIS_fnc_fire; // fires HE muzzle of the main cannon\n[marshall, \"AP\"] call BIS_fnc_fire; // fires AP muzzle of the main cannon\n[marshall, \"autocannon_40mm_CTWS\"] call BIS_fnc_fire; // fires HE muzzle, because it is default\n[marshall, \"LMG_M200_body\"] call BIS_fnc_fire; // fires machine gun\n[marshall, \"SmokeLauncher\"] call BIS_fnc_fire; // fires smoke launcher\n[marshall, \"TruckHorn\"] call BIS_fnc_fire; // beeps the horn\n```\n\n*Example 2:*\n\n```sqf\n[bob, \"SmokeShellMuzzle\"] call BIS_fnc_fire;  // bob throws smoke grenade, if he has one\n[bob, \"HandGrenadeMuzzle\"] call BIS_fnc_fire; // bob throws hand grenade, if he has one\n```\n\n*Example 3:*\n\n```sqf\nblackfoot = \"B_Heli_Attack_01_dynamicLoadout_F\" createVehicle position player;\ncreateVehicleCrew blackfoot;\n\n[blackfoot, \"missiles_DAGR\"]   call BIS_fnc_fire; // fires missiles\n[blackfoot, \"missiles_ASRAAM\"] call BIS_fnc_fire; // fires missiles\n[blackfoot, \"gatling_20mm\"]    call BIS_fnc_fire; // fires machine gun\n[blackfoot, \"CMFlareLauncher\"] call BIS_fnc_fire; // fires chaff\n```\n\n*Example 4:*\n\n```sqf\n[vehicle mortargunner, \"mortar_82mm\"] call BIS_fnc_fire; // mortargunner fires mortar\n```","BIS Functions\\BIS_fnc_firedBombDemine.md":"Function used inside the IDAP showcase.\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_firedBombDemine` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_firedBombDemine;\n``` -->","BIS Functions\\BIS_fnc_fireSupport.md":"Mortar/artillery fire support.\n\n\n---\n*Syntaxes:*\n\n[arty,target,mag,radius,rounds,delay,conditionEnd,safezone] spawn `BIS_fnc_fireSupport`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Mortar, [3600,3600,0], \"\", 100, 24, 10] spawn BIS_fnc_fireSupport;\n```\n\n*Example 2:*\n\n```sqf\n[BIS_Mortar, BIS_Player, \"8Rnd_82mm_Mo_shells\", 100, 24, 10] spawn BIS_fnc_fireSupport;\n```\n\n*Example 3:*\n\n```sqf\n[BIS_Mortar, \"BIS_mrkTargetArea\", \"8Rnd_82mm_Mo_shells\", 100, 24, 10, { BIS_Player distance BIS_EscapeZone < 100 }] spawn BIS_fnc_fireSupport;\n```","BIS Functions\\BIS_fnc_fireSupportCluster.md":"Virtual fire support - cluster shell.\n\n\n---\n*Syntaxes:*\n\n[position,ammo,radius,rounds,delay,conditionEnd,safezone,altitude,velocity,sounds] spawn `BIS_fnc_fireSupportCluster`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Player, \"G_40mm_HEDP\", 100, [4,10], 10] spawn BIS_fnc_fireSupportCluster;\n```\n\n*Example 2:*\n\n```sqf\n[BIS_Victim,\"G_40mm_HEDP\", 100, [5,25], 10, { dayTime > 20 }, 75, 500, 150, [\"shell1\", \"shell2\"]] spawn BIS_fnc_fireSupportCluster;\n```\n\n*Example 3:*\n\n```sqf\n[\"BIS_mrkTargetArea\", \"\", 100, [4,10], 10, { BIS_Player distance BIS_EscapeZone < 100 }] spawn BIS_fnc_fireSupportCluster;\n```","BIS Functions\\BIS_fnc_fireSupportVirtual.md":"Fires virtual mortar/artillery fire support.\n\n\n---\n*Syntaxes:*\n\n[target, mag, radius, rounds, delay, conditionEnd, safezone, alt, speed, sounds] spawn `BIS_fnc_fireSupportVirtual`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Player, \"Sh_82mm_AMOS\", 100, 24, 10] spawn BIS_fnc_fireSupportVirtual;\n```\n\n*Example 2:*\n\n```sqf\n[[3600, 3600, 0], nil, 100, 24, 10] spawn BIS_fnc_fireSupportVirtual;\n```\n\n*Example 3:*\n\n```sqf\n[BIS_Player, nil, 100, 24, 10, {dayTime > 20}, 50] spawn BIS_fnc_fireSupportVirtual;\n```","BIS Functions\\BIS_fnc_fixDate.md":"Checks the array with date data and makes sure the values are within the boundries.\n\n\n---\n*Syntaxes:*\n\ndate call `BIS_fnc_fixDate`\n\n---\n*Example 1:*\n\n```sqf\nprivate _fixedDate = [2033, -2, 89, 25, 75] call BIS_fnc_fixDate;\n```","BIS Functions\\BIS_fnc_flamesEffect.md":"Flames (texture) postprocess.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_flamesEffect`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_flamesEffect;\n```","BIS Functions\\BIS_fnc_flies.md":"Spawns flies around position.\n\n\n---\n*Syntaxes:*\n\n[position, `interval`, `areaSize`] call `BIS_fnc_flies`\n\n---\n*Example 1:*\n\n```sqf\nprivate _flies = [position deadBody, 0.05, 1.5] call BIS_fnc_flies;\n```","BIS Functions\\BIS_fnc_forceCuratorInterface.md":"Force curator interface, so user cannot exit it by pressing Zeus key.\n\n\n---\n*Syntaxes:*\n\n[mode, waitUntil] call `BIS_fnc_forceCuratorInterface`\n\n---\n*Example 1:*\n\n```sqf\n[ true, true ] call BIS_fnc_forceCuratorInterface;\n```","BIS Functions\\BIS_fnc_forceEnd.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_forceEnd` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_forceEnd;\n``` -->","BIS Functions\\BIS_fnc_formatCuratorChallengeObjects.md":"Format the list of objects compatible with curator challenge to be displayed in the task descriptipon.\n\n\n---\n*Syntaxes:*\n\nclasses call `BIS_fnc_formatCuratorChallengeObjects`\n\n---\n*Example 1:*\n\n```sqf\n[\"class_1\",\"class_2\"] call BIS_fnc_formatCuratorChallengeObjects;\n```","BIS Functions\\BIS_fnc_fps.md":"Function to measure FPS. Spawns code running for given time and displays result on screen `via` `titleText`, `globalChat` `and` `diag_log`.\nVariable `BIS_fps_output` is filled with `diag_log` content too.\n\n\n---\n*Syntaxes:*\n\n[duration, sceneId, startDelay] call `BIS_fnc_fps`\n\n---\n*Example 1:*\n\n```sqf\nprivate _scriptHandle = [10, \"50 units on screen\", 3] call BIS_fnc_fps;\n```","BIS Functions\\BIS_fnc_friendlySides.md":"Returns sides allied to the given side / object.\n\n\n---\n*Syntaxes:*\n\ntoCheck call `BIS_fnc_friendlySides`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_friendlySides; // -can- return [FRIENDLY,WEST,GUER,CIV]\n```","BIS Functions\\BIS_fnc_FTLmanager.md":"`FTL` (`F`riendly `T`o `L`ocal) manager tracks relationship between player and civilian side.<br>\n`FTL State` can be one of the following: \"LOW\", \"NEUTRAL\", \"HIGH\". See `FriendlyToLocal System`.\n\n\n---\n*Syntaxes:*\n\n[functionCalled, type] call `BIS_fnc_FTLmanager`\n\n---\n*Example 1:*\n\n```sqf\n[\"Init\"] call BIS_fnc_FTLmanager;\n```","BIS Functions\\BIS_fnc_functionMeta.md":"Returns function's meta data.\n\n\n---\n*Syntaxes:*\n\nfunctionName call `BIS_fnc_functionMeta`\n\n---\n*Example 1:*\n\n```sqf\n// returns [\"A3\\functions_f\\Debug\\fn_functionMeta.sqf\", \".sqf\", 0, false, false, false, \"A3\", \"Debug\", \"functionMeta\"]\n\"BIS_fnc_functionMeta\" call BIS_fnc_functionMeta;\n```\n\n*Example 2:*\n\n```sqf\n// returns [\"\", \"\", 0, false, false, false, \"\", \"\", \"\"]\n\"unknownFunction\" call BIS_fnc_functionMeta;\n```","BIS Functions\\BIS_fnc_functionPath.md":"Returns path to function file.\n\n\n---\n*Syntaxes:*\n\nfunctionName call `BIS_fnc_functionPath`\n\n---\n*Example 1:*\n\n```sqf\nprivate _path = \"BIS_fnc_wpLand\" call BIS_fnc_functionPath;\n```","BIS Functions\\BIS_fnc_functionsDebug.md":"Changes debug mode used when compiling functions from the `Arma 3: Functions Library]]. Also recompiles all functions. See [[Arma 3: Functions Library` for more information.\n\n\n---\n*Syntaxes:*\n\nmode call `BIS_fnc_functionsDebug`\n\n---\n*Example 1:*\n\n```sqf\n2 call BIS_fnc_functionsDebug;\n```","BIS Functions\\BIS_fnc_garage.md":"Splendid&trade; Virtual Arsenal Garage.\n\n\n---\n*Syntaxes:*\n\n[mode, params] call `BIS_fnc_garage`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_garage;\n```\n\n*Example 2:*\n\n```sqf\nplayer addAction [\"Open Garage\", {\n\n \t// create a position 30 meters infront of the player\n\t_pos = player getPos [30,getDir player];\n\n\t// create empty helipad at the position and save it in the global variable BIS_fnc_garage_center\n\tBIS_fnc_garage_center = createVehicle [\"Land_HelipadEmpty_F\", _pos, [], 0, \"CAN_COLLIDE\"];\n\n\t[\"Open\", true] call BIS_fnc_garage;\n}];\n```\n\n*Example 3:*\n\n```sqf\nplayer addAction [\"Open Garage\", {\n\n \t// create a position 30 meters infront of the player\n\t_pos = player getPos [30, getDir player];\n\n\t// create empty helipad at the position\n\t_vehicle = createVehicle [ \"Land_HelipadEmpty_F\", _pos, [], 0, \"CAN_COLLIDE\"];\n\n\t// pass created vehicle to function for use as position\n\t[\"Open\", [true, _vehicle]] call BIS_fnc_garage;\n}];\n```","BIS Functions\\BIS_fnc_garage3DEN.md":"The code is identical to the one of `BIS_fnc_garage`, except that **FNC_IS3DEN** is set to 1. For more information about the garage, visit `BIS_fnc_garage`\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_GC.md":"Sends an entity to the garbage collection queue. Replaces `Arma_2:_Garbage_Collector|Arma 2 Garbage Collector`.\n\n\n---\n*Syntaxes:*\n\nentity spawn `BIS_fnc_GC`\n\n---\n*Example 1:*\n\n```sqf\n[dude1] spawn BIS_fnc_GC;\n```\n\n*Example 2:*\n\n```sqf\n[dude1, group dude1, \"marker1\"] spawn BIS_fnc_GC;\n```","BIS Functions\\BIS_fnc_GCinit.md":"Initializes Garbage Collection.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_GCinit`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_GCinit;\n```","BIS Functions\\BIS_fnc_genericSentence.md":"Play generic sentence with probablity set by bis_genericSentenceMode variable (0.5 = 50%, 1 = 100%)\n\n\n---\n*Syntaxes:*\n\n[class, speaker, delay, canRepeat] call `BIS_fnc_genericSentence`\n\n---\n*Example 1:*\n\n```sqf\n[\"FeedbackFlightNegativeHeightTooHigh\"] call BIS_fnc_genericSentence;\n```\n\n*Example 2:*\n\n```sqf\n[\"FeedbackFlightNegativeSpeedTooSlow\",nil,5,true] call BIS_fnc_genericSentence;\n```","BIS Functions\\BIS_fnc_genericSentenceInit.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_genericSentenceInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_genericSentenceInit;\n``` -->","BIS Functions\\BIS_fnc_geometricMean.md":"Returns the [geometric mean](https://en.wikipedia.org/wiki/Geometric_mean) of an array of numbers.\n\n\n---\n*Syntaxes:*\n\narray call `BIS_fnc_geometricMean`\n\n---\n*Example 1:*\n\n```sqf\n[0,1,3] call BIS_fnc_geometricMean;//Returns 1.73205\n```","BIS Functions\\BIS_fnc_getAngleDelta.md":"Returns the smallest difference between two angles in degrees.\n\n\n---\n*Syntaxes:*\n\n[angleA, angleB] call `BIS_fnc_getAngleDelta`\n\n---\n*Example 1:*\n\n```sqf\nprivate _delta = [90,193] call BIS_fnc_getAngleDelta;//-103\n```","BIS Functions\\BIS_fnc_getArea.md":"Extracts area information from trigger, marker, location or array\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_getArea`\n\n---\n*Example 1:*\n\n```sqf\nprivate _area = [player, 100] call BIS_fnc_getArea;\n```","BIS Functions\\BIS_fnc_getBorderMarkers.md":"Retrieves marker names used in the border restrictions module.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_getBorderMarkers`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_getBorderMarkers;\n```","BIS Functions\\BIS_fnc_getCfg.md":"Smart-return config (extension for BIS_fnc_getCfgXXXX functions).\nCan by called 2 ways:\n* 1st way - passing config directly\n* 2nd way - passing array of strings or config and strings\n\n\n---\n*Syntaxes:*\n\ninput call `BIS_fnc_getCfg`\n\n---\n*Example 1:*\n\n```sqf\n( configFile >> \"BulletBubbles\" >> \"BulletBubbles1\" ) call BIS_fnc_getCfg;\n```\n\n*Example 2:*\n\n```sqf\n[ configFile >> \"BulletBubbles\" >> \"BulletBubbles1\" ] call BIS_fnc_getCfg;\n```\n\n*Example 3:*\n\n```sqf\n[ configFile, \"BulletBubbles\", \"BulletBubbles1\" ] call BIS_fnc_getCfg;\n```\n\n*Example 4:*\n\n```sqf\n[ \"Hubs\", \"A1\", \"QuickStart\", \"trigger\" ] call BIS_fnc_getCfg;\n```\n\n*Example 5:*\n\n```sqf\n[ \"Hubs\" ] call BIS_fnc_getCfg;\n```","BIS Functions\\BIS_fnc_getCfgData.md":"Smart-return number, text or array value from config.<br><br>- Default syntax works for any config.<br>\n- Alternative syntax is for comfortable working with mission `description.ext`.\n\n\n---\n*Syntaxes:*\n\nconfig call `BIS_fnc_getCfgData`\n\narray call `BIS_fnc_getCfgData`\n\n---\n*Example 1:*\n\n```sqf\nprivate _value = (configFile >> \"BulletBubbles\" >> \"BulletBubbles1\" >> \"type\") call BIS_fnc_getCfgData;\n```\n\n*Example 2:*\n\n```sqf\nprivate _value = (missionConfigFile >> \"Hubs\" >> \"A1\" >> \"QuickStart\" >> \"trigger\") call BIS_fnc_getCfgData;\n```","BIS Functions\\BIS_fnc_getCfgDataArray.md":"Gets an array defined in Config. If the value is not an array, it is retyped into one.<br><br>- Default syntax works for any config.<br>\n- Alternative syntax is for comfortable working with mission `description.ext`.\n\n\n---\n*Syntaxes:*\n\nconfig call `BIS_fnc_getCfgDataArray`\n\narray call `BIS_fnc_getCfgDataArray`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataArray;\n```\n\n*Example 2:*\n\n```sqf\nprivate _array = [\"Characters\",\"Default\",\"equipAdjust\"] call BIS_fnc_getCfgDataArray;\n```","BIS Functions\\BIS_fnc_getCfgDataBool.md":"Gets a number defined in config and retype it into a boolean. Everything greater than 0 is `true`, otherwise it is `false`.\n* Default syntax works for any config\n* Alternative syntax is for comfortable working with mission's `Description.ext`.\n\n\n---\n*Syntaxes:*\n\nconfig call `BIS_fnc_getCfgDataBool`\n\narray call `BIS_fnc_getCfgDataBool`\n\n---\n*Example 1:*\n\n```sqf\nprivate _value = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataBool;\n```\n\n*Example 2:*\n\n```sqf\nprivate _value = [\"Characters\", \"Default\", \"equipAdjust\"] call BIS_fnc_getCfgDataBool;\n```","BIS Functions\\BIS_fnc_getCfgDataObject.md":"<pre>/*\n\n\tDescription:\n\tGet the object defined in cfg by its name (global variable).\n\n\tRemark(s):\n\t* Can by called 2 ways:\n\t\t* 1st way (general) works for any config.\n\t\t* 2nd way is for comfortable working with mission description.ext.\n\n\tParameter(s):\n\t\t_this: CFG\n\t\t_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\tExample:\n\n\t* 1st way of calling:\n\n\t\t_value = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\" >> \"trigger\") call BIS_fnc_getCfgDataObject;\n\n\t* 2nd way of calling:\n\n\t\t_value = [\"Hubs\",\"A1\",\"QuickStart\",\"trigger\"] call BIS_fnc_getCfgDataObject;\n\n\tReturns:\n\t\tOBJECT or OBJNULL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_getCfgDataObject` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_getCfgDataObject;\n``` -->","BIS Functions\\BIS_fnc_getCfgDataPool.md":"<pre>/*\n\n\tDescription:\n\t* Get array of attribute values out of the parent config class.\n\t* Attributes need to be in this format: \"_n\", where n is an index number (starting from 0).\n\t* If any discrepancy in indexing is detected, loading will stop and only the correctly indexed values will be returned.\n\t* Max. index supported is 99.\n\t* If more then 9 attributes used, 0-9 need to use leading zeroes.\n\n\tCFG example:\n\n\tclass Timeline\n\t{\n\t\tclass StageA\n\t\t{\n\t\t\t_0[] = {2035,7,7,04,30};\n\t\t\t_1[] = {2035,7,7,06,15};\n\t\t\t_2[] = {2035,7,7,18,35};\n\t\t\t_3[] = {2035,7,8,09,05};\n\t\t\t_4[] = {2035,7,8,13,25};\n\t\t\t_5[] = {2035,7,8,17,10};\n\t\t\t_6[] = {2035,7,8,21,40};\n\t\t\t_7[] = {2035,7,9,19,55};\n\t\t};\n\t};\n\n\tRemark(s):\n\t* Can by called 2 ways:\n\t\t* 1st way (general) works for any config.\n\t\t* 2nd way is for comfortable working with mission description.ext.\n\n\tParameter(s):\n\t\t_this: CFG\n\t\t_this: ARRAY of STRINGS - missionConfigFile classes.\n\n\tExample:\n\n\t* 1st way of calling:\n\n\t\t_array = (configfile >> \"BulletBubbles\" >> \"BulletBubbles1\") call BIS_fnc_getCfgData;\n\t\t_array = (missionconfigfile >> \"Timeline\" >> \"StageA\") call BIS_fnc_getCfgData;\n\n\t* 2nd way of calling:\n\n\t\t_array = [\"Timeline\",\"StageA\"] call BIS_fnc_getCfgData;\n\n\tReturns:\n\t\tARRAY or nil, if parent class is not found\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_getCfgDataPool` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_getCfgDataPool;\n``` -->","BIS Functions\\BIS_fnc_getCfgIsClass.md":"Return true if it is a class. Can by called in two ways:\n* first way (general) works for any config\n* second way is for comfortable working with mission description.ext\n\n\n---\n*Syntaxes:*\n\nconfigEntry call `BIS_fnc_getCfgIsClass`\n\nclassNames call `BIS_fnc_getCfgIsClass`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isClass = (missionConfigFile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call BIS_fnc_getCfgIsClass;\n```\n\n*Example 2:*\n\n```sqf\nprivate _isClass = [\"Hubs\"] call BIS_fnc_getCfgIsClass;\n```","BIS Functions\\BIS_fnc_getCfgSubClasses.md":"<pre>/*\n\n\tDescription:\n\tReturn all child classes of given class.\n\n\tRemark(s):\n\t* Can by called 2 ways:\n\t\t* 1st way (general) works for any config.\n\t\t* 2nd way is for comfortable working with mission description.ext.\n\n\tParameter(s):\n\t\t_this: CFG\n\t\t_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\tExample:\n\n\t* 1st way of calling:\n\n\t\t_subclasses = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call Bis_fnc_getCfgSubClasses;\n\n\t* 2nd way of calling:\n\n\t\t_subclasses = [\"Hubs\"] call Bis_fnc_getCfgSubClasses;\n\n\tReturns:\n\t\tARRAY (of STRINGS with sub-classes names)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_getCfgSubClasses`; -->\n\n---\n*Example 1:*\n\n```sqf\nprivate _allVehHitPoints = (configfile >> \"CfgVehicles\" >> \"C_Hatchback_01_sport_F\" >> \"HitPoints\") call BIS_fnc_getCfgSubClasses;\n```","BIS Functions\\BIS_fnc_getCloudletParams.md":"Return particle params of CfgCloudlets class.\n\n\n---\n*Syntaxes:*\n\n[cfgCloudletClass] call `BIS_fnc_getCloudletParams`\n\n---\n*Example 1:*\n\n```sqf\n[\"AmmoLightSmokeParticles\"] call BIS_fnc_getCloudletParams;\n```","BIS Functions\\BIS_fnc_getFactions.md":"Gets list and sides of current factions.\n\n\n---\n*Syntaxes:*\n\n[parameter] call `BIS_fnc_getFactions`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_getFactions; // returns all factions\n```\n\n*Example 2:*\n\n```sqf\n[] call BIS_fnc_getFactions; // same as Example 1\n```\n\n*Example 3:*\n\n```sqf\n[player] call BIS_fnc_getFactions; // returns index of player's faction\n```\n\n*Example 4:*\n\n```sqf\n[\"BLU_F\"] call BIS_fnc_getFactions; // returns index of given faction\n```\n\n*Example 5:*\n\n```sqf\n`` call BIS_fnc_getFactions; // will return all faction sides\n```\n\n*Example 6:*\n\n```sqf\n`player` call BIS_fnc_getFactions; // will return player's side\n```","BIS Functions\\BIS_fnc_getFromPairs.md":"Searches the associative array for the 1st occurance of the key string and returns the value associated with it. Search is not case sensitiv.\n\n\n---\n*Syntaxes:*\n\n[array, key, defaultValue] call `BIS_fnc_getFromPairs`\n\n---\n*Example 1:*\n\n```sqf\n`[\"apple\",3],[\"pear\",\"test\"`,\"pear\"] call BIS_fnc_getFromPairs; // Returns \"test\"\n```\n\n*Example 2:*\n\n```sqf\n`[\"apple\",3],[\"pear\",6`,\"pear\"] call BIS_fnc_getFromPairs; // Returns \"6\"\n```","BIS Functions\\BIS_fnc_getIDC.md":"Returns IDD of given display.\n\n\n---\n*Syntaxes:*\n\n[config, ctrlName] call `BIS_fnc_getIDC`\n\n---\n*Example 1:*\n\n```sqf\nprivate _IDC = [configFile >> \"Display3DENPlace\", \"ButtonCancel\"] call BIS_fnc_getIDC;\n```","BIS Functions\\BIS_fnc_getIDD.md":"Returns IDD of given display.\n\n\n---\n*Syntaxes:*\n\n[config] call `BIS_fnc_getIDD`\n\n---\n*Example 1:*\n\n```sqf\nprivate _IDD = [configFile >> \"display3DENPublishMissionSelectImage\" ] call BIS_fnc_getIDD;\n```","BIS Functions\\BIS_fnc_getIntersectionsUnderCursor.md":"Returns intersections under cursor. For more information see `lineIntersectsSurfaces`.\n\n\n---\n*Syntaxes:*\n\n[screenX, screenY, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2] call `BIS_fnc_getIntersectionsUnderCursor`\n\n---\n*Example 1:*\n\n```sqf\n[0.5, 0.5, player, objNull, true, \"VIEW\"] call BIS_fnc_getIntersectionsUnderCursor;\n```","BIS Functions\\BIS_fnc_getLineDist.md":"Return the distance between two sections of a virtual straight line.<br>\n<br>\n\n\n---\n*Syntaxes:*\n\n[start1, length1, start2, length2] call `BIS_fnc_getLineDist`\n\n---\n*Example 1:*\n\n```sqf\nprivate _distance = [0,5,15,20] call BIS_fnc_getLineDist; // returns 10\n```","BIS Functions\\BIS_fnc_getMarkers.md":"Returns markers in format PREFIX_N where PREFIX_ is the provided argument and N is an integer between 1 and 128. If there are 128 markers but marker 123 is missing, then only the first 122 marker will be returned.\n\n\n---\n*Syntaxes:*\n\n[markerPrefix] call `BIS_fnc_getMarkers`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker_\"] call BIS_fnc_getMarkers; // [\"BIS_marker_1\",\"BIS_marker_2\",...]\n```","BIS Functions\\BIS_fnc_getMarkerState.md":"Returns the state of a marker.\n\n\n---\n*Syntaxes:*\n\n[marker] call `BIS_fnc_getMarkerState`\n\n---\n*Example 1:*\n\n```sqf\nprivate _state = [\"BIS_marker_1\"] call BIS_fnc_getMarkerState;\n```","BIS Functions\\BIS_fnc_getName.md":"Returns name of a unit. Name of unit is stored in it is namespace so it can be retrieved later, mainly for when unit dies. Name is stored in the variable `BIS_fnc_getName_name`.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_getName`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_getName;\n```","BIS Functions\\BIS_fnc_getNetMode.md":"Returns the current net mode as a string.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_getNetMode`\n\n---\n*Example 1:*\n\n```sqf\nprivate _netMode = call BIS_fnc_getNetMode;\n```","BIS Functions\\BIS_fnc_getObjectBBD.md":"Get object `boundingBoxReal` max values and store them with `setVariable` [\"BIS_EGSpectator_objectBBD\", [maxWidth, maxLength, maxHeight]] for later calls.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_getObjectBBD`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_getObjectBBD;\n```\n\n*Example 2:*\n\n```sqf\n[vehicle player] call BIS_fnc_getObjectBBD;\n```","BIS Functions\\BIS_fnc_getParamValue.md":"Returns the value of mission param given by the class name. This function is global and will return selected param value on any PC including JIP. For backward compatibility it also supports \"param1\" and \"param2\".\n\n\n---\n*Syntaxes:*\n\nparamClass call `BIS_fnc_getParamValue`\n\n[paramClass, defaultValue] call `BIS_fnc_getParamValue`\n\n---\n*Example 1:*\n\n```sqf\nprivate _viewDistance = \"ViewDistance\" call BIS_fnc_getParamValue;\n```\n\n*Example 2:*\n\n```sqf\nprivate _viewDistance = [\"ViewDistance\", 2] call BIS_fnc_getParamValue;\n```","BIS Functions\\BIS_fnc_getPitchBank.md":"Returns the pitch and bank of an object, in degrees. `Yaw` can be found using the `getDir` command.<br>\n`Pitch` is 0 when the object is level; 90 when pointing straight up; and -90 when pointing straight down.<br>\n`Bank` is 0 when level; 90 when the object is rolled to the right, -90 when rolled to the left, and 180 when rolled upside down.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_getPitchBank`\n\n---\n*Example 1:*\n\n```sqf\nprivate _pitchBank = vehicle player call BIS_fnc_getPitchBank;\n```","BIS Functions\\BIS_fnc_getRespawnInventories.md":"Return respawn inventories available for the given target.\n\n\n---\n*Syntaxes:*\n\n[target, showDisabled, returnAllInfo] call `BIS_fnc_getRespawnInventories`\n\n---\n*Example 1:*\n\n```sqf\nprivate _respawnInfo = [player] call BIS_fnc_getRespawnInventories;\n```\n\n*Example 2:*\n\n```sqf\nprivate _respawnInfo = [west, true, false] call BIS_fnc_getRespawnInventories;\n```","BIS Functions\\BIS_fnc_getRespawnMarkers.md":"Returns all respawn markers for given side.\n\n\n---\n*Syntaxes:*\n\n[side, vehicleMarkers] call `BIS_fnc_getRespawnMarkers`\n\n---\n*Example 1:*\n\n```sqf\n[west, false] call BIS_fnc_getRespawnMarkers;\n```","BIS Functions\\BIS_fnc_getRespawnPositions.md":"Return scripted respawn positions available for the given unit.\n\n\n---\n*Syntaxes:*\n\ninput call `BIS_fnc_getRespawnPositions`\n\n---\n*Example 1:*\n\n```sqf\nprivate _respawnPositions = missionNamespace call BIS_fnc_getRespawnPositions; // can be e.g [bis_o1, [1337, 4200, 0.01], \"myMarker\", myVehicle]\n```","BIS Functions\\BIS_fnc_getServerVariable.md":"Fetch a variable saved on server.\nUsed when you want to share variables only to specific clients to prevent large traffic.\nMust be run in `scheduled environment` because communication with server takes some time.\n\n\n---\n*Syntaxes:*\n\n[target, varName, default] call `BIS_fnc_getServerVariable`\n\n---\n*Example 1:*\n\n```sqf\n[missionNamespace, \"BIS_someVar\", \"defaultValue\"] call BIS_fnc_getServerVariable;\n```","BIS Functions\\BIS_fnc_getTurrets.md":"Returns vehicle turrets.\n\n\n---\n*Syntaxes:*\n\n[input, outputType] call `BIS_fnc_getTurrets`\n\n---\n*Example 1:*\n\n```sqf\n[vehicle player]  call BIS_fnc_getTurrets;\n```","BIS Functions\\BIS_fnc_getUnitByUID.md":"Returns player-controlled unit (if any) according to the provided `player UID`.\n\n\n---\n*Syntaxes:*\n\nplayerUID call `BIS_fnc_getUnitByUID`\n\n---\n*Example 1:*\n\n```sqf\nprivate _unitPlayedByUID550055 = \"550055\" call BIS_fnc_getUnitByUID;\n```","BIS Functions\\BIS_fnc_getUnitInsignia.md":"Get a unit's uniform insignia class set with `BIS_fnc_setUnitInsignia`.\n\n\n---\n*Syntaxes:*\n\n[target] call `BIS_fnc_getUnitInsignia`\n\n---\n*Example 1:*\n\n```sqf\nprivate _insigniaClass = [player] call BIS_fnc_getUnitInsignia\n```","BIS Functions\\BIS_fnc_getVehicleCustomization.md":"Return vehicle customization settings.\n\n\n---\n*Syntaxes:*\n\n[object, class] call `BIS_fnc_getVehicleCustomization`\n\n---\n*Example 1:*\n\n```sqf\n[vehicle player] call BIS_fnc_getVehicleCustomization;\n```","BIS Functions\\BIS_fnc_getVirtualBackpackCargo.md":"Get virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_getVirtualBackpackCargo`\n\n---\n*Example 1:*\n\n```sqf\nBIS_ammoBox call BIS_fnc_getVirtualBackpackCargo;\n```","BIS Functions\\BIS_fnc_getVirtualItemCargo.md":"Get virtual items from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_getVirtualItemCargo`\n\n---\n*Example 1:*\n\n```sqf\nBIS_ammoBox call BIS_fnc_getVirtualItemCargo;\n```","BIS Functions\\BIS_fnc_getVirtualMagazineCargo.md":"Get virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_getVirtualMagazineCargo`\n\n---\n*Example 1:*\n\n```sqf\nBIS_ammoBox call BIS_fnc_getVirtualMagazineCargo;\n```","BIS Functions\\BIS_fnc_getVirtualWeaponCargo.md":"Get virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_getVirtualWeaponCargo`\n\n---\n*Example 1:*\n\n```sqf\nBIS_ammoBox call BIS_fnc_getVirtualWeaponCargo;\n```","BIS Functions\\BIS_fnc_greatestNum.md":"Returns the greatest number out of the passed set.\n\n\n---\n*Syntaxes:*\n\nnumbers call `BIS_fnc_greatestNum`\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = [7,2,1,5,10] call BIS_fnc_greatestNum; //_result = 10\n```","BIS Functions\\BIS_fnc_gridToPos.md":"Converts grid coordinates to world position.\n\n\n---\n*Syntaxes:*\n\ngridPosition call `BIS_fnc_gridToPos`\n\n---\n*Example 1:*\n\n```sqf\nprivate _realPosition = \"183221\" call BIS_fnc_gridToPos;\n```\n\n*Example 2:*\n\n```sqf\nprivate _realPosition = \"He11\" call BIS_fnc_gridToPos;\n```","BIS Functions\\BIS_fnc_groupFromNetId.md":"Extends MP-only `groupFromNetId` functionality to SP\n\n\n---\n*Syntaxes:*\n\nnetId call `BIS_fnc_groupFromNetId`\n\n---\n*Example 1:*\n\n```sqf\nprivate _grp = \"0:3\" call BIS_fnc_groupFromNetId;\n```","BIS Functions\\BIS_fnc_groupIndicator.md":"Displays Group Indicator (to the right of the screen in *(Reference GVI \"arma3|1.82\")*)\n\n\n---\n*Syntaxes:*\n\nargument call `BIS_fnc_groupIndicator`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_groupIndicator; // starts group indicator\n```\n\n*Example 2:*\n\n```sqf\n[\"Exit\"] call BIS_fnc_groupIndicator; // closes group indicator\n```","BIS Functions\\BIS_fnc_groupVehicles.md":"Returns all vehicles a group possesses, assigned vehicles can be included.\n\n\n---\n*Syntaxes:*\n\n[target, assignedVeh] call `BIS_fnc_groupVehicles`\n\n---\n*Example 1:*\n\n```sqf\n[group player, true] call BIS_fnc_groupVehicles;\n```","BIS Functions\\BIS_fnc_GUIbackground.md":"Creates GUI background.\n\n\n---\n*Syntaxes:*\n\n[position] call `BIS_fnc_GUIbackground`\n\n---\n*Example 1:*\n\n```sqf\n[1,1,1,1] call BIS_fnc_GUIbackground;\n```","BIS Functions\\BIS_fnc_GUIeditor.md":"Opens the `Arma 3: User Interface Editor`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_GUIeditor`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_GUIeditor;\n```","BIS Functions\\BIS_fnc_guiEffectTiles.md":"Used in dialogs to animate background UAV tiles. See notes for a full working example.\n\n\n---\n*Syntaxes:*\n\n[display] call `BIS_fnc_guiEffectTiles`\n\n---\n*Example 1:*\n\n```sqf\n[ findDisplay 49] call BIS_fnc_guiEffectTiles // display 49 - pause menu\n```","BIS Functions\\BIS_fnc_GUIgrid.md":"Returns grid params and stores it into `uiNamespace`.\n\n\n---\n*Syntaxes:*\n\n[category, grid] call `BIS_fnc_GUIgrid`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_GUIgrid; //[-0.452381,0.214286,1.2,1]\n```","BIS Functions\\BIS_fnc_GUIgridToProfile.md":"*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_GUIgridToProfile` -->\n\n---\n","BIS Functions\\BIS_fnc_GUIhint.md":"<pre>/*\n\n\tDescription:\n\tCreates advanced hintC dialog\n\n\tParameter(s):\n\t_this select 0: ARRAY in format\n\t\t[text,picture]\n\t\t\t* text: STRING - hint text\n\t\t\t* picture: STRING - picture\n\t\t[item1,item2...] - Listbox item ARRAYs in format\n\t\t\t[itemText,itemDescription,picture,icon]\n\t\t\t\t* itemText: STRING - Text displayed in listbox\n\t\t\t\t* itemDescription (Optional): STRING - text displayed after clicking on item\n\t\t\t\t* picture (Optional): STRING - picture displayed after clicking on item\n\t\t\t\t* icon (Optional): STRING - icon displayed in listbox left from text\n\t_this select 1 (Optional): STRING - hint header\n\t_this select 2 (Optional): ARRAY - [STRING,CODE,NUMBER] - text on left button (when \"\", button is hidden), code executed upon clicking and fade out delay. If only text is present, button is disabled.\n\t_this select 3 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on right button and code executed upon clicking\n\t_this select 4 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on middle button and code executed upon clicking\n\t_this select 5 (Optional): NUMBER or ARRAY - width or [width,height] of picture (in grid coordinates). Width > 17 means only picture is used.\n\n\tReturns:\n\tARRAY - [endState(,lbId)]\n\t\t* endState: NUMBER - 1 when clicked on right button, -1 when clicked on left button, 0 when escaped\n\t\t* lbId: NUMBER - selected listbox item (when listbox was used)\n*/\n\n#define DISPLAY_CLASS\t'Hsim_RscDisplayCommonHint_guiHint'\n#define DISPLAY_CONFIG\t(configfile >> \"RscDisplayCommonHint\")\n#define DISPLAY\t\t(uinamespace getvariable DISPLAY_CLASS)\n#define CONTROL\t\t(DISPLAY displayctrl _idc)\n\n#define CONTROL_FADEINTIME\t0.3\n#define CONTROL_FADEIN \\\n\tCONTROL ctrlsetfade 1; \\\n\tCONTROL ctrlcommit 0; \\\n\tCONTROL ctrlsetfade 0; \\\n\tCONTROL ctrlcommit CONTROL_FADEINTIME;\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_GUIhint` -->\n\n---\n","BIS Functions\\BIS_fnc_GUInewsfeed.md":"Load newsfeed.\n\n\n---\n*Syntaxes:*\n\n[display] call `BIS_fnc_GUInewsfeed`\n\n---\n*Example 1:*\n\n```sqf\n[_display] call BIS_fnc_GUInewsfeed;\n```","BIS Functions\\BIS_fnc_halo.md":"Makes a High Altitude Low Opening (HALO) parachute jump.\n\n\n---\n*Syntaxes:*\n\n[unit, altitude] call `BIS_fnc_halo`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_halo; // instantly parachutes the player object\n```\n\n*Example 2:*\n\n```sqf\n[player, 100] call BIS_fnc_halo; // increases the altitude of player by 100 before HALO\n```","BIS Functions\\BIS_fnc_halt.md":"Halts current function and all its parents and logs an error message.\n\n\n---\n*Syntaxes:*\n\n[param1, param2, ..., param10] call `BIS_fnc_halt`\n\n---\n*Example 1:*\n\n```sqf\n[\"You are now supposed to be %1\", rank player] call BIS_fnc_halt;\n```","BIS Functions\\BIS_fnc_hasItem.md":"Returns `true` if object contains given item in inventory / cargo storage.\n\n\n---\n*Syntaxes:*\n\n[object, item, searchCrew] call `BIS_fnc_hasItem`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"ItemMap\"] call BIS_fnc_hasItem;\n```\n\n*Example 2:*\n\n```sqf\n[tank, \"FirstAidKit\", true] call BIS_fnc_hasItem;\n```","BIS Functions\\BIS_fnc_hatchClose.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_hatchClose`\n\n---\n","BIS Functions\\BIS_fnc_hatchOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_hatchOpen`\n\n---\n","BIS Functions\\BIS_fnc_healing.md":"Healing postprocess. Supposed to give healing postprocess effects.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_healing`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_healing; // do NOT use\n```","BIS Functions\\BIS_fnc_healthEffects.md":"Effects when player is hit. Parameters are sent by the `Arma 3: Event Handlers#HandleDamage|HandleDamage` event handler.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_healthEffects`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_healthEffects;\n```","BIS Functions\\BIS_fnc_helicopterCanFly.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_helicopterCanFly` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_helicopterCanFly;\n``` -->","BIS Functions\\BIS_fnc_helicopterDamage.md":"Handling EH-based helicopter damage, event handler in question being *(Reference sic \"`Arma 3: Event Handlers#Dammaged|Da`mm`aged`\")*.\n\n\n---\n*Syntaxes:*\n\n[helicopter, selection, damage] call `BIS_fnc_helicopterDamage`\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopter addEventHandler [\"Dammaged\", { _this call BIS_fnc_helicopterDamage; }];\n```","BIS Functions\\BIS_fnc_helicopterGetHitpoints.md":"Return all hitpoints for a helicopter.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_helicopterGetHitpoints`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_helicopter] call BIS_fnc_helicopterGetHitpoints;\n```","BIS Functions\\BIS_fnc_helicopterSeat.md":"Check if unit sits on right or left seat.\n\n\n---\n*Syntaxes:*\n\nunit call `BIS_fnc_helicopterSeat`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_helicopterSeat;\n```","BIS Functions\\BIS_fnc_helicopterSeatMove.md":"Plays cockpit animation. `{{tkoh}} only`.\n\n\n---\n*Syntaxes:*\n\n[unit, gesture] call `BIS_fnc_helicopterSeatMove`\n\n---\n*Example 1:*\n\n```sqf\n[instructor, \"thumbUp\"] call BIS_fnc_helicopterSeatMove;\n```","BIS Functions\\BIS_fnc_helicopterType.md":"Returns helicopter type.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_helicopterType`\n\n---\n*Example 1:*\n\n```sqf\nprivate _helicopterType = [vehicle player] call BIS_fnc_helicopterType;\n```","BIS Functions\\BIS_fnc_help.md":"Opens the Functions Viewer which lists all functions defined in:\n* `Arma 2: Functions Library` (Also {{arma2oa}})\n* `Arma 3: Functions Library`\n* `Take On Helicopters: Functions Library`\n\n<gallery>\nFile:Fnc_help.jpg|{{arma2}} and {{arma2oa}}\nFile:Take On Helicopters Functions Viewer.jpg|{{tkoh}}\nFile:A3 FunctionViewer Overview.png|{{arma3}}\n</gallery>\n\n\n---\n*Syntaxes:*\n\nparentDisplay call `BIS_fnc_help`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_help;\n```","BIS Functions\\BIS_fnc_hermite.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_hermite`\n\n---\n","BIS Functions\\BIS_fnc_hermiteVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_hermiteVector`\n\n---\n","BIS Functions\\BIS_fnc_HEXtoRGB.md":"Convert hexcode color into RGBA array format.\n\n\n---\n*Syntaxes:*\n\n[hexString] call `BIS_fnc_HEXtoRGB`\n\n---\n*Example 1:*\n\n```sqf\n[\"025D00FF\"] call BIS_fnc_HEXtoRGB; // [1,0.843138,0,1]\n```\n\n*Example 2:*\n\nUsually HEX code is represented as 3 octet without alpha, so you can add it yourself:\n\n```sqf\n[_hexString + \"FF\"] call BIS_fnc_HEXtoRGB; // Add 4th octet to get alpha\n```","BIS Functions\\BIS_fnc_hideMarker.md":"Gradual hiding of a marker by setting its alpha to 0.\n\n\n---\n*Syntaxes:*\n\n[marker, duration] spawn `BIS_fnc_hideMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",2] spawn BIS_fnc_hideMarker;\n```","BIS Functions\\BIS_fnc_hideMarkerArray.md":"Hides a list of markers one by one.\n\n\n---\n*Syntaxes:*\n\n[markerArray, duration] spawn `BIS_fnc_hideMarkerArray`\n\n---\n*Example 1:*\n\n```sqf\n[[\"BIS_marker_1\", \"BIS_marker_2\", \"BIS_marker_3\"], 5] spawn BIS_fnc_hideMarkerArray;\n```","BIS Functions\\BIS_fnc_highlightControl.md":"Highlights given control by drawing a border around it and letting it pulsate. The effect is visible until explicitly removed. <br>\n\n\n---\n*Syntaxes:*\n\n[displayOrControl, thickness] call `BIS_fnc_highlightControl`\n\n---\n*Example 1:*\n\n```sqf\n[findDisplay 313 displayCtrl 1023] call BIS_fnc_highlightControl;\t// highlights the play button in Eden Editor\n[findDisplay 313] call BIS_fnc_highlightControl;\t\t\t\t\t// removes the previously created highlight effect\n```\n\n*Example 2:*\n\n```sqf\n[] spawn\n{\n  disableSerialization;\n  private _ctrlHighlight = [findDisplay 313 displayCtrl 1023),5] call BIS_fnc_highlightControl;\n  sleep 2;\n  ctrlDelete _ctrlHighlight;\n}; // highlights the play button in Eden Editor and removes the effect after two seconds\n```","BIS Functions\\BIS_fnc_holdActionAdd.md":"Adds an action to an object which requires the user to hold a key to perform the action.<br>\n\n:\n* <spoiler text=\"Show holdActionAdd list\">\n\n* \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_access_fm_CA.paa\"\n* \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_end_sim_CA.paa\"\n* \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_exit_CA.paa\"\n* \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_start_sim_CA.paa\"\n* \"\\a3\\Missions_F_Orange\\Data\\Img\\Showcase_LawsOfWar\\action_view_article_CA.paa\"\n* \"\\a3\\data_f_destroyer\\data\\UI\\IGUI\\Cfg\\holdactions\\holdAction_loadVehicle_ca.paa\"\n* \"\\a3\\data_f_destroyer\\data\\UI\\IGUI\\Cfg\\holdactions\\holdAction_unloadVehicle_ca.paa\"\n* \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_box_ca.paa\"\n* \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_follow_start_ca.paa\"\n* \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_follow_stop_ca.paa\"\n* \"\\a3\\missions_f_oldman\\data\\img\\holdactions\\holdAction_talk_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_connect_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_forceRespawn_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_hack_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_loaddevice_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_passleadership_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_requestleadership_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_reviveMedic_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_revive_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_search_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_secure_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_takeOff1_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_takeOff2_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_thumbsdown_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_thumbsup_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_unbind_ca.paa\"\n* \"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_unloaddevice_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\attack_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\destroy_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\holdAction_market_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\holdAction_sleep2_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\holdAction_sleep_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\map_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\meet_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\refuel_ca.paa\"\n* \"\\a3\\ui_f_oldman\\data\\IGUI\\Cfg\\holdactions\\repair_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_aaf_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_csat_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_escape_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_fia_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_fragment_back_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_fragment_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_idap_ca.paa\"\n* \"\\a3\\ui_f_orange\\Data\\CfgOrange\\Missions\\action_nato_ca.paa\"\n* \"\\a3\\ui_f_aow\\data\\igui\\cfg\\holdactions\\holdaction_charity_ca.paa\"\n</spoiler>\n* <spoiler text=\"Show addAction list\">\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\takeflag_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\talk_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\unloadallvehicles_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\unloadincapacitated_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\unloadvehicle_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\vtolvectoring_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\vtolvectoringcancel_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\arrow_down_gs.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\arrow_up_gs.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\autohover_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\bandage_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\beacons_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\beacons_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\cancelhover_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\clear_empty_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\close_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\eject_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\engine_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\engine_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\flapsextend_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\flapsretract_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\gear_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getincargo_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getincommander_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getindriver_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getingunner_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getinpilot_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\getout_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\heal_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_batt_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_batt_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_brk_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_col_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_col_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_land_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_land_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_start_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_start_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_thtl_idl_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_thtl_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_cpt_thtl_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ico_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ladderdown_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ladderoff_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\ladderup_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\landingautopilot_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\landingautopilot_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\loadvehicle_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\open_door_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\periscopedepth_off_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\periscopedepth_on_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\radaroff_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\radaron_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\reammo_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\refuel_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\reload_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\repair_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\returnflag_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\settimer_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\take_ca.paa\"\n\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_arrow_up_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_cancel_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_cancel_manualfire_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_deactivate_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_enter_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_exit_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_fire_in_flame_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_fire_put_down_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_gear_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_getin_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_getincargo.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_ladderondown_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_ladderonup_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_manualfire_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_open_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_takemagazine_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_takemine_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_takeweapon_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_teamswitch_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_turnin_ca.paa\"\n* \"\\a3\\ui_f\\data\\igui\\cfg\\actions\\obsolete\\ui_action_turnout_ca.paa\"\n\n* \"\\a3\\ui_f_jets\\data\\igui\\cfg\\actions\\action_attachtocatapult_ca.paa\"\n* \"\\a3\\ui_f_jets\\data\\igui\\cfg\\actions\\action_detachtocatapult_ca.paa\"\n* \"\\a3\\ui_f_jets\\data\\igui\\cfg\\actions\\action_launchfromcatapult_ca.paa\"\n</spoiler>\n* <spoiler text=\"UI that shows all icons\">\n```sqf\n[] spawn\n{\n\t// EXECUTE IN EDEN EDITOR OR EDITOR PREVIEW!\n\tdisableSerialization;\n\n\tprivate _display = findDisplay 313 createDisplay \"RscDisplayEmpty\";\n\n\tprivate _edit = _display ctrlCreate [\"RscEdit\", 645];\n\t_edit ctrlSetPosition [safezoneX + 50 * pixelW, safezoneY + 50 * pixelH, safezoneW - 500 * pixelW, 50 * pixelH];\n\t_edit ctrlSetBackgroundColor [0,0,0,1];\n\t_edit ctrlCommit 0;\n\n\tprivate _status = _display ctrlCreate [\"RscEdit\", 1337];\n\t_status ctrlSetPosition [safezoneX + safezoneW - 400 * pixelW, safezoneY + 50 * pixelH, 350 * pixelW, 50 * pixelH];\n\t_status ctrlSetBackgroundColor [0,0,0,1];\n\t_status ctrlCommit 0;\n\t_status ctrlEnable false;\n\n\tprivate _tv = _display ctrlCreate [\"RscTreeSearch\", -1];\n\t_tv ctrlSetFont \"EtelkaMonospacePro\";\n\t_tv ctrlSetFontHeight 0.05;\n\t_tv ctrlSetPosition [safezoneX + 50 * pixelW, safezoneY + 125 * pixelH, safezoneW - 100 * pixelW, safeZoneH - 175 * pixelH];\n\t_tv ctrlSetBackgroundColor [0,0,0,1];\n\t_tv ctrlCommit 0;\n\n\t_tv ctrlAddEventHandler [\"treeSelChanged\",\n\t{\n\t\tparams [\"_ctrlTV\", \"_selectionPath\"];\n\t\tcopyToClipboard (_ctrlTV tvText _selectionPath);\n\t\tplaySound (\"RscDisplayCurator_ping\" + selectRandom [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\"]);\n\t\t(ctrlParent _ctrlTv) displayCtrl 1337 ctrlSetText \"Path copied to clipboard!\";\n\t}];\n\n\tprivate _counter = 0;\n\t{ \n\t\tprivate _files = addonFiles [_x # 0, \".paa\"];\n\t\t{\n\t\t\tif (\"\\actions\" in _x || \"\\holdaction\" in _x) then\n\t\t\t{ \n\t\t\t\t_counter = _counter + 1;\n\t\t\t\t_status ctrlSetText format [\"%1 textures found.\", _counter];\n\t\t\t\tprivate _index = _tv tvAdd [[], _x];\n\t\t\t\t_tv tvSetPicture [[_index], _x];\n\t\t\t};\n\t\t} forEach _files; \n\t} foreach allAddonsInfo;\n\n\t_tv tvSortall [[], false];\n};\n```</spoiler>\n\n\n---\n*Syntaxes:*\n\n[target, title, idleIcon, progressIcon, conditionShow, conditionProgress, codeStart, codeProgress, codeCompleted, codeInterrupted, arguments, duration, priority, removeCompleted, showUnconscious, showWindow] call `BIS_fnc_holdActionAdd`\n\n---\n*Example 1:*\n\n```sqf\n[\n\tplayer,\n\t\"Kill\",\n\t\"\", \"\",\n\t\"true\", \"true\",\n\t{ hint \"Started!\" },\n\t{ systemChat str (_this select 3) },\n\t{ player setDamage 1 },\n\t{ hint \"Afraid of death?\" },\n\t[], 10, nil, true, false\n] call BIS_fnc_holdActionAdd;\n```\n\n*Example 2:*\n\n```sqf\n// adds the action to every client and JIP, but also adds it when it was already removed. E.g., Laptop has already been hacked by a player\n[\n\t_myLaptop,\t\t\t\t\t\t\t\t\t\t\t// Object the action is attached to\n\t\"Hack Laptop\",\t\t\t\t\t\t\t\t\t\t// Title of the action\n\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_connect_ca.paa\",\t// Idle icon shown on screen\n\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\holdactions\\holdAction_connect_ca.paa\",\t// Progress icon shown on screen\n\t\"_this distance _target < 3\",\t\t\t\t\t\t// Condition for the action to be shown\n\t\"_caller distance _target < 3\",\t\t\t\t\t\t// Condition for the action to progress\n\t{},\t\t\t\t\t\t\t\t\t\t\t\t\t// Code executed when action starts\n\t{},\t\t\t\t\t\t\t\t\t\t\t\t\t// Code executed on every progress tick\n\t{ _this call MY_fnc_hackingCompleted },\t\t\t\t// Code executed on completion\n\t{},\t\t\t\t\t\t\t\t\t\t\t\t\t// Code executed on interrupted\n\t[],\t\t\t\t\t\t\t\t\t\t\t\t\t// Arguments passed to the scripts as _this select 3\n\t12,\t\t\t\t\t\t\t\t\t\t\t\t\t// Action duration in seconds\n\t0,\t\t\t\t\t\t\t\t\t\t\t\t\t// Priority\n\ttrue,\t\t\t\t\t\t\t\t\t\t\t\t// Remove on completion\n\tfalse\t\t\t\t\t\t\t\t\t\t\t\t// Show in unconscious state\n] remoteExec [\"BIS_fnc_holdActionAdd\", 0, _myLaptop];\t// MP compatible implementation\n```","BIS Functions\\BIS_fnc_holdActionRemove.md":"Removes a hold action. This does exactly the same as `removeAction`.\n\n\n---\n*Syntaxes:*\n\n[target,ID] call `BIS_fnc_holdActionRemove`\n\n---\n*Example 1:*\n\n```sqf\n[ player,10 ] call BIS_fnc_holdActionRemove;\n```","BIS Functions\\BIS_fnc_holdKey.md":"Function that executes a user-defined code when a key has been held down for a long enough time.\n\n\n---\n*Syntaxes:*\n\n[display, key, time, code, control] call `BIS_fnc_holdKey`\n\n---\n*Example 1:*\n\n```sqf\n[findDisplay 46, 36, 5, { hint \"Key 'J' pressed for 5 seconds\" }] call BIS_fnc_holdKey; // action is added to the mission display\n```","BIS Functions\\BIS_fnc_HUDLimits.md":"Set helicopter advanced flight model HUD limits and prevents overwriting existing values. See also `setHUDMovementLevels`.\n\n\n---\n*Syntaxes:*\n\n[speedLimit, altLimit, dirLimit] call `BIS_fnc_HUDLimits`\n\n---\n*Example 1:*\n\n```sqf\n`0,0,0], [1, 0, 50], [0,0,0` call BIS_fnc_HUDLimits; // limits altitude on HUD to 50m max\n```\n\n*Example 2:*\n\n```sqf\n`0,0,0], [0, 0, 0], [1,330,30, myTarget` call BIS_fnc_HUDLimits; // limits orientation towards myTarget by ±30°\n```","BIS Functions\\BIS_fnc_importImageLinks.md":"Imports CfgVehicles image links from Community Wiki (https://community.bistudio.com/).\n# Run the script. It will copy a text into clipboard\n# Open your `Sandbox` and paste the text into edit field\n# `Preview` the page (don't save it)\n# Copy the resulting text and use it in your scripts\n\nResult is to the following format:\n\n```sqf\n_imagesCfgVehicles = [\n\t\"papercar\",\"https://community.bistudio.com/wikidata/images/8/85/Arma3_CfgVehicles_PaperCar.jpg\",\n\t\"firesectortarget\",\"\",\n\t\"building\",\"\",\n\t// etc\n];\n```\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_importImageLinks`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_importImageLinks;\n```","BIS Functions\\BIS_fnc_inAngleSector.md":"Checks if a position lies within an angle sector.<br>\n`Image: BIS_fnc_inAngleSector.jpg|700px`\n\n\n---\n*Syntaxes:*\n\n[center, centerAngle, sectorWidth, position] call `BIS_fnc_inAngleSector`\n\n---\n*Example 1:*\n\n```sqf\n[ position player, getDir player, 30, position enemy_tank ] call BIS_fnc_inAngleSector;\n```","BIS Functions\\BIS_fnc_incapacitatedEffect.md":"A draft of incapacitated effects function.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_incapacitatedEffect`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_incapacitatedEffect;\n```","BIS Functions\\BIS_fnc_indicateBleeding.md":"Shows a PP effect which indicates bleeding.<br>\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_indicateBleeding`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_indicateBleeding;\n```","BIS Functions\\BIS_fnc_infoText.md":"Display a text in the \"mission\" GUI area with some effects. Good for the beginning of a mission.<br>\n\n\n---\n*Syntaxes:*\n\n[string_1, string_2, string_n] spawn `BIS_fnc_infoText`\n\n---\n*Example 1:*\n\n```sqf\n[\"Somewhere on Altis\", format [\"Year %1\", date select 0], mapGridPosition player] spawn BIS_fnc_infoText;\n```","BIS Functions\\BIS_fnc_initAmmoBox.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_initCuratorAttribute.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_initCuratorAttribute` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_initCuratorAttribute;\n``` -->","BIS Functions\\BIS_fnc_initDisplay.md":"This function is a central part of how BI handles UIs. For a full explanation see `this page`.\n\n\n---\n*Syntaxes:*\n\nparameters call `BIS_fnc_initDisplay`\n\n---\n*Example 1:*\n\n```sqf\n[\"onLoad\", _this, \"RscDisplayAAR\", \"GUI\", true] call (uiNamespace getVariable \"BIS_fnc_initDisplay\");\n```","BIS Functions\\BIS_fnc_initExpo.md":"Disable parts of the main menu during public presentation. Press *(Reference Controls \"U\" at Ctrl|Shift)* to toggle the lock.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_initExpo`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_initExpo;\n```","BIS Functions\\BIS_fnc_initInspectable.md":"Initialize inspectable object: add \"Inspect\" action to the object. When a player activates it, full-screen detail of the objects is shown.\n\n\n---\n*Syntaxes:*\n\n[inspectable, textureInfos, fullScreenText, soundName] call `BIS_fnc_initInspectable`\n\n---\n*Example 1:*\n\n```sqf\n[myLeaflet, \"#(argb,8,8,3)color(1,0,1,1)\", \"This is some Magic Pink\"] call BIS_fnc_initInspectable; // initialize\n```\n\n*Example 2:*\n\n```sqf\n[myLeaflet, true] call BIS_fnc_initLeaflet; // Show preview instantly\n```","BIS Functions\\BIS_fnc_initIntelObject.md":"This function sets up an object as intel retrievable by the players by adding a \"Take Intel\" `addAction` to it.<br>\nWhen a player uses the action, they will play an animation to pick the object up and the object will be deleted from the mission.<br>\nThe player and any defined recipients will then receive a diary entry which can contain a `title`, `description` and `picture`.<br>\nThe diary entry will also contain a marker shortcut showing where the intel was found.<br><br>\nThis function is similar to placing an intel object as Zeus, but the Zeus interface provides some extra options like:<br>\n* Which sides can interact with the action\n* The picture, title and description used in the diary entry\n<br>\nWhen using this function from script there are several variables that need to be set up to acquire the same results (see the examples below).<br>\nWithout this extra setup the functionality provided is minimal and only includes:\n* The \"Take Intel\" action on the object\n* The object can be picked up by a player from any side\n* When picked up it will have no title or description and the picture will be a default exclamation mark\n* The diary entry will only be given to the person who picked it up\n<br>\nThere are some optional features of intel objects that can be used:\n* The diary entry's `description` can be further enhanced by using the supported tags found on the `createDiaryRecord` page.\n* There is also a `scripted eventhandler` called `\"IntelObjectFound\"` that can be registered  on the intel object. The event provides the parameters [object, caller] where `object` is the intel object and `caller` the person who picked it up.\n* A Zeus who has the intel object registered as a curator editable object can also receive feedback that the intel has been picked up if the `scripted eventhandler` called `\"intelObjectFound\"` was registered on the curator module. The event provides the parameters [zeus, caller, object] where `zeus` is the curator module, `caller` the person who picked it up and `object` is the intel object.\nThe usage of these scripted event handlers is shown in *(Reference Link \"#Example 3\")*.<br>\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_initIntelObject`\n\n---\n*Example 1:*\n\nSetup an object as intel from its init attribute in the editor.<br>\nBasic version including `picture`, `title`, `description`, `recipients` and `sides that can interact with it`:\n\n```sqf\n[this] call BIS_fnc_initIntelObject;\n\nif (isServer) then\n{\n\t// Diary picture:\n\tthis setVariable [\n\t\t\"RscAttributeDiaryRecord_texture\",\n\t\t\"a3\\structures_f_epc\\Items\\Documents\\Data\\document_secret_01_co.paa\", // Path to picture\n\t\ttrue\n\t];\n\n\t// Diary Title and Description:\n\t[\n\t\tthis,\n\t\t\"RscAttributeDiaryRecord\",\n\t\t[\"New Intel\", \"The enemies have a cave troll!\"] // Array in format [Title, Description]\n\t] call BIS_fnc_setServerVariable;\n\n\t// Diary entry shared with (follows BIS_fnc_MP target rules):\n\tthis setVariable [\"recipients\", west, true];\n\n\t// Sides that can interact with the intel object:\n\tthis setVariable [\"RscAttributeOwners\", [west], true];\n};\n```\n\n*Example 2:*\n\nTo set up an object as intel from its init attribute in the editor with a custom `addAction` title, replace the first line of *(Reference Link \"#Example 1\")* with the following:\n\n```sqf\nif (hasInterface) then\n{\n\tthis addAction [\n\t\t\"Pick up laptop\", // custom addAction title\n\t\t{ [_this, \"action\"] spawn BIS_fnc_initIntelObject },\n\t\t[],\n\t\t10,\n\t\ttrue,\n\t\ttrue,\n\t\t\"\",\n\t\t\"isPlayer _this && { _this distance _target < 2 } &&\n\t\t{ (side group _this) in (_target getVariable ['RscAttributeOwners', [west, east, resistance, civilian]]) }\"\n\t];\n};\n```\n\n*Example 3:*\n\nSet up an object as intel from its init attribute in the editor.<br>\nBasic version plus curator and scripted event handlers:\n\n```sqf\n[this] call BIS_fnc_initIntelObject;\n\nif (isServer) then\n{\n\t// Diary picture:\n\tthis setVariable [\n\t\t\"RscAttributeDiaryRecord_texture\",\n\t\t\"a3\\structures_f_epc\\Items\\Documents\\Data\\document_secret_01_co.paa\", // Path to picture\n\t\ttrue\n\t];\n\n\t// Diary Title and Description:\n\t[\n\t\tthis,\n\t\t\"RscAttributeDiaryRecord\",\n\t\t[\"New Intel\", \"The enemies have a cave troll!\"] // Array in format [Title, Description]\n\t] call BIS_fnc_setServerVariable;\n\n\t// Diary entry shared with (follows BIS_fnc_MP target rules):\n\tthis setVariable [\"recipients\", west, true];\n\n\t// Sides that can interact with the intel object:\n\tthis setVariable [\"RscAttributeOwners\", [west], true];\n\n\t// Register intel object with Zeus as curator editable (_zeus is the curator module):\n\t_zeus addCuratorEditableObjects [[this], false];\n\n\t// Add Zeus scripted event:\n\t[_zeus, \"IntelObjectFound\", {hint \"Intel found\"}] call BIS_fnc_addScriptedEventHandler;\n\n\t// Add a scripted event that notifies all clients via systemChat when the intel is found:\n\t[\n\t\tthis,\n\t\t\"IntelObjectFound\",\n\t\t{\n\t\t\tparams [\"\", \"_foundBy\"];\n\t\t\tprivate _msg = format [\"Intel found by %1\", name _foundBy];\n\t\t\t_msg remoteExec [\"systemChat\", 0];\n\t\t}\n\t ] call BIS_fnc_addScriptedEventHandler;\n};\n```\nAlthough both scripted event handlers supply a reference to the intel object, it is deleted from the mission almost immediately, so it could already be `null` when queried.","BIS Functions\\BIS_fnc_initLeaflet.md":"Initialize interactive leaflet.\n\n\n---\n*Syntaxes:*\n\n[mode, parameters] call `BIS_fnc_initLeaflet`\n\n---\n*Example 1:*\n\n```sqf\n[\"init\", [myLeaflet, \"#(argb,8,8,3)color(1,1,0,1)\", \"Yellow pages\"]] call BIS_fnc_initLeaflet;\n```\n\n*Example 2:*\n\n```sqf\n[\"init\", [myLeaflet,\"Custom_02\"]] call BIS_fnc_initLeaflet;\n```\n\n*Example 3:*\n\n```sqf\n[\"init\", [myLeaflet,\"West\"]] call BIS_fnc_initLeaflet;\n```","BIS Functions\\BIS_fnc_initListNBoxSorting.md":"`Image:A3_BIS_fnc_initListNBoxSorting_example.jpg|thumb|right|A GUI using `BIS_fnc_initListNBoxSorting``\nAutomatically creates buttons and sets them up so they can be used to sort a `CT_LISTNBOX`. The buttons will automatically be resized to fit the column width of `ctrlFilter`.\n\nBy default, the `ctrlContent` columns are sorted by `lnbText` (using `lnbSort`). If a specific column should be sorted by `lnbValue` (using `lnbSortByValue`) instead, then something needs to be set in the data of the corresponding `ctrlFilter` column (literally `something`, the condition in the source code is <sqf inline>(_ctrlFilter lnbData [0, _i]) != \"\"\n```).\n\nRegarding `ctrlFilter`:\n* The position and size of this control define where the buttons for sorting are created, thus it should be placed above `ctrlContent` and its columns should have the same size as the columns of `ctrlContent`.\n* The text set in the columns is displayed as text for the buttons (the buttons are actually transparent).\n* The control can also be part of a `CT_CONTROLS_GROUP`. If that is the case, the buttons will be created as children of that group.\n* To keep a uniform style between vanilla and custom controls it is recommended to create a background with `CT_STATIC` behind `ctrlFilter` with <syntaxhighlight lang=\"cpp\" inline>colorBackground[] = { 0, 0, 0, 1 };</syntaxhighlight>.\nSee *(Reference Link \"CT_LISTNBOX#BIS_fnc_initListNBoxSorting Example\")* for a full example including a config.\n\n\n---\n*Syntaxes:*\n\n[ctrlFilter, ctrlContent, columnIndexes, idc] call `BIS_fnc_initListNBoxSorting`\n\n---\n*Example 1:*\n\n```sqf\n[_lnbFilter, _lnbContent, [0,1,2,3]] call BIS_fnc_initListNBoxSorting;\n```","BIS Functions\\BIS_fnc_initModules.md":"Wait until all modules using the `Modules|Arma 3: Module Framework` are initialised.\n\n\n---\n*Syntaxes:*\n\n[modules] call `BIS_fnc_initModules`\n\n---\n*Example 1:*\n\n```sqf\n[module_1,module_2] call BIS_fnc_initModules;\n```","BIS Functions\\BIS_fnc_initMultiplayer.md":"Multiplayer mission init, executed automatically upon mission start.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_initMultiplayer`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_initMultiplayer;\n```","BIS Functions\\BIS_fnc_initParams.md":"Initialize `Arma 3 Mission Parameters|mission params` and create log in the diary.\n\n\n---\n*Syntaxes:*\n\n[modules] call `BIS_fnc_initParams`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_initParams;\n```","BIS Functions\\BIS_fnc_initPlayable.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_initPlayable` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_initPlayable;\n``` -->","BIS Functions\\BIS_fnc_initRespawn.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_initRespawn` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_initRespawn;\n``` -->","BIS Functions\\BIS_fnc_initRespawnBackpack.md":"Init respawn backpack.\n\tWhover \"assembles\" it will receive a new respawn position.\n\tWhen backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby player will receive the respawn as well.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_initRespawnBackpack`\n\n---\n*Example 1:*\n\n`call` `BIS_fnc_initRespawnBackpack`;","BIS Functions\\BIS_fnc_initSliderValue.md":"Initialises a slider attribute control within the `Eden Editor`. Can also be used outside of `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[ctrlSlider, ctrlEdit, unit, default] call `BIS_fnc_initSliderValue`\n\n---\n*Example 1:*\n\n```sqf\n[_this controlsGroupCtrl 100, _this controlsGroupCtrl 101, \"m\", 50] call BIS_fnc_initSliderValue;\n```","BIS Functions\\BIS_fnc_initVehicle.md":"This function changes the textures, animation sources and/or mass of a given vehicle.<br>\nUnless explicitly mentioned , the function will restore the initial state of every animation sources of the given object (see *(Reference Link \"#Example 3\")*).\n\n\n---\n*Syntaxes:*\n\n[vehicle, variant, animations, mass] call `BIS_fnc_initVehicle`\n\n---\n*Example 1:*\n\n```sqf\nresult = [this, \"\", []] call BIS_fnc_initVehicle;\n```\n\n*Example 2:*\n\n```sqf\nresult = [this, [\"MyTextureSource1\", 0.5, \"MyTextureSource2\", 0.6], []] call BIS_fnc_initVehicle;\n```\n\n*Example 3:*\n\n```sqf\nresult = [this, nil, [\"MyAnimationSource1\", 0.5, \"MyAnimationSource2\", 0.7]] call BIS_fnc_initVehicle;\n```\n\n*Example 4:*\n\n```sqf\n// randomise camo net options with 50% probability\n[vehicle player, false, [\"showcamonethull\", 0.5, \"showcamonetturret\", 0.5, \"showcamonetcannon\", 0.5, \"showslathull\", 0.5]] call BIS_fnc_initVehicle;\n```\n\n*Example 5:*\n\n```sqf\n// force show all camo net options. Use animationNames to get all available animation sources. Vehicles that don't support certain animations are simply ignored.\n[vehicle player, false, [\"showcamonethull\", 1, \"showcamonetturret\", 1, \"showcamonetcannon\", 1, \"showslathull\", 1]] call BIS_fnc_initVehicle;\n```","BIS Functions\\BIS_fnc_initVehicleCrew.md":"Moves units into vehicle seats. When units don't exist, it will create them in a group of vehicle's side.\n\n\n---\n*Syntaxes:*\n\n[object, params, deleteCrew, anySeat, agents] call `BIS_fnc_initVehicleCrew`\n\n---\n*Example 1:*\n\n```sqf\n[ someVehicle, [player, \"driver\", 0], true, true ] call BIS_fnc_initVehicleCrew;\n```","BIS Functions\\BIS_fnc_initVehicleKart.md":"Customise given kart and its driver.\n\n\n---\n*Syntaxes:*\n\n[kart,number,livery,raceTeam] call `BIS_fnc_initVehicleKart`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_kart, [9,7], -1, -1] call BIS_fnc_initVehicleKart;\n```","BIS Functions\\BIS_fnc_initVirtualUnit.md":"Initialize virtual unit. Disable it, turn the camera upwards and save its correct side.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_initVirtualUnit`\n\n---\n*Example 1:*\n\n```sqf\nsomeObject call BIS_fnc_initVirtualUnit;\n```","BIS Functions\\BIS_fnc_initWorldScene.md":"<pre>/*\n\tAuthor: Karel Moricky\n\n\tDescription:\n\t\tInitialize world scene\n\n\tParameter(s):\n\t\tARRAY of CODEs - random code will be selected and called. The code should contain scene init\n\n\tReturns:\n\t\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_initWorldScene`\n\n---\n","BIS Functions\\BIS_fnc_inString.md":"Find a string within a string.\n\n\n---\n*Syntaxes:*\n\n[searchTerm, searchText, caseSensitive] call `BIS_fnc_inString`\n\n---\n*Example 1:*\n\n```sqf\n[\"rabbit\", \"I ate a rabbit today\"] call BIS_fnc_inString // will return true\n```\n\n*Example 2:*\n\n```sqf\n[\"RaBbiT\", \"I ate a rabbit today\"] call BIS_fnc_inString // will return true\n```\n\n*Example 3:*\n\n```sqf\n[\"RaBbiT\", \"I ate a rabbit today\", true] call BIS_fnc_inString // will return false because of case sensitivity\n```","BIS Functions\\BIS_fnc_instructorFigure.md":"<pre>\n/*******************************************************************************\n\tVersion:\t\t0.1\n\tName:\t\t\tInstructor Figure\n\tDESCRIPTION:\twww.  \n\tPARAMETERS:\t\t1) function called - string, list of functions:\n\t\t\t\t\t\t- Init\n\t\t\t\t\t\t- Destroy\n\t\t\t\t\t2) parameter for the function\n\t\t\t\t\tFor more information see https://wiki.bistudio.com/index.php/A3_InstructorFigure\n\tRETURNED VALUE:\tdepends on the function called\n\t\n\tTODO:\t        + PlayTopic\n\t\t\t\t\t+ Fade out New Intel text\n\t\t\t\t\t+ wait for TAB press\n\t\t\t\t\t+ use functions for dynamic text\n\t\t\t\t\t- kbTell support\n\t\t\t\t\t\t- logging\n\t\t\t\t\t\t+ rework data structure (add, remove, search)\n\t\t\t\t\t\t- ContainerExists function\n\t\t\t        + display only if difficulty is low\n\t\t\t\t\t+ disableSerialization\n\t\t\t\t\t+ GetTopics should return array, not just debuglog info\n\t\t\t\t\t+ deny play more than one topic in a time\n\t\t\t\t\t+ Localize\n\t\t\t\t\t+ check and fix return values of functions\n\t\t\t\t\t+ correct debuglog information\n\t\t\t\t\t- deny addtopic during playing\n\t\t\t\t\t+ safe work with BIS_GroupCommunication - dont overwrite user menus\n\t\t\t\t\t+ remove INSTRUCTOR FIGURE from BIS_GroupCommunication  \n\t\t\t\t\t+ PlayTopicRandom - rule exceeding selection of a previous sentence\n*******************************************************************************/\n\n//Variables\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_instructorFigure` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_instructorFigure;\n``` -->","BIS Functions\\BIS_fnc_interpolate.md":"Interpolates scalar to target, starts fast, eases out\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, delta, interpSpeed] call `BIS_fnc_interpolate`\n\n---\n*Example 1:*\n\n```sqf\nprivate _value = [4,8,0.2,0.1] call BIS_fnc_interpolate;\n```","BIS Functions\\BIS_fnc_interpolateConstant.md":"Interpolates scalar to target linearly.\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, delta, interpSpeed] call `BIS_fnc_interpolateConstant`\n\n---\n*Example 1:*\n\n```sqf\nprivate _value = [4,8,0.2,0.1] call BIS_fnc_interpolateConstant;\n```","BIS Functions\\BIS_fnc_interpolateVector.md":"Interpolates vector to target, scaled by distance.\nStarts very fast and smoothes out.\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, delta, interpSpeed] call `BIS_fnc_interpolateVector`\n\n---\n*Example 1:*\n\n```sqf\n[[1,1,1], [20,20,20], 0.2, 0.1] call BIS_fnc_interpolateVector;\n```","BIS Functions\\BIS_fnc_interpolateVectorConstant.md":"Interpolates vector to target linearly.\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, delta, interpSpeed] call `BIS_fnc_interpolateVectorConstant`\n\n---\n*Example 1:*\n\n```sqf\n[[1,1,1], [20,20,20], 0.2, 0.1] call BIS_fnc_interpolateVectorConstant;\n```","BIS Functions\\BIS_fnc_interpolateWeather.md":"<pre>/*\n\n\tDescription:\n\tInterpolate weather (overcast and fog) according to 2 boundry dates and their weather conditions.\n\n\tParameter(s):\n\t_this select 0: array\t- _date1 \t[_year1,_month1,_day1,_hour1,_min1]\n\t_this select 1: array\t- _weather1\t[_overcast1,_fog1]\n\t_this select 2: array\t- _date2 \t[_year2,_month2,_day2,_hour2,_min2]\n\t_this select 3: array\t- _weather2\t[_overcast2,_fog2]\n\t_this select 4: array\t- _subjectDate \t[_year,_month,_day,_hour,_min] (default: current date)\n\n\tReturns:\n\t[_interpolatedOvercast,_interpolatedFog]\n\n\tExample:\n\t[_overcast,_fog] = `2035,1,5,24,00],[0.1,0.5],[2035,1,10,24,00],[0.3,0.2],[2035,1,7,24,00` call BIS_fnc_interpolateWeather;\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_interpolateWeather` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_interpolateWeather;\n``` -->","BIS Functions\\BIS_fnc_inTrigger.md":"Detects whether position is within area `or` calculates distance to the nearest edge of trigger area by using optional params.\n\n\n---\n*Syntaxes:*\n\n[area, position, returnDistance, includeFloorCeiling] call `BIS_fnc_inTrigger`\n\n---\n*Example 1:*\n\n```sqf\nprivate _trigger = createTrigger [\"EmptyDetector\", getPosATL player];\n_trigger setTriggerArea [10, 10, 0, false];\n_inTrigger = [_trigger, player] call BIS_fnc_inTrigger; // _inTrigger = true\n```","BIS Functions\\BIS_fnc_inv.md":"Returns inventory contents of given vehicle (unit). For vehicles it returns mounted gun and its ammo, `not` cargo weapons and ammo.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_inv`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_inv;\n```","BIS Functions\\BIS_fnc_invAdd.md":"Adds item to inventory - checks if there is room for it. Checks if add was done by engine.\n\n\n---\n*Syntaxes:*\n\n[object,class,force] call `BIS_fnc_invAdd`\n\n---\n*Example 1:*\n\n```sqf\n[ player,\"someClass\" ] call BIS_fnc_invAdd;\n```","BIS Functions\\BIS_fnc_invCodeToArray.md":"Converts inventory code (used in configs) to array with numbers for weapons and magazines (and their counts).\n\n\n---\n*Syntaxes:*\n\n[configCode] call `BIS_fnc_invCodeToArray`\n\n---\n*Example 1:*\n\n```sqf\n[ call compile getText (configfile >> \"CfgVehicles\" >> typeOf player >> \"weaponSlots\")] call BIS_fnc_invCodeToArray;//Can return [1,0,0,0,0,0,0,0]\n```","BIS Functions\\BIS_fnc_inventoryExists.md":"Check if loadout with given name exists.\n\n\n---\n*Syntaxes:*\n\n[source, name] call `BIS_fnc_inventoryExists`\n\n---\n*Example 1:*\n\n```sqf\nprivate _hasSuperLoadout = [missionNamespace, \"mySuperLoadout\"] call BIS_fnc_inventoryExists;\n```","BIS Functions\\BIS_fnc_inverseLerp.md":"Inverse of `BIS_fnc_lerp`.\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, alpha] call `BIS_fnc_inverseLerp`\n\n---\n*Example 1:*\n\n```sqf\n[10,20,0.5] call BIS_fnc_inverseLerp;\n```","BIS Functions\\BIS_fnc_invRemove.md":"Removes from inventory. Given number of items. Returns actually removed items count.\n\n\n---\n*Syntaxes:*\n\n[object,class,count] call `BIS_fnc_invRemove`\n\n---\n*Example 1:*\n\n```sqf\n[ player,\"someClass\",5 ] call BIS_fnc_invRemove;\n```","BIS Functions\\BIS_fnc_invSlots.md":"Returns config inventory slots of given unit (total numbers of available slots in array).\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_invSlots`\n\n---\n*Example 1:*\n\n```sqf\n[ player ] call BIS_fnc_invSlots;//Returns [1,1,1,8,12,1,0,12] for \"B_T_Recon_TL_F\" class. Means: 1 x WeaponSlotPrimary, 1 x WeaponSlotHangun, ... , 12 x WeaponSlotInventory\n```","BIS Functions\\BIS_fnc_invSlotsEmpty.md":"Returns empty inventory slots of given unit.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_invSlotsEmpty`\n\n---\n*Example 1:*\n\n```sqf\n[ player ] call BIS_fnc_invSlotsEmpty;//Can return [0,0,-1,-7,0,-1,0,-12]\n```","BIS Functions\\BIS_fnc_invSlotType.md":"Returns empty inventory slots of given unit.\n\n\n---\n*Syntaxes:*\n\n[class] call `BIS_fnc_invSlotType`\n\n---\n*Example 1:*\n\n```sqf\n[ currentWeapon player ] call BIS_fnc_invSlotType;//Can return [1,0,0,0,0,0,0,0]\n```","BIS Functions\\BIS_fnc_invString.md":"Returns inventory contents of given vehicle (unit).\n\t\n\tNote: for vehicles it returns mounted gun and its ammo, not cargo weapons and ammo.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_invString`\n\n---\n*Example 1:*\n\n```sqf\n[ player ] call BIS_fnc_invString;\n```","BIS Functions\\BIS_fnc_isBuildingEnterable.md":"Check whether a building or structure has available positions defined within model.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_isBuildingEnterable`\n\n---\n*Example 1:*\n\n```sqf\n[_building] call BIS_fnc_isBuildingEnterable;\n```\n\n*Example 2:*\n\n```sqf\n[_building, _minNumberOfPositions] call BIS_fnc_isBuildingEnterable;\n```","BIS Functions\\BIS_fnc_isCampaign.md":"Checks to see if a mission is being run in a campaign.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_isCampaign`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_isCampaign;\n```","BIS Functions\\BIS_fnc_isCurator.md":"Returns if given object is curator logic. Despite the misleading name this does not check if a player has access to Zeus. It just check if the given object's simulation is of type \"curator\".\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_isCurator`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_isCurator;\n```","BIS Functions\\BIS_fnc_isCuratorEditable.md":"Return `true` if given object is editable by player (when he's curator).\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_isCuratorEditable`\n\n---\n*Example 1:*\n\n```sqf\n[object_1] call BIS_fnc_isCuratorEditable;\n```","BIS Functions\\BIS_fnc_isDateTimeNewer.md":"Returns true if the first passed datetime is newer than the second one.\n\n\n---\n*Syntaxes:*\n\n[date1, date2] call `BIS_fnc_isDateTimeNewer`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isNewer = `2035,5,28,13,37], [2032,5,28,13,37` call BIS_fnc_isDateTimeNewer;\n```","BIS Functions\\BIS_fnc_isDebugConsoleAllowed.md":"Returns true if debug console is allowed in current context\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_isDebugConsoleAllowed;\n```","BIS Functions\\BIS_fnc_isDemo.md":"Returns true when game version is demo.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_isDemo`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isDemo = call BIS_fnc_isDemo;\n```","BIS Functions\\BIS_fnc_isEqualVector.md":"Checks whether two vectors are equal with given tolerance.\n\n\n---\n*Syntaxes:*\n\n[vector1, vector2, tolerance] call `BIS_fnc_isEqualVector`\n\n---\n*Example 1:*\n\n```sqf\n[[1,1,1], [2,2,2], 1] call BIS_fnc_isEqualVector; // returns true\n```","BIS Functions\\BIS_fnc_isForcedCuratorInterface.md":"Return if curator interface is forced (user cannot leave it by pressing Zeus key).\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_isForcedCuratorInterface`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isForced = call BIS_fnc_isForcedCuratorInterface;\n```","BIS Functions\\BIS_fnc_isInFrontOf.md":"Check if an object is in front of another object (in the front 180°)\n\n\n---\n*Syntaxes:*\n\n[reference, checked, offset] call `BIS_fnc_isInFrontOf`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isInstructorInFrontOfPlayer = [player, instructor, 0] call BIS_fnc_isInFrontOf;\n```","BIS Functions\\BIS_fnc_isInsideArea.md":"Detects whether a position is within a square area of given size about center.\n\n\n---\n*Syntaxes:*\n\n[center, size, position ] call `BIS_fnc_isInsideArea`\n\n---\n*Example 1:*\n\n```sqf\n// Check an area, centered on the player that is 10m wide and 10m tall\n_size = [5, 5];\n_checkPos = getPos player;\n_inArea = [_checkPos, _size, _checkPos] call BIS_fnc_isInsideArea;\n```","BIS Functions\\BIS_fnc_isInZoom.md":"Checks if map zoom level is in between given interval.\n\n\n---\n*Syntaxes:*\n\n[min, max] call `BIS_fnc_isInZoom`\n\n---\n*Example 1:*\n\n```sqf\nif ([0.001, 0.02] call BIS_fnc_isInZoom) then \n{\n  hint \"Zoom level is in between 0.001 and 0.02\";\n};\n```","BIS Functions\\BIS_fnc_isLeapYear.md":"Returns true if given year is a leap year, otherwise false.\n\n\n---\n*Syntaxes:*\n\nyear call `BIS_fnc_isLeapYear`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isLeapYear = 2035 call BIS_fnc_isLeapYear;\n```\n\n*Example 2:*\n\n```sqf\nprivate _isLeapYear = 2036 call BIS_fnc_isLeapYear; // 2036 is a leap year\n```","BIS Functions\\BIS_fnc_isLoading.md":"Check if a loading screen is opened.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_isLoading`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isLoading = call BIS_fnc_isLoading;\n```","BIS Functions\\BIS_fnc_isLocalized.md":"Checks if string is localized. Obsolete variant before `isLocalized` command was introduced.\n\n\n---\n*Syntaxes:*\n\n[localizationString] call `BIS_fnc_isLocalized`\n\n---\n*Example 1:*\n\n```sqf\n[\"STR_someLocalizedString\"] call BIS_fnc_isLocalized;\n```","BIS Functions\\BIS_fnc_isPosBlacklisted.md":"Function checks a blacklist and sees if the given position is in it or not.\n\n\n---\n*Syntaxes:*\n\n[position, blacklistArea] call `BIS_fnc_isPosBlacklisted`\n\n---\n*Example 1:*\n\n```sqf\n`50,50], [[0,0], [100,100]` call BIS_fnc_isPosBlacklisted;\n```\n\n*Example 2:*\n\n```sqf\n[getPosATL player, myTrigger] call BIS_fnc_isPosBlacklisted;\n```","BIS Functions\\BIS_fnc_isThrowable.md":"Returns true if given magazine is throwable\n\n\n---\n*Syntaxes:*\n\nmagazine call `BIS_fnc_isThrowable`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isThrowable = \"SmokeShellGreen\" call BIS_fnc_isThrowable;\n```","BIS Functions\\BIS_fnc_isUnitVirtual.md":"Return if unit is virtual (used for example for Zeus players).\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_isUnitVirtual`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isVirtual = someObject call BIS_fnc_isUnitVirtual;\n```","BIS Functions\\BIS_fnc_itemType.md":"Returns item category and type.\n\n\n---\n*Syntaxes:*\n\nweaponClass call `BIS_fnc_itemType`\n\n---\n*Example 1:*\n\n```sqf\n\"arifle_MX_pointer_F\" call BIS_fnc_itemType;\n```","BIS Functions\\BIS_fnc_jukebox.md":"Plays music, depending on the player group status.\n\n\n---\n*Syntaxes:*\n\n[function, parameters] call `BIS_fnc_jukebox`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_jukebox;\n```","BIS Functions\\BIS_fnc_kbCanSpeak.md":"Check if person is not locked by some `conversation`.\n\n\n---\n*Syntaxes:*\n\nunit call `BIS_fnc_kbCanSpeak`\n\n---\n*Example 1:*\n\n```sqf\nprivate _canPlayerTalk = player call BIS_fnc_kbCanSpeak;\n```","BIS Functions\\BIS_fnc_kbCreateDummy.md":"Creates a dummy speaker (as a `Game Logic`). If given dummy variable has already been created, returns this one.\n\n\n---\n*Syntaxes:*\n\ndummyVarName call `BIS_fnc_kbCreateDummy`\n\n---\n*Example 1:*\n\n```sqf\nprivate _dummySpeaker = \"BIS_dummySpeaker\" call BIS_fnc_kbCreateDummy; // _dummySpeaker == BIS_dummySpeaker now\n```\n\n*Example 2:*\n\n```sqf\nprivate _dummySpeaker = \"Miller\" call BIS_fnc_kbCreateDummy; // given Miller is defined in CfgIdentities\n```","BIS Functions\\BIS_fnc_kbIsSpeaking.md":"Check if speaker is locked for different conversation.\n\n\n---\n*Syntaxes:*\n\nunit call `BIS_fnc_kbIsSpeaking`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_kbIsSpeaking;\n```","BIS Functions\\BIS_fnc_kbMenu.md":"<pre>/*\n\n\tDescription:\n\tOpens conversation menu. Script terminates itself when menu selection is finished.\n\n\tParameter(s):\n\t_this select 0: ARRAY or STRING - List of responses (of type ARRAY) or Menu name\n\t\tResponses are in format:\n\t\t_response select 0: STRING or ANY - Display name when STRING, otherwise used as default option when menu is closed without selecting anything.\n\t\t_response select 1:\n\t\t\tSTRING - expression\n\t\t\tARRAY - BIS_fnc_kbTell params\n\n\tReturns:\n\tNUMBER - ID of select option\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_kbMenu` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_kbMenu;\n``` -->","BIS Functions\\BIS_fnc_kbPriority.md":"<pre>/*\n\n\tDescription:\n\tSet conversation priority. Conversations with priority not in the list won't be played\n\n\tParameter(s):\n\t_this:\n\t\tARRAY - List of priorities. Empty array will just return current value.\n\t\tNUMBER\n\t\t\t>0 - add priority to already existing list\n\t\t\t<0 - remove priority from already existing list\n\t\t\tPriority 0 cannot be tempered with\n\n\tReturns:\n\tARRAY - List of priorities\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_kbPriority` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_kbPriority;\n``` -->","BIS Functions\\BIS_fnc_kbSentence.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_kbSentence` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_kbSentence;\n``` -->","BIS Functions\\BIS_fnc_kbSkip.md":"Skip a conversation started with `BIS_fnc_kbTell`. Currently played sentence will be finished.\n\n\n---\n*Syntaxes:*\n\n[topicName, mission, wait] call `BIS_fnc_kbSkip`\n\n---\n*Example 1:*\n\n```sqf\n[\"topic1\", \"currentMission\"] call BIS_fnc_kbSkip;\n```\n\n*Example 2:*\n\n```sqf\n[player] call BIS_fnc_kbSkip;\n```","BIS Functions\\BIS_fnc_kbTell.md":"Play given sentence/conversation. Script terminates itself when conversation is finished.<br>\nConversation must be declared in `Description.ext/CfgSentences`.\n\n\n---\n*Syntaxes:*\n\n[topic, container, section, radioMode, code, speakers, soundVolume, radioProtocol] spawn `BIS_fnc_kbTell`\n\n---\n*Example 1:*\n\n```sqf\n[\"01_Wave\", \"A_in\", nil, \"SIDE\", nil, nil, 1, false] spawn BIS_fnc_kbTell;\n```","BIS Functions\\BIS_fnc_kbTellLocal.md":"Play given sentence, disable radio and/or lower sounds. Will use `BIS_fnc_showSubtitle` for better effects if channel is DIRECT or VEHICLE.\n\n\n---\n*Syntaxes:*\n\n[mode, parameters] call `BIS_fnc_kbTellLocal`\n\n---\n*Example 1:*\n\n```sqf\n[\"sentence\", [player, [BIS_HQ, \"myTopic\", \"playerSentence1\"]]] call BIS_fnc_kbTellLocal;\n```\n\n*Example 2:*\n\n```sqf\n[\"conversationStart\", [0.5, true]] call BIS_fnc_kbTellLocal;\n```\n\n*Example 3:*\n\n```sqf\n[\"conversationEnd\", [0.5, true]] call BIS_fnc_kbTellLocal;\n```","BIS Functions\\BIS_fnc_kbTopicConfig.md":"Reads the `configs` to return a matching **config `>>` `CfgSentences` `>>` missionName `>>` topic** entry.\n\n\n---\n*Syntaxes:*\n\n[missionName, topic] call `BIS_fnc_kbTopicConfig`\n\n---\n*Example 1:*\n\n```sqf\nprivate _configTopic = [\"missionName\", \"topic\"] call BIS_fnc_kbTopicConfig;\n```","BIS Functions\\BIS_fnc_keyCode.md":"Returns DIK code of a given key.\n\n\n---\n*Syntaxes:*\n\ninput call `BIS_fnc_keyCode`\n\n---\n*Example 1:*\n\n```sqf\n13 call BIS_fnc_keyCode; // Returns \"EQUALS\"\n```\n\n*Example 2:*\n\n```sqf\n\"EQUALS\" call BIS_fnc_keyCode; // returns 13\n```\n\n*Example 3:*\n\n```sqf\ntrue call BIS_fnc_keyCode; // returns [\"ESCAPE\",1,\"1\",2,\"2\",3,\"3\",4,\"4\",5,\"5\",6,\"6\",7,\"7\",8,\"8\",9,\"9\",10,\"0\",11,\"MINUS\",12,\"EQUALS\",13...]\n```","BIS Functions\\BIS_fnc_keyframeAnimation_deltaTime.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_keyframeAnimation_deltaTime`\n\n---\n","BIS Functions\\BIS_fnc_keyframeAnimation_init.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_keyframeAnimation_init`\n\n---\n","BIS Functions\\BIS_fnc_keyHold.md":"Allows for hold button interactions. Hold action is started by pressing the space bar.\n\n\n---\n*Syntaxes:*\n\n[description, duration, condition, arguments, loaded] spawn `BIS_fnc_keyHold`\n\n---\n*Example 1:*\n\n```sqf\n[\"Hold that key!\",2,{alive player}] spawn BIS_fnc_keyHold;\n```","BIS Functions\\BIS_fnc_keypointsExport.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_keypointsExport` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_keypointsExport;\n``` -->","BIS Functions\\BIS_fnc_keypointsExportFromKML.md":"<pre>/*\n\n\tDescription:\n\tImports and marks positions from KLM file.\n\n\tParameter(s):\n\t_this: STRING - path to .kml file\n\n\tReturns:\n\tSTRING - config output (also copied to clipboard)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_keypointsExportFromKML` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_keypointsExportFromKML;\n``` -->","BIS Functions\\BIS_fnc_key_compute.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tComputes data for a key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_compute`\n\n---\n","BIS Functions\\BIS_fnc_key_computeOwnerCurve.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tComputes the curve that owns key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tCurve - The owner curve object\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_computeOwnerCurve`\n\n---\n","BIS Functions\\BIS_fnc_key_computeTime.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tComputes the time of given key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key time\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_computeTime`\n\n---\n","BIS Functions\\BIS_fnc_key_edenAreControlPointsLocked.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tWhether control points of given key are set to locked\n\n\tParameter(s):\n\t_this select 0: Object - The key object\n\n\tReturns:\n\tBool - True if control points are locked, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_edenAreControlPointsLocked`\n\n---\n","BIS Functions\\BIS_fnc_key_edenAttributesChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a key\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_edenAttributesChanged`\n\n---\n","BIS Functions\\BIS_fnc_key_edenConnectionChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a key\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_edenConnectionChanged`\n\n---\n","BIS Functions\\BIS_fnc_key_edenDragged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tEntity is dragged in 3DEN\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_edenDragged`\n\n---\n","BIS Functions\\BIS_fnc_key_edenIsSelected.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tWhether given key is selected in 3den\n\n\tParameter(s):\n\t_this select 0: Object\t- The key object\n\n\tReturns:\n\tBool - True if selected, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_edenIsSelected`\n\n---\n","BIS Functions\\BIS_fnc_key_edenRegisteredToWorld.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a key\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_edenRegisteredToWorld`\n\n---\n","BIS Functions\\BIS_fnc_key_edenUnregisteredFromWorld.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a key\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_edenUnregisteredFromWorld`\n\n---\n","BIS Functions\\BIS_fnc_key_getArriveControlPoint.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the arrive control point of a key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tObject - The control point\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getArriveControlPoint`\n\n---\n","BIS Functions\\BIS_fnc_key_getArriveTangent.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the key arrive tangent\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key arrive tangent\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getArriveTangent`\n\n---\n","BIS Functions\\BIS_fnc_key_getArriveTangentWeight.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the key arrive tangent weight\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key arrive tangent weight\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getArriveTangentWeight`\n\n---\n","BIS Functions\\BIS_fnc_key_getConfigTime.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the time of given key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key time\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getConfigTime`\n\n---\n","BIS Functions\\BIS_fnc_key_getFOV.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the FOV value of a key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The fov value\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getFOV`\n\n---\n","BIS Functions\\BIS_fnc_key_getInterpMode.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the key interp mode index\n\t* 0  - Linear\n\t* 1  - Cubic\n\t* 2  - EaseIn\n\t* 3  - EaseOut\n\t* 4  - EaseInOut\n\t* 5  - Hermite\n\t* 6  - Berp\n\t* 7  - BounceIn\n\t* 8  - BounceOut\n\t* 9  - BounceInOut\n\t* 10 - QuinticIn\n\t* 11 - QuinticOut\n\t* 12 - QuinticInOut\n\t* 13 - ElasticIn\n\t* 14 - ElasticOut\n\t* 15 - ElasticInOut\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tInteger - The mode as integer\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getInterpMode`\n\n---\n","BIS Functions\\BIS_fnc_key_getLeaveControlPoint.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the leave control point of key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tObject - The control point\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getLeaveControlPoint`\n\n---\n","BIS Functions\\BIS_fnc_key_getLeaveTangent.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the key leave tangent\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key leave tangent\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getLeaveTangent`\n\n---\n","BIS Functions\\BIS_fnc_key_getLeaveTangentWeight.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the key leave tangent weight\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key leave tangent weight\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getLeaveTangentWeight`\n\n---\n","BIS Functions\\BIS_fnc_key_getOwnerCurve.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the curve that owns key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tCurve - The owner curve object\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getOwnerCurve`\n\n---\n","BIS Functions\\BIS_fnc_key_getTime.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the time of given key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key time\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getTime`\n\n---\n","BIS Functions\\BIS_fnc_key_getValue.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the value of given key\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tFloat - The key value\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_getValue`\n\n---\n","BIS Functions\\BIS_fnc_key_isFloat.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns true if this is a key with float value, false if not\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tBool - True if key is of float data type, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_isFloat`\n\n---\n","BIS Functions\\BIS_fnc_key_isVector.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns true if this is a key with vector value, false if not\n\n\tParameter(s):\n\t_this select 0: Object - The key\n\n\tReturns:\n\tBool - True if key is of vector data type, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_isVector`\n\n---\n","BIS Functions\\BIS_fnc_key_setArriveTangent.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the key arrive tangent\n\n\tParameter(s):\n\t_this select 0: Object \t- The key\n\t_this select 1: float\t- The new arrive tangent\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_setArriveTangent`\n\n---\n","BIS Functions\\BIS_fnc_key_setArriveTangentWeight.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the key arrive tangent weight\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\t_this select 1: Float\t- The new arrive tangent weight\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_setArriveTangentWeight`\n\n---\n","BIS Functions\\BIS_fnc_key_setInterpMode.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the interpolation mode of the key\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\t_this select 1: Integer\t- The new key interp mode\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_setInterpMode`\n\n---\n","BIS Functions\\BIS_fnc_key_setLeaveTangent.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the key leave tangent\n\n\tParameter(s):\n\t_this select 0: Object \t- The key\n\t_this select 1: Float \t- The new leave tangent\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_setLeaveTangent`\n\n---\n","BIS Functions\\BIS_fnc_key_setLeaveTangentWeight.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the key leave tangent weight\n\n\tParameter(s):\n\t_this select 0: Object \t- The key\n\t_this select 1: Float\t- The new leave tangent weight\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_setLeaveTangentWeight`\n\n---\n","BIS Functions\\BIS_fnc_key_setTime.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the time of given key\n\n\tParameter(s):\n\t_this select 0: Object \t- The key\n\t_this select 1: Float\t- The new time\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_setTime`\n\n---\n","BIS Functions\\BIS_fnc_key_setValue.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the value of given key\n\n\tParameter(s):\n\t_this select 0: Object\t- The key\n\t_this select 1: Float\t- The new value\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_key_setValue`\n\n---\n","BIS Functions\\BIS_fnc_KMLimport.md":"Read positions from a [KML file](https://en.wikipedia.org/wiki/Keyhole_Markup_Language).\n\n\n---\n*Syntaxes:*\n\nfilePath call `BIS_fnc_KMLimport`\n\n---\n*Example 1:*\n\n```sqf\nprivate _data = \"subDir\\myFile.kml\" call BIS_fnc_KMLimport;\n```","BIS Functions\\BIS_fnc_laptopInit.md":"Adds an `Easter egg` to the laptop, that is active only if the mission date is set to `2001-06-22`.\n\n\n---\n*Syntaxes:*\n\nlaptop call `BIS_fnc_laptopInit`\n\n---\n*Example 1:*\n\n```sqf\nprivate _actionId = _myLaptop call BIS_fnc_laptopInit;\n```","BIS Functions\\BIS_fnc_laptopPlayVideo.md":"Plays an easter egg video on the screen of an old laptop.\n\n\n---\n*Syntaxes:*\n\nlaptop call `BIS_fnc_laptopPlayVideo`\n\n---\n*Example 1:*\n\n```sqf\nthis call BIS_fnc_laptopPlayVideo;\n```","BIS Functions\\BIS_fnc_lerp.md":"Linear floating point interpolation. *(Reference Wikipedia \"Linear_interpolation|Linear Interpolation (Wikipedia)\")*\n\n\n---\n*Syntaxes:*\n\n[currentValue,targetValue,alpha] call `BIS_fnc_lerp`\n\n---\n*Example 1:*\n\n```sqf\n[1,10,0.5] call BIS_fnc_lerp; // Returns 5.5\n```","BIS Functions\\BIS_fnc_lerpVector.md":"Given two different vectors A and B, think of a straight line drawn between them, `alpha` saying how far along that line is the wanted vector.\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, alpha] call `BIS_fnc_lerpVector`\n\n---\n*Example 1:*\n\n```sqf\n[[1592.74,6558.36,0], [2240.43,7459.69,0], 0.3] call BIS_fnc_lerpVector; // returns [1787.05,6828.76,0]\n```","BIS Functions\\BIS_fnc_limitAmmunition.md":"Limits the number of magazines carried by individual unit. Each container (uniform, vest and backpack) can be limited separately or left untouched.\n\tThe function limits the number of magazines of each unique ammo category in respective container. Items like First Aid Kit or Mine Detector are not affected by the function<br><br>Set the minimum and maximum values in an array, for example [0.5,1] will set the magazine count anywhere between 50-100% of default count.\n\n\n---\n*Syntaxes:*\n\n[unit,uniformMags,vestMags,BackpackMags] call `BIS_fnc_limitAmmunition`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_limitAmmunition;\n```\n\n*Example 2:*\n\n```sqf\n[ player,[],[0.5,0.5],[0,1] ] call BIS_fnc_limitAmmunition;\n```","BIS Functions\\BIS_fnc_limitItems.md":"Keeps or removes unit's items (including NVGs and binocular/designator) based on probability user sets.\n\n\n---\n*Syntaxes:*\n\n[unit,chanceNVG,chanceBino,chanceGPS,chanceMap,chanceRadio,chanceCompass,chanceWatch] call `BIS_fnc_limitItems`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_limitItems;\n```\n\n*Example 2:*\n\n```sqf\n[player,0,15,30,45,60,75,90] call BIS_fnc_limitItems;\n```","BIS Functions\\BIS_fnc_limitSupport.md":"Limits support runs during a mission.\n\n\n---\n*Syntaxes:*\n\n[module, supportType, quantity] call `BIS_fnc_limitSupport`\n\n---\n*Example 1:*\n\n```sqf\n[reqModule, \"Transport\", -1] call BIS_fnc_limitSupport;\n```","BIS Functions\\BIS_fnc_limitWeaponItems.md":"Keeps or remove unit's weapon attachments based on probability user sets. Apply for primary, secondary or handgun weapon separately.\n\n\n---\n*Syntaxes:*\n\n[unit,mode,chanceOptics,chanceAttach,chanceMuzzle,chanceUnderbarrel] call `BIS_fnc_limitWeaponItems`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_limitWeaponItems;\n```\n\n*Example 2:*\n\n```sqf\n[ [player, 0, 25, 50, 75, 100 ] ]  call BIS_fnc_limitWeaponItems;\n```\n\n*Example 3:*\n\n```sqf\n[ [player, 0, [\"optic_lrps\",100], [\"acc_pointer_ir\",100], [\"muzzle_snds_B\",100], [\"bipod_01_F_blk\",100] ] ]  call BIS_fnc_limitWeaponItems;\n```","BIS Functions\\BIS_fnc_linearConversion.md":"Linear conversion of a value from one set to another\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_linearConversion`; -->\n\n---\n","BIS Functions\\BIS_fnc_listCuratorPlayers.md":"Returns list of playable units with access to curator.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_listCuratorPlayers`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_listCuratorPlayers;\n```","BIS Functions\\BIS_fnc_listPlayers.md":"Returns a list of `currently played` units, alive or dead.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_listPlayers`\n\n---\n*Example 1:*\n\n```sqf\nprivate _allPlayers = call BIS_fnc_listPlayers;\n```","BIS Functions\\BIS_fnc_liveFeed.md":"Display a live feed.\n\n\n---\n*Syntaxes:*\n\n[source, target, receiver, effect] call `BIS_fnc_liveFeed`\n\n---\n*Example 1:*\n\n```sqf\n[myUAV, player, player, 2] call BIS_fnc_liveFeed;\n```\n\n*Example 2:*\n\nlive feed display:\n\n```sqf\nprivate _UAVFeedDisplay = uiNamespace getVariable \"BIS_fnc_PIP_RscPIP\";\n```","BIS Functions\\BIS_fnc_liveFeedEffects.md":"Add effect to the current live feed.\n\n\n---\n*Syntaxes:*\n\neffect call `BIS_fnc_liveFeedEffects`\n\n---\n*Example 1:*\n\n```sqf\n1 call BIS_fnc_liveFeedEffects;\n```","BIS Functions\\BIS_fnc_liveFeedModuleEffects.md":"<pre>/*\n\t\n\tDescription:\n\tAdd effects to a live feed via a module.\n\t\n\tParameters:\n\t\t_this: OBJECT - Live Feed - Effects module\n*/\n\n// They ran me on a dedicated server. I stopped their function.\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_liveFeedModuleEffects` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_liveFeedModuleEffects;\n``` -->","BIS Functions\\BIS_fnc_liveFeedModuleInit.md":"<pre>/*\n\t\n\tDescription:\n\tDisplay a live feed via a module.\n\t\n\tParameters:\n\t\t_this: OBJECT - Live Feed - Init module\n*/\n\n// Need not be run on dedicated servers\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_liveFeedModuleInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_liveFeedModuleInit;\n``` -->","BIS Functions\\BIS_fnc_liveFeedModuleSetSource.md":"<pre>/*\n\t\n\tDescription:\n\tSet a live feed's source via a module.\n\t\n\tParameters:\n\t\t_this: OBJECT - Live Feed - Set Source module\n*/\n\n// <insert smart comment about dedicated servers here>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_liveFeedModuleSetSource` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_liveFeedModuleSetSource;\n``` -->","BIS Functions\\BIS_fnc_liveFeedModuleSetTarget.md":"<pre>/*\n\t\n\tDescription:\n\tSet a live feed's target via a module.\n\t\n\tParameters:\n\t\t_this: OBJECT - Live Feed - Set Target module\n*/\n\n// On dedicated servers, player is not you\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_liveFeedModuleSetTarget` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_liveFeedModuleSetTarget;\n``` -->","BIS Functions\\BIS_fnc_liveFeedSetSource.md":"Set the source of the current live feed.\n\n\n---\n*Syntaxes:*\n\nsource call `BIS_fnc_liveFeedSetSource`\n\n---\n*Example 1:*\n\n```sqf\n[player, [0, 0.25, 1.6]] call BIS_fnc_liveFeedSetSource;\n```","BIS Functions\\BIS_fnc_liveFeedSetTarget.md":"Set the target of the current live feed.\n\n\n---\n*Syntaxes:*\n\ntarget call `BIS_fnc_liveFeedSetTarget`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_liveFeedSetTarget;\n```","BIS Functions\\BIS_fnc_liveFeedTerminate.md":"Terminate a live feed.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_liveFeedTerminate`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_liveFeedTerminate;\n```","BIS Functions\\BIS_fnc_loadClass.md":"Searches for class in mission, campaign and then in global config file.\n\n\n---\n*Syntaxes:*\n\n[input, defaultValue] call `BIS_fnc_loadClass`\n\n---\n*Example 1:*\n\n```sqf\n[ [\"bin\\config.bin\"], configFile >> \"Cfg3DEN\" >> \"Camera\"] call BIS_fnc_loadClass\n```","BIS Functions\\BIS_fnc_loadEntry.md":"Searches for config entry in mission, campaign and then in global config file.\n\n\n---\n*Syntaxes:*\n\n[path,defaultConfig] call `BIS_fnc_loadEntry`\n\n---\n*Example 1:*\n\n```sqf\n[ [\"CfgWeapons\",\"hgun_Rook40_snds_F\",\"bullet3\"], configfile >> \"CfgWeapons\" >> \"hgun_Rook40_snds_F\" >> \"baseWeapon\" ] call BIS_fnc_loadEntry;\n```","BIS Functions\\BIS_fnc_loadFunctions.md":"Compile scripts and save them into globally available functions. Defines `_fnc_scriptName` variable.\n\n\n---\n*Syntaxes:*\n\n[fileDirectory, prefix, nameVars, global] call `BIS_fnc_loadFunctions`\n\n---\n*Example 1:*\n\n```sqf\n[\"scripts\\myDir\\\", \"MY_fnc_\", [\"script1\", \"script2\"], true] call BIS_fnc_loadFunctions;\n```\n\n*Example 2:*\n\n```sqf\n[\"scripts\\myDir\\\", \"MY_fnc_\", `\"script1\", \"script1file\"], [\"script2\", \"script2file\"`, false] call BIS_fnc_loadFunctions;\n```","BIS Functions\\BIS_fnc_loadInventory.md":"Adds a predefined loadout (either via **CfgVehicles}}, {{hl|CfgRespawnInventory**, or a custom inventory saved via `BIS_fnc_saveInventory`) to a specified unit.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_loadInventory`\n\n---\n*Example 1:*\n\n```sqf\n_loadout = [player, configFile >> \"CfgVehicles\" >> \"B_Soldier_SL_F\"] call BIS_fnc_loadInventory; // gives BLUFOR Squad Leader's loadout to player unit\n```\n\n*Example 2:*\n\nto save and load the inventory:\n\n```sqf\n[player, [missionNamespace, \"TAG_SavedInventory\"]] call BIS_fnc_saveInventory;\t// save it\n[player, [missionNamespace, \"TAG_SavedInventory\"]] call BIS_fnc_loadInventory;\t// load it\n```","BIS Functions\\BIS_fnc_loadVehicle.md":"Load vehicle look saved with `BIS_fnc_saveVehicle`.\n\n\n---\n*Syntaxes:*\n\n[object,target] call `BIS_fnc_loadVehicle`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_tank, [missionNamespace, \"BIS_someTankSave\"] ] call BIS_fnc_loadVehicle;\n```","BIS Functions\\BIS_fnc_localize.md":"Checks if passed string is localization key and if so, return the localized text. Else, returns the passed string itself.\n\n\n---\n*Syntaxes:*\n\nlocalizationString call `BIS_fnc_localize`\n\n---\n*Example 1:*\n\n```sqf\n// assuming the stringtable contains a key \"STR_someString\" with the value \"Hello world\"\n\"STR_someString\" call BIS_fnc_localize; // returns \"Hello world\"\n\n// assuming the stringtable does not contain a key \"STR_anotherString\"\n\"STR_anotherString\" call BIS_fnc_localize; // returns \"STR_anotherString\"\n```","BIS Functions\\BIS_fnc_locationDescription.md":"Return location description (e.g. \"NE of Agia Marina\")\n\n\n---\n*Syntaxes:*\n\nposition call `BIS_fnc_locationDescription`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"Player's position: %1\", player call BIS_fnc_locationDescription];\n```","BIS Functions\\BIS_fnc_locations.md":"Creates or registers location logics (used in various modules, like `Ambient Civilians`, `Ambient Civilian Vehicles` or Warfare 2).\n\nUpon registering, function will set following variables into location logic's variable space:\n* \"class\" - unique class of location (either **BIS_loc_<configname>}} or {{hl|BIS_loc_custom_<ID>**)\n* \"name\" - name of location from config or `setName` command. If none is defined, class is used\n* \"type\" - config type\n* \"neighbors\" - config defined neighbor locations\n\nIf you are registering currently existing object and some of variables above is already stored in it, it will `not` be replaced.\n\n\n---\n*Syntaxes:*\n\n[types, area, debug] call `BIS_fnc_locations`\n\n[objects] call `BIS_fnc_locations`\n\n---\n*Example 1:*\n\n```sqf\n[\"CityCenter\", [getPosATL player, 1000]] call BIS_fnc_locations;\n```\n\n*Example 2:*\n\n```sqf\n`\"acityc_dolina\"` call BIS_fnc_locations;\n```\n\n*Example 3:*\n\n```sqf\n[[myLocation1, myLocation2], [], true] call BIS_fnc_locations;\n```","BIS Functions\\BIS_fnc_lockedDoorNoHandleOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_lockedDoorNoHandleOpen`\n\n---\n","BIS Functions\\BIS_fnc_lockedDoorOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_lockedDoorOpen`\n\n---\n","BIS Functions\\BIS_fnc_locWeaponInfo.md":"Shows a utility tool checking length of weapon info texts.<br>\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_locWeaponInfo`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_locWeaponInfo;\n```","BIS Functions\\BIS_fnc_log.md":"Log debug message.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_log`\n\n---\n*Example 1:*\n\n```sqf\ndiag_tickTime call BIS_fnc_log;\n```\n\n*Example 2:*\n\n```sqf\n[dayTime, overcast, fog] call BIS_fnc_log;\n```\n\n*Example 3:*\n\n```sqf\n(name player) call BIS_fnc_log;\n```","BIS Functions\\BIS_fnc_logFormat.md":"Display debug message.\n\n\n---\n*Syntaxes:*\n\n[text, parameters] call `BIS_fnc_logFormat`\n\n---\n*Example 1:*\n\n```sqf\n[\"My logged name: %1, My position: %2\", name player, getPos player] call BIS_fnc_logFormat;\n// RPT output:\n// 12:34:56 \"BIS_fnc_log: [BIS_fnc_debugConsoleExec] My logged name: Miller, My position: [4866.73,21947.9,0.00143433]\"\n```","BIS Functions\\BIS_fnc_logFormatServer.md":"Logs (using `diag_log`) a debug message (`profileName`, `playerUID`, `_fnc_scriptName`, provided text) to `server`<nowiki/>'s `.RPT`. In singleplayer, `BIS_fnc_logFormat` is used.\n\n\n---\n*Syntaxes:*\n\n[text, argument1, argument2, ...] call `BIS_fnc_logFormatServer`\n\n---\n*Example 1:*\n\n```sqf\nprivate _currentFPS = diag_fps;\nif (_currentFPS < 10) then\n{\n\t[\"Player %1 has performance issues (%2 FPS)\", name player, _currentFPS] call BIS_fnc_logFormatServer;\n};\n```","BIS Functions\\BIS_fnc_lookAtArray.md":"Executes a code when one of the specified objects is looked at (player's cursor pointed towards it) for enough time\n\n\n---\n*Syntaxes:*\n\n[initialize, lookAtData] call `BIS_fnc_lookAtArray`\n\n---\n*Example 1:*\n\n```sqf\nprivate _lookAtArray = \n[\n\t[\n\t\tBIS_apc,\t\t\t\t\t\t\t\t\t\t// name of object\n\t\t2,\t\t\t\t\t\t\t\t\t\t\t\t// time we have to look at it\n\t\tfalse,\t\t\t\t\t\t\t\t\t\t\t// do we destroy the entry after we looked at it\n\t\t{ [\"What a wonderful APC\"] call BIS_fnc_log; }\t// code\n\t],\n\t[\n\t\tBIS_otherUnit, \n\t\t2,\n\t\tfalse,\n\t\t{ [\"apc looked at\"] call BIS_fnc_log; }\n\t]\n];\n[true, _lookAtArray] spawn \"BIS_fnc_lookAtArray\";\nsleep 15;\n[false] spawn \"BIS_fnc_lookAtArray\";\n```","BIS Functions\\BIS_fnc_lookAtArrayEH.md":"Event handler function for the `BIS_fnc_lookAtArray` function.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_loop.md":"Loop stacked code/function with timing and conditional control. Code and conditions are executed in `non-scheduled environment`.\n\n\n---\n*Syntaxes:*\n\n[action, parameters] call `BIS_fnc_loop`\n\n---\n*Example 1:*\n\n```sqf\n// hints time every five seconds\n[\"itemAdd\", [\"uniqueId\", { hint str time; }, 5]] call BIS_fnc_loop;\n```\n\n*Example 2:*\n\n```sqf\n// removes stacked loop with id of uniqueId\n[\"itemRemove\", [\"uniqueId\"]] call BIS_fnc_loop;\n```\n\n*Example 3:*\n\n```sqf\n// hints time every frame after BIS_variable is assigned\n[\"itemAdd\", [\"uniqueId\", { hint str time; }, nil, nil, { !isNil { BIS_variable } }]] call BIS_fnc_loop;\n```\n\n*Example 4:*\n\n```sqf\n// hints time every five seconds after BIS_variable is assigned\n[\"itemAdd\", [\"uniqueId\", { hint str time; }, 5, \"seconds\", { !isNil { BIS_variable } }]] call BIS_fnc_loop;\n```\n\n*Example 5:*\n\n```sqf\n// hints time every frame\n[\"itemAdd\", [\"uniqueId\", { hint str time; }]] call BIS_fnc_loop;\n```\n\n*Example 6:*\n\n```sqf\n// remove item from loop with id \"uniqueId\"\n[\"itemRemove\", [\"uniqueId\"]] call BIS_fnc_loop;\n```","BIS Functions\\BIS_fnc_lowestNum.md":"Returns the lowest number out of the passed set.\n\n\n---\n*Syntaxes:*\n\nnumbers call `BIS_fnc_lowestNum`\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = [7,2,1,5,10] call BIS_fnc_lowestNum; //_result = 1\n```","BIS Functions\\BIS_fnc_magazinesEntityType.md":"Return object's magazines as defined in config. Scans also turrets and pylons.\n\n\n---\n*Syntaxes:*\n\nclass call `BIS_fnc_magazinesEntityType`\n\n---\n*Example 1:*\n\n```sqf\n\"O_MBT_04_cannon_F\" call BIS_fnc_magazinesEntityType;\n//Returns [\"20Rnd_125mm_APFSDS_T_Green\",\"12Rnd_125mm_HEAT_T_Green\",\"12Rnd_125mm_HE_T_Green\",\"1000Rnd_762x51_Belt_Green\",\"1000Rnd_762x51_Belt_Green\",\"500Rnd_127x99_mag_Tracer_Yellow\",\"SmokeLauncherMag\"]\n```","BIS Functions\\BIS_fnc_magnitude.md":"Returns the magnitude of an array of numbers. The vector can have any number of elements.\n\n\n---\n*Syntaxes:*\n\nvector call `BIS_fnc_magnitude`\n\n---\n*Example 1:*\n\n```sqf\n[5,3] call BIS_fnc_magnitude;\n```","BIS Functions\\BIS_fnc_magnitudeSqr.md":"Returns the square magnitude of an array of numbers. The vector can have any number of elements.\n\n\n---\n*Syntaxes:*\n\nvector call `BIS_fnc_magnitudeSqr`\n\n---\n*Example 1:*\n\n```sqf\n[5,3] call BIS_fnc_magnitudeSqr;\n```","BIS Functions\\BIS_fnc_manageCuratorAddons.md":"Set which vision modes curator can access.\n\n\n---\n*Syntaxes:*\n\n[curators,classes,condition,text] call `BIS_fnc_manageCuratorAddons`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_curator,[\"A3_Air_F_Heli\"],{count allPlayers > 15},\"Helicopters unlocked!\"] call BIS_fnc_manageCuratorAddons;\n```","BIS Functions\\BIS_fnc_manageCuratorChallenges.md":"Handle repeated curator challenges.\n\tWhen rewards defined in the argument are exceeded, refilling points bar fill be offered instead.\n\n\n---\n*Syntaxes:*\n\n[curator,challenges,numChallenges,rewards,defaultRewards]] call `BIS_fnc_manageCuratorChallenges`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_curator, nil, 1, [ [{ hint \"Message\" }, \"Description\" ] ] ] call BIS_fnc_manageCuratorChallenges;\n```","BIS Functions\\BIS_fnc_mapAnimAdd.md":"Similar to `mapAnimAdd`, yet it provides additional parameters to allow for a non-linear zoom and various position interpolation modes.\n\n\n---\n*Syntaxes:*\n\n[duration, toZoom, toPosition, interpModeZoom, interpModePosition, fromZoom, fromPosition] call `BIS_fnc_mapAnimAdd`\n\n---\n*Example 1:*\n\n```sqf\nopenMap true; // the function will not work if the map is not open\n[2.0, 0.05, getPosASL player] call BIS_fnc_mapAnimAdd;\n```","BIS Functions\\BIS_fnc_mapAnimClear.md":"<pre>/*\n\tAuthor:\n\tNelson Duarte\n\n\tDescription:\n\tSame as mapAnimClear\n\n\tParameters:\n\tNothing\n\n\tReturns:\n\tNothing\n\n\tExamples:\n\t[] call BIS_fnc_mapAnimClear;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_mapAnimClear`\n\n---\n","BIS Functions\\BIS_fnc_mapAnimDone.md":"<pre>/*\n\tAuthor:\n\tNelson Duarte\n\n\tDescription:\n\tSame as mapAnimAdd but with possibility for non linear zoom and position interpolation modes\n\n\tParameters:\n\tNothing\n\n\tReturns:\n\tBool - False if map animation is in progress, true if not\n\n\tExamples:\n\t[] call BIS_fnc_mapAnimDone;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_mapAnimDone`\n\n---\n","BIS Functions\\BIS_fnc_mapGridSize.md":"Returns the size of map grid square at current zoom level.\n\n\n---\n*Syntaxes:*\n\n[map] call `BIS_fnc_mapGridSize`\n\n---\n*Example 1:*\n\n```sqf\nprivate _gridSize = [] call BIS_fnc_mapGridSize;\n```","BIS Functions\\BIS_fnc_mapSize.md":"Returns map size from config. Do not confuse with `worldSize`. The engine command calculates the map size and doesn't read it from config.\n\n\n---\n*Syntaxes:*\n\nterrainName call `BIS_fnc_mapSize`\n\n---\n*Example 1:*\n\n```sqf\n\"Altis\" call BIS_fnc_mapSize;\n```\n\n*Example 2:*\n\n```sqf\nworldName call BIS_fnc_mapSize;\n```\n\n*Example 3:*\n\n```sqf\ncall BIS_fnc_mapSize;\n```","BIS Functions\\BIS_fnc_markerCreate.md":"<pre>/*\n\n\tDescription:\n\tCreates marker with given params.\n\tReads config to recognize settings - use for quick debugging only.\n\n\tParameter(s):\n\t_this: ARRAY of values:\n\t\tSTRING - one of type, color, brush or shape. If no corresponding class is found, value is used as marker text\n\t\tARRAY\n\t\t\t[STRING(,ANY,ANY,...)] - marker name with optional arguments\n\t\t\t[NUMBER] - marker size [a,a]\n\t\t\t[NUMBER,NUMBER] - marker size [x,y]\n\t\t\t[NUMBER,NUMBER,NUMBER] - marker position [x,y,z]\n\t\tOBJECT - object's position\n\t\tNUMBER - marker dir\n\t\tBOOL - marker locality (true if global)\n\n\tReturns:\n\tSTRING - created marker\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_markerCreate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_markerCreate;\n``` -->","BIS Functions\\BIS_fnc_markerParams.md":"Returns marker params in format compatible with `BIS_fnc_markerCreate`.\n\n\n---\n*Syntaxes:*\n\nvarName call `BIS_fnc_markerParams`\n\n---\n*Example 1:*\n\n```sqf\nprivate _params = \"marker_1\" call BIS_fnc_markerParams;\n```","BIS Functions\\BIS_fnc_markerPath.md":"Create marker(s) between two points.\n\n\n---\n*Syntaxes:*\n\n[start, end, spacing, params] call `BIS_fnc_markerPath`\n\n---\n*Example 1:*\n\n```sqf\n[\"markerStart\", \"markerEnd\"] call BIS_fnc_markerPath;\n```\n\n*Example 2:*\n\n```sqf\n[player, nearestLocation [getPos player, \"nameCity\"]] call BIS_fnc_markerPath;\n```","BIS Functions\\BIS_fnc_markerToString.md":"Converts existing marker to `String`, for example: **<nowiki>\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\"</nowiki>**\n\n\n---\n*Syntaxes:*\n\n[markerName, delimiter] call `BIS_fnc_markerToString`\n\n---\n*Example 1:*\n\n```sqf\n\"marker1\" call BIS_fnc_markerToString;\n```\n\n*Example 2:*\n\n```sqf\n[\"marker1\", \":\"] call BIS_fnc_markerToString;\n```","BIS Functions\\BIS_fnc_markerToTrigger.md":"Makes an existing or new marker cover a trigger area.\n\n\n---\n*Syntaxes:*\n\n[markerName, trigger`, localChange`] call `BIS_fnc_markerToTrigger`\n\n---\n*Example 1:*\n\n```sqf\nprivate _createdMarker = [\"marker1\", myTrigger] call BIS_fnc_markerToTrigger;\n```","BIS Functions\\BIS_fnc_markWaypoints.md":"<pre>/*\n\n\tDescription:\n\tCreates a marker on each uncompleted waypoint and marks it checked after completing that WP.\n\tNote: \"On Activation\" WP code is used for handling the markers; if this code is overwritten during the course, it can break this functionality\n\n\tParameter(s):\n\t_this select 0: OBJECT - unit who will have its waypoints marked\n\t_this select 1 (Optional, use \"\" for default): STRING - text of hint shown after completing a waypoint, %1 is used for WP number (default \"\")\n\t_this select 2 (Optional, use [] for default): ARRAY of STRINGS - marker text format for [uncompleted, completed] waypoints, %1 is used for WP number (default [\"%1\", \"%1\"])\n\t_this select 3 (Optional, use [] for default): ARRAY of STRINGS - marker icon for [uncompleted, completed] waypoints (default [\"mil_circle\", \"mil_circle\"])\n\t_this select 4 (Optional, use [] for default): ARRAY of STRINGS - marker color for [uncompleted, completed] waypoints (default [\"ColorRed\", \"ColorGreen\"])\n\t_this select 5 (Optional, use [] for default): ARRAY of NUMBERS - marker size for [uncompleted, completed] waypoints (default [0.75, 0.75])\n\n\tReturns:\n\tNOTHING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_markWaypoints` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_markWaypoints;\n``` -->","BIS Functions\\BIS_fnc_maxDiffArray.md":"Function to return the maximum difference between all values in an array.\n\n\n---\n*Syntaxes:*\n\n[arrayOfNumbers] call `BIS_fnc_maxDiffArray`\n\n---\n*Example 1:*\n\n```sqf\nprivate _maxDiff = `0, 5, 10, -5` call BIS_fnc_maxDiffArray; // will return 15 (-5 to 10)\n```","BIS Functions\\BIS_fnc_mirrorCuratorSettings.md":"Mirrors settings from one curator to another.\n\n\n---\n*Syntaxes:*\n\n[from, to, modes, shareType] call `BIS_fnc_mirrorCuratorSettings`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t[curator_1, curator_2], \n\t[curator_3, curator_4], \n\t[\"addons\", \"objects\", \"coefs\"] \n] call BIS_fnc_mirrorCuratorSettings;\n```","BIS Functions\\BIS_fnc_miscAnim.md":"Setting up the animations with correct positions for object - choose correct performance. For ex. fixingTowingTractor (read the description).\n\n\n---\n*Syntaxes:*\n\n[anim, person1, vehicle`, person2, isOnBoard, altitude, doMove`] call `BIS_fnc_miscAnim`\n\n---\n*Example 1:*\n\n```sqf\n[\"twoTalking1\", unit1, myCar, unit2] call BIS_fnc_miscAnim;\n```","BIS Functions\\BIS_fnc_missileLaunchPositionFix.md":"Workaround fix for ATGM/SAM launch positions\n\n\n---\n*Syntaxes:*\n\n[vehicle, projectile, selection, projectileType] call `BIS_fnc_missileLaunchPositionFix`\n\n---\n*Example 1:*\n\n```sqf\n[_vehicle,_missile,\"missile_move\",\"MissileBase\"] call BIS_fnc_missileLaunchPositionFix;\n```","BIS Functions\\BIS_fnc_missionConversations.md":"<pre>/*\n\n\tDescription:\n\tHeader function of local mission conversations\n\n\tParameter(s):\n\t\t0: STRING - unique mode\n\t\t1 (Optional): ANY - additional params\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_missionConversations` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_missionConversations;\n``` -->","BIS Functions\\BIS_fnc_missionConversationsLocal.md":"\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_missionConversationsLocal`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_missionConversationsLocal;\n```","BIS Functions\\BIS_fnc_missionFlow.md":"This function is automatically run in `Arma 3 Functions Library#Attributes|post-init]] by a [[Arma 3 Functions Library|CfgFunctions` declaration. If the mission contains a **missionFlow.fsm** file, it will be loaded, otherwise an empty, default one will be used.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_missionFlow`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_missionFlow;\n```","BIS Functions\\BIS_fnc_missionHandlers.md":"<pre>#define VAR_RELOADS\t(missionname + \"_reloads_\" + str ismultiplayer)\n\n//--- Mission end type and rating\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_missionHandlers` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_missionHandlers;\n``` -->","BIS Functions\\BIS_fnc_missionRespawnType.md":"Return respawn type defined in `Description.ext`. Can return as `Number` (e.g 1) or `String` (e.g \"BIRD\").\n\n\n---\n*Syntaxes:*\n\ntype call `BIS_fnc_missionRespawnType`\n\n---\n*Example 1:*\n\n```sqf\nprivate _respawnAsNumber = 0 call BIS_fnc_missionRespawnType;\n```\n\n*Example 2:*\n\n```sqf\nprivate _respawnAsString = \"\" call BIS_fnc_missionRespawnType;\n```","BIS Functions\\BIS_fnc_missionSelector.md":"Function that draws clickable, hoverable and animated icons on the map that execute a user-defined code when pressed.\n\n\n---\n*Syntaxes:*\n\n[area, mapCenter, missionsArray] call `BIS_fnc_missionSelector`\n\n---\n*Example 1:*\n\n```sqf\nprivate _area = [750, 400];\nprivate _missionsList =\n[\n\t[\n\t\tgetMarkerPos \"BIS_briefMarkerINFANTRY\",\n\t\t\"Infantry\",\n\t\t\"Your mission is to do stuff\",\n\t\t\"AnimBriefing\\intro_stage1a_CA.paa\",\n\t\t{ hint \"infantry mission selected\" }\n\t],\n\t[\n\t\tgetMarkerPos \"BIS_briefMarkerSPECIALFORCES\",\n\t\t\"Special Forces\",\n\t\t\"Your mission is to do stuff but in a more special way\",\n\t\t\"AnimBriefing\\intro_stage1a_CA.paa\",\n\t\t{ hint \"special forces mission selected\" }\n\t]\n];\n\nprivate _index = [_area, getMarkerPos \"BIS_cameraCenter\", _missionsList] call BIS_fnc_missionSelector;\nprivate _missionDetails = _missionsList select _index;\n```","BIS Functions\\BIS_fnc_missionTasks.md":"<pre>/*\n\n\tDescription:\n\tHeader function of local mission tasks.\n\tAutomatically declares following variables:\n\t\t_taskID: STRING\n\t\t_taskState: STRING\n\t\t_taskExists: BOOL\n\n\tParameter(s):\n\t\t0: STRING - unique mode\n\t\t1 (Optional): ANY - additional params\n\t\t2 (Optional): CODE - specific task function (default: \"BIS_fnc_missionTasksLocal\")\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_missionTasks` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_missionTasks;\n``` -->","BIS Functions\\BIS_fnc_missionTasksLocal.md":"\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_missionTasksLocal`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_missionTasksLocal;\n```","BIS Functions\\BIS_fnc_missionTimeLeft.md":"Returns time in seconds until the mission end. Remaining time can be set using `estimatedTimeLeft` command or using `BIS_fnc_countdown`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_missionTimeLeft`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_missionTimeLeft;\n```","BIS Functions\\BIS_fnc_moduleAI.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleAI` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleAI;\n``` -->","BIS Functions\\BIS_fnc_moduleAmmo.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleAmmo` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleAmmo;\n``` -->","BIS Functions\\BIS_fnc_moduleAnimals.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleAnimals` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleAnimals;\n``` -->","BIS Functions\\BIS_fnc_moduleArsenal.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleArsenal` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleArsenal;\n``` -->","BIS Functions\\BIS_fnc_moduleBleedTickets.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleBleedTickets` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleBleedTickets;\n``` -->","BIS Functions\\BIS_fnc_moduleBootcampStage.md":"<pre>/*\n\n\tDescription:\n\tChange the current Stage in Bootcamp MP Guided Mode\n\n\tParameter(s):\n\thttp://community.bistudio.com/wiki/Arma_3_Modules\n\n\tReturns:\n\tNONE\n*/\n\n// Parameters\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleBootcampStage` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleBootcampStage;\n``` -->","BIS Functions\\BIS_fnc_moduleCAS.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCAS` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCAS;\n``` -->","BIS Functions\\BIS_fnc_moduleChat.md":"Make a list of units use any *chat command (`groupChat`, `vehicleChat`, `sideChat`, `commandChat`, `globalChat`).\n\n\n---\n*Syntaxes:*\n\n[logic, units, isActivated] call `BIS_fnc_moduleChat`\n\n---\n*Example 1:*\n\n```sqf\nmyLogic setVariable [\"Channel\", \"2\"];\nmyLogic setVariable [\"Text\", \"Hello everyone, this is side chat!\"];\n[myLogic, [player], true] call BIS_fnc_moduleChat;\n```","BIS Functions\\BIS_fnc_moduleCivilianPresence.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n\tExample:\n\t[\"getObjects\",[_module,\"ModuleCivilianPresenceSafeSpot_F\"]] call BIS_fnc_moduleCivilianPresence;\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleCivilianPresence`\n\n---\n","BIS Functions\\BIS_fnc_moduleCivilianPresenceSafeSpot.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleCivilianPresenceSafeSpot`\n\n---\n","BIS Functions\\BIS_fnc_moduleCivilianPresenceUnit.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleCivilianPresenceUnit`\n\n---\n","BIS Functions\\BIS_fnc_moduleCombatGetIn.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCombatGetIn` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCombatGetIn;\n``` -->","BIS Functions\\BIS_fnc_moduleCountdown.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCountdown` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCountdown;\n``` -->","BIS Functions\\BIS_fnc_moduleCoverMap.md":"Covers the map except for a defined area. This function was designed to be used by the `Modules framework`, but it can also be used without the module. The effect does not move with the centerObject.<br><br>\nIt is essential for the function to work that `centerObject` has the variable `objectArea` defined.<br>\n<sqf inline>centerObject setVariable [\"objectArea\", [sizeX, sizeY, rotation]]\n```\n* centerObject `Object` - Object which is used as center\n* sizeX: `Number` -  Length in x in meters\n* sizeY: `Number` - Length in y in meters\n* rotation: `Number` - Rotation of the rectangle in degree\n\n\n---\n*Syntaxes:*\n\n[centerUnit,units,init] call `BIS_fnc_moduleCoverMap`\n\n---\n*Example 1:*\n\n```sqf\n// covers the whole map except an area of 1000m by 1000m\n// can be used to dynamically change size of the area during mission\ncenterObject setVariable [\"objectArea\",[1000, 1000, 0, false, 0]];\n[_centerObject, [], true] call BIS_fnc_moduleCoverMap;\n```","BIS Functions\\BIS_fnc_moduleCreateDiaryRecord.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCreateDiaryRecord` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCreateDiaryRecord;\n``` -->","BIS Functions\\BIS_fnc_moduleCreateProjectile.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCreateProjectile` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCreateProjectile;\n``` -->","BIS Functions\\BIS_fnc_moduleCurator.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCurator` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCurator;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorAddAddons.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorAddAddons` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorAddAddons;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorAddCameraArea.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorAddCameraArea` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorAddCameraArea;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorAddEditableObjects.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorAddEditableObjects` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorAddEditableObjects;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorAddEditingArea.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorAddEditingArea` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorAddEditingArea;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorAddEditingAreaPlayers.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorAddEditingAreaPlayers` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorAddEditingAreaPlayers;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorAddIcon.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorAddIcon` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorAddIcon;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorAddPoints.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorAddPoints` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorAddPoints;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetAttributes.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetAttributes` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetAttributes;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetCamera.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetCamera` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetCamera;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetCoefs.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetCoefs` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetCoefs;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetCostsDefault.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetCostsDefault` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetCostsDefault;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetCostsSide.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetCostsSide` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetCostsSide;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetCostsVehicleClass.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetCostsVehicleClass` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetCostsVehicleClass;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetEditingAreaType.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetEditingAreaType` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetEditingAreaType;\n``` -->","BIS Functions\\BIS_fnc_moduleCuratorSetObjectCost.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleCuratorSetObjectCost` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleCuratorSetObjectCost;\n``` -->","BIS Functions\\BIS_fnc_moduleDamage.md":"Damage given vehicles.\n\n\n---\n*Syntaxes:*\n\n[logic, vehicles, isActivated] call `BIS_fnc_moduleDamage`\n\n---\n*Example 1:*\n\n```sqf\n[myLogic, vehicle player, true] call BIS_fnc_moduleDamage;\n```","BIS Functions\\BIS_fnc_moduleDate.md":"Used by the Date module.\n\n\n---\n*Syntaxes:*\n\n[logic, `objNull`, activated] call `BIS_fnc_moduleDate`\n\n---\n*Example 1:*\n\n```sqf\n[logic, objNull, true] call BIS_fnc_moduleDate;\n```","BIS Functions\\BIS_fnc_moduleDiary.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleDiary` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleDiary;\n``` -->","BIS Functions\\BIS_fnc_moduleDoorOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleDoorOpen` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleDoorOpen;\n``` -->","BIS Functions\\BIS_fnc_moduleEditTerrainObject.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n\tSetups given terrain object.\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleEditTerrainObject`\n\n---\n","BIS Functions\\BIS_fnc_moduleEffectsBubbles.md":"Creates underwater bubble effect on defined place (called usually by `BIS_fnc_moduleEffectsEmitterCreator`).\n\n\n---\n*Syntaxes:*\n\n[module] call `BIS_fnc_moduleEffectsBubbles`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_module] call BIS_fnc_moduleEffectsBubbles;\n```","BIS Functions\\BIS_fnc_moduleEffectsEmitterCreator.md":"<pre>/*\n\tFile: fn_moduleEffectsEmitterCreator.sqf\n\n\tDescription:\n\tModule function. Creates particle emitters and calls effect function.\n\n\tParameter(s):\n\t_this select 0 (Object) - Module logic.\n\t_this select 1 (String) - Function name.\n\t_this select 2 (Number) - Optional - Number of emitters.\n\t\n\tReturned value:\n\tNone.\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleEffectsEmitterCreator` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleEffectsEmitterCreator;\n``` -->","BIS Functions\\BIS_fnc_moduleEffectsFire.md":"Creates fire on position of module (called usually by `BIS_fnc_moduleEffectsEmitterCreator`).\n\n\n---\n*Syntaxes:*\n\n[module] call `BIS_fnc_moduleEffectsFire`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_module] call BIS_fnc_moduleEffectsFire;\n```","BIS Functions\\BIS_fnc_moduleEffectsPlankton.md":"Creates underwater plankton effect around player (called usually by `BIS_fnc_moduleEffectsEmitterCreator`).\n\n\n---\n*Syntaxes:*\n\n[module] call `BIS_fnc_moduleEffectsPlankton`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_module] call BIS_fnc_moduleEffectsPlankton;\n```","BIS Functions\\BIS_fnc_moduleEffectsShells.md":"Creates empty ammo cartridges on position of the module logic.\n\n\n---\n*Syntaxes:*\n\n[module] call `BIS_fnc_moduleEffectsShells`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_module] call BIS_fnc_moduleEffectsShells;\n```","BIS Functions\\BIS_fnc_moduleEffectsSmoke.md":"Creates smoke on position of module (called usually by `BIS_fnc_moduleEffectsEmitterCreator`).\n\n\n---\n*Syntaxes:*\n\n[module] call `BIS_fnc_moduleEffectsSmoke`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_module] call BIS_fnc_moduleEffectsSmoke;\n```","BIS Functions\\BIS_fnc_moduleEndMission.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleEndMission` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleEndMission;\n``` -->","BIS Functions\\BIS_fnc_moduleExecute.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleExecute` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleExecute;\n``` -->","BIS Functions\\BIS_fnc_moduleFDBalloonAirDestruction.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFDBalloonAirDestruction` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFDBalloonAirDestruction;\n``` -->","BIS Functions\\BIS_fnc_moduleFDBalloonWaterDestruction.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFDBalloonWaterDestruction` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFDBalloonWaterDestruction;\n``` -->","BIS Functions\\BIS_fnc_moduleFDCPClear.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFDCPClear` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFDCPClear;\n``` -->","BIS Functions\\BIS_fnc_moduleFDCPIn.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFDCPIn` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFDCPIn;\n``` -->","BIS Functions\\BIS_fnc_moduleFDCPOut.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFDCPOut` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFDCPOut;\n``` -->","BIS Functions\\BIS_fnc_moduleFDFadeMarker.md":"Gradually change the alpha of the given marker.\n\n\n---\n*Syntaxes:*\n\n[markerName, alpha] spawn `BIS_fnc_moduleFDFadeMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"tankMarker\", 0.25] spawn BIS_fnc_moduleFDFadeMarker;\n```\n\n*Example 2:*\n\nCreates a pulsating marker:\n\n```sqf\n[] spawn \n{\n\twhile { alive enemyTank } do\n\t{\n\t\t[\"tankMarker\", 1] call BIS_fnc_moduleFDFadeMarker;\n\t\t[\"tankMarker\", 0] call BIS_fnc_moduleFDFadeMarker;\n\t\tsleep 0.05;\n\t};\n\t[\"tankMarker\", 0] call BIS_fnc_moduleFDFadeMarker;\n};\n```","BIS Functions\\BIS_fnc_moduleFDSkeetDestruction.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFDSkeetDestruction` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFDSkeetDestruction;\n``` -->","BIS Functions\\BIS_fnc_moduleFDStatsClear.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFDStatsClear` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFDStatsClear;\n``` -->","BIS Functions\\BIS_fnc_moduleFiringDrill.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFiringDrill` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFiringDrill;\n``` -->","BIS Functions\\BIS_fnc_moduleFriendlyFire.md":"<pre>/*******************************************************************************\n\tVersion:\t\t\t2.0\n\tName:\t\t\t\tFriendly Fire\n\tAuthor:\t\t\t\tZozo\n\tDESCRIPTION:\tHandles the friendly fire. Use either the module interface in the editor, or call individual functions.\n\tPARAMETERS:\t\t1) function called - string, list of functions:\n\t\t\t\t- Init\n\t\t\t\t- Destroy\n\t\t\t\t- AddUnits\n\t\t\t\t- RemoveUnits\n\t\t\t\t- ChangePriority\n\t\t\t\t- ListActiveUnit\n\t\t\t\t2) parameter for the function\n\tRETURNED VALUE:\tdepends on the function called\n\t\tEXAMPLES:\n\t\t\t\t// Initializes the module if not added in editor\n\t\t\t\t// No units are directly checked for friendly fire, but renegade state is checked anyway\n\t\t\t\t_ret = [ \"Init\", [] ] call BIS_fnc_moduleFriendlyFire\n\n\t\t\t\t// Initializes the module if not added in editor\n\t\t\t\t// BIS_vip1, BIS_vip2, BIS_noVip units are directly checked for friendly fire\n\t\t\t\tx = [ \"Init\", [ [ BIS_vip1, BIS_vip2, BIS_noVip],true ] ] call BIS_fnc_moduleFriendlyFire\n\n\t\t\t\t// De-initializes the module\n\t\t\t\t_ret = [ \"Destroy\" ] call BIS_fnc_moduleFriendlyFire\n\n\t\t\t\t// Add BIS_vip3 unit to be checked for friendly fire\n\t\t\t\tx = [ \"AddUnits\", [ [BIS_vip3] ] ] call BIS_fnc_moduleFriendlyFire\n\n\t\t\t\t// Remove BIS_vip1 unit from active units\n\t\t\t\tx = [ \"RemoveUnits\", [ [ BIS_vip1 ] ] ] call BIS_fnc_moduleFriendlyFire\n\n\t\t\t\t// set another priority for a vehicle- if it is hit once, considered as friendly fire\n\t\t\t\tx = [ \"ChangePriority\",  [BIS_vip,1] ] call BIS_fnc_moduleFriendlyFire\n\n*******************************************************************************/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleFriendlyFire` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleFriendlyFire;\n``` -->","BIS Functions\\BIS_fnc_moduleFuel.md":"Set fuel of linked units' `vehicles`.\n\n\n---\n*Syntaxes:*\n\n[logic, units, isActivated] call `BIS_fnc_moduleFuel`\n\n---\n*Example 1:*\n\n```sqf\n[myLogic, [unit1, unit2, vehicle1], true] call BIS_fnc_moduleFuel;\n```","BIS Functions\\BIS_fnc_moduleGenericRadio.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleGenericRadio` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleGenericRadio;\n``` -->","BIS Functions\\BIS_fnc_moduleGrenade.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleGrenade`\n\n---\n","BIS Functions\\BIS_fnc_moduleGroupID.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleGroupID` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleGroupID;\n``` -->","BIS Functions\\BIS_fnc_moduleHandle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleHandle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleHandle;\n``` -->","BIS Functions\\BIS_fnc_moduleHealth.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleHealth` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleHealth;\n``` -->","BIS Functions\\BIS_fnc_moduleHideTerrainObjects.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n\t3DEN MOD: Hiddes closest terrain object.\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleHideTerrainObjects`\n\n---\n","BIS Functions\\BIS_fnc_moduleHint.md":"<pre>/*\n\n\tDescription:\n\tShow a hint to all players of side\n\n\tParameter(s):\n\thttp://community.bistudio.com/wiki/Arma_3_Modules\n\n\tReturns:\n\tNONE\n*/\n\n// Parameters\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleHint` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleHint;\n``` -->","BIS Functions\\BIS_fnc_moduleHQ.md":"<pre>/*\n\n\tDescription:\n\tRegister or return side HQ speaker\n\t\n\tParameter(s):\n\t\t0:\n\t\t\tOBJECT - register the HQ\n\t\t\tSIDE - return HQ of the side\n\t\n\tReturns:\n\tOBJECT - the HQ\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleHQ` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleHQ;\n``` -->","BIS Functions\\BIS_fnc_moduleHvtInit.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleHvtInit`\n\n---\n","BIS Functions\\BIS_fnc_moduleHvtObjective.md":"<pre>/*, _objects*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleHvtObjective`\n\n---\n","BIS Functions\\BIS_fnc_moduleHvtObjectives.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleHvtObjectives`\n\n---\n","BIS Functions\\BIS_fnc_moduleHvtObjectivesInstance.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleHvtObjectivesInstance`\n\n---\n","BIS Functions\\BIS_fnc_moduleInit.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleInit;\n``` -->","BIS Functions\\BIS_fnc_moduleLightning.md":"Zeus lightning strike.\n\n\n---\n*Syntaxes:*\n\n[target, nil, activate] call `BIS_fnc_moduleLightning`\n\n---\n*Example 1:*\n\n```sqf\nplayer addAction \n[\n\t\"Eat that!\", \n\t{\n\t\tprivate _tempTarget = createSimpleObject [\"Land_HelipadEmpty_F\", getPosASL cursorTarget];\n\t\t[_tempTarget, nil, true] spawn BIS_fnc_moduleLightning;\n\t\tcursorTarget setDamage 1;\n\t},\n\t[],\n\t1.5, \n\ttrue, \n\ttrue, \n\t\"\",\n\t\"!isNull cursorTarget\"\n];\n```\n\n*Example 2:*\n\n```sqf\n[] spawn // Who gets hit first? ;-)\n{\n\t{\n\t\tprivate _tempTarget = createSimpleObject [\"Land_HelipadEmpty_F\", getPosASL _x];\n\t\t[_tempTarget, nil, true] spawn BIS_fnc_moduleLightning;\n\t\tsleep (1 + random 4);\n\t} forEach (allPlayers call BIS_fnc_arrayShuffle);\n};\n```","BIS Functions\\BIS_fnc_moduleMine.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMine` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMine;\n``` -->","BIS Functions\\BIS_fnc_moduleMissionName.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMissionName` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMissionName;\n``` -->","BIS Functions\\BIS_fnc_moduleMode.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMode` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMode;\n``` -->","BIS Functions\\BIS_fnc_moduleModules.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleModules` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleModules;\n``` -->","BIS Functions\\BIS_fnc_moduleMPTypeDefense.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMPTypeDefense` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMPTypeDefense;\n``` -->","BIS Functions\\BIS_fnc_moduleMPTypeGameMaster.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMPTypeGameMaster` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMPTypeGameMaster;\n``` -->","BIS Functions\\BIS_fnc_moduleMPTypeGroundSupport.md":"<pre>// Debug log\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMPTypeGroundSupport` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMPTypeGroundSupport;\n``` -->","BIS Functions\\BIS_fnc_moduleMPTypeGroundSupportBase.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMPTypeGroundSupportBase` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMPTypeGroundSupportBase;\n``` -->","BIS Functions\\BIS_fnc_moduleMPTypeSectorControl.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMPTypeSectorControl` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMPTypeSectorControl;\n``` -->","BIS Functions\\BIS_fnc_moduleMPTypeSeize.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleMPTypeSeize` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleMPTypeSeize;\n``` -->","BIS Functions\\BIS_fnc_moduleObjective.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjective` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjective;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveFind.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveFind` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveFind;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveGetIn.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveGetIn` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveGetIn;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveMove.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveMove` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveMove;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveRaceCP.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveRaceCP` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveRaceCP;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveRaceFinish.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveRaceFinish` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveRaceFinish;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveRaceStart.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveRaceStart` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveRaceStart;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveSector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveSector` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveSector;\n``` -->","BIS Functions\\BIS_fnc_moduleObjectiveTarget.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleObjectiveTarget` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleObjectiveTarget;\n``` -->","BIS Functions\\BIS_fnc_modulePositioning.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_modulePositioning` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_modulePositioning;\n``` -->","BIS Functions\\BIS_fnc_modulePoster.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_modulePoster` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_modulePoster;\n``` -->","BIS Functions\\BIS_fnc_modulePostprocess.md":"\n\n\n---\n*Syntaxes:*\n\n-<!-- [] call `BIS_fnc_modulePostprocess`; -->\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_moduleProjectile.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleProjectile` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleProjectile;\n``` -->","BIS Functions\\BIS_fnc_modulePunishment.md":"<pre>/*\n\n\tDescription:\n\tMake a unit play a punishment animation\n\n\tParameter(s):\n\thttp://community.bistudio.com/wiki/Arma_3_Modules\n\n\tReturns:\n\tNONE\n*/\n\n// Parameters\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_modulePunishment` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_modulePunishment;\n``` -->","BIS Functions\\BIS_fnc_moduleRadioChannelCreate.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleRadioChannelCreate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleRadioChannelCreate;\n``` -->","BIS Functions\\BIS_fnc_moduleRank.md":"Used by the Set Rank module.\n\n\n---\n*Syntaxes:*\n\n[logic, units, activated] call `BIS_fnc_moduleRank`\n\n---\n*Example 1:*\n\n```sqf\n[rankLogic, [player]] call BIS_fnc_moduleRank;\n```","BIS Functions\\BIS_fnc_moduleRating.md":"Function used by the Rating `Arma_3:_Editor_Modules|module`.\n\n\n---\n*Syntaxes:*\n\n[logic, units, activated] call `BIS_fnc_moduleRating`\n\n---\n*Example 1:*\n\n```sqf\n[myLogic, units group player, true] call BIS_fnc_moduleRating;\n```","BIS Functions\\BIS_fnc_moduleRemoteControl.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleRemoteControl` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleRemoteControl;\n``` -->","BIS Functions\\BIS_fnc_moduleRespawnInventory.md":"<pre>/*\n\n\tDescription:\n\tSet respawn loadouts a curator can assign to players\n\n\tParameter(s):\n\t\t0: OBJECT - curator logic\n\t\t1: BOOL - true to make all loadouts availale, false to base them on units the curator can place\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleRespawnInventory` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleRespawnInventory;\n``` -->","BIS Functions\\BIS_fnc_moduleRespawnPosition.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleRespawnPosition` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleRespawnPosition;\n``` -->","BIS Functions\\BIS_fnc_moduleRespawnTickets.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleRespawnTickets` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleRespawnTickets;\n``` -->","BIS Functions\\BIS_fnc_moduleRespawnVehicle.md":"<pre>/*\n\n\tDescription:\n\tSet vehicle respawn, compatible both with SP and MP.\n\n\tParameter(s):\n\t\t0: OBJECT - vehicle\n\t\t1:\n\t\t\tNUMBER - respawn delay in seconds (default is 0)\n\t\t\tBOOL - true to remove vehicle respawn (further params are ignored), false to check if the vehicle is marked for respawn\n\t\t2: NUMBER - how long until the vehicle is automatically respawned after its crew leaves it (default is -1, i.e., disabled)\n\t\t3: NUMBER - number of time the vehicle can be respawned (default is -1, i.e., unlimited)\n\t\t4: CODE - code executed upon respawn. Passed arguments are [<newVehicle>,<oldVehicle>]. The old vehicle is deleted only after this code is completed.\n\t\t5: POSITION - type of respawn position:\n\t\t\t0 = where it started\n\t\t\t1 = where it was destroyed\n\t\t\t2 = on vehicle's side respawn marker (e.g., \"respawn_vehicle_west\")\n\t\t\t3 = on BLUFOR respawn marker\n\t\t\t4 = on OPFOR respawn marker\n\t\t\t5 = on Independent respawn marker\n\t\t\t6 = on Civilian respawn marker\n\t\t\t7 = on side respawn marker of unit which destroyed the vehicle\n\t\t6: NUMBER - position selection type (0 = random, 1 = newest, 2 = oldest)\n\t\t7: NUMBER - type of old vehicle deletion (0 = don't delete, 1 = delete, 2 = delete with an explosion effect)\n\t\t8: BOOL - true to show notifcation when the vehicle is respawned\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleRespawnVehicle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleRespawnVehicle;\n``` -->","BIS Functions\\BIS_fnc_moduleSaveGame.md":"Saves the game. Saving has to be enabled.\n\n\n---\n*Syntaxes:*\n\n[nil,nil,activated] call `BIS_fnc_moduleSaveGame`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_moduleSaveGame;\n```","BIS Functions\\BIS_fnc_moduleSector.md":"<pre>/*\n\n\tDescription:\n\tInitialize a sector module. Can be also used to get sector parameters.\n\n\t--- Get all sectors ---\n\tParameter(s):\n\t\t0: BOOL\n\n\tReturns:\n\tARRAY of OBJECTs\n\n\t--- Get number of sectors held by a side ---\n\tParameter(s):\n\t\t0: SIDE\n\n\tReturns:\n\tNUMBER - number of sectors owned by the side\n\n\t--- Set sector owner ---\n\tParameter(s):\n\t\t0: OBJECT - sector module\n\t\t1: SIDE\n\n\tReturns:\n\tBOOL\n\n\t--- Initialize ---\n\tParameter(s):\n\t\t0: OBJECT - sector module\n\n\tReturns:\n\tNOTHING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleSector` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleSector;\n``` -->","BIS Functions\\BIS_fnc_moduleSFX.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleSFX` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleSFX;\n``` -->","BIS Functions\\BIS_fnc_moduleShowHide.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleShowHide` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleShowHide;\n``` -->","BIS Functions\\BIS_fnc_moduleSimulationManager.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleSimulationManager` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleSimulationManager;\n``` -->","BIS Functions\\BIS_fnc_moduleSimulationManager_grab.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSimulationManager_grab`\n\n---\n","BIS Functions\\BIS_fnc_moduleSiteInit.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSiteInit`\n\n---\n","BIS Functions\\BIS_fnc_moduleSkill.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleSkill` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleSkill;\n``` -->","BIS Functions\\BIS_fnc_moduleSkiptime.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleSkiptime` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleSkiptime;\n``` -->","BIS Functions\\BIS_fnc_moduleSlingload.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSlingload`\n\n---\n","BIS Functions\\BIS_fnc_moduleSound.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleSound` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleSound;\n``` -->","BIS Functions\\BIS_fnc_moduleSpawnAI.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n\tDEBUG LOG FLAG\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSpawnAI`\n\n---\n","BIS Functions\\BIS_fnc_moduleSpawnAIOptions.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n\tTERMINATE ALL BUT 1ST MODULE\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSpawnAIOptions`\n\n---\n","BIS Functions\\BIS_fnc_moduleSpawnAIPoint.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSpawnAIPoint`\n\n---\n","BIS Functions\\BIS_fnc_moduleSpawnAISectorTactic.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n\tRUN ONCE\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSpawnAISectorTactic`\n\n---\n","BIS Functions\\BIS_fnc_moduleStrategicMapImage.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleStrategicMapImage` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleStrategicMapImage;\n``` -->","BIS Functions\\BIS_fnc_moduleStrategicMapInit.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleStrategicMapInit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleStrategicMapInit;\n``` -->","BIS Functions\\BIS_fnc_moduleStrategicMapMission.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleStrategicMapMission` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleStrategicMapMission;\n``` -->","BIS Functions\\BIS_fnc_moduleStrategicMapOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleStrategicMapOpen` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleStrategicMapOpen;\n``` -->","BIS Functions\\BIS_fnc_moduleStrategicMapORBAT.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleStrategicMapORBAT` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleStrategicMapORBAT;\n``` -->","BIS Functions\\BIS_fnc_moduleSupportsInitProvider.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSupportsInitProvider`\n\n---\n","BIS Functions\\BIS_fnc_moduleSupportsInitProviderVirtual.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSupportsInitProviderVirtual`\n\n---\n","BIS Functions\\BIS_fnc_moduleSupportsInitRequester.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleSupportsInitRequester`\n\n---\n","BIS Functions\\BIS_fnc_moduleTaskCreate.md":"<pre>/*\n\t\n\tDescription:\n\tCreate Task module function\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTaskCreate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTaskCreate;\n``` -->","BIS Functions\\BIS_fnc_moduleTaskSetDescription.md":"<pre>/*\n\t\n\tDescription:\n\tSet Task Description module function\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTaskSetDescription` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTaskSetDescription;\n``` -->","BIS Functions\\BIS_fnc_moduleTaskSetDestination.md":"<pre>/*\n\t\n\tDescription:\n\tSet Task Destination module function\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTaskSetDestination` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTaskSetDestination;\n``` -->","BIS Functions\\BIS_fnc_moduleTaskSetState.md":"<pre>/*\n\t\n\tDescription:\n\tSet Task State module function\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTaskSetState` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTaskSetState;\n``` -->","BIS Functions\\BIS_fnc_moduleTimeMultiplier.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleTimeMultiplier`\n\n---\n","BIS Functions\\BIS_fnc_moduleTimeTrial.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_moduleTracers.md":"Function used by the Tracers `Arma_3:_Editor_Modules|module`.\n\n\n---\n*Syntaxes:*\n\n[logic, activated] call `BIS_fnc_moduleTracers`\n\n---\n*Example 1:*\n\n```sqf\n[myLogic, true] call BIS_fnc_moduleTracers;\n```","BIS Functions\\BIS_fnc_moduleTrident.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTrident` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTrident;\n``` -->","BIS Functions\\BIS_fnc_moduleTriggers.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTriggers` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTriggers;\n``` -->","BIS Functions\\BIS_fnc_moduleTTCPClear.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_moduleTTCPIn.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_moduleTTCPOut.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_moduleTTCPTrigger.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTTCPTrigger` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTTCPTrigger;\n``` -->","BIS Functions\\BIS_fnc_moduleTTCPTriggerBehind.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTTCPTriggerBehind` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTTCPTriggerBehind;\n``` -->","BIS Functions\\BIS_fnc_moduleTTStatsClear.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleTTStatsClear` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleTTStatsClear;\n``` -->","BIS Functions\\BIS_fnc_moduleUnits.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleUnits` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleUnits;\n``` -->","BIS Functions\\BIS_fnc_moduleUnlockArea.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleUnlockArea` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleUnlockArea;\n``` -->","BIS Functions\\BIS_fnc_moduleUnlockObject.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleUnlockObject` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleUnlockObject;\n``` -->","BIS Functions\\BIS_fnc_moduleVanguardFob.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleVanguardFob`\n\n---\n","BIS Functions\\BIS_fnc_moduleVanguardObjective.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleVanguardObjective`\n\n---\n","BIS Functions\\BIS_fnc_moduleVanguardScorePersistence.md":"<pre>/*--------------------------------------------------------------------------------------------------\n\n--------------------------------------------------------------------------------------------------*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_moduleVanguardScorePersistence`\n\n---\n","BIS Functions\\BIS_fnc_moduleVolume.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleVolume` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleVolume;\n``` -->","BIS Functions\\BIS_fnc_moduleWeather.md":"<pre>/*\n\n\tDescription:\n\tSet overcast and fog\n\n\tParameter(s):\n\t\t0: STRING - mode, can be one of following\n\n\t\t\t\"enableDelay\" - enable delayed activation (i.e., weather changes are not applied manually and have to be confirmed by mission)\n\t\t\t\t1: BOOL - true to enbale, false to disable\n\t\t\t\tReturns: Nothing\n\t\t\n\t\t\t\"isDelayEnabled\"\n\t\t\t\tReturns: true if delayed activation is enabled, otherwise false\n\n\t\t\t\"commit\" - apply weather changes\n\tReturns:\n\tNothing\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleWeather` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleWeather;\n``` -->","BIS Functions\\BIS_fnc_moduleZoneProtection.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleZoneProtection` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleZoneProtection;\n``` -->","BIS Functions\\BIS_fnc_moduleZoneRestriction.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_moduleZoneRestriction` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_moduleZoneRestriction;\n``` -->","BIS Functions\\BIS_fnc_monthDays.md":"Returns number of days in given month. Takes in account for leap year.\n\n\n---\n*Syntaxes:*\n\n[year, month] call `BIS_fnc_monthDays`\n\n---\n*Example 1:*\n\n```sqf\nprivate _daysInThisMonth = [date select 0, date select 1] call BIS_fnc_monthDays;\n```","BIS Functions\\BIS_fnc_moveAction.md":"Return current move action (used in `playAction`, `playActionNow` and `switchAction`)\n\n\n---\n*Syntaxes:*\n\n[unit, returnConfig] call `BIS_fnc_moveAction`\n\n---\n*Example 1:*\n\n```sqf\n_actionName\t\t= [player, false] call BIS_fnc_moveAction;\n_actionConfig\t= [player,  true] call BIS_fnc_moveAction;\n```","BIS Functions\\BIS_fnc_moveIn.md":"Moves a unit into vehicle. Compatible with `assignedVehicleRole` output.\n\n\n---\n*Syntaxes:*\n\n[vehicle, unit, role] call `BIS_fnc_moveIn`\n\n---\n*Example 1:*\n\n```sqf\n[myCar, player, \"cargo\"] call BIS_fnc_moveIn;\n```\n\n*Example 2:*\n\n```sqf\n[myTank, player, [\"turret\", [0]]] call BIS_fnc_moveIn;\n```\n\n*Example 3:*\n\n```sqf\n[myTank, player, [\"turret\", -1]] call BIS_fnc_moveIn; // will moveInDriver the player\n```","BIS Functions\\BIS_fnc_moveMarker.md":"Moves marker to a new position\n\n\n---\n*Syntaxes:*\n\n[marker, newPosition, duration, interpolationType] call `BIS_fnc_moveMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\", [1111,2222,0]] call BIS_fnc_moveMarker;\n```\n\n*Example 2:*\n\n```sqf\n[\"BIS_marker\", getMarkerPos \"BIS_marker2\", 2, 13] call BIS_fnc_moveMarker;\n```","BIS Functions\\BIS_fnc_moveToRespawnPosition.md":"Move given unit to given respawn position. Units moved to height <nowiki>>=</nowiki> 30m will start on parachute. Position [0,0,0] is blacklisted. This function must be executed where unit to be moved is `local`.\n\n\n---\n*Syntaxes:*\n\n[unit, position, canBeDead] call `BIS_fnc_moveToRespawnPosition`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"SpawnMarker1\"] call BIS_fnc_moveToRespawnPosition;\n```","BIS Functions\\BIS_fnc_MPexec.md":"Execute received remote execution. This function is used by `BIS_fnc_MP` and should not be called directly.\n\n\n---\n*Syntaxes:*\n\n[packetName, packetValue] call `BIS_fnc_MPexec`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_fnc_MP_packet\", [\"Hello World\", \"hint\", true, true]] call BIS_fnc_MPexec;\n```","BIS Functions\\BIS_fnc_multiplySquareMatrixByVector.md":"<pre>/*\n * Author: Zozo\n * Multiplies the square matrix by a vector: A(m,m) x V(m)\n *\n * Arguments:\n * 0: _matrix ARRAY (multi-dimensional)\n * 1: _vector ARRAY ([x,y,z] or [x,y,z,1])\n *\n * Return Value:\n * ARRAY [x,y,z]\n *\n * Example:\n * [_transformMatrix, vectorDir player] call BIS_multiplySquareMatrixVector\n *\n */</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_multiplySquareMatrixByVector`\n\n---\n","BIS Functions\\BIS_fnc_music.md":"Randomly play provided tracks defined in `CfgMusic` and does a 3 seconds `fade out`. This function takes `accTime` into account. See also `BIS_fnc_jukebox`.\n\n\n---\n*Syntaxes:*\n\n[tracklist, delay] call `BIS_fnc_music`\n\n---\n*Example 1:*\n\n```sqf\n[[\"myMusic1\", \"myMusic2\"], 1] call BIS_fnc_music;\n```\n\n*Example 2:*\n\n```sqf\n[] call BIS_fnc_music; // will play all game tracks\n```","BIS Functions\\BIS_fnc_nearestHelipad.md":"Finds the nearest helipad of given type.\n\n\n---\n*Syntaxes:*\n\n[position, radius, random, types] call `BIS_fnc_nearestHelipad`\n\n---\n","BIS Functions\\BIS_fnc_nearestNum.md":"Returns the provided set closest number to the target number.\n\n\n---\n*Syntaxes:*\n\n[values, value] call `BIS_fnc_nearestNum`\n\n---\n*Example 1:*\n\n```sqf\nprivate _closestValueTo4 = [[1,5,10], 4] call BIS_fnc_nearestNum; // returns 5\n```","BIS Functions\\BIS_fnc_nearestPoint.md":"Computes nearest point in a line.\n\n\n---\n*Syntaxes:*\n\n[start, end, point, `is2D`] call `BIS_fnc_nearestPoint`\n\n---\n*Example 1:*\n\n```sqf\nprivate _idealLocation = [getMarkerPos \"base\", getMarkerPos \"destination\", getPos player, true] call BIS_fnc_nearestPoint;\n```","BIS Functions\\BIS_fnc_nearestPosition.md":"Function to find the nearest Object or position from a list, when compared to a given reference.\n\n\n---\n*Syntaxes:*\n\n[items, origin] call `BIS_fnc_nearestPosition`\n\n---\n*Example 1:*\n\n```sqf\n// Find the nearest marker from player\n_nearestMarker = [allMapMarkers, player] call BIS_fnc_nearestPosition;\n```\n\n*Example 2:*\n\n```sqf\n// Find the nearest marker to trigger using trigger onActivation code\n_nearestMarker = [allMapMarkers, thisTrigger] call BIS_fnc_nearestPosition;\n```","BIS Functions\\BIS_fnc_nearestRoad.md":"Find the nearest road segment to certain position, within given radius.\n\n\n---\n*Syntaxes:*\n\n[center`, radius, blacklist`] call `BIS_fnc_nearestRoad`\n\n---\n*Example 1:*\n\n```sqf\nprivate _nearestRoad = [getPosATL player, 500] call BIS_fnc_nearestRoad;\n```\n\n*Example 2:*\n\n```sqf\nprivate _nearestRoad = [getPosATL vehicle player, 50, getPosATL vehicle player nearRoads 20] call BIS_fnc_nearestRoad;\n```","BIS Functions\\BIS_fnc_netId.md":"Extends MP-only `netId` functionality to SP\n\n\n---\n*Syntaxes:*\n\nobjOrGrp call `BIS_fnc_netId`\n\n---\n*Example 1:*\n\n```sqf\nprivate _objNetId = player call BIS_fnc_netId; // \"0:2\"\n```\n\n*Example 2:*\n\n```sqf\nprivate _grpNetId = group player call BIS_fnc_netId; // \"0:3\"\n```","BIS Functions\\BIS_fnc_neutralizeUnit.md":"Neutralize an object by intrinsic means:\n* soldiers are blown up by mine\n*  vehicles are shelled by artillery\n*  air units are hit by AA missile\n*  underwater units are simply killed.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_neutralizeUnit`\n\n---\n*Example 1:*\n\n```sqf\ncursorTarget call BIS_fnc_neutralizeUnit;\n```","BIS Functions\\BIS_fnc_noFlyZone.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_noFlyZone` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_noFlyZone;\n``` -->","BIS Functions\\BIS_fnc_noFlyZonesCreate.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_noFlyZonesCreate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_noFlyZonesCreate;\n``` -->","BIS Functions\\BIS_fnc_noFlyZonesExport.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_noFlyZonesExport` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_noFlyZonesExport;\n``` -->","BIS Functions\\BIS_fnc_numberDigits.md":"Break number into array of digits.\n\n\n---\n*Syntaxes:*\n\nnumber call `BIS_fnc_numberDigits`\n\n---\n*Example 1:*\n\n```sqf\n12345678 call BIS_fnc_numberDigits; // returns [1,2,3,4,5,6,7,8]\n```\n\n*Example 2:*\n\n```sqf\n123.9999 call BIS_fnc_numberDigits; // returns [1,2,3]\n```","BIS Functions\\BIS_fnc_numberText.md":"Convert a number into string (avoiding scientific notation).\n\n\n---\n*Syntaxes:*\n\n[number, modulo] call `BIS_fnc_numberText`\n\n---\n*Example 1:*\n\n```sqf\n[4096] call BIS_fnc_numberText; // \"4 096\"\n```\n\n*Example 2:*\n\n```sqf\n[512, 1] call BIS_fnc_numberText; // \"5 1 2\"\n```\n\n*Example 3:*\n\n```sqf\n[999999999999] call BIS_fnc_numberText; // \"909 999 995 904\"\n```\n\n*Example 4:*\n\n```sqf\n[1234.5678] call BIS_fnc_numberText; // \"1 234\"\n```","BIS Functions\\BIS_fnc_objectFromNetId.md":"Extends MP-only `objectFromNetId` functionality to SP\n\n\n---\n*Syntaxes:*\n\nnetId call `BIS_fnc_objectFromNetId`\n\n---\n*Example 1:*\n\n```sqf\nprivate _obj = \"0:2\" call BIS_fnc_objectFromNetId;\n```","BIS Functions\\BIS_fnc_objectHeight.md":"Return object height defined by its bounding box and eventual offset fix. For the following classes an offset is used.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_objectHeight`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_objectHeight;\n```","BIS Functions\\BIS_fnc_objectInventoryAnimatedClose.md":"Animates an object being closed, for example a drawer. The counter set by `BIS_fnc_objectInventoryAnimatedOpen` gets reset when this function is called.\n\n\n---\n*Syntaxes:*\n\n[object, animationArray] call `BIS_fnc_objectInventoryAnimatedClose`\n\n---\n","BIS Functions\\BIS_fnc_objectInventoryAnimatedOpen.md":"Animates an object being opened, for example a drawer. It also sets a counter which prevents animation to be played multiple time if more than one player accesses that drawer.\n\n\n---\n*Syntaxes:*\n\n[object, animationArray] call `BIS_fnc_objectInventoryAnimatedOpen`\n\n---\n","BIS Functions\\BIS_fnc_objectsGrabber.md":"Converts a set of placed objects to an object array (`as a `String``) for the `DynO mapper`.<br>\nFormat is the following. First, the header:\n\n```sqf\n/*\nGrab data:\nMission: TheMissionName\nWorld: Stratis\nAnchor position: [3781.59, 3289.67]\nArea size: 50\nUsing orientation of objects: yes/no\n*/\n```\n\nThen, data:\n\n```sqf\n[\n\t[\"B_UAV_01_F\",[-5.23706,-0.183594,-0.00126648],167.39,1,0,[0.605018,-0.575293],\"\",\"\",true,false], \n\t[\"C_Offroad_01_F\",[-4.25903,4.62158,0.0630951],224.14,1,0,[0.812812,0.190543],\"\",\"\",true,false]\n]\n```\n\nor, if object orientation is not used:\n\n```sqf\n[\n\t[\"B_UAV_01_F\",[-5.23706,-0.183594,-0.00126648],167.39,1,0,[],\"\",\"\",true,false], \n\t[\"C_Offroad_01_F\",[-4.25903,4.62158,0.0630951],224.14,1,0,[],\"\",\"\",true,false]\n]\n```\n\n\n---\n*Syntaxes:*\n\n[position, size, objectOrientation] call `BIS_fnc_objectsGrabber`\n\n---\n*Example 1:*\n\n```sqf\n[getPos player, 20, true] call BIS_fnc_objectsGrabber;\n```","BIS Functions\\BIS_fnc_objectSide.md":"Returns object side as defined in config (i.e. not affected by dynamic changing like rating)\n\n\n---\n*Syntaxes:*\n\n[target, boolean] call `BIS_fnc_objectSide`\n\ntarget call `BIS_fnc_objectSide`\n\n---\n*Example 1:*\n\n```sqf\nprivate _realVehicleSide = [vehicle player, true] call BIS_fnc_objectSide;\n```\n\n*Example 2:*\n\n```sqf\nprivate _unknownSide = [objNull, false] call BIS_fnc_objectSide; // will return sideUnknown\nprivate _eastSide    = [objNull, true]  call BIS_fnc_objectSide; // will return east\n```\n\n*Example 3:*\n\n```sqf\n// same results\n_result1 = myVehicle call BIS_fnc_objectSide;\n_result2 = [myVehicle] call BIS_fnc_objectSide;\n_result3 = [myVehicle, false] call BIS_fnc_objectSide;\n```","BIS Functions\\BIS_fnc_objectsMapper.md":"Takes an array of data about a dynamic object template and creates the objects.\n\n\n---\n*Syntaxes:*\n\n[position, azimuth, objectsArray, badChance] call `BIS_fnc_objectsMapper`\n\n---\n*Example 1:*\n\n```sqf\nprivate _objectsArray = [\n\t[\"B_UAV_01_F\",[-5.23706,-0.183594,-0.00126648],167.39,1,0,[],\"\",\"\",true,false], \n\t[\"C_Offroad_01_F\",[-4.25903,4.62158,0.0630951],224.14,1,0,[],\"\",\"\",true,false]\n];\n[getMarkerPos \"myBase\", 0, _objectsArray, 0.5] call BIS_fnc_objectsMapper;\n```","BIS Functions\\BIS_fnc_objectType.md":"Return object category and type.\n\n\n---\n*Syntaxes:*\n\nanObject call `BIS_fnc_objectType`\n\n---\n*Example 1:*\n\n```sqf\nprivate _myType = player call BIS_fnc_objectType;\n```\n\n*Example 2:*\n\n```sqf\nprivate _myType = \"B_MRAP_01_F\" call BIS_fnc_objectType;\n```","BIS Functions\\BIS_fnc_objectVar.md":"Return a unique object variable. The variable is preserved after unit respawn.\n\n\n---\n*Syntaxes:*\n\n[object, varNameRoot] call `BIS_fnc_objectVar`\n\n---\n*Example 1:*\n\n```sqf\nhint str (player call BIS_fnc_objectVar); // \"bis_o1\"\nhint str (player == (missionNamespace getVariable \"bis_o1\")); // true\n```","BIS Functions\\BIS_fnc_OMSetForecastLimit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OMSetForecastLimit` -->\n\n---\n","BIS Functions\\BIS_fnc_OMWeatherManagerCore.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OMWeatherManagerCore` -->\n\n---\n","BIS Functions\\BIS_fnc_OMWeatherManagerMain.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OMWeatherManagerMain` -->\n\n---\n","BIS Functions\\BIS_fnc_OMWeatherManagerRain.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OMWeatherManagerRain` -->\n\n---\n","BIS Functions\\BIS_fnc_OMWeatherReport.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OMWeatherReport` -->\n\n---\n","BIS Functions\\BIS_fnc_OMWeatherUICalc.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OMWeatherUICalc` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_addLoadedEH.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_addLoadedEH` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_allInfectedDeadCode.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_allInfectedDeadCode` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_AS_ShowStaticText.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_AS_ShowStaticText` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_BuildSectorsData.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_BuildSectorsData` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_camera.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_camera` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_conversation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_conversation` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_createConversation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_createConversation` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_credits.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_credits` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_Epicentrum.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_Epicentrum` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_EXEC.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_EXEC` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_HandleMapControls.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_HandleMapControls` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_infectedGroupHandle.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_infectedGroupHandle` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_init.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_init` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_medicineDeliveredCode.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_medicineDeliveredCode` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_medicineRanOutCode.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_medicineRanOutCode` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleActionQueue.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleActionQueue` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleAwareness.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleAwareness` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleCheckpoint_checkAngleToObject.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleCheckpoint_checkAngleToObject` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleCheckpoint_checkDistanceFromObject.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleCheckpoint_checkDistanceFromObject` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleCheckpoint_handleStates.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleCheckpoint_handleStates` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleCheckpoint_intersect.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleCheckpoint_intersect` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleCheckpoint_navigateVehicleToCheck.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleCheckpoint_navigateVehicleToCheck` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleCheckpoint_playAnim.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleCheckpoint_playAnim` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleDepot.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleDepot` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleEconomy.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleEconomy` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleFastTravel.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleFastTravel` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleMarket.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleMarket` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_ModuleQuest_defend.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_ModuleQuest_defend` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_ModuleQuest_destroyObject.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_ModuleQuest_destroyObject` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleRadio.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleRadio` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleRandomConversation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleRandomConversation` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleReputation.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleReputation` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleRestPoint.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleRestPoint` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleSmartMarkers.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_moduleSmartMarkers` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleSyndikatAgent.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_ModuleSyndikatAgent` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_moduleSyndikatTeam.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_ModuleSyndikatTeam` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_Module_initSmallValueSilder.md":"Initialize slider with edit box showing its value supporting small decimal numbers.\n\n\n---\n*Syntaxes:*\n\n[ctrlSlider, ctrlEdit, unit, defaultValue] call `BIS_fnc_OM_Module_initSmallValueSilder`\n\n---\n*Example 1:*\n\n```sqf\n[_ctrlSlider,_ctrlEdit,\"m\",500] call BIS_fnc_OM_Module_initSmallValueSilder;//Set default value only.\n```\n\n*Example 2:*\n\n```sqf\n[_ctrlSlider,_ctrlEdit,\"m\"] call BIS_fnc_OM_Module_initSmallValueSilder;//Initialize functionality.\n```","BIS Functions\\BIS_fnc_OM_pause.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_pause` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_addCall.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_addCall` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_addContact.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_addContact` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_core.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_core` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_customSectionInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_customSectionInit` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_customSectionShow.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_customSectionShow` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_customSectionWeatherShow.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_customSectionWeatherShow` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_getDiaryListIndexByName.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_getDiaryListIndexByName` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_incomingCall.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_incomingCall` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_menuHandler.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_menuHandler` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_menuInit.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_menuInit` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_removeCall.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_removeCall` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_SMS.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_SMS` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_phone_SMSSend.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_phone_SMSSend` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_saveGame.md":"Saves the game - simply calls `saveGame`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_OM_saveGame`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_OM_saveGame;\n```","BIS Functions\\BIS_fnc_OM_savingEnabled.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_savingEnabled` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_SectorGetSectors.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_SectorGetSectors` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_sellEquipment.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_sellEquipment` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_SentryDrone.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_SentryDrone` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_skip.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_skip` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_warnCriticalCode.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_warnCriticalCode` -->\n\n---\n","BIS Functions\\BIS_fnc_OM_warnMildCode.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_OM_warnMildCode` -->\n\n---\n","BIS Functions\\BIS_fnc_onDiaryChanged.md":"<pre>/*\n\n\tDescription:\n\tRegister code to be executed when diary item changes.\n\n\tArguments passed into code are:\n\t\t0: DISPLAY - map display\n\t\t1: BOOL - true if clicked on subject list, false when on record list (clicking on subject may also trigger record)\n\t\t2: STRING - subject name\n\t\t3: STRING - record name\n\t\t4: ANY - passed arguments (index of onDiaryChanged code when no custom arguments were used)\n\n\tParameter(s):\n\t_this:\n\t\tCODE\n\t\tARRAY - code with custom arguments in format [CODE,ARG1,ARG2,...]\n\t\tNUMBER - remove code of given index\n\n\tReturns:\n\tNUMBER - index of onDiaryChanged code\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_onDiaryChanged` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_onDiaryChanged;\n``` -->","BIS Functions\\BIS_fnc_onEnd.md":"Register code to be executed after mission end.\n\n\n---\n*Syntaxes:*\n\nargument call `BIS_fnc_onEnd`\n\n---\n*Example 1:*\n\n```sqf\nprivate _onEndIndex = { player addRating 10000; } call BIS_fnc_onEnd;\n```\n\n*Example 2:*\n\n```sqf\nprivate _onEndIndex = [{ { _x addRating 10000; } forEach _this; }, units group player] call BIS_fnc_onEnd;\n```","BIS Functions\\BIS_fnc_onLoad.md":"Register code to be executed after a mission load (from a save, for example).\n\n\n---\n*Syntaxes:*\n\nparameter call `BIS_fnc_onLoad`\n\n---\n*Example 1:*\n\n```sqf\nprivate _codeIndex = { hint \"Welcome back!\"; } call BIS_fnc_onLoad;\n```\n\n*Example 2:*\n\n```sqf\n0 call BIS_fnc_onLoad; // removes code with index 0\n```","BIS Functions\\BIS_fnc_onPlayerConnected.md":"Executes a function on server every time a player connects the mission.\n\n\n---\n*Syntaxes:*\n\n[code, params]] call `BIS_fnc_onPlayerConnected`\n\n---\n*Example 1:*\n\n```sqf\n[ \n {\n   params [\"_player\", \"_params\"];\n   hint name _player; hint _params;\n }, \n \"Parameter\" \n] call BIS_fnc_onPlayerConnected;\n```","BIS Functions\\BIS_fnc_openFieldManual.md":"Opens Field Manual in briefing (SP, MP Server, MP Client) and players's map or journal.\nSelects the topic and hint passed as parameters.\nCan apply a (search) filter if desired.\n\n\n---\n*Syntaxes:*\n\n[topic, hint, display, filter] call `BIS_fnc_openFieldManual`\n\n---\n*Example 1:*\n\n```sqf\n[\"Damage\", \"HitDamage\"] call BIS_fnc_openFieldManual;\n```","BIS Functions\\BIS_fnc_ORBATAddGroupOverlay.md":"Register texture(s) to be displayed over CfgORBAT group.\n\n\n---\n*Syntaxes:*\n\n[target, texture, colour, widthMulti, heightMulti, angle, text, shadow] call `BIS_fnc_ORBATAddGroupOverlay`\n\n---\n*Example 1:*\n\n```sqf\n[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", \"\\A3\\weapons_f\\data\\UI\\icon_MG_CA.paa\", [0,0,01], 3, 3, 0, \"Some Text\", true ] call BIS_fnc_ORBATAddGroupOverlay;\n```","BIS Functions\\BIS_fnc_ORBATAnimate.md":"Animates an ORBAT viewer.\n\n\n---\n*Syntaxes:*\n\n[target, zoom, duration] spawn `BIS_fnc_ORBATAnimate`\n\n---\n*Example 1:*\n\n```sqf\n[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", 0.5, 3 ] spawn BIS_fnc_ORBATAnimate;\n```","BIS Functions\\BIS_fnc_ORBATConfigPreview.md":"Opens config viewer and shows CfgORBAT. Used to retrieve CfgOrbat data\n\n\n---\n*Syntaxes:*\n\n[class] call `BIS_fnc_ORBATConfigPreview`\n\n---\n*Example 1:*\n\n```sqf\n[configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\"] call BIS_fnc_ORBATConfigPreview;\n```","BIS Functions\\BIS_fnc_ORBATGetGroupParams.md":"Returns group params from CfgORBAT.\n\n\n---\n*Syntaxes:*\n\n[path] call `BIS_fnc_ORBATGetGroupParams`\n\n---\n*Example 1:*\n\n```sqf\n[configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\" ] call BIS_fnc_ORBATGetGroupParams;\n```","BIS Functions\\BIS_fnc_ORBATOpen.md":"Opens the `ORBAT Viewer`.\n\n\n---\n*Syntaxes:*\n\n[path, display, tags, numTiers, parameters] call `BIS_fnc_ORBATOpen`\n\n---\n*Example 1:*\n\n```sqf\n[configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", findDisplay 46, [], 4, [\"ConfigClass_1\", { systemChat \"ConfigClass_1\" }]] call BIS_fnc_ORBATOpen;\n```","BIS Functions\\BIS_fnc_ORBATRemoveGroupOverlay.md":"Unregister texture(s) to be displayed over CfgORBAT group.\n\n\n---\n*Syntaxes:*\n\n[path, number] call `BIS_fnc_ORBATRemoveGroupOverlay`\n\n---\n*Example 1:*\n\n```sqf\n[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 4 ] call BIS_fnc_ORBATRemoveGroupOverlay;\n```","BIS Functions\\BIS_fnc_ORBATSetGroupFade.md":"Set fade value of CfgORBAT group and all groups below it.\n\n\n---\n*Syntaxes:*\n\n[path, alpha, time] call `BIS_fnc_ORBATSetGroupFade`\n\n---\n*Example 1:*\n\n```sqf\n[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 0.5, 5 ] call BIS_fnc_ORBATSetGroupFade;\n```","BIS Functions\\BIS_fnc_ORBATSetGroupParams.md":"Overrides group params from CfgORBAT. See `ORBAT Viewer` for a detailed explanation.\n\n\n---\n*Syntaxes:*\n\n[target, IDType, size, type, side, name, shortName, texture, textSizeCoef, insignia, textColour, commName, commRank, description, assets] call `BIS_fnc_ORBATSetGroupParams`\n\n---\n*Example 1:*\n\n```sqf\n[\n configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\",\n 1, \n \"Platoon\", \n \"Infantry\", \n \"West\", \n \"Name: %1 %2 %3\", \n \"Short Name: %1 %2 %3\", \n \"b_air\", \n 3,\n \"\\A3\\Air_F_EPB\\Heli_Light_03\\data\\UI\\Heli_Light_03_CA.paa\", \n [0,0,0,1], \n \"Commander Name\", \n \"General\", \n \"Description\", \n [ [\"B_MRAP_01_F\",5] ] \n] call BIS_fnc_ORBATSetGroupParams;\n```","BIS Functions\\BIS_fnc_ORBATTooltip.md":"Animates an ORBAT viewer.\n\n\n---\n*Syntaxes:*\n\n[target, control, position] call `BIS_fnc_ORBATTooltip`\n\n---\n","BIS Functions\\BIS_fnc_ordinalNumber.md":"Return number as ordinal number (e.g. 1 become \"1st\")\n\n\n---\n*Syntaxes:*\n\n[number, language, isFeminine] call `BIS_fnc_ordinalNumber`\n\n---\n*Example 1:*\n\n```sqf\nprivate _second = [42] call BIS_fnc_ordinalNumber; // will return \"42nd\" for English-speaking players\n```\n\n*Example 2:*\n\n```sqf\nprivate _num1enm = [1, \"English\", false] call BIS_fnc_ordinalNumber; // returns \"1st\"\n_num1frm = [1, \"French\",&nbsp; false] call BIS_fnc_ordinalNumber; // returns \"1er\"\n_num1frw = [1, \"French\",&nbsp; &nbsp;true] call BIS_fnc_ordinalNumber; // returns \"1re\"\n_num1esm = [1, \"Spanish\", false] call BIS_fnc_ordinalNumber; // returns \"1\"\n_num1esw = [1, \"Spanish\", &nbsp;true] call BIS_fnc_ordinalNumber; // returns \"1*\" for Portuguese, Italian and Spanish\n```\n\n*Example 3:*\n\n```sqf\nprivate _num1en = [1, \"English\"] call BIS_fnc_ordinalNumber; // returns \"1st\"\n_num2en = [2, \"English\"] call BIS_fnc_ordinalNumber; // returns \"2nd\"\n_num3en = [3, \"English\"] call BIS_fnc_ordinalNumber; // returns \"3rd\"\n_num4en = [4, \"English\"] call BIS_fnc_ordinalNumber; // returns \"4th\"\n_num9en = [9, \"English\"] call BIS_fnc_ordinalNumber; // returns \"9th\"\n```\n\n*Example 4:*\n\n```sqf\nprivate _second = [1, \"unknownLanguage\"] call BIS_fnc_ordinalNumber; // will return \"1.\" if language is not recognised/supported\n```","BIS Functions\\BIS_fnc_overviewAuthor.md":"Returns the mission author's name preceded by \"by\", e.g \"by Username\". See *(Reference HashLink \"Description.ext#author\")*.\n\n\n---\n*Syntaxes:*\n\n[config, control] call `BIS_fnc_overviewAuthor`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"%1, %2\", briefingName, call BIS_fnc_overviewAuthor];\n```\n\n*Example 2:*\n\n```sqf\nhint format [\"%1, %2\", briefingName, [missionConfigFile] call BIS_fnc_overviewAuthor];\n```","BIS Functions\\BIS_fnc_overviewDifficulty.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_overviewDifficulty` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_overviewDifficulty;\n``` -->","BIS Functions\\BIS_fnc_overviewMission.md":"<pre>#define CONTROL_SHOW(CONTROL) \\\n\tCONTROL ctrlshow true; \\\n\tCONTROL ctrlsetfade 0; \\\n\tCONTROL ctrlcommit 0;\n\n#define CONTROL_HIDE(CONTROL) \\\n\tCONTROL ctrlshow false; \\\n\tCONTROL ctrlsetfade 1; \\\n\tCONTROL ctrlcommit 0;\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_overviewMission` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_overviewMission;\n``` -->","BIS Functions\\BIS_fnc_overviewTerrain.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_overviewTerrain` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_overviewTerrain;\n``` -->","BIS Functions\\BIS_fnc_overviewTimeTrial.md":"Returns the dynamically composed overview text for Time Trial scenarios.\n\n\n---\n*Syntaxes:*\n\nclass call `BIS_fnc_overviewTimeTrial`\n\n---\n*Example 1:*\n\n```sqf\n\"BIS_someTimeTrail\" call BIS_fnc_overviewTimeTrial;\n```","BIS Functions\\BIS_fnc_packStaticWeapon.md":"This function will make weapon team pack a static weapon. The weapon crew will pack carried weapon (or given weapon if different) and follow leader. Requires three personnel in the team: Team Leader, Gunner and Asst. Gunner. This function is MP compatible\n<br><br>\nWhen the weapon is packed, scripted EH \"StaticWeaponPacked\" is called with the following params: \n* [group, leader, gunner, assistant, weaponBag, tripodBag]\n\n\n---\n*Syntaxes:*\n\n[group, weapon, leaderPos] call `BIS_fnc_packStaticWeapon`\n\n---\n*Example 1:*\n\n```sqf\n[leader1] call BIS_fnc_packStaticWeapon;\n```\n\n*Example 2:*\n\n```sqf\ngroup1 allowFleeing 0;\n[group1, nil, \"leaderpos_marker\"] call BIS_fnc_packStaticWeapon;\n```","BIS Functions\\BIS_fnc_param.md":"Load a script parameter. See `Arma 3: Functions Library#Loading Parameters|Arma 3: Functions Library` for detailed description.\n\n\n---\n*Syntaxes:*\n\n[input, index, defaultValue, dataTypes, requiredCount] call `BIS_fnc_param`\n\n---\n*Example 1:*\n\n```sqf\n_target = [_this, 0, objNull, [objNull,[]], [2,3]] call BIS_fnc_param;\n```\n* if (_this select 0) is not defined, default objnull is used.\n* if (_this select 0) is defined, but is neither of type `Object` nor `Array`, error message is logged and default `objNull` is used.\n* if (_this select 0) and is `Array`, but it is count is neither 2 nor 3, error message is logged and default `objNull` is used.\n\n*Example 2:*\n\n```sqf\n_answer = [_this, 1, 42] call BIS_fnc_param;\n```\n* if (_this select 1) is not defined, default 42 is used.\n* no limit for data types or number of elements exists.","BIS Functions\\BIS_fnc_paramCountdown.md":"Set side mission time.\n\n\n---\n*Syntaxes:*\n\nnumber call `BIS_fnc_paramCountdown`\n\n---\n*Example 1:*\n\n```sqf\n360 call BIS_fnc_paramCountdown;\n```","BIS Functions\\BIS_fnc_paramDaytime.md":"Sets time of the day to the hour. Minutes will always be zero.\n\n\n---\n*Syntaxes:*\n\ndatetime call `BIS_fnc_paramDaytime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _date = 12 call BIS_fnc_paramDaytime;\n```\n\n*Example 2:*\n\n```sqf\nprivate _date = [2001, 01, 01, 12, 00] call BIS_fnc_paramDaytime;\n```\n\n*Example 3:*\n\n```sqf\nprivate _date = call BIS_fnc_paramDaytime;\n```","BIS Functions\\BIS_fnc_paramGuerFriendly.md":"Set relationship between Independents and remaining sides.\n\n\n---\n*Syntaxes:*\n\nnumber call `BIS_fnc_paramGuerFriendly`\n\n---\n*Example 1:*\n\n```sqf\n2 call BIS_fnc_paramGuerFriendly;\n```","BIS Functions\\BIS_fnc_paramIn.md":"See `BIS_fnc_param`.\nOverloading default values is disabled in this variant.\nIt's intended to be used where `_this` is not used as an input param.\n\n\n---\n*Syntaxes:*\n\nSee `BIS_fnc_param`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = [_this, 0, [], ``] call BIS_fnc_param;\n_item = [_array,0,true,[true]] call BIS_fnc_paramIn;\n```","BIS Functions\\BIS_fnc_paramRespawnTickets.md":"Set side respawn tickets.\n\n\n---\n*Syntaxes:*\n\nnumber call `BIS_fnc_paramRespawnTickets`\n\n---\n*Example 1:*\n\n```sqf\n360 call BIS_fnc_paramRespawnTickets;\n```","BIS Functions\\BIS_fnc_paramReviveBleedOutDuration.md":"Grabs server param into global variable. (`bis_reviveParam_bleedOutDuration`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveBleedOutDuration`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveBleedOutDuration;\n```","BIS Functions\\BIS_fnc_paramReviveDuration.md":"Grabs server param into global variable. (`bis_reviveParam_duration`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveDuration`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveDuration;\n```","BIS Functions\\BIS_fnc_paramReviveForceRespawnDuration.md":"Grabs server param into global variable. (`bis_reviveParam_forceRespawnDuration`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveForceRespawnDuration`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveForceRespawnDuration;\n```","BIS Functions\\BIS_fnc_paramReviveMedicSpeedMultiplier.md":"Grabs server param into global variable. (`bis_reviveParam_medicSpeedMultiplier`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveMedicSpeedMultiplier`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveMedicSpeedMultiplier;\n```","BIS Functions\\BIS_fnc_paramReviveMode.md":"Grabs server param into global variable. (`bis_reviveParam_mode`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveMode`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveMode;\n```","BIS Functions\\BIS_fnc_paramReviveRequiredItems.md":"Grabs server param into global variable. (`bis_reviveParam_requiredItems`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveRequiredItems`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveRequiredItems;\n```","BIS Functions\\BIS_fnc_paramReviveRequiredTrait.md":"Grabs server param into global variable. (`bis_reviveParam_requiredTrait`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveRequiredTrait`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveRequiredTrait;\n```","BIS Functions\\BIS_fnc_paramReviveUnconsciousStateMode.md":"Grabs server param into global variable. (`bis_reviveParam_unconsciousStateMode`)\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_paramReviveUnconsciousStateMode`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_paramReviveUnconsciousStateMode;\n```","BIS Functions\\BIS_fnc_paramTimeAcceleration.md":"Manages `setTimeMultiplier` Multiplayer setting (set with `Arma 3 Mission Parameters|paramTimeAcceleration.hpp`)\n\n\n---\n*Syntaxes:*\n\ntimeMultiplier call `BIS_fnc_paramTimeAcceleration`\n\n---\n*Example 1:*\n\n```sqf\n5 call BIS_fnc_paramTimeAcceleration;\n```","BIS Functions\\BIS_fnc_paramViewDistance.md":"Set view distance.\n\n\n---\n*Syntaxes:*\n\n`viewDistance` call `BIS_fnc_paramViewDistance`\n\n---\n*Example 1:*\n\n```sqf\n7500 call BIS_fnc_paramViewDistance;\n```","BIS Functions\\BIS_fnc_paramWeather.md":"Sets overcast using `BIS_fnc_setOvercast`.\n\n\n---\n*Syntaxes:*\n\n[0] call `BIS_fnc_paramWeather`\n\n---\n*Example 1:*\n\n```sqf\noverCastValue = [1] call BIS_fnc_paramWeather;\n```","BIS Functions\\BIS_fnc_parseNumber.md":"Return number from expression\n\n\n---\n*Syntaxes:*\n\nvalue call `BIS_fnc_parseNumber`\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = 7.62 call BIS_fnc_parseNumber;\n_result = \"7.62\" call BIS_fnc_parseNumber;\n_result = { 7.62 } call BIS_fnc_parseNumber;\n```","BIS Functions\\BIS_fnc_parseNumberSafe.md":"Converts expression into a number. Can also convert array of expressions into an array of numbers. If expression does not return a number, 0 is returned.\n\n\n---\n*Syntaxes:*\n\n[input] call `BIS_fnc_parseNumberSafe`\n\n---\n*Example 1:*\n\n```sqf\n[safeZoneX, safeZoneWAbs, configFile] call BIS_fnc_parseNumberSafe; // returns [-0.452381,1.90476,0]\n```\n\n*Example 2:*\n\n```sqf\n[\"1337\", \"2013\", date] call BIS_fnc_parseNumberSafe; // returns [1337,2013,[2036,1,1,6,58]]\n```\n\n*Example 3:*\n\n```sqf\n[west, east, independent, civilian] call BIS_fnc_parseNumberSafe; // returns [1,0,2,3]\n```","BIS Functions\\BIS_fnc_phoneticalWord.md":"Convert number to NATO phonetical alphabet word (e.g. 2 becomes \"Bravo\") or letter of alphabet.\n\n\n---\n*Syntaxes:*\n\n[integer, short] call `BIS_fnc_phoneticalWord`\n\n---\n*Example 1:*\n\n```sqf\n[1] call BIS_fnc_phoneticalWord; // returns \"Alpha\"\n```\n\n*Example 2:*\n\n```sqf\n[1, true] call BIS_fnc_phoneticalWord; // returns \"A\"\n```","BIS Functions\\BIS_fnc_PIP.md":"Displays Picture in Picture.\n\n\n---\n*Syntaxes:*\n\n[renderTarget, cameraParams, vehicle, replace] call `BIS_fnc_PIP`\n\n---\n*Example 1:*\n\n```sqf\n[\"rendertarget0\", [heli1, heli1 selectionPosition \"slingload0\"], cargo1], heli1, false] call BIS_fnc_PIP;\n```\n\n*Example 2:*\n\n```sqf\n[\"rendertarget0\", _myCamera] call BIS_fnc_PIP;\n```","BIS Functions\\BIS_fnc_planeAiEject.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured.\n\t- AI behaviour handler.\n\n\tExucution:\n\t- Call the function via attached EH to the aircrfat itself.\n\n\t\tExample:\n\t\tclass Eventhandlers: Eventhandlers\n\t\t{\n\t\t\tHit = \"_this call BIS_fnc_planeAiEject\";\n\t\t};\n\n\tRequirments:\n\t- Compatible aircrfat must have a config definition for all subsytems that will be invoked by ejection system (see BIS_fnc_PlaneEjection).\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: plane/object\n\n\tReturns: nothing\n\tResult: AI pilot will be forced to eject from aircrfat upon damage treshold reached. Semi-authenthic behaviour.\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_planeAiEject` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_planeAiEject;\n``` -->","BIS Functions\\BIS_fnc_planeEjection.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This function is designed to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured.\n\n\tExucution:\n\t- Call the function via user action added to the aircrfat itself.\n\n\t\t\tclass Plane_Eject_UserActionExample\n\t\t\t{\n\t\t\t\tpriority = 0.05;\n\t\t\t\tshortcut = \"Eject\";\n\t\t\t\tdisplayName = \"$STR_A3_action_eject\";\n\t\t\t\tcondition = \"player in this\";\n\t\t\t\tstatement = \"[this] spawn BIS_fnc_planeEjection\";\n\t\t\t\tposition = \"pilotcontrol\";\n\t\t\t\tradius = 10;\n\t\t\t\tonlyforplayer = 1;\n\t\t\t\tshowWindow = 0;\n\t\t                hideOnUse = 1;\n\t\t\t};\n\n\tRequirments:\n\t- Compatible aircrfat must have a config definition for all sub-sytems that will be invoked by this function.\n\t\t1. Old legacy ejection must be disabled in aircrfat's cfgVehicles configuration.\n\t\tdriverCanEject = 0;\n\t\tgunnerCanEject = 0;\n\t\tcargoCanEject = 0;\n\n\t\t2. Aircrfat must have a set of parameters defined in CfgVehicles subClass (EjectionSystem) for ejection system. Theese parameters will affect the ejection behaviour.\n\t\texample of cfgVehicles subclass definitions;\n\n\t\tclass EjectionSystem\n\t\t{\n\t\t\tEjectionSeatEnabled = 1;\t\t\t\t\t\t\t\t\t\t//enable advanced ejection system\n\t\t\tEjectionDual = 0;\t\t\t\t\t\t\t\t\t\t\t//currently only single seat aircraft ejectiion supported (to do for latter)\n\t\t\tEjectionSeatClass = \"B_Ejection_Seat_Plane_Fighter_01_F\";\t\t\t\t\t\t\t\t//class name of ejector seat to use (separate vehicle/object)\n\t\t\tCanopyClass = \"Plane_Fighter_01_Canopy_F\";\t\t\t\t\t\t\t\t//class name of canopy to use (separate vehicle/object)\n\t\t\tEjectionSeatHideAnim = \"ejection_seat_hide\";\t\t\t\t\t\t\t\t//name of the hide animation that will hide ejector seat mesh in plane\n\t\t\tEjectionSeatRailAnim = \"ejection_seat_motion\";\t\t\t\t\t\t\t\t//name of the animation that will be played to start a smooth ejection motion out of cockpit\n\t\t\tCanopyHideAnim = \"canopy_hide\";\t\t\t\t\t\t\t\t\t\t//name of the hide animation that will hide canopy mesh in plane\n\t\t\tEjectionSeatPos = \"pos_eject\";\t\t\t\t\t\t\t\t\t\t//position memory point whwre to attach ejector seat\n\t\t\tCanopyPos = \"pos_eject_canopy\";\t\t\t\t\t\t\t\t\t\t//position memory point where to attach dummy canopy\n\t\t\tEjectionSoundExt = \"Plane_Fighter_01_ejection_ext_sound\";\t\t\t\t\t\t//sound to play when ejection trigered (external)\n\t\t\tEjectionSoundInt = \"Plane_Fighter_01_ejection_in_sound\";\t\t\t\t\t\t//sound to play when ejection trigered (in-ternal)\n\t\t\tEjectionParachute = \"Steerable_Parachute_F\";\t\t\t\t\t\t\t\t//class name parachute used in ejection\n\t\t\tEjectionSeatForce = 50;\t\t\t\t\t\t\t\t\t\t\t//ejection seat blast force\n\t\t\tCanopyForce = 30;\t\t\t\t\t\t\t\t\t\t\t//canopy bast force\n\n\t\t};\n\n\t\t3. Aircrfat model must have momory points definig positions where to attach new vehicle ejector seat, new vehicle canopy.\n\t\t4. Aircrfat model (in model cfg & class AnimationSources) must have a set of hide animations defined to hide ejector seat and canopy in model when new seaparate vehicles are spawned.\n\n\t\tIn model.cfg\n\t\tclass canopy_hide\n\t\t{\n\t\t\ttype=\"hide\";\n\t\t\tsource=\"user\";\n\t\t\tselection=\"canopy_hide\";\n\t\t\tminValue = 0.0;\n\t\t\tmaxValue = 1.0;\n\t\t\tminPhase = 0.0;\n\t\t\tmaxPhase = 1.0;\n\t\t\tinitPhase = 0;\n\t\t\thideValue = 0.001;\n\t\t};\n\n\t\tclass ejection_seat_hide\n\t\t{\n\t\t\ttype=\"hide\";\n\t\t\tsource=\"user\";\n\t\t\tselection=\"ejection_seat\";\n\t\t\tminValue = 0.0;\n\t\t\tmaxValue = 1.0;\n\t\t\tminPhase = 0.0;\n\t\t\tmaxPhase = 1.0;\n\t\t\tinitPhase = 0;\n\t\t\thideValue = 0.001;\n\t\t}\n\n\t\tIn cfgVehicles >> class AnimationSources\n\t\tclass canopy_hide\n\t\t{\n\t\t\tsource = \"user\";\n\t\t\tanimPeriod = 0.001;\n\t\t\tinitPhase = 0;\n\t\t};\n\n\t\tclass ejection_seat_hide\n\t\t{\n\t\t\tsource = \"user\";\n\t\t\tanimPeriod = 0.001;\n\t\t\tinitPhase = 0;\n\t\t};\n\n\t\t5. Aircrfat model must have an animation for initial ejection stage, where new ejector seat with pilot is pushed gradualy out of cockpit (done to avaoid PhysX colisions and make this feature look good, rathre than spawnig ejetor seat above plane).\n\t\tNew ejector seat with pilot will be attached to this animation (via animated meory point).\n\t\tMemory point EjectionSeatPos must be part of this animated selection.\n\n\t\tIn model.cfg\n\t\tclass ejection_seat_motion\n\t\t{\n\t\t\ttype = \"translation\";\n\t\t\tsource = \"user\";\n\t\t\tselection = \"ejection_seat\";\n\t\t\tbegin = \"tns_ejection_seat\";\n\t\t\tend = \"tns_ejection_seat_e\";\n\t\t\tanimPeriod = 0;\n\t\t\tmemory = 1;\n\t\t\tminValue = 0.0;\n\t\t\tmaxValue = 1.0;\n\t\t\toffset0 = 0.0;\n\t\t\toffset1 = 3.0;\n\t\t};\n\n\t\tIn cfgVehicles >> class AnimationSources\n\t\tclass ejection_seat_motion\n\t\t{\n\t\t\tsource = \"user\";\n\t\t\tanimPeriod = 0.25;\n\t\t\tinitPhase = 0;\n\t\t};\n\n\t\t6. Ejector seat and canopy must be created/defined as separate objects. Can be reused.\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: plane/object\n\n\t\tother parameters are gathered from configuration files.\n\n\tReturns: nothing\n\tResult: Pilot will be ejected from aircraft. Semi-authenthic behaviour.\n\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_planeEjection` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_planeEjection;\n``` -->","BIS Functions\\BIS_fnc_planeEjectionFX.md":"<pre>/*\n\tAuthor: Bravo Zero One development\n\t- John_Spartan\n\n\tDescription:\n\t- This function is designed as part of set of functions to implement semi-authenthic ejection system on fixed wing aircrfat that have such functionality enabled/configured.\n\t- Function created to add FX (sound/particles) for ejection feature.\n\n\tExucution:\n\t- Call from within the main ejection fnc (on demand).\n\n\t\tExample:\n\t\t[_plane, _ejectionSeat] spawn BIS_fnc_planeEjectionFX;\n\n\tRequirments:\n\t- Compatible ejector seat must have a hide animation for rocket motor flash and position for FX to be attached. (TO DO PARAMETARIZE)\n\t\tInehector seats model.cfg\n\t\tclass Animations\n\t\t{\n\n\t\t\tclass Rocket_Flash_hide\n\t\t\t{\n\t\t\t\ttype = \"hide\";\n\t\t\t\tsource = \"user\";\n\t\t\t\tselection = \"rocket_flash\";\n\t\t\t\tsourceAddress = \"mirror\";\n\t\t\t\tminValue = -1.5;\n\t\t\t\tmaxValue = 0;\n\t\t\t\thideValue = 0.99;\n\n\t\t\t};\n\t\t};\n\n\tParameter(s):\n\t\t_this select 0: mode (Scalar)\n\t\t0: plane/object\n\t\t1: ejector seat/object\n\n\tReturns: nothing\n\tResult: Set of particle FX and sound FX will be aplied to ejection feature.\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_planeEjectionFX` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_planeEjectionFX;\n``` -->","BIS Functions\\BIS_fnc_playEndMusic.md":"Play mission end music (when it is nearing the end)\n\n\n---\n*Syntaxes:*\n\nplay call `BIS_fnc_playEndMusic`\n\n---\n*Example 1:*\n\n```sqf\ntrue call BIS_fnc_playEndMusic;\n```","BIS Functions\\BIS_fnc_playerName.md":"Return current profile's name. Deprecated since {{arma3}}, use `profileName` instead.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_playerName`\n\n---\n*Example 1:*\n\n```sqf\nprivate _myPlayerName = call BIS_fnc_playerName;\n```","BIS Functions\\BIS_fnc_playerSideFaction.md":"Return representative faction of the given side. Faction of the first detected player is used.\n\n\n---\n*Syntaxes:*\n\nside call `BIS_fnc_playerSideFaction`\n\n---\n*Example 1:*\n\n```sqf\nwest call BIS_fnc_playerSideFaction;\n```","BIS Functions\\BIS_fnc_playMusic.md":"Plays given song.\n\n\n---\n*Syntaxes:*\n\n[class,start,volume] call `BIS_fnc_playMusic`\n\n---\n*Example 1:*\n\n```sqf\n[\"LeadTrack04_F\", 10, 0.5] call BIS_fnc_playMusic; // song starts at 10 seconds with 50% volume.\n```","BIS Functions\\BIS_fnc_playSound.md":"Plays given sound. Identical to `playSound`.\n\n\n---\n*Syntaxes:*\n\n[sound, forced] call `BIS_fnc_playSound`\n\n---\n*Example 1:*\n\n```sqf\n\"3DEN_visionMode\" call BIS_fnc_playSound;\n```\n\n*Example 2:*\n\n```sqf\n[\"3DEN_visionMode\", true] call BIS_fnc_playSound;\n```","BIS Functions\\BIS_fnc_playVideo.md":"Plays in-game video with a range of options. The function can be `call`ed or `spawn`ed. If `spawn`ed, `scriptDone` command can be used to see if video is stopped or finished. If `call`ed in scheduled environment, the next line of code will not process until the video is stopped or finished.<br>\nThe function also calls **\"BIS_fnc_playVideo_started\"}} and {{hl|\"BIS_fnc_playVideo_stopped\"** Scripted Event Handlers in `missionNamespace` - see `BIS_fnc_addScriptedEventHandler` and `Arma 3: Scripted Event Handlers`.\n\n\n---\n*Syntaxes:*\n\n[content, size, color, skipVarName, bgColor, keepAspect] spawn `BIS_fnc_playVideo`\n\n---\n*Example 1:*\n\n```sqf\nprivate _video = [\"A3\\Missions_F_EPA\\video\\A_in_intro.ogv\"] spawn BIS_fnc_playVideo;\n```\n\n*Example 2:*\n\n```sqf\nprivate _video = [\"\\a3\\missions_f_exp\\video\\exp_m04_v01.ogv\"] call BIS_fnc_playVideo;\n```\n\n*Example 3:*\n\n```sqf\n_video = \"a3\\missions_f_exp\\video\\exp_m07_vout.ogv\";\n_screen = \"Land_TripodScreen_01_large_F\" createVehicle (player modelToWorld [0,10,0]);\n_screen setObjectTexture [0, _video];\n[_video, [10, 10]] call BIS_fnc_playVideo;\n```\n\n*Example 4:*\n\nHow to stop the video:\n* call or spawn the function with an empty string: \n```sqf\n[\"\"] call BIS_fnc_playVideo;\n```\n* call or spawn the function with another video: \n```sqf\n[\"\\a3\\missions_f_exp\\video\\exp_m04_v02.ogv\"] call BIS_fnc_playVideo;\n```\n* set the variable \"BIS_fnc_playVideo_skipVideo\" to `true`: \n```sqf\nmissionNamespace setVariable [\"BIS_fnc_playVideo_skipVideo\", true];\n```\n* set the custom skip variable (`skipVarName`) to `true`: \n```sqf\nmissionNamespace setVariable [\"MyCustomSkipVar\", true];\nsleep 1;\nmissionNamespace setVariable [\"MyCustomSkipVar\", nil]; // so it can be reused later\n```","BIS Functions\\BIS_fnc_posDegToUTM.md":"Generate a [UTM Zone](https://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system#UTM_zone), Easting and Northing from lat and long fields.\nIt uses [NAD83 constants](https://en.wikipedia.org/wiki/North_American_Datum).\n\n\n---\n*Syntaxes:*\n\n[longitude, latitude`, zone`] call `BIS_fnc_posDegToUTM`\n\n---\n*Example 1:*\n\n```sqf\nprivate _utmZone = [47.63959,-122.127249] call BIS_fnc_posDegToUTM;\n```","BIS Functions\\BIS_fnc_posDegToWorld.md":"Convert latitude/longtitude coordinates into game world position.<br>\nWorld config `must` contain following settings to convert the position correctly:\n```cpp\n// Required for scripting\nmapSize = 61440;\t// Can differ from mapArea size, as ingame world can be resized\nmapZone = 10;\t\t// UTM zone\nmapArea[] = {\t\t// lon/lat coordinates (not in UTM to assure .kml precision)\n\t-122.754367782585,47.3272454065969,\t// Bottom Left\n\t-121.930117859276,47.8753494907418\t// Top Right\n};\n```\n\n\n---\n*Syntaxes:*\n\n[longitude, latitude, world] call `BIS_fnc_posDegToWorld`\n\n---\n*Example 1:*\n\n```sqf\n[47.63959,-122.127249] call BIS_fnc_posDegToWorld;\n```","BIS Functions\\BIS_fnc_position.md":"Returns `PositionAGL`, unless passed argument is `Array`, then the same array is returned. When position is `Object` and alternative position is stored in **\"BIS_fnc_position_forced\"** variable on this object, the stored position is used rather than actual object position. This function is a pretty safe way to get the position of an entity.\n\n\n---\n*Syntaxes:*\n\nargument call `BIS_fnc_position`\n\n---\n*Example 1:*\n\n```sqf\nprivate _pos = player call BIS_fnc_position;\n```","BIS Functions\\BIS_fnc_posToGrid.md":"Converts array position to map grid position.\n\n\n---\n*Syntaxes:*\n\nelement call `BIS_fnc_posToGrid`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_posToGrid; // [\"046\", \"049\"]\n```","BIS Functions\\BIS_fnc_posUTMToDeg.md":"Generate Lat and Long fields from [UTM Zone](https://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system#UTM_zone), Easting and Northing.\nIt uses [NAD83 constants](https://en.wikipedia.org/wiki/North_American_Datum).\n\n\n---\n*Syntaxes:*\n\n[easting, northing, zone`, hemisphere`] call `BIS_fnc_posUTMToDeg`\n\n---\n*Example 1:*\n\n```sqf\n[5273702, 560561, 10] call BIS_fnc_posUTMToDeg;\n```","BIS Functions\\BIS_fnc_pow.md":"Return value1 raised to the power of value2. Identical to `a ^ b`. \n<!--\n\n\n---\n*Syntaxes:*\n\n[value1, value2] call `BIS_fnc_pow`\n\n---\n*Example 1:*\n\n```sqf\n[2, 10] call BIS_fnc_pow; // returns 2^10 = 1024\n```","BIS Functions\\BIS_fnc_preload.md":"Start automatic loading screen upon mission start.\nOn client, it will finish only when server is finished.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_preload`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_preload;\n```","BIS Functions\\BIS_fnc_prepareAO.md":"Spawns random patrols and/or vehicles in trigger areas with proper names. Side selected in the triggers \"Activation\" listbox will determine the side of the spawned asset(s).<br>\n\nTrigger `names` (a.k.a \"Trigger text\", `not` \"Variable Name\") defines the kind of spawn. Supported trigger names are:\n* `GEN_infantry`: spawns random infantry patrol with sentry waypoints (`NOTE:` only circular triggers are supported, min. axis should be 500m)\n* `GEN_patrolVeh`: spawns a random vehicle. If a civilian unit is synchronized with the trigger, its waypoint will be used by the spawned vehicle<br><!--\n-->You can specify the vehicle type by typing one of the following into the trigger's \"On Act.\" field:\n** car\n** apc\n** tank\n* `GEN_ammo`: spawns a random number of ammoboxes. You can get and idea of the shape this composition will have by making this trigger rectangular with dimensions 5m x 1m. You can also specify the amount of crates spawned by using min. and max. Timeout values (supported range is 1 to 6 crates).\n* `GEN_civilCar`: spawns a random empty civil car\n\n\n---\n*Syntaxes:*\n\ndensity call `BIS_fnc_prepareAO`\n\n---\n*Example 1:*\n\n```sqf\n0.75 call BIS_fnc_prepareAO;\n```\n\n*Example 2:*\n\n```sqf\ncall BIS_fnc_prepareAO;\n```","BIS Functions\\BIS_fnc_priorityQueue_GetHighestPriority.md":"<pre>/*\n\tAuthor: Zozo\n\n\tDescription:\n\tGet the highest priority in the queue\n\n\tParameters:\n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init)\n\n\tReturns:\n\t_priority:SCALAR - the priority\n\n\tSyntax:\n\t_item:ANY = [_handle] call BIS_fnc_PriorityQueue_GetHighestPriority;\n\n\tExample:\n\t_myItem = [_priorityQueue_1] call BIS_fnc_PriorityQueue_PopItem;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_priorityQueue_GetHighestPriority`\n\n---\n","BIS Functions\\BIS_fnc_priorityQueue_GetLowestPriority.md":"<pre>/*\n\tAuthor: Zozo\n\n\tDescription:\n\tGet the highest priority in the queue\n\n\tParameters:\n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init)\n\n\tReturns:\n\t_priority:SCALAR - the priority\n\n\tSyntax:\n\t_item:ANY = [_handle] call BIS_fnc_PriorityQueue_GetHighestPriority;\n\n\tExample:\n\t_myItem = [_priorityQueue_1] call BIS_fnc_PriorityQueue_PopItem;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_priorityQueue_GetLowestPriority`\n\n---\n","BIS Functions\\BIS_fnc_priorityQueue_Init.md":"<pre>/*\n\tAuthor: Zozo\n\n\tDescription:\n\tInitialize the Priority Queue data structure.\n\tThe Priority Queue is sorted on inserting. Bigger numbers are set on higher indexes.\n\n\tParameters:\n\t_maxSize:INT - OPTIONAL, sets the Queue MAX SIZE (otherwise it is set to the constant defined in the .inc file)\n\n\tReturns:\n\t_handle: Handle to the Queue (essential for manipulation with the Queue)\n\n\tSyntax:\n\t_handle:INT = [_maxSize] call BIS_fnc_PriorityQueue_Init;\n\n\tExample:\n\t_priorityQueue_1 = [10] call BIS_fnc_PriorityQueue_Init;\n*</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_priorityQueue_Init`\n\n---\n","BIS Functions\\BIS_fnc_priorityQueue_IsEmpty.md":"<pre>/*\n\tAuthor: Zozo\n\n\tDescription:\n\tChecks if the Queue is empty\n\n\tParameters:\n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init)\n\n\tReturns:\n\t_empty:BOOL - true if the Queue is empty\n\n\tSyntax:\n\t_empty:BOOL = [_handle] call BIS_fnc_PriorityQueue_IsEmpty;\n\n\tExample:\n\t_isTheQueueEmpty = [_priorityQueue_1] call BIS_fnc_PriorityQueue_IsEmpty;\n*</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_priorityQueue_IsEmpty`\n\n---\n","BIS Functions\\BIS_fnc_priorityQueue_IsFull.md":"<pre>/*\n\tAuthor: Zozo\n\n\tDescription:\n\tChecks if the Queue is full\n\n\tParameters:\n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init)\n\n\tReturns:\n\t_full:BOOL - true if the Queue is full\n\n\tSyntax:\n\t_full:BOOL = [_handle] call BIS_fnc_PriorityQueue_IsFull;\n\n\tExample:\n\t_isTheQueueFull = [_priorityQueue_1] call BIS_fnc_PriorityQueue_IsFull;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_priorityQueue_IsFull`\n\n---\n","BIS Functions\\BIS_fnc_priorityQueue_PopItem.md":"<pre>/*\n\tAuthor: Zozo\n\n\tDescription:\n\tPops the item with the highest priority from the Queue (item with highest index).\n\tThe item is removed from the Queue.\n\tComplexity: O(1)\n\n\tParameters:\n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init)\n\t_keep:BOOL - if true, the item is not removed from the Queue\n\n\tReturns:\n\t_item:ANY - the item stored in the Queue\n\n\tSyntax:\n\t_item:ANY = [_handle] call BIS_fnc_PriorityQueue_PopItem;\n\n\tExample:\n\t_myItem = [_priorityQueue_1] call BIS_fnc_PriorityQueue_PopItem;\n*</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_priorityQueue_PopItem`\n\n---\n","BIS Functions\\BIS_fnc_priorityQueue_PushItem.md":"<pre>/*\n\tAuthor: Zozo\n\n\tDescription:\n\tInserts item with a defined priority to the Queue\n\tThe Priority Queue is sorted on inserting. Bigger numbers are set on higher indexes.\n\tComplexity: O(n)\n\n\tParameters:\n\t_handle:INT - Queue handle (get it with BIS_fnc_PriorityQueue_Init)\n\t_item:ANY - item, can be whatever\n\t_priority:INT - the priority the item is inserted with\n\n\tReturns:\n\t_success:BOOL - true if item was inserted into the Queue, otherwise false\n\n\tSyntax:\n\t_success:BOOL = [_handle, _item, _priority] call BIS_fnc_PriorityQueue_InsertItem;\n\n\tExample:\n\t_s = [_priorityQueue_1, \"myItem\", 5] call BIS_fnc_PriorityQueue_InsertItem;\n*</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_priorityQueue_PushItem`\n\n---\n","BIS Functions\\BIS_fnc_progressLoadingScreen.md":"Progress scripted loading screen. The value will be preserved even when a new screen is opened.\n\n\n---\n*Syntaxes:*\n\n[progress] call `BIS_fnc_progressLoadingScreen`\n\n---\n*Example 1:*\n\n```sqf\nprivate _IDD = _prog = [0.75] call BIS_fnc_progressLoadingScreen;\n```","BIS Functions\\BIS_fnc_pulsate.md":"Pulsates a value from 0 to 1.\n\n\n---\n*Syntaxes:*\n\n[frequency] call `BIS_fnc_pulsate`\n\n---\n*Example 1:*\n\n```sqf\n200 call BIS_fnc_pulsate; // 0.113001\n```","BIS Functions\\BIS_fnc_quinticIn.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_quinticIn`\n\n---\n","BIS Functions\\BIS_fnc_quinticInOut.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_quinticInOut`\n\n---\n","BIS Functions\\BIS_fnc_quinticInOutVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_quinticInOutVector`\n\n---\n","BIS Functions\\BIS_fnc_quinticInVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_quinticInVector`\n\n---\n","BIS Functions\\BIS_fnc_quinticOut.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_quinticOut`\n\n---\n","BIS Functions\\BIS_fnc_quinticOutVector.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_quinticOutVector`\n\n---\n","BIS Functions\\BIS_fnc_quotations.md":"Display a quotation video.\n\n\n---\n*Syntaxes:*\n\n[videoPath, subtitle] call `BIS_fnc_quotations`\n\n---\n*Example 1:*\n\n```sqf\n[\"a3\\missions_f_mark\\video\\ffv.ogv\"] spawn BIS_fnc_quotations;\n```","BIS Functions\\BIS_fnc_radialRed.md":"Red radial postprocess (hit damage, fire damage). Parameters are the same as the first four of `Arma_3:_Event_Handlers#HandleDamage|HandleDamage EH`.\n\n\n---\n*Syntaxes:*\n\n[victim, bodyPart, damage, shooter] call `BIS_fnc_radialRed`\n\n---\n*Example 1:*\n\n```sqf\nplayer addEventHandler [\"HandleDamage\", { _this call BIS_fnc_radialRed; }];\n```","BIS Functions\\BIS_fnc_radialRedOut.md":"Removes red radial postprocess (fire damage) created by `BIS_fnc_radialRed`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_radialRedOut`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_radialRedOut;\n```","BIS Functions\\BIS_fnc_radioSetChannel.md":"<pre>/*\n\n\tDescription:\n\tSet a specific or random music channel.\n\n\tParameter(s):\n\t_this select 0: channel (String)\n\t_this select 1: next (Bool)\n\t_this select 2: override (Bool)\n\n\tReturns:\n\tBool\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_radioSetChannel` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_radioSetChannel;\n``` -->","BIS Functions\\BIS_fnc_radioSetPlaylist.md":"Set a random music playlist for the current set channel (default \"Rock\"). Musics with \"genre\" set in `CfgMusic` are selected and shuffled.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_radioSetPlaylist`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_radioSetPlaylist;\n```","BIS Functions\\BIS_fnc_radioSetTrack.md":"<pre>/*\n\n\tDescription:\n\tSet a specific or random music track.\n\n\tParameter(s):\n\t_this select 0: track (String)\n\t_this select 1: override (Bool)\n\t_this select 2: Bool (first track? -> start randomly within the track)\n\n\tReturns:\n\tArray (duration (s): Scalar, start time (s): Scalar)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_radioSetTrack` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_radioSetTrack;\n``` -->","BIS Functions\\BIS_fnc_randomIndex.md":"Return a random integer representing an index in the passed array.\n\n\n---\n*Syntaxes:*\n\narray call `BIS_fnc_randomIndex`\n\n---\n*Example 1:*\n\n```sqf\n[\"a\", 0, objNull] call BIS_fnc_randomIndex; // returns 0, 1 or 2\n```","BIS Functions\\BIS_fnc_randomInt.md":"Returns a random integer between the two passed numbers (inclusive). The order of parameters doesn't matter: it can be **[min, max]}} or {{hl|[max, min]**.\n\n\n---\n*Syntaxes:*\n\n[min, max] call `BIS_fnc_randomInt`\n\n---\n*Example 1:*\n\n```sqf\n[1, 3] call BIS_fnc_randomInt; // will return 1, 2 or 3\n```","BIS Functions\\BIS_fnc_randomNum.md":"Returns a random (float) number between the two passed numbers (inclusive). The order of parameters doesn't matter: it can be **[min, max]}} or {{hl|[max, min]**.\n\n\n---\n*Syntaxes:*\n\n[min, max] call `BIS_fnc_randomNum`\n\n---\n*Example 1:*\n\n```sqf\n[1, 3] call BIS_fnc_randomNum; // can be 1, 3 or any value in-between\n```","BIS Functions\\BIS_fnc_randomPos.md":"Selects random position according to given params within given area\n\n\n---\n*Syntaxes:*\n\n[whitelist, blacklist, code] call `BIS_fnc_randomPos`\n\n---\n*Example 1:*\n\n```sqf\nprivate _randomPosMapNoWater = [] call BIS_fnc_randomPos;\n```\n\n*Example 2:*\n\n```sqf\nprivate _randomPosMapNoWater = [nil, [\"water\"]] call BIS_fnc_randomPos;\n```\n\n*Example 3:*\n\n```sqf\nprivate _randomPosMapNoLand = [nil, [\"ground\"]] call BIS_fnc_randomPos;\n```\n\n*Example 4:*\n\n```sqf\nprivate _randomPosMap = [nil, []] call BIS_fnc_randomPos;\n```\n\n*Example 5:*\n\n```sqf\nprivate _randomPosAroundPlayer = `[position player, 50]], [` call BIS_fnc_randomPos;\n```","BIS Functions\\BIS_fnc_randomPosIntersection.md":"Returns random 2D position inside the intersection of two circles. [-1,-1] is returned if the circles do not intersect.\n\n\n---\n*Syntaxes:*\n\n[firstCircle, secondCircle, positioning1, positioning2] call `BIS_fnc_randomPosIntersection`\n\n---\n*Example 1:*\n\n```sqf\n[trigger1, trigger2, 0.75, 0.75] call BIS_fnc_randomPosIntersection;\n```","BIS Functions\\BIS_fnc_randomPosTrigger.md":"Selects random position within trigger, marker, location area or area defined by array\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_randomPosTrigger`\n\n---\n*Example 1:*\n\n```sqf\nmarker1 call BIS_fnc_randomPosTrigger;\n```","BIS Functions\\BIS_fnc_rankParams.md":"Return information about military rank.\n\n\t1: STRING - requited data, can be one of following:\n\t\t\"displayName\" - full localized name (e.g. \"Major\")\n\t\t\"displayNameShort\" - short localized name (e.g. \"Maj.\")\n\t\t\"classname\" - system name (e.g. \"MAJOR\")\n\t\t\"texture\" - path to rank insignia\n\n\n---\n*Syntaxes:*\n\n[source, infoType] call `BIS_fnc_rankParams`\n\n---\n*Example 1:*\n\n```sqf\nprivate _shortRank = [player, \"displayNameShort\"] call BIS_fnc_rankParams;\n```","BIS Functions\\BIS_fnc_recompile.md":"Can be used to recompile functions.\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_recompile`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_recompile;\n```\n\n*Example 2:*\n\n```sqf\n[3] call BIS_fnc_recompile;\n```\n\n*Example 3:*\n\n```sqf\n[\"BIS_fnc_spawnVehicle\"] call BIS_fnc_recompile;\n```","BIS Functions\\BIS_fnc_reenableRevive.md":"Enable revive on given unit. Revive system needs to be initialized and running.\n\n\n---\n*Syntaxes:*\n\n[player] call `BIS_fnc_reenableRevive`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_unit] call BIS_fnc_reenableRevive;\n```","BIS Functions\\BIS_fnc_refreshCommMenu.md":"Refresh the communication menu variable.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_refreshCommMenu`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_refreshCommMenu;\n```","BIS Functions\\BIS_fnc_registerCuratorObject.md":"Get individual cost of an object.\n\n\n---\n*Syntaxes:*\n\n[class, status, cost] call `BIS_fnc_registerCuratorObject`\n\n---\n*Example 1:*\n\n```sqf\n[\"someClass\", true, 5] call BIS_fnc_registerCuratorObject;\n```","BIS Functions\\BIS_fnc_relativeDirTo.md":"Returns the relative direction from object 1 to object/position 2. Return value is always in between 0 and 360.\n\n\n---\n*Syntaxes:*\n\n[from, to] call `BIS_fnc_relativeDirTo`\n\n---\n*Example 1:*\n\n```sqf\n[[0,0,0], player] call BIS_fnc_relativeDirTo;\n```","BIS Functions\\BIS_fnc_relPos.md":"Returns a position that is a specified distance and compass direction from the passed position or object.\n\n\n---\n*Syntaxes:*\n\n[origin, distance, direction] call `BIS_fnc_relPos`\n\n---\n*Example 1:*\n\n```sqf\n[[0,0,0], 1000, 50] call BIS_fnc_relPos; // [766.044,642.788,0]\n```","BIS Functions\\BIS_fnc_relPosObject.md":"Place an object relative to another object, like a `setRelPos` command.\n\n\n---\n*Syntaxes:*\n\n[parent, child, relPos, direction] call `BIS_fnc_relPosObject`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_briefingTable, BIS_map, [0, -0.58, 0.857], 98] call BIS_fnc_relPosObject;\n```","BIS Functions\\BIS_fnc_relScaledDist.md":"Exponentially inflated rational number between 0 and 1, with 1 being center and 0 being edge of the trigger. This function can be used to check where in a trigger area an object is. Is it near the border of the trigger area the number will go against 0.\n\n\n---\n*Syntaxes:*\n\n[referenceObject, relativeObject] call `BIS_fnc_relScaledDist`\n\n---\n*Example 1:*\n\n```sqf\n[ myTrigger, player ] call BIS_fnc_relScaledDist;\n```","BIS Functions\\BIS_fnc_removeAllScriptedEventHandlers.md":"Removes all scripted event handler with given name.\nAdditionally \"ScriptedEventHandlerRemoved\" scripted EH is called for every removed event handler.\n\n\n---\n*Syntaxes:*\n\n[namespace, name] call `BIS_fnc_removeAllScriptedEventHandlers`\n\n---\n*Example 1:*\n\n```sqf\n[missionNamespace, \"event\"] call BIS_fnc_removeAllScriptedEventHandlers;\n```","BIS Functions\\BIS_fnc_removeCommMenuItem.md":"Remove an item from the `Arma_3_Communication_Menu|communication menu`.\n\n\n---\n*Syntaxes:*\n\n[owner,itemID] call `BIS_fnc_removeCommMenuItem`\n\n---\n*Example 1:*\n\n```sqf\n[player, 2] call BIS_fnc_removeCommMenuItem;\n```\n\n*Example 2:*\n\n```sqf\nprivate _supportHeli = [player, \"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem;\n[player, _supportHeli] call BIS_fnc_removeCommMenuItem;\n```","BIS Functions\\BIS_fnc_removeCuratorIcon.md":"Remove icon displayed in curator interface.\n\n\n---\n*Syntaxes:*\n\n[object, id] call `BIS_fnc_removeCuratorIcon`\n\n---\n*Example 1:*\n\n```sqf\n[curatorModule, 5] call BIS_fnc_removeCuratorIcon;\n```","BIS Functions\\BIS_fnc_removeDestroyedCuratorEditableObjects.md":"Make destroyed curator objects non-editable.\n\n\n---\n*Syntaxes:*\n\n[object, parentClasses] call `BIS_fnc_removeDestroyedCuratorEditableObjects`\n\n---\n*Example 1:*\n\n```sqf\n[curatorModule, [\"Man\"]] call BIS_fnc_removeDestroyedCuratorEditableObjects;\n```","BIS Functions\\BIS_fnc_removeFromPairs.md":"Removes an item from pair array modifying the original array. This can be overriden by setting `_copyArray` to true.\n\n\n---\n*Syntaxes:*\n\n[array, key, copyArray] call `BIS_fnc_removeFromPairs`\n\n---\n*Example 1:*\n\n```sqf\nprivate _pairs = `[\"apple\", 3], [\"pear\", 2`, \"pear\"];\n[_pairs, \"pear\", true]\tcall BIS_fnc_removeFromPairs; // returns `\"apple\", 3` - _pairs is not modified\n[_pairs, \"pear\"]\t\tcall BIS_fnc_removeFromPairs; // returns `\"apple\", 3]] - _pairs is now [[\"apple\", 3`\n```","BIS Functions\\BIS_fnc_removeIndex.md":"Takes an array, and returns a new array with the specified index(es) removed.\nThis takes the array passed in the first parameter, and returns an array that has the index number in the second parameter removed.\nIf a third parameter is passed, then a range of indexes will be removed.\nAlternatively, an array of indices to remove can be passed in the second parameter.\n\n\n---\n*Syntaxes:*\n\n[array, startIndex, endIndex] call `BIS_fnc_removeIndex`\n\n[array, indices] call `BIS_fnc_removeIndex`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = [0,1,2,3,4];\n[array, 0] call BIS_fnc_removeIndex; // returns [1,2,3,4]\n```\n\n*Example 2:*\n\n```sqf\nprivate _array = [0,1,2,3,4];\n[_array, 0, 4] call BIS_fnc_removeIndex; // returns []\n```\n\n*Example 3:*\n\n```sqf\nprivate _array = [0,1,2,3,4];\n[_array, [0,4]] call BIS_fnc_removeIndex; // returns [1,2,3]\n```","BIS Functions\\BIS_fnc_removeNestedElement.md":"Function to remove an item in a nested array. Modifies the array by reference.\n\n\n---\n*Syntaxes:*\n\n[array, itemToRemove] call `BIS_fnc_removeNestedElement`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = `1, 2], [3, 3, 4`;\nprivate _success = [_array, 3] call BIS_fnc_removeNestedElement; // _array is now `1, 2], [4`\n```","BIS Functions\\BIS_fnc_removeRespawnInventory.md":"Remove a respawn inventory added by `BIS_fnc_addRespawnInventory`.\n\n\n---\n*Syntaxes:*\n\n[target, id] call `BIS_fnc_removeRespawnInventory`\n\n---\n*Example 1:*\n\n```sqf\n[west, 1] call BIS_fnc_removeRespawnInventory;\n```\n\n*Example 2:*\n\n```sqf\nprivate _myRespawnInventory = [missionNamespace,\"ATSniper\"] call BIS_fnc_addRespawnInventory;\n_myRespawnInventory call BIS_fnc_removeRespawnInventory;\n```","BIS Functions\\BIS_fnc_removeRespawnPosition.md":"Remove a respawn position added by `BIS_fnc_addRespawnPosition`.\n\n\n---\n*Syntaxes:*\n\n[target, id] call `BIS_fnc_removeRespawnPosition`\n\n---\n*Example 1:*\n\n```sqf\n[west, 1] call BIS_fnc_removeRespawnPosition;\n```\n\n*Example 2:*\n\n```sqf\nmyRespawn = [missionNamespace,\"arena\"] call BIS_fnc_addRespawnPosition;\nmyRespawn call BIS_fnc_removeRespawnPosition;\n```","BIS Functions\\BIS_fnc_removeScriptedEventHandler.md":"Removes scripted event handler with given name and id.\nAdditionally \"ScriptedEventHandlerRemoved\" scripted EH is called.\n\n\n---\n*Syntaxes:*\n\n[namespace, name, id] call `BIS_fnc_removeScriptedEventHandler`\n\n---\n*Example 1:*\n\n```sqf\n[missionNamespace, \"event\", 2] call BIS_fnc_removeScriptedEventHandler;\n```","BIS Functions\\BIS_fnc_removeStackedEventHandler.md":"Removes a stacked event handler with specified custom id.\n\n\n---\n*Syntaxes:*\n\n[id, event] call `BIS_fnc_removeStackedEventHandler`\n\n---\n*Example 1:*\n\n```sqf\n[\"someId\", \"onEachFrame\"] call BIS_fnc_removeStackedEventHandler;\n```","BIS Functions\\BIS_fnc_removeSupportLink.md":"Removes support types during a mission.\n\n\n---\n*Syntaxes:*\n\n[requester, provider] call `BIS_fnc_removeSupportLink`\n\n---\n*Example 1:*\n\n```sqf\n[requesterMod, providerMod] call BIS_fnc_removeSupportLink;\n```","BIS Functions\\BIS_fnc_removeVirtualBackpackCargo.md":"Remove virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\n[object,backpackClasses,removeGlobally] call `BIS_fnc_removeVirtualBackpackCargo`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualBackpackCargo;\n```","BIS Functions\\BIS_fnc_removeVirtualItemCargo.md":"Remove virtual items from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\n[object,itemClasses,removeGlobally] call `BIS_fnc_removeVirtualItemCargo`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualItemCargo;\n```","BIS Functions\\BIS_fnc_removeVirtualMagazineCargo.md":"Remove virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\n[object,magClasses,removeGlobally] call `BIS_fnc_removeVirtualMagazineCargo`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualMagazineCargo;\n```","BIS Functions\\BIS_fnc_removeVirtualWeaponCargo.md":"Remove virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the `Arsenal`.\n\n\n---\n*Syntaxes:*\n\n[object,weaponClasses,removeGlobally] call `BIS_fnc_removeVirtualWeaponCargo`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualWeaponCargo;\n```","BIS Functions\\BIS_fnc_replaceWithSimpleObject.md":"Replaces a normal object with a `Arma 3 Simple Objects|Simple Object`.\nObject must not contain any crew and must be placed on the ground.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_replaceWithSimpleObject`\n\n---\n*Example 1:*\n\n```sqf\n[tank] call BIS_fnc_replaceWithSimpleObject;\n```","BIS Functions\\BIS_fnc_resizeMarker.md":"Resize marker. Use either absolute values or proportional values.\n\n\n---\n*Syntaxes:*\n\n[marker, size, duration] spawn `BIS_fnc_resizeMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",[2,2],3] spawn BIS_fnc_colorMarker;\n```","BIS Functions\\BIS_fnc_respawnBackpack.md":"Handles respawn camps functionality. Whoever \"assembles\" a camp from backpack it will receive a new respawn position. When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby players will receive the respawn position as well.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_respawnBackpack`\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_respawnBase.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnBase`; -->\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_respawnConfirm.md":"Shows a message box which the user needs to accept in order to respawn.\n\n\n---\n*Syntaxes:*\n\n[respawnDelay] spawn `BIS_fnc_respawnConfirm`\n\n---\n*Example 1:*\n\n```sqf\n[3] spawn BIS_fnc_respawnConfirm;\n```","BIS Functions\\BIS_fnc_respawnCounter.md":"Set or execute respawn counter params.\n\n\n---\n*Syntaxes:*\n\n[text,colour] call `BIS_fnc_respawnCounter`\n\n---\n*Example 1:*\n\n```sqf\n[\"Some text\", 2] call BIS_fnc_respawnCounter;\n```","BIS Functions\\BIS_fnc_respawnEndMission.md":"End a mission if all players are dead `and` there are no more respawn tickets (if any).\n* `Standard syntax` is for when `Respawn` is \"NONE\", \"BIRD\", \"GROUP\" or \"SIDE\"\n* `Alternative syntax` is for when `Respawn` is \"INSTANT\" or \"BASE\"\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_respawnEndMission`\n\nunit call `BIS_fnc_respawnEndMission`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_respawnEndMission;\n```\n\n*Example 2:*\n\n```sqf\nplayer call BIS_fnc_respawnEndMission;\n```","BIS Functions\\BIS_fnc_respawnGroup.md":"Camera script used by the \"group respawn\" template - when the player dies and gets transferred to the new group member.\n\n\n---\n*Syntaxes:*\n\n[oldUnit, newUnit] call `BIS_fnc_respawnGroup`\n\n---\n*Example 1:*\n\n```sqf\n// in onPlayerRespawn.sqf\nparams [\"_newUnit\", \"_oldUnit\", \"_respawn\", \"_respawnDelay\"];\n[_oldUnit, _newUnit] spawn BIS_fnc_respawnGroup;\n```","BIS Functions\\BIS_fnc_respawnInstant.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnInstant`; -->\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_respawnManager.md":"<pre>\n/*******************************************************************************\n\tVersion:\t2.0\n\tName:\t\tRespawn manager\n\tDESCRIPTION:\tAll checkpoints must be markers with name prefix BIS_checkpointnr  \n\tPARAMETERS:\t1) function called - string, list of functions:\n\t\t\t\t- Init\n\t\t\t\t- Destroy\n\t\t\t\t- AddCheckpoint\n\t\t\t\t- RemoveCheckpoint\t\t\t\n\t\t\t2) parameter for the function\n\t\t\tFor more information see https://wiki.bistudio.com/index.php/RespawnManager\n\tRETURNED VALUE: depends on the function called\n\t\n\tTODO:\t\t-performance: add markers positions to the array instead of the testing \n\t\t\ttheir positions every loop in _CheckNearestCheckpoint function - DONE\n\t\t\t-pridat funkci GetActualCheckpoint(character) - DONE \n\t\t\t-osetrit pripad, kdy postava neexistuje (je prave v respawnu/zahynula) - NEPOTREBUJEME\n\t\t\t-typy markeru podle modu: normal/debug - DONE\n\t\t\t-optional parameter marker name - DONE\n\t\t\t-optional prefix marker name as a parameter to the Init procedure\n\t\t\t-add functionality for 3 parameters function call - DONE\n\t\t\t-vlastni lokalni checkpointy(markery) pro hratelne postavy(AddCheckpoint/RemoveCheckpoint)\n*******************************************************************************/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnManager` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_respawnManager;\n``` -->","BIS Functions\\BIS_fnc_respawnMenuInventory.md":"Handles respawn inventory menu.\n\n\n---\n*Syntaxes:*\n\n[player, respawnDelay, revive] call `BIS_fnc_respawnMenuInventory`\n\n---\n*Example 1:*\n\n```sqf\n[player,5] call BIS_fnc_respawnMenuInventory;\n```","BIS Functions\\BIS_fnc_respawnMenuPosition.md":"Shows respawn menu. Closes it if the player is alive.\n\n\n---\n*Syntaxes:*\n\n[player, respawnDelay, revive] call `BIS_fnc_respawnMenuPosition`\n\n---\n*Example 1:*\n\n```sqf\n[player,5] call BIS_fnc_respawnMenuPosition;\n```","BIS Functions\\BIS_fnc_respawnMenuSpectator.md":"Handles the spectator mode.\n\n\n---\n*Syntaxes:*\n\n[player, respawnDelay] call `BIS_fnc_respawnMenuSpectator`\n\n---\n*Example 1:*\n\n```sqf\n[player,5] call BIS_fnc_respawnMenuSpectator;\n```","BIS Functions\\BIS_fnc_respawnNone.md":"Create a death screen.\n\n\n---\n*Syntaxes:*\n\n[killed, killer] spawn `BIS_fnc_respawnNone`\n\n---\n*Example 1:*\n\n```sqf\n[player, someUnit] spawn BIS_fnc_respawnNone;\n```","BIS Functions\\BIS_fnc_respawnRounds.md":"<pre>/*\n\n\tDescription:\n\tDisable respawn until players of only one side (including its allies) remains, then respawn everyone at once.\n\tWhen \"Rounds\" respawn is used by only one side, wait until all its players are dead.\n\n\tParameter(s):\n\t\tBOOL - true to force round end\n\t\tSIDE - use any side to return side affected by round system (based on description.ext respawnTemplates settings)\n\t\tARRAY - empty array to return if a round is still on (players of more than one involved faction are alive)\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnRounds` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_respawnRounds;\n``` -->","BIS Functions\\BIS_fnc_respawnSeagull.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnSeagull` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_respawnSeagull;\n``` -->","BIS Functions\\BIS_fnc_respawnSide.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnSide` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_respawnSide;\n``` -->","BIS Functions\\BIS_fnc_respawnSpectator.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnSpectator` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_respawnSpectator;\n``` -->","BIS Functions\\BIS_fnc_respawnTickets.md":"Manage respawn tickets used by `Arma 3 Respawn#Respawn Templates|Tickets` respawn template.<br>\n\nWhen player dies, number of tickets is decreased by 1. The most local tickets are always used. Example: When you first add tickets to player's side, they will be affected. If you later define tickets also to player's group, they will completely replace the side tickets.\n\nWhen player runs out of the tickets, his respawn is disabled. If you use also `EndMission` respawn template, the mission will automatically end once tickets in all name spaces are exhausted.\n\n\n---\n*Syntaxes:*\n\n[target, tickets, dynamicTarget] call `BIS_fnc_respawnTickets`\n\n[] call `BIS_fnc_respawnTickets`\n\n---\n*Example 1:*\n\nAdd 5 tickets for BLUFOR:\n\n```sqf\n[west, 5] call BIS_fnc_respawnTickets;\n```\n\n*Example 2:*\n\nReturn number of global tickets:\n\n```sqf\n_globalTickets = [missionNamespace] call BIS_fnc_respawnTickets;\n```\n\n*Example 3:*\n\nReturn number of player's tickets:\n\n```sqf\n_playerTickets = [player, nil, true] call BIS_fnc_respawnTickets;\n```","BIS Functions\\BIS_fnc_respawnTimePenalty.md":"<pre>/*\n\n\tDescription:\n\tSet or execute respawn time penalty\n\n\tParameter(s):\n\t\t0: CODE - penalty condition\n\t\t1: NUMBER - penalty delay\n\t\t2: TEXT - text displayed when penalty is in effect\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnTimePenalty` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_respawnTimePenalty;\n``` -->","BIS Functions\\BIS_fnc_respawnWave.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_respawnWave` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_respawnWave;\n``` -->","BIS Functions\\BIS_fnc_respect.md":"RESpect - The Effective Calculation Process.\n\n\n---\n*Syntaxes:*\n\n[mode, param1, param2, param3] call `BIS_fnc_respect`\n\n---\n","BIS Functions\\BIS_fnc_returnChildren.md":"Returns all subclasses within given class.\n\n\n---\n*Syntaxes:*\n\n[config, depth, lastTier, firstTier] call `BIS_fnc_returnChildren`\n\n---\n*Example 1:*\n\n```sqf\n[configFile >> \"CfgFunctions\", 2] call BIS_fnc_returnChildren; // returns config paths of all functions\n```","BIS Functions\\BIS_fnc_returnConfigEntry.md":"Explores parent classes in the run-time config for the value of a config entry.\n\n\n---\n*Syntaxes:*\n\n[config,attribute,defaultValue] call `BIS_fnc_returnConfigEntry`\n\n---\n*Example 1:*\n\n```sqf\n[configfile >> \"Cfg3DEN\" >> \"Attributes\" >> \"ActivationType\",\"idc\"] call BIS_fnc_returnConfigEntry;\n```","BIS Functions\\BIS_fnc_returnGroupComposition.md":"<pre>\n/*\n\tFile: returnGroupComp.sqf\n\n\tDescription:\n\tFunction which returns a logical group composition based on a number of parameters.\n\n\tParameter(s):\n\t_this select 0: side (Side).\n\t_this select 1: number of characters (Number).\n\t_this select 2: (optional) type (String):\n\t\t- \"riflesquad\": (default) standard rifle squad.\n\t\t- \"sniper\": sniper team.\n\n\tReturns:\n\tArray of Strings - object types.\n\t\n\tTODO: use CfgGroups instead?\n*/\n\n//Validate parameter count\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_returnGroupComposition` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_returnGroupComposition;\n``` -->","BIS Functions\\BIS_fnc_returnNestedElement.md":"Function to return an item at a path in an array.\n\n\n---\n*Syntaxes:*\n\n[array, path] call `BIS_fnc_returnNestedElement`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = `1, 2], [3, 4`;\n_value = [_array, [0, 1]] call BIS_fnc_returnNestedElement; // returns 2\n```","BIS Functions\\BIS_fnc_returnParents.md":"Returns list of all parent classes.\n\n\n---\n*Syntaxes:*\n\n[config, onlyClassNames] call `BIS_fnc_returnParents`\n\n---\n*Example 1:*\n\n```sqf\n[ configFile >> \"CfgVehicles\" >> \"Land_FirePlace_F\", true ] call BIS_fnc_returnParents;\n//Returns [\"Land_FirePlace_F\",\"House_F\",\"House\",\"HouseBase\",\"NonStrategic\",\"Building\",\"Static\",\"All\"]\n```","BIS Functions\\BIS_fnc_returnVehicleTurrets.md":"Return the path to all turrets and sub-turrets in a vehicle.\n\n\n---\n*Syntaxes:*\n\n[configEntry] call `BIS_fnc_returnVehicleTurrets`\n\n---\n*Example 1:*\n\n```sqf\n[configFile >> \"CfgVehicles\" >> \"B_MBT_01_TUSK_F\"] call BIS_fnc_returnVehicleTurrets;\n```","BIS Functions\\BIS_fnc_reviveAllowed.md":"Returns true if unit is in general able to revive someone.\n\n\n---\n*Syntaxes:*\n\n[medic, unit] call `BIS_fnc_reviveAllowed`\n\n---\n*Example 1:*\n\n```sqf\nprivate _canRevive = [medic,target] call BIS_fnc_reviveAllowed;\n```","BIS Functions\\BIS_fnc_reviveBleedOut.md":"Make a unit bleed out over time while incapacitated.\n\n\n---\n*Syntaxes:*\n\n[player] call `BIS_fnc_reviveBleedOut`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_unit] call BIS_fnc_reviveBleedOut;\n```","BIS Functions\\BIS_fnc_reviveDamageReset.md":"Resets player's damage data and recieved damage.\n\n\n---\n*Syntaxes:*\n\n[player] call `BIS_fnc_reviveDamageReset`\n\n---\n*Example 1:*\n\n```sqf\n[player] call BIS_fnc_reviveDamageReset;\n```","BIS Functions\\BIS_fnc_reviveDebug.md":"Debug script for revive system.\n\n\n---\n*Syntaxes:*\n\n[mode] call `BIS_fnc_reviveDebug`\n\n---\n*Example 1:*\n\n```sqf\n[1] call BIS_fnc_reviveDebug;\n```","BIS Functions\\BIS_fnc_reviveEhDammaged.md":"<pre>/*\nunit: Object - Object the event handler is assigned to\nhitSelection: String - Name of the selection where the unit was damaged\ndamage: Number - Resulting level of damage\nhitPartIndex: Number - hit index of the hit selection\nhitPoint: String - hit point Cfg name\nshooter: Object - shooter reference (to get instigator use getShotParents on projectile)\nprojectile: Object - the projectile that caused damage\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_reviveEhDammaged`\n\n---\n","BIS Functions\\BIS_fnc_reviveEhHandleDamage.md":"Should be excuted by HandleDamage event handler. See example. Handles damage calculation.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\nBIS_unit addEventHandler [\"HandleDamage\", \n{\n\t_this call BIS_fnc_reviveEhHandleDamage;\n}];\n```","BIS Functions\\BIS_fnc_reviveEhHandleHeal.md":"Handles healing of unit. Unit gets fully healed after 10 seconds if current damage is smaller than initial damage, e.g. a medic healed the unit.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_reviveEhHandleHeal`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_unit] call BIS_fnc_reviveEhHandleHeal;\n```","BIS Functions\\BIS_fnc_reviveEhKilled.md":"Should be called from Killed event handler. Handles what happens if unit dies if revive system is enabled.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\nBIS_unit addEventHandler [\"Killed\", \n{\n _this call BIS_fnc_reviveEhKilled;\n}];\n```","BIS Functions\\BIS_fnc_reviveEhRespawn.md":"Sets  unit's state to respawned. Should probably only be called on respawn event.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_reviveEhRespawn`\n\n---\n*Example 1:*\n\n```sqf\nBIS_unit call BIS_fnc_reviveEhRespawn;\n```","BIS Functions\\BIS_fnc_reviveEnabled.md":"Returns is revive is enabled or not for the unit.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_reviveEhRespawn`\n\n---\n*Example 1:*\n\n```sqf\nprivate _reviveEnabled = [BIS_unit] call BIS_fnc_reviveEnabled;\n```","BIS Functions\\BIS_fnc_reviveGet3dIcons.md":"Returns structured text that can be displayed in 'Hold Action' tech as animated unconscious state icon.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_reviveGet3dIcons`\n\n---\n*Example 1:*\n\n```sqf\nprivate _structuredText = [BIS_unit] call BIS_fnc_reviveGet3dIcons;\n```","BIS Functions\\BIS_fnc_reviveGetActionIcon.md":"Returns structured text that can be displayed in 'Hold Action' tech as animated unconscious state icon.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_reviveGetActionIcon`\n\n---\n*Example 1:*\n\n```sqf\nprivate _structuredText = [BIS_unit] call BIS_fnc_reviveGetActionIcon;\n```","BIS Functions\\BIS_fnc_reviveIconControl.md":"Manage the adding, removing, and effects applied to 3D icons used for visualizing incapacitated units.\n\n\n---\n*Syntaxes:*\n\n[mode, unitVar] call `BIS_fnc_reviveIconControl`\n\n---\n","BIS Functions\\BIS_fnc_reviveInit.md":"Initialize the Revive system on all machines.\n\n\n---\n*Syntaxes:*\n\n\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_reviveInit;\n```","BIS Functions\\BIS_fnc_reviveIsValid.md":"Check if player can perform revive action on given unit.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_reviveIsValid`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_player] call BIS_fnc_reviveIsValid;\n```","BIS Functions\\BIS_fnc_reviveIsValidSecure.md":"Check if player can perform secure action on given unit.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_reviveIsValidSecure`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_player] call BIS_fnc_reviveIsValidSecure;\n```","BIS Functions\\BIS_fnc_reviveOnBeingRevived.md":"Used to execute specific code locally on every client whenever \"being revived\" flag changes.\n\n\n---\n*Syntaxes:*\n\n[nil, flagState, unit] call `BIS_fnc_reviveOnBeingRevived`\n\n---\n*Example 1:*\n\n```sqf\n[nil, true, squadLeader] call BIS_fnc_reviveOnBeingRevived;\n```","BIS Functions\\BIS_fnc_reviveOnForcingRespawn.md":"<pre>/*\n\tAuthor: Jiri Wainar\n\n\tDescription:\n\tUsed to execute specific code localy on every client whenever 'forcing respawn' flag changes.\n\n\tParameters:\n\t\t_this select 0: STRING - Variable that carries the 'being revived' flag over the network, defined by macro VAR_TRANSFER_FORCING_RESPAWN.\n\t\t_this select 1: BOOL - Flag state - true or false.\n\t\t_this select 2: OBJECT - Unit to set the flag for.\n\n\tReturns:\n\tTrue if successful, false if not.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_reviveOnForcingRespawn`\n\n---\n","BIS Functions\\BIS_fnc_reviveOnState.md":"<pre>/*\n\tAuthor: Jiri Wainar\n\n\tDescription:\n\tUsed to execute specific code localy on every client whenever unit's state changes.\n\n\tParameters:\n\t\t_this select 0: STRING - Variable that carries the state value over the network, defined by macro VAR_TRANSFER_STATE.\n\t\t_this select 1: SCALAR - State.\n\t\t_this select 2: OBJECT - Unit to set the status for.\n\n\tReturns:\n\tTrue if successful, false if not.\n\n\tStates:\n\t\t#define STATE_RESPAWNED\t\t\t0\n\t\t#define STATE_REVIVED\t\t\t1\n\t\t#define STATE_INCAPACITATED\t\t2\n\t\t#define STATE_DEAD\t\t\t\t3\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_reviveOnState`\n\n---\n*Example 1:*\n\n```sqf\n{ [objNull, 1, _x] call BIS_fnc_reviveOnState; } forEach (curatorSelected select 0);\n```","BIS Functions\\BIS_fnc_reviveOnStateJIP.md":"<pre>/*\n\tAuthor: Jiri Wainar\n\n\tDescription:\n\tUsed to execute state specific code localy on client that is JIPping.\n\n\tParameters:\n\t\t_this select 0: STRING - Variable that carries the state value over the network, defined by macro VAR_TRANSFER_STATE.\n\t\t_this select 1: SCALAR - State.\n\t\t_this select 2: OBJECT - Unit to set the status for.\n\n\tReturns:\n\tTrue if successful, false if not.\n\n\tStates:\n\t\t#define STATE_RESPAWNED\t\t\t0\n\t\t#define STATE_REVIVED\t\t\t1\n\t\t#define STATE_INCAPACITATED\t\t2\n\t\t#define STATE_DEAD\t\t\t\t3\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_reviveOnStateJIP`\n\n---\n","BIS Functions\\BIS_fnc_reviveSecureUnit.md":"Make player secured (killed without execution penalties) by _source unit.\n\n\n---\n*Syntaxes:*\n\n[unit, source] call `BIS_fnc_reviveSecureUnit`\n\n---\n*Example 1:*\n\n```sqf\n[player_1,player2] call BIS_fnc_reviveSecureUnit;\n```","BIS Functions\\BIS_fnc_richCurve_compute.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tComputes curve data\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\t_this select 1: Bool \t- Whether this is a forced computation (from on attributes changed and not from on drag)\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_compute`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_computeCurveArcLength.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tComputes curve arc lenght\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\n\tReturns:\n\tFloat - The curve arc length\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_computeCurveArcLength`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_computeKeys.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's keys assigned to given curve\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\t_this select 1: Bool\t- Whether or not to sort the keys by time\n\n\tReturns:\n\tArray - List of assigned keys\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_computeKeys`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_computeOwnerTimeline.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tStores owner timeline\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tObject - The owner timeline object\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_computeOwnerTimeline`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_computeSimulatedObjects.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's all simulated objects\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tArray - List of objects simulated by given curve\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_computeSimulatedObjects`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenAttributesChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\t3DEN attributes of a curve change\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenAttributesChanged`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenBakeCurve3D.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tBakes a curve to a set of points\n\n\tParameter(s):\n\t_this select 0: Object  - The curve\n\t_this select 1: Integer - The amount of segments for curve baking (higher numbers mean more detail but also a lot more cpu time)\n\n\tReturns:\n\tARRAY - All the baked curve points\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenBakeCurve3D`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenComputeNearestSegment.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tComputes the nearest baked segment from given 3D position\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tArray - The start and end vectors of segment\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenComputeNearestSegment`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenConnectionChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\t3DEN connection of a curve change\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenConnectionChanged`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenDragged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tEntity is dragged in 3DEN\n\n\tParameter(s):\n\t_this select 0: Object\t- The curve\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenDragged`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenDrawControlPoints3D.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tDraws all control points of a curve\n\n\tParameter(s):\n\t_this select 0: Curve - The curve\n\t_this select 1: Array - The color of the icons rendering\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenDrawControlPoints3D`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenDrawCurve3D.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tDraws a location curve in 3D\n\n\tParameter(s):\n\t_this select 0: Array\t- The baked curve\n\t_this select 1: Array\t- The color of the curve rendering\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenDrawCurve3D`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenIsSelected.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tWhether given curve is selected in 3den\n\n\tParameter(s):\n\t_this select 0: Object\t- The curve object\n\n\tReturns:\n\tBool - True if selected, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenIsSelected`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenMarkStateDirty.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tMarks a curve state as dirty, so it knows it needs to recalculate\n\tFor example, moving a key in EDEN\n\n\tParameter(s):\n\t_this select 0: Object\t- The Curve\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenMarkStateDirty`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_edenTick.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\t3DEN 3D drawing\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_edenTick`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getCurveLength.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tCalculates distance between all keys, returning the total length\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\n\tReturns:\n\tFloat - The curve length\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getCurveLength`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getCurvePoints.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the computed curve points\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\n\tReturns:\n\tArray - The curve points (array of 3D vectors)\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getCurvePoints`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getCurveValueFloat.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's curve value at given time\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\t_this select 1: Float \t- The time\n\t_this select 2: Integer\t- Value type\n\n\tReturns:\n\tfloat - The value at given time\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getCurveValueFloat`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getCurveValueVector.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's curve value at given time\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\t_this select 1: Float \t- The time\n\t_this select 2: Integer\t- Value type\n\n\tReturns:\n\tArray - The vector value at given time\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getCurveValueVector`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getFirstKey.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's the first key on given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tObject - The first key of given curve\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getFirstKey`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getKeyFromIndex.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's the key in given index of given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\t_this select 1: Integer - The key index\n\n\tReturns:\n\tObject - The key at given index\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getKeyFromIndex`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getKeyIndex.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's the index of given key in given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\t_this select 1: Object - The key\n\n\tReturns:\n\tInteger - The index of the given key in given curve\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getKeyIndex`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getKeys.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's keys assigned to given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tArray - List of assigned keys\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getKeys`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getKeysAtTime.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's keys (prev / next) at given time\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\t_this select 1: Float\t- The time\n\n\tReturns:\n\tArray - Previous and next keys\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getKeysAtTime`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getKeyTime.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns given key time in alpha\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tFloat - The time in alpha of given key (from 0 to 1)\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getKeyTime`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getLastKey.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's the last key on given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tObject - The last key of given curve\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getLastKey`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getLookAtPosition.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns the look at position of this curve, [0.0, 0.0, 0.0] if not set\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tArray - Target position, [0.0, 0.0, 0.0] if not set\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getLookAtPosition`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getNextKey.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's the next key from given key, null if none exists\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\t_this select 1: Object - The key\n\n\tReturns:\n\tObject - The next key\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getNextKey`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getOrientationMode.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns orientation mode for objects animated by this curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tInteger - The mode (0 = None, 1 = Look At, 2 = Movement Direction)\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getOrientationMode`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getOwnerTimeline.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns a curve's simulated objects\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tObject - The owner timeline object\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getOwnerTimeline`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getPreviousKey.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tGet's the previous key from given key, null if none exists\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\t_this select 1: Object - The key\n\n\tReturns:\n\tObject - The previous key\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getPreviousKey`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getSimulatedObjects.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns a curve's simulated objects\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tArray - List of objects simulated by given curve\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getSimulatedObjects`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_getTimeRange.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns min / max time range of given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tArray - Min / Max time range\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_getTimeRange`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_isTimeInSeconds.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tWhether the time of the keys belonging to this curve are in seconds\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tBool - True if in seconds, false if in alpha\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_isTimeInSeconds`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_numKeys.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReturns number of keys registered with given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tInteger - Number of keys assigned to this curve\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_numKeys`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_reset.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tClears all curves (and deletes them)\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_reset`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_resetKeysEventState.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tReset's flag on all keys about handled events\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_resetKeysEventState`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_setKeys.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's keys assigned to given curve\n\n\tParameter(s):\n\t_this select 0: Object - The curve\n\t_this select 1: Array - The keys\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_setKeys`\n\n---\n","BIS Functions\\BIS_fnc_richCurve_setOrientationMode.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSet's the curve's orientation mode\n\n\tParameter(s):\n\t_this select 0: Object \t- The curve\n\t_this select 1: Integer - The orientation mode (0 = None / 1 = Animation / 2 = Look At / 3 = Movement Direction)\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_richCurve_setOrientationMode`\n\n---\n","BIS Functions\\BIS_fnc_romanNumeral.md":"Convert integer to roman numeral (e.g. 42 becomes \"XLII\").\n\n\n---\n*Syntaxes:*\n\ninteger call `BIS_fnc_romanNumeral`\n\n---\n*Example 1:*\n\n```sqf\n1 call BIS_fnc_romanNumeral; // returns \"I\"\n```\n\n*Example 2:*\n\n```sqf\n3999 call BIS_fnc_romanNumeral; // returns \"MMMCMXCIX\"\n```","BIS Functions\\BIS_fnc_rotateMarker.md":"Rotating a marker to new azimuth, using shortest turn, clockwise or anticlockwise movement.\n\n\n---\n*Syntaxes:*\n\n[marker, newAzimuth, absoluteOrRelativ, shortestTurn, duraton] spawn `BIS_fnc_rotateMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",90] spawn BIS_fnc_rotateMarker;\n```\n\n*Example 2:*\n\n```sqf\n[\"BIS_marker\",90,false,2,5] spawn BIS_fnc_rotateMarker;\n```","BIS Functions\\BIS_fnc_rotateVector2D.md":"This function returns a 2D vector rotated a specified number of degrees around the origin.\n\n\n---\n*Syntaxes:*\n\n[vector2D, angle] call `BIS_fnc_rotateVector2D`\n\n---\n*Example 1:*\n\n```sqf\n[[5,3], 60] call BIS_fnc_rotateVector2D;//Returns[-0.0980766,5.83013]\n```","BIS Functions\\BIS_fnc_rotateVector3D.md":"Rotates the vector around the given axis by the given angle\n\n\n---\n*Syntaxes:*\n\n[vector, angle, axis] call `BIS_fnc_rotateVector3D`\n\n---\n*Example 1:*\n\n```sqf\n[vectorDir player, 90, 2] call BIS_fnc_rotateVector3D;\n```","BIS Functions\\BIS_fnc_roundDir.md":"Round direction to nearest set rounding; used for determining cardinal direction.\n\n\n---\n*Syntaxes:*\n\n[rawDirection, rounding] call `BIS_fnc_roundDir`\n\n---\n*Example 1:*\n\n```sqf\nplayer setDir ([getDir player, 45] call BIS_fnc_roundDir);\n```\n\n*Example 2:*\n\n```sqf\n[204.2, 10] call BIS_fnc_roundDir; // will return 200\n```\n\n*Example 3:*\n\n```sqf\n[271, 180] call BIS_fnc_roundDir; // will return 360\n```\n\n*Example 4:*\n\n```sqf\n70 call BIS_fnc_roundDir; // will return 90\n```","BIS Functions\\BIS_fnc_roundNum.md":"Round a number to the provided factor.\n\n\n---\n*Syntaxes:*\n\n[number, factor, secondary factor] call `BIS_fnc_roundNum`\n\n---\n*Example 1:*\n\n```sqf\n[10.254,2,3] call BIS_fnc_roundNum;//Returns 9\n```\n\n*Example 2:*\n\n```sqf\n[10.254,1,3] call BIS_fnc_roundNum;//Returns 10\n```","BIS Functions\\BIS_fnc_rscLayer.md":"Register RSC layer and returns a `unique` ID.\n\n\n---\n*Syntaxes:*\n\n[layerName] call `BIS_fnc_rscLayer`\n\n---\n*Example 1:*\n\n```sqf\nprivate _id = [\"myLayerName\"] call BIS_fnc_rscLayer;\n```","BIS Functions\\BIS_fnc_runLater.md":"Stack code/function that should be run later, after some time/frames or/and custom condition. Internally calls `BIS_fnc_loop`.\n\n\n---\n*Syntaxes:*\n\n[id, code, timer, timerType, condition] call `BIS_fnc_runLater`\n\n---\n*Example 1:*\n\n```sqf\n// Hints current game time in the next frame after 5 seconds have passed\n[\"uniqueId\", { hint str time; }, 5] call BIS_fnc_runLater;\n```\n\n*Example 2:*\n\n```sqf\n// Hints current game time in the next frame after 120 frames have passed\n[\"uniqueId\", { hint str time; }, 120, \"frames\"] call BIS_fnc_runLater;\n```\n\n*Example 3:*\n\n```sqf\n// Hints current game time in the next frame after BIS_variable is assigned\n[\"uniqueId\", { hint str time; }, nil, nil, { !isNil { BIS_variable } }] call BIS_fnc_runLater;\n```\n\n*Example 4:*\n\n```sqf\n// Hints current game time in the next frame after 5 seconds have passed and BIS_variable is assigned\n[\"uniqueId\", { hint str time; }, 5, \"seconds\", { !isNil { BIS_variable } }] call BIS_fnc_runLater;\n```\n\n*Example 5:*\n\n```sqf\n// Hints current game time in the next frame\n[\"uniqueId\", { hint str time; }] call BIS_fnc_runLater;\n```","BIS Functions\\BIS_fnc_sandstorm.md":"Creates particle sandstorm round given object.\n\n\n---\n*Syntaxes:*\n\n[object, interval, brightness, newspapers] call `BIS_fnc_sandstorm`\n\n---\n*Example 1:*\n\n```sqf\n[player, 0.04, 0.8, false] call BIS_fnc_sandstorm;\n```","BIS Functions\\BIS_fnc_saveGame.md":"Evaluates the current battlefield situation and saves the game when appropriate.\n\n\n---\n*Syntaxes:*\n\n[objects] call `BIS_fnc_saveGame`\n\n---\n*Example 1:*\n\n```sqf\n[ [unit_1,unit_2] ] call BIS_fnc_saveGame;\n```","BIS Functions\\BIS_fnc_saveInventory.md":"Save unit's loadout.\n\n\n---\n*Syntaxes:*\n\n[unit,input,params,delete] call `BIS_fnc_saveInventory`\n\n---\n*Example 1:*\n\n```sqf\n[ player, [missionNamespace, \"BIS_inv\"], [], true ] call BIS_fnc_saveInventory;\n```","BIS Functions\\BIS_fnc_saveVehicle.md":"Save vehicle's params (textures, animations, crew).\n\n\n---\n*Syntaxes:*\n\n[object,target,params,delete] call `BIS_fnc_saveVehicle`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_tank, [missionNamespace, \"BIS_someTankSave\"], [\"SomeRandomParam\"], false ] call BIS_fnc_saveVehicle;\n```","BIS Functions\\BIS_fnc_sayMessage.md":"Make a speaker say a message.\n\n\n---\n*Syntaxes:*\n\n[speaker, message, channel] call `BIS_fnc_sayMessage`\n\n---\n*Example 1:*\n\n```sqf\n[leader player, \"to_c01_m01_brief_001_br_briefing_a_CENTAUR_0\", \"say3D\"] call BIS_fnc_sayMessage;\n```","BIS Functions\\BIS_fnc_scaleAndTranslate.md":"<pre>/*\n\tAuthor: Riccardo Argiolas\n\n\tDescription:\n\t\tTranslates and scales (with pivot) and fades a picture over time.\n\n\tParameters:\n\tSelect 0 - CONTROL: picture that has to be modified\n\tSelect 1 - NUMBER: how much the picture has to be scaled (>1 makes it bigger, 1 keeps it the same, <1 makes it smaller)\n\tSelect 2 - STRING: select the pivot's position (i.e. center of the scaling process)\n\tSelect 3 - ARRAY: how much the picture has to be translated/moved in [X,Y] format\n\tSelect 4 - NUMBER: either the duration of the animation(default) or the speed of the translation, depending on what the next parameter is set to.\n\tSelect 5 - BOOL: true = duration will be used, false = speed will be used.\n\tSelect 6 - NUMBER: transparency of the image at the end of the animation (1 = invisible)\n\n\tReturns: \n\tNUMBER: Duration of the animation. (Useful for determining how much sleep time is needed between animations)\n\n\tExamples:\n\t[_controlFront, 0.8, \"topLeft\"] call BIS_fnc_scaleAndTranslate;\n\t_t = [_controlFront, 1, \"bottomRight\", [0.1, 0.1], 0.5, false] call BIS_fnc_scaleAndTranslate;\n\tsleep (_t * 2);\n\t[_controlFront, 0.8, \"topRight\", [0.5, 0.3]] call BIS_fnc_scaleAndTranslate;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_scaleAndTranslate`\n\n---\n","BIS Functions\\BIS_fnc_sceneAreaClearance.md":"Removes object clutter within a set trigger, for use within cutscenes.\n\n\n---\n*Syntaxes:*\n\n[trigger, objects, destination] spawn `BIS_fnc_sceneAreaClearance`\n\n---\n*Example 1:*\n\n```sqf\n[triggerArea1] spawn BIS_fnc_sceneAreaClearance;\n```","BIS Functions\\BIS_fnc_sceneCheckWeapons.md":"Checks if participants have not missing weapon or have not it selected before scene<br>Function works as a toggle:\n* 1st run of script: running in SETUP mode - sets correct weapons for scene\n* 2nd run of script: running in RESTORE mode - restore origin weapons(delete weapons after scene if character hadn't any)\n\n\n---\n*Syntaxes:*\n\n[participants] call `BIS_fnc_sceneCheckWeapons`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t[BIS_Cooper, \"primary\"],\n\t[BIS_Ohara, \"primary\"],\n\t[BIS_Rodriguez, \"primary\"],\n\t[BIS_Sykes, \"primary\"],\n\t[BIS_Miles, \"primary\"]\n] call BIS_fnc_sceneCheckWeapons;\n```","BIS Functions\\BIS_fnc_sceneCreateSceneTrigger.md":"Create trigger for scene which can interrupt scene with name passed during creating the trigger. Scene name is saved in format `BIS_SceneIntDetector%1` where %1 is sceneName.\n\n\n---\n*Syntaxes:*\n\n[sceneName, side, timeout, triggerSize, triggerPosition] call `BIS_fnc_sceneCreateSceneTrigger`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_scene\", west, 5, 500, [1337,1337,0], false] call BIS_fnc_sceneCreateSceneTrigger;\n```","BIS Functions\\BIS_fnc_sceneCreateSoundEntities.md":"<pre>\n/*******************************************************************************\n *\tversion: \t1.0\n *\tname:\t\tcreate sound entities\t\n *\tdescription:\tcreates sound entities(logic objects) and attaches to \n *\t\t\tan objects passed as parameter     \n *\t\t\tAfter scene end it will detach and delete all created \n *\t\t\tsound entities (if scene was executed from scenes\n *\t\t\tcontroller.\n *\t\t\t \t\n *\tparamater:\tobjects - ARRAY of OBJECTS in format without \"BIS_\" \n *\t\t\tprefix. For example, if you have BIS_Cooper in mission \n *\t\t\tthan parameter will be [Cooper]. Then you can use \n *\t\t\tcreated sound entities as BIS_ZvukCooper say \"something\"    \n *\t\t\t\t\t\t \t\n *\treturn value:\tnothing \t\n * \n</pre>\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_sceneCreateSoundEntities` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_sceneCreateSoundEntities;\n``` -->","BIS Functions\\BIS_fnc_sceneGetObjects.md":"\n\n\n---\n*Syntaxes:*\n\n[centre, radius, type] call `BIS_fnc_sceneGetObjects`\n\n---\n*Example 1:*\n\n```sqf\n[player, 20, \"Car\"] call BIS_fnc_sceneGetObjects;\n```","BIS Functions\\BIS_fnc_sceneGetParticipants.md":"gets members of unit's group who are in unit's range.\n\n\n---\n*Syntaxes:*\n\n[unit, maxDistance] call `BIS_fnc_sceneGetParticipants`\n\n---\n*Example 1:*\n\n```sqf\n[player, 20] call BIS_fnc_sceneGetParticipants;\n```","BIS Functions\\BIS_fnc_sceneGetPositionByAngle.md":"<pre>\n/*******************************************************************************\n *\n *\tversion: \t1.0\n *\tname:\t\tsceneGetPositionByAngle\n *\tdescription:\treturns new calculated position of object from angle and distance from specified object   \n *\tparameters:\tdescribed below\t\n *\treturn value:\tarray of new coordinates [x, y]\n *\t  \n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_sceneGetPositionByAngle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_sceneGetPositionByAngle;\n``` -->","BIS Functions\\BIS_fnc_sceneIntruderDetector.md":"Checks if there are intruders during scene. All intruders during scene will be disabled if they \n   will get into the detector trigger. Checking is deactivated by passing \n```sqf\nBIS_sceneIntruderDetectorLogic setVariable [\"_detectInProgress\", false];\n```\n\n\n---\n*Syntaxes:*\n\n[sceneCenter, triggerSize] call `BIS_fnc_sceneIntruderDetector`\n\n---\n*Example 1:*\n\n```sqf\n`1337,1337,0],[42,42` call BIS_fnc_sceneCreateSceneTrigger;\n```","BIS Functions\\BIS_fnc_sceneMiscStuff.md":"<pre>\n/*********************************************************************\n\tVersion:\t1.0\n\tName:\t\tsceneMiscStuff\n\tDESCRIPTION:\tDoes the basic minor stuff for scene - cinema borders, map is denied etc.  \n\tPARAMETERS:\t1) _cameraPositions - `cameraTarget],[cameraPos` - Coordinates. If BIS_debugScene is true then external camera is activated\n\t\t\t2) _skipInitBlackout - BOOL - if true, initial blackout is skipped\n\t\t\t3) _skipFinalBlackout - BOOL - if true, final blackout is skipped\n\t\t\t4) _noUseCheckTheWeapons - BOOL - if true, checking of weapon before scene is skipped\n\t\t\t5) _noUseLoadingScreen - BOOL - if true, loadingscreen is bypassed\n\t\t\t6) __excludedObjectsForIntruderDetector - ARRAY of objects - objects will be excluded from intruder detector\n\tRETURNED VALUE:\t\n**********************************************************************/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_sceneMiscStuff` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_sceneMiscStuff;\n``` -->","BIS Functions\\BIS_fnc_sceneRotate.md":"Compute new object coordinates from given center and angle from MOTION BUILDER\n\n\n---\n*Syntaxes:*\n\n[center, centerAngle, angle, iniPosition] call `BIS_fnc_sceneRotate`\n\n---\n*Example 1:*\n\n```sqf\n`1337,1337,0], 42, 120, [200,200,0` call BIS_fnc_sceneRotate; // returns [[1337.15,1334.18,0],-258]\n```","BIS Functions\\BIS_fnc_sceneSetAnimationsForGroup.md":"Plays a range of animations for a specific set of units, intended for use during cutscenes.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_sceneSetAnimationsForGroup`\n\n---\n*Example 1:*\n\n```sqf\nprivate _setAnims = [group player, [\"AmovPercMstpSrasWrflDnon\"]] call BIS_fnc_sceneSetAnimationsForGroup;\n```","BIS Functions\\BIS_fnc_sceneSetBehaviour.md":"Enables / disables a specific set of AI units, usable for cutscenes.\n\n\n---\n*Syntaxes:*\n\nparam call `BIS_fnc_sceneSetBehaviour`\n\n---\n*Example 1:*\n\n```sqf\n[\"disableAI\", [unit1, player, unit2, unit3]] call BIS_fnc_sceneSetBehaviour;\n```","BIS Functions\\BIS_fnc_sceneSetObjects.md":"This function sets objects positions and direction relative to the chosen object.\n\n\n---\n*Syntaxes:*\n\n[centre, objectsArray, applyOffset, stopped] call `BIS_fnc_sceneSetObjects`\n\n---\n*Example 1:*\n\n```sqf\n[player, _arrayOfObjects, false] call BIS_fnc_sceneSetObjects;\n```","BIS Functions\\BIS_fnc_sceneSetPosFormation.md":"Adjusts units into a pre-determined formation, using a few variables. Part of S.C.E.N.E.S function group.\n\n\n---\n*Syntaxes:*\n\nparam spawn `BIS_fnc_sceneSetPosFormation`\n\n---\n*Example 1:*\n\n```sqf\n[units group player, bluforCommander, player, \"HALFCIRCLE\", 0] spawn BIS_fnc_sceneSetPosFormation;\n```","BIS Functions\\BIS_fnc_scriptedWaypointType.md":"Return CfgWaypoints type of scripted waypoint.\n\tReturns empty string/config when waypoint is not scripted\n\tReturns \"Custom\"/CfgWaypoints root when waypoint is using custom script.\n\n\n---\n*Syntaxes:*\n\n[waypoint,type] call `BIS_fnc_scriptedWaypointType`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_scripted_WP_01,\"returnString\"] call BIS_fnc_scriptedWaypointType;\n```","BIS Functions\\BIS_fnc_secondsToString.md":"Convert seconds to formatted string.\n\n\n---\n*Syntaxes:*\n\n[totalSeconds, format, returnArray] call `BIS_fnc_secondsToString`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"Hi, it is currently %1.\", [time, \"HH:MM\"] call BIS_fnc_secondsToString];\n```","BIS Functions\\BIS_fnc_selectCrew.md":"Return an appropriate crew type for a certain vehicle.<br>\n\n\n---\n*Syntaxes:*\n\n[side, configEntry] call `BIS_fnc_selectCrew`\n\n---\n*Example 1:*\n\n```sqf\nprivate _crewType = [blufor, configFile >> \"CfgVehicles\" >> \"B_MRAP_01_F\"] call BIS_fnc_selectCrew;\n```","BIS Functions\\BIS_fnc_selectDiarySubject.md":"Selects a diary subject.\n\n\n---\n*Syntaxes:*\n\n[diaryName] call `BIS_fnc_selectDiarySubject`\n\n---\n*Example 1:*\n\n```sqf\n[\"someSubject\"] call BIS_fnc_selectDiarySubject;\n```","BIS Functions\\BIS_fnc_selectRandom.md":"Selects one of the arguments at random.\n\n\n---\n*Syntaxes:*\n\nvalues call `BIS_fnc_selectRandom`\n\n---\n*Example 1:*\n\n```sqf\nprivate _bestShooter = [_rento, _ben, _trit] call BIS_fnc_selectRandom; // returns one of the variables\n_bestSeries = `\"halo1\",\"halo2\"],[\"ofp\",\"arma2\"` call BIS_fnc_selectRandom; // returns one of the arrays\n```","BIS Functions\\BIS_fnc_selectRandomWeighted.md":"Selects a random item from an array, taking into account item weight.\n\n\n---\n*Syntaxes:*\n\nitemsAndWeights call `BIS_fnc_selectRandomWeighted`\n\n[items, weights] call `BIS_fnc_selectRandomWeighted`\n\n---\n*Example 1:*\n\n```sqf\n[\"apples\",.3,\"pears\",.2,\"bananas\",.4,\"diamonds\",.1,\"unicorns\",.00001] call BIS_fnc_selectRandomWeighted;\n```\n\n*Example 2:*\n\n```sqf\n`\"apples\",\"pears\",\"bananas\",\"diamonds\"], [0.3,0.2,0.4,0.1` call BIS_fnc_selectRandomWeighted;\n```","BIS Functions\\BIS_fnc_selectRespawnTemplate.md":"Select respawn template from CfgRespawnTemplates and execute its script / function. Internal use.\n\n\n---\n*Syntaxes:*\n\n[mode, arguments] call `BIS_fnc_selectRespawnTemplate`\n\n---\n*Example 1:*\n\n```sqf\n[\"playerKilledScript\", []] call BIS_fnc_selectRespawnTemplate;\n```","BIS Functions\\BIS_fnc_setCuratorAttributes.md":"<pre>/*\n\n\tDescription:\n\tSet which attributes are available for given entity  or entity type.\n\n\tParameter(s):\n\t\t0: OBJECT - curator\n\t\t1:\n\t\t\tSTRING - general setting for all entities of the given type, can be  \"object\", \"player\", \"group', \"waypoint\" or \"marker\"\n\t\t\tOBJECT - setting for specific object, overrides general settings\n\t\t\tGROUP - setting for specific group, overrides general settings\n\t\t2: ARRAY of STRINGs - attributes\n\t\t\tobject:\n\t\t\t\tSkill\n\t\t\t\tUnitPos\n\t\t\t\tRank\n\t\t\t\tDamage\n\t\t\t\tFuel\n\t\t\t\tLock\n\t\t\t\tRespawnVehicle\n\t\t\t\tRespawnPosition\n\t\t\t\tExec\n\t\t\tgroup:\n\t\t\t\tGroupID\n\t\t\t\tBehaviour\n\t\t\t\tFormation\n\t\t\twaypoint:\n\t\t\t\tBehaviour\n\t\t\t\tFormation\n\t\t\tmarker:\n\t\t\t\tMarkerText\n\t\t\t\tMarkerColor\n\n\tReturns:\n\tBOOL\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_setCuratorAttributes` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_setCuratorAttributes;\n``` -->","BIS Functions\\BIS_fnc_setCuratorCamera.md":"Move curator camera to a position and direction. Finished when animation ends.\n\n\n---\n*Syntaxes:*\n\n[camPos, targetPos, time] spawn `BIS_fnc_setCuratorCamera`\n\n---\n*Example 1:*\n\n```sqf\n[nil, player, 5] spawn BIS_fnc_setCuratorCamera;\n```","BIS Functions\\BIS_fnc_setCuratorVisionModes.md":"Set which vision modes curator can access.\n\n\n---\n*Syntaxes:*\n\n[curator,mode] call `BIS_fnc_setCuratorVisionModes`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_curator,[-1,-2]] call BIS_fnc_setCuratorVisionModes;\n```","BIS Functions\\BIS_fnc_setCustomSoundController.md":"<pre>/*\n\tBIS_fnc_setCustomSoundController\n\n\ta: reyhard\n*/</pre>*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_setCustomSoundController`\n\n---\n","BIS Functions\\BIS_fnc_setDate.md":"Instantly set date and share it across network with optional transition effect.\n\n\n---\n*Syntaxes:*\n\n[value, global, transition] call `BIS_fnc_setDate`\n\n---\n*Example 1:*\n\n```sqf\n[[2035, 12, 31, 23, 59], true, true] call BIS_fnc_setDate;\n```\n\n*Example 2:*\n\n```sqf\n[4, true, true] call BIS_fnc_setDate; // skip 4 hours. Same as image in description\n```\n\n*Example 3:*\n\n```sqf\n[30 / 60, true, true] call BIS_fnc_setDate; // skip 30 minutes and show `30 minutes later` message\n```","BIS Functions\\BIS_fnc_setFog.md":"Instantly set weather conditions and share it across network.\n\n\n---\n*Syntaxes:*\n\n[strength, density, altitude] call `BIS_fnc_setFog`\n\n---\n*Example 1:*\n\n```sqf\n[1,1,100] call BIS_fnc_setFog; // returns [1,1,100]\n```","BIS Functions\\BIS_fnc_setHeight.md":"Set an object's altitude.\n\n\n---\n*Syntaxes:*\n\n[target, height, position, mode] call `BIS_fnc_setHeight`\n\n[height, mode] call `BIS_fnc_setHeight`\n\n---\n*Example 1:*\n\n```sqf\n// will place player's vehicle on \"myHeightMarker\", 50m above terrain\n[vehicle player, 50, getMarkerPos \"myHeightMarker\", \"ATL\"]]] call BIS_fnc_setHeight;\n```\n\n*Example 2:*\n\n```sqf\n// will set the \"this\" object 50m above sea level at its position\n// use where \"this\" has a value like in an init field\n[50, \"ASL\"] call BIS_fnc_setHeight;\n```","BIS Functions\\BIS_fnc_setHitPointDamage.md":"Sets damage to HitPoint with dependency or not.\n\n\n---\n*Syntaxes:*\n\n[object, hitPoint, damage, useDependency] call `BIS_fnc_setHitPointDamage`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"HitFace\", 0.9] call BIS_fnc_setHitPointDamage;\n```","BIS Functions\\BIS_fnc_setIDCStreamFriendly.md":"Shows or hides UI control according to state of the Stream Friendly UI switch in Game Options.\n\n\n---\n*Syntaxes:*\n\n[target,IDC] call `BIS_fnc_setIDCStreamFriendly`\n\n---\n*Example 1:*\n\n```sqf\n[ (findDisplay 1337) displayCtrl 42 ] call BIS_fnc_setIDCStreamFriendly;\n```\n\n*Example 2:*\n\n```sqf\n[ findDisplay 1337, 42 ] call BIS_fnc_setIDCStreamFriendly;\n```","BIS Functions\\BIS_fnc_setIdentity.md":"Sets the unit's identity.\n\n\n---\n*Syntaxes:*\n\n[object, face, speaker, pitch, callsign] call `BIS_fnc_setIdentity`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"Kerry\", \"Male01ENGB\", 1.05, \"Big Daddy\"] call BIS_fnc_setIdentity;\n```","BIS Functions\\BIS_fnc_setMissionStatusSlot.md":"Set  a slot for mission status with sectors, respawn tickets, etc.\n\n\n---\n*Syntaxes:*\n\n[id, text, texture, color, fade, position, barHeight] call `BIS_fnc_setMissionStatusSlot`\n\n---\n","BIS Functions\\BIS_fnc_setNestedElement.md":"Function to set an item in a nested array using a path. Modifies the array by reference.\n\n\n---\n*Syntaxes:*\n\n[array, path, value] call `BIS_fnc_setNestedElement`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = `1, 2], [3, 4`;\n_bool = [_array, [0, 0], 0] call BIS_fnc_setNestedElement; // _array is now `0, 2], [3, 4`\n```","BIS Functions\\BIS_fnc_setObjectRotation.md":"Set object rotation.\n\n\n---\n*Syntaxes:*\n\n[object, rotation] call `BIS_fnc_setObjectRotation`\n\n---\n*Example 1:*\n\n```sqf\n[cursorObject, [100,100,100]] call BIS_fnc_setObjectRotation;\n```","BIS Functions\\BIS_fnc_setObjectShotParents.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_setObjectShotParents` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_setObjectShotParents;\n``` -->","BIS Functions\\BIS_fnc_setObjectTexture.md":"Set object textures.\n\n\n---\n*Syntaxes:*\n\n[object, textures] call `BIS_fnc_setObjectTexture`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"#(rgb,8,8,3)color(0,0,1,1)\"] call BIS_fnc_setObjectTexture;\n```\n\n*Example 2:*\n\n```sqf\n[\n\tvehicle player,\n\t[\n\t\t\"#(rgb,8,8,3)color(1,0,0,1)\",\n\t\t\"#(rgb,8,8,3)color(0,1,0,1)\",\n\t\t\"#(rgb,8,8,3)color(0,0,1,1)\"\n\t]\n] call BIS_fnc_setObjectTexture;\n```\nidentical to:\n\n```sqf\nvehicle player setObjectTexture [0, \"#(rgb,8,8,3)color(1,0,0,1)\"];\nvehicle player setObjectTexture [1, \"#(rgb,8,8,3)color(0,1,0,1)\"];\nvehicle player setObjectTexture [2, \"#(rgb,8,8,3)color(0,0,1,1)\"];\n```","BIS Functions\\BIS_fnc_setOvercast.md":"Instantly set weather conditions and share it across network. Must be executed in `scheduled environment`.\n\n\n---\n*Syntaxes:*\n\n[value] call `BIS_fnc_setOvercast`\n\n---\n*Example 1:*\n\n```sqf\n[0.5] call BIS_fnc_setOvercast;\n```","BIS Functions\\BIS_fnc_setPitchBank.md":"Rotate an object, giving it the specified pitch and bank, in degrees.<br>\n`Pitch` is 0 when the object is level; 90 when pointing straight up; and -90 when pointing straight down.<br>\n`Bank` is 0 when level; 90 when the object is rolled to the right, -90 when rolled to the left, and 180 when rolled upside down.<br>\nNote that the object's `yaw` can be set with the `setDir` command, which should be issued before using this function, if required.<br>\nThe pitch/bank can be leveled out (set to 0) by using the `setDir` command.\n\n\n---\n*Syntaxes:*\n\n[object, pitch, bank] call `BIS_fnc_setPitchBank`\n\n---\n*Example 1:*\n\n```sqf\n[player, 45, -45] call BIS_fnc_setPitchBank;\n```","BIS Functions\\BIS_fnc_setPPeffectTemplate.md":"Apply post-process effects according to template from `CfgPostprocessTemplates`.\n\n\n---\n*Syntaxes:*\n\n[template, transition, global] call `BIS_fnc_setPPeffectTemplate`\n\n---\n*Example 1:*\n\n```sqf\n[\"Mediterranean\", 3, false] call BIS_fnc_setPPeffectTemplate;\n```\n\n*Example 2:*\n\n```sqf\n\"RealIsBrown\" call BIS_fnc_setPPeffectTemplate;\n```\n\n*Example 3:*\n\n```sqf\n\"MyPurplePP\" call BIS_fnc_setPPeffectTemplate; // can use a template defined in Description.ext\n```","BIS Functions\\BIS_fnc_setRain.md":"A helper function for setting `rainParams` in multiplayer. The call to the function could be placed in `init.sqf` to sync `rainParams` between all clients and JIP. Alternatively execute on server.\n\n\n---\n*Syntaxes:*\n\nrainParams `call` `BIS_fnc_setRain`\n\n---\n*Example 1:*\n\n```sqf\n0 setOvercast 1;\n0 setRain 1;\n0 setFog 0.1;\t\t\t\t\t\t// snow affects visibility at distance\nsetHumidity 0.9;\t\t\t\t\t// don't want to see dust clouds\nenableEnvironment [false, true];\t// don't want to see snakes and butterflies either\nforceWeatherChange;\n[\n\t\"a3\\data_f\\rainnormal_ca.paa\",\t// rainDropTexture\n\t1,\t\t\t\t\t\t\t\t// texDropCount\n\t0.01,\t\t\t\t\t\t\t// minRainDensity\n\t15,\t\t\t\t\t\t\t\t// effectRadius\n\t0.1,\t\t\t\t\t\t\t// windCoef\n\t2,\t\t\t\t\t\t\t\t// dropSpeed\n\t0.5,\t\t\t\t\t\t\t// rndSpeed\n\t0.5,\t\t\t\t\t\t\t// rndDir\n\t0.02,\t\t\t\t\t\t\t// dropWidth\n\t0.02,\t\t\t\t\t\t\t// dropHeight\n\t[0.1, 0.1, 0.1, 1],\t\t\t\t// dropColor\n\t0.1,\t\t\t\t\t\t\t// lumSunFront\n\t0.1,\t\t\t\t\t\t\t// lumSunBack\n\t5.5,\t\t\t\t\t\t\t// refractCoef\n\t0.3,\t\t\t\t\t\t\t// refractSaturation\n\ttrue,\t\t\t\t\t\t\t// snow\n\tfalse\t\t\t\t\t\t\t// dropColorStrong\n] call BIS_fnc_setRain;\n```","BIS Functions\\BIS_fnc_setRank.md":"Set rank of vehicle crew.\n\n\n---\n*Syntaxes:*\n\n[target, rank] call `BIS_fnc_setRank`\n\n---\n*Example 1:*\n\n```sqf\n[ vehicle player, \"Captain\" ] call BIS_fnc_setRank;\n```","BIS Functions\\BIS_fnc_setRespawnDelay.md":"<pre>/*\n\n\tDescription:\n\tIncrease the respawn time based on a condition\n\n\tParameter(s):\n\t\t0: CODE - Condition, must return BOOL\n\t\t1: NUMBER - delay in seconds which is applied when the condition is true\n\t\t2: STRING - description displayed when the delay is in effect\n\n\tReturns:\n\tNOTHING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_setRespawnDelay` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_setRespawnDelay;\n``` -->","BIS Functions\\BIS_fnc_setRespawnInventory.md":"Set respawn loadouts.\n\n\n---\n*Syntaxes:*\n\n[target, inventory] call `BIS_fnc_setRespawnInventory`\n\n---\n*Example 1:*\n\n```sqf\n[player, [\"B_T_Recon_TL_F\"]] call BIS_fnc_setRespawnInventory;\n```","BIS Functions\\BIS_fnc_setServerVariable.md":"Set variable stored only on server. Clients can the download it using `BIS_fnc_getServerVariable`. Used when you want to share variables only to specific clients to prevent large traffic.\n\n\n---\n*Syntaxes:*\n\n[namespace, varName, value] call `BIS_fnc_setServerVariable`\n\n---\n*Example 1:*\n\n```sqf\n[nil, \"playerHealth\", damage player] call BIS_fnc_setServerVariable;\n```\n\n*Example 2:*\n\n```sqf\n[player, \"playerHealth\", damage player] call BIS_fnc_setServerVariable;\n```","BIS Functions\\BIS_fnc_setTask.md":"Set task parameters.\n<br>Create the task when it doesn't exist.\n\n\n---\n*Syntaxes:*\n\n[taskId, target, description, (destination, state, priority, showNotification, isGlobal, type, visibleIn3D)] call `BIS_fnc_setTask`\n\n---\n*Example 1:*\n\n```sqf\n[\"Task_01\", true, [\"Protect the respawn point.\",\"Respawn Point West\",\"respawn_west\"], [MHQ,false], \"ASSIGNED\", 5, true, true, \"Defend\", true] call BIS_fnc_setTask;\n```","BIS Functions\\BIS_fnc_setTaskLocal.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_setToPairs.md":"Works similar to the `BIS_fnc_addToPairs` but it doesn't try to add values. It just overwrites the volue if the key already exists.\n\n\n---\n*Syntaxes:*\n\n[array, key, newValue] call `BIS_fnc_setToPairs`\n\n---\n*Example 1:*\n\n```sqf\n`[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_setToPairs; // Returns [[\"apple\",3],[\"pear\",10`\n```","BIS Functions\\BIS_fnc_setUnitInsignia.md":"Sets unit insignia (e.g., shoulder insignia on soldiers). See `Arma 3: Unit Insignia` for more details and a list of official insignias.\n\n\n---\n*Syntaxes:*\n\n[target, className] call `BIS_fnc_setUnitInsignia`\n\n---\n*Example 1:*\n\nPlace insignia:\n\n```sqf\n[player, \"111thID\"] call BIS_fnc_setUnitInsignia;\n```\n\n*Example 2:*\n\nRemove insignia:\n\n```sqf\n[player, \"\"] call BIS_fnc_setUnitInsignia;\n```","BIS Functions\\BIS_fnc_setVehicleMass.md":"Set mass relative to the default vehicle mass (default mass being vehicle mass on first execution of this function).\n\n\n---\n*Syntaxes:*\n\n[vehicle, animationInformation, massDifference] call `BIS_fnc_setVehicleMass`\n\n---\n*Example 1:*\n\n```sqf\n// default behaviour, change the mass according to the current phase of the animation sources\nresult = [this]\t\t\tcall BIS_fnc_setVehicleMass;\nresult = [this, [], 0]\tcall BIS_fnc_setVehicleMass;\n```\n\n*Example 2:*\n\n```sqf\n// doesn't care about the current phase of animations, it will change the mass for the given sources\nresult = [this, [\"source1\", 1, \"source2\", 0]] call BIS_fnc_initVehicle;\n```\n\n*Example 3:*\n\n```sqf\n// will do the same as the first example, then subtract 150 to the mass\nresult = [this, [], -150] call BIS_fnc_initVehicle;\n```","BIS Functions\\BIS_fnc_shakeCuratorCamera.md":"Shake curator camera.\n\n\n---\n*Syntaxes:*\n\n[strength,duration,area] spawn `BIS_fnc_shakeCuratorCamera`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn BIS_fnc_shakeCuratorCamera;\n```\n\n*Example 2:*\n\n```sqf\n[ 0.1, 5, [BIS_explosion_center,500] ] spawn BIS_fnc_shakeCuratorCamera;\n```","BIS Functions\\BIS_fnc_shakeGauges.md":"<pre>/*\n\n\tDescription:\n\tShake analogue gauges\n\n\tParameter(s):\n\t_this select 0 (Optional): NUMBER - shake limit (max distance gauges can move on screen from original position)\n\t_this select 1 (Optional): NUMBER - number of repeats\n\t_this select 2 (Optional): NUMBER - delay between every position change\n\t_this select 3 (Optional): ARRAY - list of IDCs\n\n\tReturns:\n\tNOTHING\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_shakeGauges` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_shakeGauges;\n``` -->","BIS Functions\\BIS_fnc_shakeMap.md":"\"Camera shake\" function for the map. Shakes the map for a given amount of time with a given amount of force around the given camera center. Exits if map is not open.\n\n\n---\n*Syntaxes:*\n\n[duration, magnitude, center] call `BIS_fnc_shakeMap`\n\n---\n*Example 1:*\n\n```sqf\n[2,20,getMarkerPos \"BIS_markerExtraction0\"] call BIS_fnc_shakeMap;\n```\n\n*Example 2:*\n\n```sqf\n[2,20,getPos player] call BIS_fnc_shakeMap;\n```","BIS Functions\\BIS_fnc_shakeMapEH.md":"<pre>/*\n\tAuthor: Riccardo Argiolas\n\n\tDescription:\n\t\tEvent handler function for the shakeMap.sqf function\n\n\tParameters:\n\tSelect 0 - NUMBER: duration of shake effect.\n\tSelect 1 - NUMBER: magnitude of the shaking force.\n\tSelect 2 - ARRAY: position of the camera center around which the shake effect occurs.\n\tSelect 3 - NUMBER: starting shake time (i.e. time elapsed since mission started till the start of the shake animation).\n\n\tReturns: None\n\n\tExamples:\n\n\t\tprivate _shakeEventCode = format [\"[%1, %2, %3, %4] call BIS_fnc_drawMapShake\", _shakeDuration, _shakeMagnitude, _shakeCenter, time];\n\t\tBIS_shakeEventHandler = _map ctrladdeventhandler [\"draw\",_shakeEventCode];\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_shakeMapEH`\n\n---\n","BIS Functions\\BIS_fnc_sharedObjectives.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_showAANArticle.md":"Show an AAN article.\n\n\n---\n*Syntaxes:*\n\n[arrayOfArrays, display, fade] call `BIS_fnc_showAANArticle`\n\n---\n*Example 1:*\n\n```sqf\n[ \n\t[ \n\t\t[\"title\",\"My Title\"], \n\t\t[\"meta\",[\"Katherine Bishop\",[2035,2,24,11,38],\"CET\"]], \n\t\t[\"textbold\",\"This is a bold text\"], \n\t\t[\"image\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\orange_overview_ca.paa\",\"Some image description\"]], \n\t\t[\"box\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\Faction_IDAP_overview_CA.paa\",\"You won't believe how playing Showcase Laws of War can change your life!\"]], \n\t\t[\"text\",\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tincidunt pretium ultricies. Etiam ac ornare est, quis posuere nisl. Mauris facilisis lectus eu turpis maximus consequat. Donec ut metus nec risus tristique mattis. Ut posuere rutrum tellus, ut molestie orci mattis id. Cras ultrices euismod diam, in venenatis nunc commodo eget. Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi congue dolor rutrum lectus euismod, ac faucibus magna molestie. Aliquam in libero sit amet eros sagittis tristique. Nam pellentesque dignissim aliquam.\"], \n\t\t[\"textlocked\",[\"Sed non est risus. Nulla condimentum at leo sed bibendum. Phasellus laoreet sit amet leo tincidunt consequat. Curabitur nec hendrerit purus. Nam massa nisi, mattis in aliquet consectetur, ornare eget nibh. Nunc dignissim, nibh sit amet ultrices tincidunt, mi nulla fermentum quam, non condimentum dolor eros vulputate massa.\",\"SUBSCRIBE PLZ\"]], \n\t\t[\"author\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\avatar_journalist_ca.paa\",\"Katherine Bishop is a journalist\"]] \n\t]\n] call BIS_fnc_showAANArticle;\n```","BIS Functions\\BIS_fnc_showCuratorAttributes.md":"Show attributes window of an entity. When no attributes are available, no window is opened.\n\n\n---\n*Syntaxes:*\n\n[target] call `BIS_fnc_showCuratorAttributes`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_vehicle] call BIS_fnc_showCuratorAttributes;\n```","BIS Functions\\BIS_fnc_showCuratorFeedbackMessage.md":"Show feedback message when illegal operation is attempted in curator interface.<br>\n\n\n---\n*Syntaxes:*\n\n[curator, messageInfo] call `BIS_fnc_showCuratorFeedbackMessage`\n\n---\n*Example 1:*\n\n```sqf\n[objNull, 404] call BIS_fnc_showCuratorFeedbackMessage;\n```\n\n*Example 2:*\n\n```sqf\n[objNull, \"You can't do that!\"] call BIS_fnc_showCuratorFeedbackMessage]];\n```","BIS Functions\\BIS_fnc_showMarker.md":"Gradual revealing of a marker by setting its alpha to its original alpha or to a user-specified alpha.\n\n\n---\n*Syntaxes:*\n\n[marker, duration, finalAlpha] spawn `BIS_fnc_showMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",2] spawn BIS_fnc_showMarker;\n```","BIS Functions\\BIS_fnc_showMarkerArray.md":"Unhide the markers sequentially.\n\n\n---\n*Syntaxes:*\n\n[marker, duration, hideAfter] spawn `BIS_fnc_showMarkerArray`\n\n---\n*Example 1:*\n\n```sqf\n[[\"marker_1\",\"marker_2\",\"marker_n\"], 3, false] spawn BIS_fnc_showMarkers;\n```","BIS Functions\\BIS_fnc_showMarkers.md":"Show or hide given markers using fade effect.\n\n\n---\n*Syntaxes:*\n\n[action, markers] call `BIS_fnc_showMarkers`\n\n---\n*Example 1:*\n\n```sqf\n[\"hide\", [\"respawn_west\", \"respawn_east\"]] call BIS_fnc_showMarkers;\n```","BIS Functions\\BIS_fnc_showMissionStatus.md":"Show mission status with sectors, respawn tickets, etc.\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_showMissionStatus`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_showMissionStatus;\n```","BIS Functions\\BIS_fnc_showNotification.md":"Show a config-defined `Arma 3: Notification|notification`.\n\n\n---\n*Syntaxes:*\n\n[template, arguments] call `BIS_fnc_showNotification`\n\n---\n*Example 1:*\n\n```sqf\n[\"TaskSucceeded\", [\"\", \"Disable the nuke\"]] call BIS_fnc_showNotification;\n```\n\n*Example 2:*\n\n```sqf\n[\"ScoreAdded\", [\"Disabled the nuke without triggering an alarm.\", 5]] call BIS_fnc_showNotification;\n```","BIS Functions\\BIS_fnc_showRespawnMenu.md":"Triggers the respawn screen in the given mode\n\n\n---\n*Syntaxes:*\n\n<!-- [mode] call `BIS_fnc_showRespawnMenu`; -->\n\n---\n*Example 1:*\n\n```sqf\n[\"open\"] call BIS_fnc_showRespawnMenu; // spawn does work as well\n```","BIS Functions\\BIS_fnc_showRespawnMenuDisableItem.md":"Disables respawn loadout, role or position for `Arma 3: Respawn`.\n* Only role or only loadout can be limited at one moment, if there is limit for both, then only role uses limit.\n* If the limit definition for role is called multiple times with different numbers, then the highest number is used. \n* If disabling a position then respawnReference must be supplied\n\n\n---\n*Syntaxes:*\n\n[mode, uiControl, listboxItem, message, respawnReference] call `BIS_fnc_showRespawnMenuDisableItem`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t\"disable\",\n\tuiNamespace getVariable \"BIS_RscRespawnControlsMap_ctrlLocList\",\n\t2,\n\t\"Restricted for this part of mission!\",\n\tmyRespawnModule call BIS_fnc_objectVar\n] call BIS_fnc_showRespawnMenuDisableItem;\n```","BIS Functions\\BIS_fnc_showRespawnMenuDisableItemCheck.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuDisableItemCheck` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuDisableItemCheck;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuDisableItemDraw.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuDisableItemDraw` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuDisableItemDraw;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuHeader.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuHeader` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuHeader;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventory.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventory` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventory;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryDetails.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryDetails` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryDetails;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryItems.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryItems` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryItems;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryLimit.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryLimit` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryLimit;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryLimitRefresh.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryLimitRefresh` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryLimitRefresh;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryLimitRespawn.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryLimitRespawn` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryLimitRespawn;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryList.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryList` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryList;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryLoadout.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryLoadout` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryLoadout;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuInventoryMetadata.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuInventoryMetadata` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuInventoryMetadata;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuPosition.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuPosition` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuPosition;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuPositionList.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuPositionList` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuPositionList;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuPositionMap.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuPositionMap` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuPositionMap;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuPositionMapDraw.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_showRespawnMenuPositionMapHandle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuPositionMapHandle` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuPositionMapHandle;\n``` -->","BIS Functions\\BIS_fnc_showRespawnMenuPositionMetadata.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_showRespawnMenuPositionName.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_showRespawnMenuPositionRefresh.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_showRespawnMenuPositionRefresh` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_showRespawnMenuPositionRefresh;\n``` -->","BIS Functions\\BIS_fnc_showSubtitle.md":"Displays a subtitle at the bottom of the screen.\n\n\n---\n*Syntaxes:*\n\n[name, subtitle] spawn `BIS_fnc_showSubtitle`\n\n---\n*Example 1:*\n\n```sqf\n[\"CROSSROAD\", \"Mission is a go, I repeat, mission is a go, Crossroad, out.\"] spawn BIS_fnc_showSubtitle;\n```","BIS Functions\\BIS_fnc_showTime.md":"Shows time gap between two dates.\n\n\n---\n*Syntaxes:*\n\n[startDate, endDate] call `BIS_fnc_showTime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _dayStart = date;\n_dayStart set [3, 0]; // set hours to 0\n_dayStart set [4, 0]; // set minutes to 0\n_now = date;\n[_dayStart, _now] call BIS_fnc_showTime;\n```","BIS Functions\\BIS_fnc_showUnitInfo.md":"Hides or shows `weapon` information. Also hides `grenades` information.\n\n\n---\n*Syntaxes:*\n\n[showUnitInfo] call `BIS_fnc_showUnitInfo`\n\n---\n*Example 1:*\n\n```sqf\nfalse call BIS_fnc_showUnitInfo; // hides weapon information\n```","BIS Functions\\BIS_fnc_showWelcomeScreen.md":"Show welcome screen. Used in the main menu (works fine in `Eden Editor`).<br>\n<br>\n\n\n---\n*Syntaxes:*\n\n[display, forceLatest] call `BIS_fnc_showWelcomeScreen`\n\n---\n*Example 1:*\n\n```sqf\n[findDisplay 313, true] call BIS_fnc_showWelcomeScreen;\n```","BIS Functions\\BIS_fnc_shutdown.md":"Shut downs the game.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_shutdown`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_shutdown;\n```","BIS Functions\\BIS_fnc_sideColor.md":"Returns colour of define side either as `Array` in format RGBA or the name of the colour as `String`\n\n\n---\n*Syntaxes:*\n\n[side, returnString] call `BIS_fnc_sideColor`\n\n---\n*Example 1:*\n\n```sqf\n[blufor, false] call BIS_fnc_sideColor; // returns [0,0.3,0.6,1]\n```\n\n*Example 2:*\n\n```sqf\n[blufor,  true] call BIS_fnc_sideColor; // returns \"ColorWEST\"\n```","BIS Functions\\BIS_fnc_sideID.md":"Return config side number.\n* 0 {{=}} `opfor` (`east`)\n* 1 {{=}} `blufor` (`west`)\n* 2 {{=}} `independent` (`resistance`)\n* 3 {{=}} `civilian`\n* 4 {{=}} `sideUnknown`\n* 5 {{=}} `sideEnemy`\n* 6 {{=}} `sideFriendly`\n* 7 {{=}} `sideLogic`\n* 8 {{=}} `sideEmpty`\n* 9 {{=}} `sideAmbientLife`\n\n\n---\n*Syntaxes:*\n\ntestedSide call `BIS_fnc_sideID`\n\n---\n*Example 1:*\n\n```sqf\nwest call BIS_fnc_sideID; // returns 1\n```\n\n*Example 2:*\n\n```sqf\nhint format [\"Your side (%1) ID is %2\", playerSide, playerSide call BIS_fnc_sideID];\n```","BIS Functions\\BIS_fnc_sideIsEnemy.md":"Determines if side B is enemy to side A the way the game engine does it. The relationship table can be found here:  `Side relations`.\n\n\n---\n*Syntaxes:*\n\n[sideA, sideB] call `BIS_fnc_sideIsEnemy`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isEnemy = [west, east] call BIS_fnc_sideIsEnemy; //Checks if EAST is enemy to WEST.\n```","BIS Functions\\BIS_fnc_sideIsFriendly.md":"Determines if side B is friendly to side A the way the game engine does it. The relationship table can be found here:  `Side relations`.\n\n\n---\n*Syntaxes:*\n\n[sideA, sideB] call `BIS_fnc_sideIsFriendly`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isFriendly = [west, east] call BIS_fnc_sideIsFriendly; //Checks if EAST is friendly to WEST.\n```","BIS Functions\\BIS_fnc_sideName.md":"Returns localized side name.\n{{Columns|2|\n* 0 / `opfor` (`east`) {{=}} \"OPFOR\"\n* 1 / `blufor` (`west`) {{=}} \"BLUFOR\"\n* 2 / `independent` (`resistance`) {{=}} \"Independent\"\n* 3 / `civilian` {{=}} \"Civilian\"\n* 4 / `sideUnknown` {{=}} \"Unknown\"\n* 5 / `sideEnemy` {{=}} \"Enemy\"\n* 6 / `sideFriendly` {{=}} \"Friendly\"\n* 7 / `sideLogic` {{=}} \"Game Logic\"\n* 8 / `sideEmpty` {{=}} \"Empty\"\n* 9 / `sideAmbientLife` {{=}} \"Ambient life\"\n}}\n\n\n---\n*Syntaxes:*\n\n[input] call `BIS_fnc_sideName`\n\n---\n*Example 1:*\n\n```sqf\n[2] call BIS_fnc_sideName;\n```\n\n*Example 2:*\n\n```sqf\n[independent] call BIS_fnc_sideName;\n```","BIS Functions\\BIS_fnc_sideNameUnlocalized.md":"Returns unlocalized side name.\n\n\n---\n*Syntaxes:*\n\ninput call `BIS_fnc_sideNameUnlocalized`\n\n---\n*Example 1:*\n\n```sqf\nwest call BIS_fnc_sideNameUnlocalized;//Returns \"WEST\"\n```\n\n*Example 2:*\n\n```sqf\n0 call BIS_fnc_sideNameUnlocalized;//Returns \"EAST\"\n```","BIS Functions\\BIS_fnc_sideType.md":"Returns side type based on side ID. See `BIS_fnc_sideID` for more information.\n\n\n---\n*Syntaxes:*\n\nsideID call `BIS_fnc_sideType`\n\n---\n*Example 1:*\n\n```sqf\n0 call BIS_fnc_sideType; // returns EAST\n```","BIS Functions\\BIS_fnc_simpleMoveMarker.md":"Moves marker to a new position. Simple version of `BIS_fnc_moveMarker`.\n\n\n---\n*Syntaxes:*\n\n[marker, newPosition, duration] call `BIS_fnc_simpleMoveMarker`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_marker\",[1111,2222,0]] call BIS_fnc_moveMarker;\n```\n\n*Example 2:*\n\n```sqf\n[\"BIS_marker\",(getMarkerPos \"BIS_marker2\"),2] call BIS_fnc_simpleMoveMarker;\n```","BIS Functions\\BIS_fnc_simpleObjectData.md":"Get complete data needed for simple object creation.\n\n\n---\n*Syntaxes:*\n\n[classname] call `BIS_fnc_simpleObjectData`\n\n---\n*Example 1:*\n\n```sqf\n[\"B_Boat_Armed_01_minigun_F\"] call BIS_fnc_simpleObjectData;\n```\n\n*Example 2:*\n\n```sqf\n[BIS_boat] call BIS_fnc_simpleObjectData;\n```","BIS Functions\\BIS_fnc_singleMissionConfig.md":"Returns config of current single mission.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_singleMissionConfig`\n\n---\n*Example 1:*\n\n```sqf\nprivate _config = call BIS_fnc_singleMissionConfig;\n```","BIS Functions\\BIS_fnc_singleMissionKeys.md":"Activate mission related keys.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_singleMissionKeys`\n\n---\n*Example 1:*\n\n```sqf\nprivate _activatedKeys = call BIS_fnc_singleMissionKeys;\n```","BIS Functions\\BIS_fnc_singleMissionName.md":"Returns name of currently selected single mission.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_singleMissionName`\n\n---\n*Example 1:*\n\n```sqf\nprivate _missionName = call BIS_fnc_singleMissionName;\n```","BIS Functions\\BIS_fnc_singleWingSlideDoorClose.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_singleWingSlideDoorClose`\n\n---\n","BIS Functions\\BIS_fnc_singleWingSlideDoorOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_singleWingSlideDoorOpen`\n\n---\n","BIS Functions\\BIS_fnc_skirmishTrigger.md":"An internally used .fsm.\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_skirmishTrigger` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_skirmishTrigger;\n``` -->","BIS Functions\\BIS_fnc_slerp.md":"Spherical lerp, for correct lerping of normalized direction vectors\n\n\n---\n*Syntaxes:*\n\n[currentValue, targetValue, alpha] call `BIS_fnc_slerp`\n\n---\n","BIS Functions\\BIS_fnc_smoothStep.md":"Interpolates between 0 and 1 with smoothing at the limits. Formula is **n<sup>2</sup> &times; (3 - 2n)**.\n\n\n---\n*Syntaxes:*\n\nnumber call `BIS_fnc_smoothStep`\n\n---\n*Example 1:*\n\n```sqf\nprivate _smoothedStep = 0.75 call BIS_fnc_smoothStep;\n```\n\n*Example 2:*\n\n```sqf\n[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0] apply { _x call BIS_fnc_smoothStep; };\n// returns [0, 0.028, 0.104, 0.216, 0.352, 0.5, 0.648, 0.784, 0.896, 0.972, 1]\n```","BIS Functions\\BIS_fnc_sortAlphabetically.md":"Alphabetically sort an array of strings without modifying the original. See also `sort`.\n\n\n---\n*Syntaxes:*\n\narrayOfStrings call `BIS_fnc_sortAlphabetically`\n\n---\n*Example 1:*\n\n```sqf\nprivate _sortedNames = [\"John\", \"Jane\", \"Julia\", \"Geronimo\"] call BIS_fnc_sortAlphabetically; // will return [\"Geronimo\", \"Jane\", \"John\", \"Julia\"]\n```","BIS Functions\\BIS_fnc_sortBy.md":"Sorts an array according to given algorithm. See `sort` for simple sorts.\n\n\n---\n*Syntaxes:*\n\n[array, parameters, algorithm, direction, filter] call `BIS_fnc_sortBy`\n\n---\n*Example 1:*\n\n```sqf\n// sort numbers from lowest to highest\n_sortedNumbers = [[1,-80,0,480,15,-40], [], {_x}, \"ASCEND\"] call BIS_fnc_sortBy;\n```\n\n*Example 2:*\n\n```sqf\n// sort helicopters by distance from player\n_closestHelicopters = [[_heli1,_heli2,_heli3], [], { player distance _x }, \"ASCEND\"] call BIS_fnc_sortBy;\n```\n\n*Example 3:*\n\n```sqf\n// sort enemy by distance from friendly unit (referenced by local variable), the furthest first\n_furtherstEnemy = [[_enemy1,_enemy2,_enemy3], [_friendly], { _input0 distance _x }, \"DESCEND\", { canMove _x }] call BIS_fnc_sortBy;\n```","BIS Functions\\BIS_fnc_sortNum.md":"Sorts an array of numbers from lowest (left) to highest (right). The passed array is modified by reference.\nThis function uses the quick sort algorithm.\n\n\n---\n*Syntaxes:*\n\narray call `BIS_fnc_sortNum`\n\n---\n*Example 1:*\n\n```sqf\n[5,9,987,6,97,8,6] call BIS_fnc_sortNum; // returns [5,6,6,8,9,97,987]\n```","BIS Functions\\BIS_fnc_spawn.md":"Execute given code with or without parameter.\n\n\n---\n*Syntaxes:*\n\n[params, code] spawn `BIS_fnc_spawn`\n\ncode spawn `BIS_fnc_spawn`\n\n---\n*Example 1:*\n\nShow a message for the current player:\n\n```sqf\n[[\"Hello\"],  { hint (_this select 0) }] spawn BIS_fnc_spawn;\n```\n\n*Example 2:*\n\nShow a message to all connected players:\n\n```sqf\n[[[\"Hello\"], { hint (_this select 0) }], \"BIS_fnc_spawn\", true, false, false] call BIS_fnc_MP; // obsolete, use remoteExec\n\n[\"Hello\", { hint (_this select 0) }] remoteExec [\"BIS_fnc_spawn\"];\t// since the introduction of remoteExec\n[\"Hello\", { hint (_this select 0) }] remoteExec [\"spawn\"];\t\t\t// BIS_fnc_spawn is obsolete\n[\"Hello\"] remoteExec [\"hint\"];\t\t\t\t\t\t\t\t\t\t// best solution here\n```\n\n*Example 3:*\n\n```sqf\n{ hint \"Hello\" } spawn BIS_fnc_spawn;\n```","BIS Functions\\BIS_fnc_spawnCrew.md":"Function to fill all crew positions in a vehicle, including turrets.\n\tIn dummy mode no objects are created and the returned array contains only ones.\n\tIn this mode the function can be used to count the actual crew of an existing vehicle or vehicle type.\n\n\n---\n*Syntaxes:*\n\n[vehicle,group,dummyMode,dummyType,crewType]] call `BIS_fnc_spawnCrew`\n\n---\n*Example 1:*\n\n```sqf\n[ BIS_vehicle, group player ] call BIS_fnc_spawnCrew;\n```","BIS Functions\\BIS_fnc_spawnEnemy.md":"Constantly spawns enemies around a player according to array of enemy classes. The units will try to hunt down the player.\n\n\n---\n*Syntaxes:*\n\n[aPlayer, target, side, classes, maxEnemies, delay, code] spawn `BIS_fnc_spawnEnemy`\n\n---\n*Example 1:*\n\n```sqf\n[player, player, opfor, [\"O_Soldier_F\"]] spawn BIS_fnc_spawnEnemy;\n```","BIS Functions\\BIS_fnc_spawnGroup.md":"Function which handles the spawning of a dynamic group of characters.  The composition of the `group` can be passed to the function.  Alternatively a number can be passed and the function will spawn that amount of characters with a random type.\n\n\n---\n*Syntaxes:*\n\n[position, side, toSpawn, relPositions, ranks, skillRange, ammoRange, randomControls, azimuth, precisePos, maxVehicles] call `BIS_fnc_spawnGroup`\n\n---\n*Example 1:*\n\nSpawn five random EAST units at aPosition:\n\n```sqf\n[getPosATL aPosition, east, 5] call BIS_fnc_spawnGroup;\n```\n\n*Example 2:*\n\nSpawn a Stryker MGS Platoon at marker \"tankSpawn\":\n\n```sqf\n[getMarkerPos \"tankSpawn\", side player, (configFile >> \"CfgGroups\" >> \"West\" >> \"BIS_US\" >> \"Armored\" >> \"US_MGSPlatoon\")] call BIS_fnc_spawnGroup;\n```\n\n*Example 3:*\n\nSpawn a TK Militia Medic and Soldier at aPos facing south:\n\n```sqf\n[getPos aPos, east, [\"TK_INS_Bonesetter_EP1\", \"TK_INS_Soldier_2_EP1\"],[],[],[],[],[],180] call BIS_fnc_spawnGroup;\n```","BIS Functions\\BIS_fnc_spawnObjects.md":"Create a stack of objects at given position or on top of given object (eg. table).\n\n\n---\n*Syntaxes:*\n\n[position, className, count, offsetMatrix, offsetDir, dirNoise, enableSimulation] call `BIS_fnc_spawnObjects`\n\n---\n*Example 1:*\n\n```sqf\nprivate _randomPos = [(random 0.2) -0.1, (random 0.2) -0.1, 0];\n_objects = [[_table, \"TOP\"], \"Box_NATO_Wps_F\", 3, _randomPos,(random 20)-10] call BIS_fnc_spawnObjects;\n```","BIS Functions\\BIS_fnc_spawnOrdered.md":"Spawns given function and executes it in the order it was called in case multiple calls are made. If mutex name is not specified, function name is used.\n\n\n---\n*Syntaxes:*\n\n[params, functionName, mutexName] call `BIS_fnc_spawnOrdered`\n\n---\n*Example 1:*\n\n```sqf\nmyFnc = { diag_log [_this, canSuspend] };\nfor \"_i\" from 0 to 1000 do { [_i, \"myFnc\"] call BIS_fnc_spawnOrdered };\n```","BIS Functions\\BIS_fnc_spawnVehicle.md":"Function to spawn a certain vehicle type with all crew (including turrets). The vehicle can either become part of an existing `group` or create a new `group`.\n\n\n---\n*Syntaxes:*\n\n[position, direction, type, sideOrGroup] call `BIS_fnc_spawnVehicle`\n\n---\n*Example 1:*\n\n```sqf\n[getPos player, 180, \"BMP3\", east] call BIS_fnc_spawnVehicle;\n```\n\n*Example 2:*\n\n```sqf\nprivate _result = [getPos player, 180, \"BMP3\", east] call BIS_fnc_spawnVehicle;\n\nprivate _vehicle = _result select 0;\n_result params [\"_vehicle\", \"_crew\", \"_group\"];\n```","BIS Functions\\BIS_fnc_splitString.md":"Splits given string according to given separator(s).\n\n\n---\n*Syntaxes:*\n\n[stringToSplit, separators, byWord] call `BIS_fnc_splitString`\n\n---\n*Example 1:*\n\n```sqf\n[\"this is a test\", \" \"] call BIS_fnc_splitString; // returns [\"this\", \"is\", \"a\", \"test\"]\n```\n\n*Example 2:*\n\n```sqf\n[\"this is a test\", \"st\"] call BIS_fnc_splitString; // returns [\"hi\",\" i\",\" a \",\"e\"]\n```\n\n*Example 3:*\n\n```sqf\n[\"this is a test\", \"is\"] call BIS_fnc_splitString; // returns [\"th\",\" \",\" a te\",\"t\"]\n```\n\n*Example 4:*\n\n```sqf\n[\"this is a test\", \"is\", true] call BIS_fnc_splitString; // returns [\"th\",\" \",\" a test\"]\n```","BIS Functions\\BIS_fnc_spotter.md":"Make spotter report target distance to sniper. Will only stop if one of the two units dies.\n\n\n---\n*Syntaxes:*\n\n[sniper, spotter] call `BIS_fnc_spotter`\n\n---\n*Example 1:*\n\n```sqf\n[player, unitSpotter] call BIS_fnc_spotter;\n```","BIS Functions\\BIS_fnc_stalk.md":"Continuously set WP of one group to a different group to hunt it. It does not change the group's behaviour.<br>\nScript terminates if one of the groups is eliminated or if the optional condition is activated.\n\n\n---\n*Syntaxes:*\n\n[stalker, stalked, refresh, radius, endCondition, endDestination] spawn `BIS_fnc_stalk`\n\n---\n*Example 1:*\n\n```sqf\nprivate _stalking = [BIS_grpStalkers, BIS_grpPlayer] spawn BIS_fnc_stalk;\n```\n\n*Example 2:*\n\n```sqf\nprivate _stalking = [grp1, group player, nil, nil, { player distance BIS_Heli < 100 }, \"BIS_mrkRetreatMarker\"] spawn BIS_fnc_stalk;\n```\n\n*Example 3:*\n\n```sqf\nprivate _stalking = [BIS_grpStalkers, BIS_grpPlayer, 20, 10, { BIS_Return }, 1] spawn BIS_fnc_stalk;\n```\n\n*Example 4:*\n\n```sqf\nprivate _stalking = [BIS_grpStalkers, BIS_grpPlayer, 5, 0, { dayTime > 20 }, [3600,600,0]] spawn BIS_fnc_stalk;\n```","BIS Functions\\BIS_fnc_startLoadingScreen.md":"Register a loading screen. Start the loading when it is the first one registered.\n\n\n---\n*Syntaxes:*\n\n[screenId, layout] call `BIS_fnc_startLoadingScreen`\n\n---\n*Example 1:*\n\n```sqf\n[\"myLoadingScreen\", \"Loading… wait for my splendid™ mission!\"] call BIS_fnc_startLoadingScreen;\nuiSleep 3;\n\"myLoadingScreen\" call BIS_fnc_endLoadingScreen;\n```","BIS Functions\\BIS_fnc_storeParamsValues.md":"Parses mission params and stores them into public variable `\"BIS_fnc_storeParamsValues_data\"`. Use `BIS_fnc_getParamValue` to retrieve params values from the variable.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_storeParamsValues`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_storeParamsValues;\n```","BIS Functions\\BIS_fnc_strategicMapAnimate.md":"Animates a Strategic Map.\n\n\n---\n*Syntaxes:*\n\n[target,time] spawn `BIS_fnc_strategicMapAnimate`\n\n---\n*Example 1:*\n\n```sqf\n[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", 5] spawn BIS_fnc_strategicMapAnimate;\n```","BIS Functions\\BIS_fnc_strategicMapMouseButtonClick.md":"Internal function used by `BIS_fnc_strategicMapOpen`.\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_strategicMapOpen.md":"Creates a strategic map.\n\n\n---\n*Syntaxes:*\n\n[display, pos, missions, ORBATs, markers, images, weather, night, scale, simulation, label, missionName, missionIcon] call `BIS_fnc_strategicMapOpen`\n\n---\n*Example 1:*\n\n```sqf\n[\n\tfindDisplay 46,\n\t[2000,2000,0],\n\t[\n\t\t[\n\t\t\t[2000,2000,0],\n\t\t\t{systemChat format [\"%1\",name ((_this # 9) # 0)]},\n\t\t\t\"1st Mission\",\n\t\t\t\"This is mission one\",\n\t\t\t\"Name of mission's player\",\n\t\t\t\"\\A3\\Data_F_Exp\\Logos\\arma3_exp_icon_ca.paa\",\n\t\t\t1.5,\n\t\t\t[ player ]\n\t\t],\n\t\t[\n\t\t\t[1000,1000,0],\n\t\t\t{systemChat format [\"%1\",name ((_this # 9) # 0)]},\n\t\t\t\"2nd Mission\",\n\t\t\t\"This is mission two\",\n\t\t\t\"Name of mission's player\",\n\t\t\t\"\\A3\\Data_F_Argo\\Logos\\arma3_argo_logoTitle_ca.paa\",\n\t\t\t1.5,\n\t\t\t[ player ]\n\t\t]\n\t],\n\t[\n\t\t[\n\t\t\t[3000,3000,0],\n\t\t\tconfigFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\",\n\t\t\tconfigFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1\",\n\t\t\t[],\n\t\t\t10\n\t\t]\n\t],\n\t[\n\t\t\"marker_1\",\n\t\t\"marker_2\"\n\t],\n\t[\n\t\t[\n\t\t\t\"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\",\n\t\t\t[0,0,0,1],\n\t\t\t[4000,4000,0],\n\t\t\t8,\n\t\t\t8,\n\t\t\t0,\n\t\t\t\"Arma 3 Logo\",\n\t\t\ttrue\n\t\t]\n\t],\n\t0,\n\tfalse,\n\t1,\n\ttrue,\n\t\"Strategic Map Example\",\n\tfalse,\n\t\"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\"\n] call BIS_fnc_strategicMapOpen;\n```","BIS Functions\\BIS_fnc_stringToMarker.md":"Converts serialized data from `BIS_fnc_markerToString` into a global map marker\n\n\n---\n*Syntaxes:*\n\ndata call `BIS_fnc_stringToMarker`\n\n---\n*Example 1:*\n\n```sqf\n\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\" call BIS_fnc_stringToMarker;\n```","BIS Functions\\BIS_fnc_stringToMarkerLocal.md":"Converts serialized data from `BIS_fnc_markerToString` into a `local` map marker\n\n\n---\n*Syntaxes:*\n\ndata call `BIS_fnc_stringToMarkerLocal`\n\n---\n*Example 1:*\n\n```sqf\n\"|marker_0|[3799.0110,2781.9880,0.0000]|mil_pickup|ICON|[1,1]|0|Solid|Default|1|You are here\" call BIS_fnc_stringToMarkerLocal;\n```","BIS Functions\\BIS_fnc_subClasses.md":"`Same function as `BIS_fnc_returnChildren``\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_subClasses` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_subClasses;\n``` -->","BIS Functions\\BIS_fnc_subSelect.md":"Returns a sub-selection of the passed array.\n\n\n---\n*Syntaxes:*\n\n[array, start, endOrLength] call `BIS_fnc_subSelect`\n\n---\n*Example 1:*\n\n```sqf\nprivate _array = [\"a\", \"b\", true, 3, 8];\n[_array, 2] call BIS_fnc_subSelect;\t\t\t// returns [true,3,8]\n```\n\n*Example 2:*\n\n```sqf\n[_array, -2] call BIS_fnc_subSelect;\t\t\t// returns [3,8]\n```\n\n*Example 3:*\n\n```sqf\n[_array, 1, 3] call BIS_fnc_subSelect;\t\t\t// returns [\"b\",true,3]\n```\n\n*Example 4:*\n\n```sqf\n[_array, 1, -2] call BIS_fnc_subSelect;\t\t// returns [\"b\",true]\n```","BIS Functions\\BIS_fnc_sunriseSunsetTime.md":"Calculate sunrise and sunset time.\n\n\n---\n*Syntaxes:*\n\ndate call `BIS_fnc_sunriseSunsetTime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _sunriseSunsetTime = date call BIS_fnc_sunriseSunsetTime; // get sunrise/sunset time for the current date\n```","BIS Functions\\BIS_fnc_supplydrop.md":"Script for para-drop of objects. Spawns waitUntil that handles ground hit (detaching of object from parachute). Used by supplydrop service.\n\n\n---\n*Syntaxes:*\n\n[airUnit,class] spawn `BIS_fnc_supplydrop`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_airDropVeh, \"reammobox\"] spawn BIS_fnc_supplydrop;\n```","BIS Functions\\BIS_fnc_supplydropService.md":"<pre>\n/*\n\tFile: supplydropService.sqf\n\n\tDescription:\n\tSupply drop service - controls approach and departure of transporting air vehicle and actual cargo drop. Used by Supply drop support request.\n\n\tParameter(s):\n\t1: <object> unit allowed to use the transport system\n\t2: <object> vehicle providing transport\n\t4: <array> positions to be cosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL)\n\t5: <position> (NEEDED ONLY IF PARAMETER #4 IS USED)\n\n\tReturns:\n\tN/A\n*/\n\n//MP framework init (used for move command given to transporter vehicle)\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_supplydropService` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_supplydropService;\n``` -->","BIS Functions\\BIS_fnc_swapVars.md":"Swaps the values of two variables `passed as `String``.<br>\nNothing is returned as this function modifies the variables directly.\n\n\n---\n*Syntaxes:*\n\n[variableName1, variableName2] call `BIS_fnc_swapVars`\n\n---\n*Example 1:*\n\n```sqf\nprivate _a = 1;\n_b = 2;\n[\"_a\", \"_b\"] call BIS_fnc_swapVars;\n_a == 2; // true\n_b == 1; // true\n```","BIS Functions\\BIS_fnc_switchLamp.md":"Switch streetlamp on/off.\n\n\n---\n*Syntaxes:*\n\n[object, state] call `BIS_fnc_switchLamp`\n\n---\n*Example 1:*\n\n```sqf\n// switches all lamps off in a radius of 200m\nprivate _lampsIn200m = nearestObjects [player, [\"Lamps_base_F\", \"PowerLines_base_F\", \"PowerLines_Small_base_F\"], 200];\n{ [_x, false] call BIS_fnc_switchLamp; } forEach _lampsIn200m;\n```\n\n*Example 2:*\n\n```sqf\n// simulates a damaged street light\naLamp spawn {\n\tparams [\n\t\t[\"_lamp\", objNull, [objNull]]\n\t];\n\twhile { player distance _lamp < 200 } do\n\t{\n\t\t[_lamp, selectRandom [true, false]] call BIS_fnc_switchLamp;\n\t\tsleep 0.1 + random 0.5;\n\t};\n};\n```","BIS Functions\\BIS_fnc_synchronizedObjects.md":"Get all objects of given type directly synchronized to the given object. Works in `Eden Editor` too.\n\n\n---\n*Syntaxes:*\n\n[object,filter,preciseMatch] call `BIS_fnc_synchronizedObjects`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_synchronizedObjects;\n```","BIS Functions\\BIS_fnc_synchronizedObjectsQueue.md":"<pre>/*\n\tAuthor: Jiri Wainar\n\n\tDescription:\n\tReturn sequence of all synchronized objects forming either line or circle.\n\n\tParameter(s):\n\t\t0: OBJECT - starting object\n\t\t1: STRING or ARRAY of STRINGs (Optional) - object types that are considered\n\t\t2: BOOL (Optional) - class filter uses exact match\n\t\t\ttrue (default): objects need to match exectly one of the filter classes\n\t\t\tfalse: exact match is not required, objects can inherit from one of the listed classes\n\t\t3: NUMBER (Optional) - expected connection shape\n\t\t\t0 (default): none, can be either line or circle\n\t\t\t1: line expected\n\t\t\t2: circle expected\n\n\tReturns:\n\tARRAY of OBJECTs or empty ARRAY if error is encountered\n\n\tErrors:\n\t\t* There are more then 2 objects matching class filter connected.\n\t\t* Circle is required but closing connection is not detected.\n\n\tExample:\n\t[_start,[\"ModuleToWAreaVertex_F\",\"ModuleToWAreaOptions_F\"],true,0] call BIS_fnc_synchronizedObjectsQueue;\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_synchronizedObjectsQueue`\n\n---\n","BIS Functions\\BIS_fnc_target.md":"Handles the shooting targets in the Bootcamp DLC, statistics, animation, etc. (targets such as **TargetBootcampHuman_f**)\n\n\n---\n*Syntaxes:*\n\n[action, parameters] call `BIS_fnc_target`\n\n---\n*Example 1:*\n\n```sqf\n// open the Score Board\n[\"uiOpen\", [myTarget]] call BIS_fnc_target;\n```\n\n*Example 2:*\n\n```sqf\n// open the Score Board for all players in MP\n[\"uiOpenToAll\", [myTarget]] call BIS_fnc_target;\n```\n\n*Example 3:*\n\n```sqf\n// clear all data from Score Board\n[\"resetShootersData\", [myTarget]] call BIS_fnc_target;\n```","BIS Functions\\BIS_fnc_taskAlwaysVisible.md":"Returns `true` if task is forced to be always visible (default: `false`).\n\n\n---\n*Syntaxes:*\n\ntaskID call `BIS_fnc_taskAlwaysVisible`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isForcedVisible = \"task_1\" call BIS_fnc_taskAlwaysVisible;\n```","BIS Functions\\BIS_fnc_taskAttack.md":"This function adds a `Waypoints#Seek_.26_Destroy|Seek and Destroy` waypoint on defined position to the group and set its `behaviour` to \"AWARE\". If the group has other waypoints, the waypoint will be added at the end of the list.\n\n\n---\n*Syntaxes:*\n\n[group, position] call `BIS_fnc_taskAttack`\n\n---\n*Example 1:*\n\n```sqf\n[opforGroup, getPosATL player] call BIS_fnc_taskAttack;\n```","BIS Functions\\BIS_fnc_taskChildren.md":"Return a task's sub-tasks.\n\n\n---\n*Syntaxes:*\n\ntaskID call `BIS_fnc_taskChildren`\n\n---\n*Example 1:*\n\n```sqf\n\"task_1\" call BIS_fnc_taskChildren;\n```","BIS Functions\\BIS_fnc_taskCompleted.md":"Returns `true` if task state is either \"SUCCEEDED\", \"FAILED\" or \"CANCELED\".\n\n\n---\n*Syntaxes:*\n\ntaskID call `BIS_fnc_taskCompleted`\n\n---\n*Example 1:*\n\n```sqf\nprivate _completed = \"task_1\" call BIS_fnc_taskCompleted;\n```","BIS Functions\\BIS_fnc_taskCreate.md":"Create a task.\n\n\n---\n*Syntaxes:*\n\n[owner, taskID, description, destination, state, priority, showNotification, type, visibleIn3D] call `BIS_fnc_taskCreate`\n\n---\n*Example 1:*\n\n```sqf\n[civilian, \"task1\", [\"Do this and you get a cookie\", \"Earn Cookie\", \"cookiemarker\"], [0,0,0], \"ASSIGNED\", 2, true] call BIS_fnc_taskCreate;\n```\n\n*Example 2:*\n\n```sqf\n[west, [\"subtask\", \"task1\"], [\"Good luck finding this cookie\", \"Find Cookie\", \"cookiemarker2\"], objNull, 1, 3, true] call BIS_fnc_taskCreate; // Task without a map location\n```\n\n*Example 3:*\n\nin `Description.ext`\n```cpp\nclass CfgTaskTypes\n{\n\tclass my_CfgTaskType\n\t{\n\t\tdisplayname = \"Tank\";\n\t\ticon = \"Tank_MCO.paa\";\n\t\ticon3D = \"Tank_MCO.paa\";\n\t};\n};\n```\nSQF:\n\n```sqf\n[east, [\"taskType_\"], [\"Setting taskType\", \"The simple way\", \"marker2\"], objNull, 1, 3, true, \"my_CfgTaskType\"] call BIS_fnc_taskCreate; // Task with a custom icon\n```","BIS Functions\\BIS_fnc_taskCurrent.md":"Returns unit's current task.\n\n\n---\n*Syntaxes:*\n\nunit call `BIS_fnc_taskCurrent`\n\n---\n*Example 1:*\n\n```sqf\nprivate _currentTask = player call BIS_fnc_taskCurrent;\n```","BIS Functions\\BIS_fnc_taskDefend.md":"Group will man nearby static defenses within a 100 metre radius of the defense position and guard the position. Some units will man weapons, others will patrol and the remainder will sit on the ground.\n\n\n---\n*Syntaxes:*\n\n[group, position] call `BIS_fnc_taskDefend`\n\n---\n*Example 1:*\n\n```sqf\n[group player, getPosATL leader player] call BIS_fnc_taskDefend;\n```","BIS Functions\\BIS_fnc_taskDescription.md":"Return a task's description.\n\n\n---\n*Syntaxes:*\n\ntaskName call `BIS_fnc_taskDescription`\n\n---\n*Example 1:*\n\n```sqf\n\"BIS_task_01\" call BIS_fnc_taskDescription;\n```","BIS Functions\\BIS_fnc_taskDestination.md":"Return a task's destination.\n\n\n---\n*Syntaxes:*\n\ntaskName call `BIS_fnc_taskDestination`\n\n---\n*Example 1:*\n\n```sqf\n\"BIS_task_01\" call BIS_fnc_taskDestination;\n```","BIS Functions\\BIS_fnc_taskExists.md":"Return `true` if a task exists.\n\n\n---\n*Syntaxes:*\n\n[taskName] call `BIS_fnc_taskExists`\n\n---\n*Example 1:*\n\n```sqf\nprivate _exists = [\"MyTask\"] call BIS_fnc_taskExists;\n```","BIS Functions\\BIS_fnc_taskHandler.md":"<pre>\n/*******************************************************************************\n *\n *\tversion: \t\t1.0\n *\tname:\t\t\tTask handler\n *\tdescription:\tautomatically sets tasks as current \t\n *\tparameters:\t\t_this select 0: a unit whose tasks will be handled (Array)\n \t\t\t\t\t_this select 1: links to tasks created via MP Framwork with\n \t\t\t\t\t\t\t\t\tpriorities (loewr number means higher\n \t\t\t\t\t\t\t\t\tpriority)\n *\treturn value:\tnone \t\n * \texample:\t \t[\n \t\t\t\t\t\tBIS_cooper,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\"objShaftoe\",   \t\t1],\n\t\t\t\t\t\t\t[\"objGorka\",\t\t\t3],\n\t\t\t\t\t\t\t[\"objNikolayev\",\t\t5],\n\t\t\t\t\t\t\t[\"objLagushina\",   \t\t5],\n\t\t\t\t\t\t\t[\"objSmugglers\",   \t\t5],\n\t\t\t\t\t\t\t[\"objFindBase\",    \t\t4],\n\t\t\t\t\t\t\t[\"objSentries\",   \t\t3],\n\t\t\t\t\t\t\t[\"objLeader\",\t\t\t3],\n\t\t\t\t\t\t\t[\"objDestroyBase\",\t\t3],\n\t\t\t\t\t\t\t[\"objEscortLagushina\",\t1],\n\t\t\t\t\t\t\t[\"objRescueCrew\",   \t2],\n\t\t\t\t\t\t\t[\"objSafehouse\",    \t3],\n\t\t\t\t\t\t\t[\"objMaksim\",    \t\t6],\n\t\t\t\t\t\t\t[\"objEvidence\",    \t\t7]\n\t\t\t\t\t\t]\n\t\t\t\t\t] call BIS_fnc_taskHandler\n\n *\tTODO:\t\t\t* generalize so it can be used in WF\n \t\t\t\t\t* add support for standard tasks\n \t\t\t\t\t* randomize the selection of tasks with the same priority\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_taskHandler`; -->\n\n---\n","BIS Functions\\BIS_fnc_taskHint.md":"Shows a task hint.\n\n\n---\n*Syntaxes:*\n\n[taskName, taskState] call `BIS_fnc_taskHint`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskHint;\n```","BIS Functions\\BIS_fnc_taskParent.md":"Return a sub-task's parent task.\n\n\n---\n*Syntaxes:*\n\ntaskName call `BIS_fnc_taskParent`\n\n---\n*Example 1:*\n\n```sqf\n\"BIS_task_01\" call BIS_fnc_taskParent;\n```","BIS Functions\\BIS_fnc_taskPatrol.md":"Create a random patrol of several `waypoints` around a given `position`.\n\n\n---\n*Syntaxes:*\n\n[group, position, distance, blacklist] call `BIS_fnc_taskPatrol`\n\n---\n*Example 1:*\n\n```sqf\n[group _unit, getPos _unit, 1000] call BIS_fnc_taskPatrol;\n```","BIS Functions\\BIS_fnc_taskReal.md":"Find the actual task associated with a task name assigned to a unit.\n\n\n---\n*Syntaxes:*\n\n[taskName, owner] call `BIS_fnc_taskReal`\n\n---\n*Example 1:*\n\n```sqf\n[ \"testTask\", player ] call BIS_fnc_taskReal;\n//Returns `Task testTask (id 0)`\n```","BIS Functions\\BIS_fnc_taskSetAlwaysVisible.md":"Flags task to be or not to be always visible.\n\n\n---\n*Syntaxes:*\n\n[taskID,alwaysVisible] call `BIS_fnc_taskSetAlwaysVisible`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_Task_01\",true] call BIS_fnc_taskSetAlwaysVisible;\n```","BIS Functions\\BIS_fnc_taskSetCurrent.md":"Set a task to current. Identical to assigning a task.\n\n\n---\n*Syntaxes:*\n\ntaskName call `BIS_fnc_taskSetCurrent`\n\n---\n*Example 1:*\n\n```sqf\n\"BIS_task_01\" call BIS_fnc_taskSetCurrent;\n```","BIS Functions\\BIS_fnc_taskSetDescription.md":"Set a task description.\n\n\n---\n*Syntaxes:*\n\n[taskId, [taskDescription, taskTitle, taskMarker]] call `BIS_fnc_taskSetDescription`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t\"tsk_destroyAA\",\n\t[\n\t\t\"You should plant Satchels under those Shilkas! Good luck.\",\n\t\t\"Destroy the Shilkas\",\n\t\t\"Shilkas\"\n\t]\n] call BIS_fnc_taskSetDescription;\n```","BIS Functions\\BIS_fnc_taskSetDestination.md":"Set a task's destination.\n\n\n---\n*Syntaxes:*\n\n[taskName, destination] call `BIS_fnc_taskSetDestination`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_task_01\",[1337,1337,0]] call BIS_fnc_taskSetDestination;\n```","BIS Functions\\BIS_fnc_taskSetState.md":"Set a task's state.\n\n\n---\n*Syntaxes:*\n\n[taskName, taskState, showHint] call `BIS_fnc_taskSetState`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskSetState;\n```","BIS Functions\\BIS_fnc_taskSetType.md":"Sets task type to given task.\n\n\n---\n*Syntaxes:*\n\n[taskID,type] call `BIS_fnc_taskSetType`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_Task_01\",\"attack\"] call BIS_fnc_taskSetType;\n```","BIS Functions\\BIS_fnc_taskState.md":"Returns task's state.\n\n\n---\n*Syntaxes:*\n\ntaskID call `BIS_fnc_taskState`\n\n---\n*Example 1:*\n\n```sqf\n\"task_1\" call BIS_fnc_taskState;\n```\n\n*Example 2:*\n\n```sqf\n[\"task_1\"] call BIS_fnc_taskState;\n```","BIS Functions\\BIS_fnc_tasksUnit.md":"Grab all tasks currently created for a given unit.\n\n\n---\n*Syntaxes:*\n\ntarget call `BIS_fnc_tasksUnit`\n\n---\n*Example 1:*\n\n```sqf\nplayer call BIS_fnc_tasksUnit;\n```","BIS Functions\\BIS_fnc_taskType.md":"Returns type of given task.\n\n\n---\n*Syntaxes:*\n\ntaskID call `BIS_fnc_taskType`\n\n---\n*Example 1:*\n\n```sqf\n[\"BIS_Task_01\"] call BIS_fnc_taskType;\n```","BIS Functions\\BIS_fnc_taskTypeIcon.md":"Returns path to the icon texture associated with given task type.\n\n\n---\n*Syntaxes:*\n\n[type, default] call `BIS_fnc_taskTypeIcon`\n\n---\n*Example 1:*\n\n```sqf\n[\"attack\",configFile >> \"CfgTaskTypes\" >> \"Run\" >> \"icon\"] call BIS_fnc_taskTypeIcon;\n```","BIS Functions\\BIS_fnc_taskVar.md":"Returns task's variable name.\n\n\n---\n*Syntaxes:*\n\ntaskID call `BIS_fnc_taskVar`\n\n---\n*Example 1:*\n\n```sqf\n\"task_1\" call BIS_fnc_taskVar;\n```","BIS Functions\\BIS_fnc_teamColor.md":"Convert number to color team name or color.\n\n\n---\n*Syntaxes:*\n\n[teamId, getColour] call `BIS_fnc_teamColor`\n\n---\n*Example 1:*\n\n```sqf\n[2, true] call BIS_fnc_teamColor;\n```","BIS Functions\\BIS_fnc_terrainGradAngle.md":"Returns the gradient angle (in radians) of the terrain at a specified position and a compass direction.\nIt is an angle of the slope of a tangent plane to the terrain at the specified position in the specified direction.\n\n\n---\n*Syntaxes:*\n\n<!-- [object, direction, delta] call `BIS_fnc_terrainGradAngle`; -->\n\n---\n*Example 1:*\n\n```sqf\nprivate _radGrad = [getPos player, getDir player] call BIS_fnc_terrainGradAngle;\n```","BIS Functions\\BIS_fnc_textTiles.md":"Shows an animated text with background tiles.\n\n\n---\n*Syntaxes:*\n\n[content, position, tileSize, duration, fadeInOutTime, tileTransparency] spawn `BIS_fnc_textTiles`\n\n---\n*Example 1:*\n\n```sqf\n[parseText \"<t font='PuristaBold' size='1.6'>MyMission</t><br />by Username\", true, nil, 7, 0.7, 0] spawn BIS_fnc_textTiles;\n```\n\n*Example 2:*\n\n```sqf\n[\"path\\to\\image.paa\"] spawn BIS_fnc_textTiles;\n```","BIS Functions\\BIS_fnc_textureMarker.md":"Checks whether texture is defined in CfgMarkers and if so, returns the marker texture.\n\n\n---\n*Syntaxes:*\n\n[wantedMarker] call `BIS_fnc_textureMarker`\n\n---\n*Example 1:*\n\n```sqf\nprivate _notWhiteFlag = [\"flag_France\"] call BIS_fnc_textureMarker;\n```","BIS Functions\\BIS_fnc_textureVehicleIcon.md":"Checks whether icon is defined in CfgVehicleIcons and if so, returns the icon.\n\n\n---\n*Syntaxes:*\n\n[wantedIcon] call `BIS_fnc_textureVehicleIcon`\n\n---\n*Example 1:*\n\n```sqf\nprivate _mediTexture = [\"iconManMedic\"] call BIS_fnc_textureVehicleIcon;\n```","BIS Functions\\BIS_fnc_threat.md":"Calculates threat values of given unit.\n\n\n---\n*Syntaxes:*\n\n[unit] call `BIS_fnc_threat`\n\n---\n*Example 1:*\n\n```sqf\nprivate _threatLevel = [player] call BIS_fnc_threat;\n```","BIS Functions\\BIS_fnc_timeline_cleanup.md":"Destroys timeline and all related objects.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_cleanup`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_cleanup;\n```","BIS Functions\\BIS_fnc_timeline_deleted.md":"Deletes given timeline and updates \n\n```sqf\nmissionNamespace getVariable \"Timelines\"];\n```\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_deleted`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_deleted;\n```","BIS Functions\\BIS_fnc_timeline_edenAttributesChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tAttributes change in EDEN for a timeline\n\n\tParameter(s):\n\t_this select 0: Object\t- The timeline\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_timeline_edenAttributesChanged`\n\n---\n","BIS Functions\\BIS_fnc_timeline_edenConnectionChanged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\t3DEN connections of a timeline is changed\n\n\tParameter(s):\n\t_this select 0: Object\t- The timeline\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_timeline_edenConnectionChanged`\n\n---\n","BIS Functions\\BIS_fnc_timeline_edenDeleted.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tTimeline is deleted\n\n\tParameter(s):\n\t_this select 0: Object - The destroyed timeline\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_timeline_edenDeleted`\n\n---\n","BIS Functions\\BIS_fnc_timeline_edenDragged.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tEntity is dragged in 3DEN\n\n\tParameter(s):\n\t_this select 0: Object\t- The timeline\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_timeline_edenDragged`\n\n---\n","BIS Functions\\BIS_fnc_timeline_edenInit.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tTime line is initialized in 3den\n\n\tParameter(s):\n\t_this select 0: Object\t- The timeline\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_timeline_edenInit`\n\n---\n","BIS Functions\\BIS_fnc_timeline_edenIsSelected.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tWhether this timeline is selected in 3den\n\n\tParameter(s):\n\t_this select 0: Object\t- The timeline\n\n\tReturns:\n\tBool - True if selected, false if not\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_timeline_edenIsSelected`\n\n---\n","BIS Functions\\BIS_fnc_timeline_finish.md":"Called when timeline finishes playing (reaches it is end).\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_finish`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_finish;\n```","BIS Functions\\BIS_fnc_timeline_getAlpha.md":"Get's current alpha in given timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getAlpha`\n\n---\n*Example 1:*\n\n```sqf\nprivate _alpha = [timeline] call BIS_fnc_timeline_getAlpha;\n```","BIS Functions\\BIS_fnc_timeline_getCurrentTime.md":"The current time of this timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getCurrentTime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _time = [timeline] call BIS_fnc_timeline_getCurrentTime;\n```","BIS Functions\\BIS_fnc_timeline_getInterpMode.md":"Returns the timeline interp mode index.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getInterpMode`\n\n---\n*Example 1:*\n\n```sqf\nprivate _interpolationMode = [timeline] call BIS_fnc_timeline_getInterpMode;\n```","BIS Functions\\BIS_fnc_timeline_getLength.md":"The time left of given timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getLength`\n\n---\n*Example 1:*\n\n```sqf\nprivate _timeLeft = [timeline] call BIS_fnc_timeline_getLength;\n```","BIS Functions\\BIS_fnc_timeline_getPlayFromStart.md":"Whether timeline is flagged as play from start on scenario begin.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getPlayFromStart`\n\n---\n*Example 1:*\n\n```sqf\nprivate _playFromStart = [timeline] call BIS_fnc_timeline_getPlayFromStart;\n```","BIS Functions\\BIS_fnc_timeline_getPlayRate.md":"Returns the play rate of this timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getPlayRate`\n\n---\n*Example 1:*\n\n```sqf\nprivate _playRate = [timeline] call BIS_fnc_timeline_getPlayRate;\n```","BIS Functions\\BIS_fnc_timeline_getPlayTime.md":"The time at which timeline started playing.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getPlayTime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _startTime = [timeline] call BIS_fnc_timeline_getPlayTime;\n```","BIS Functions\\BIS_fnc_timeline_getPosition.md":"Returns the position of given timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getPosition`\n\n---\n*Example 1:*\n\n```sqf\nprivate _position = [timeline] call BIS_fnc_timeline_getPosition;\n```","BIS Functions\\BIS_fnc_timeline_getSimulatedCurves.md":"Returns the simulated curves of a timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getSimulatedCurves`\n\n---\n*Example 1:*\n\n```sqf\nprivate _curves = [timeline] call BIS_fnc_timeline_getSimulatedCurves;\n```","BIS Functions\\BIS_fnc_timeline_getStopTime.md":"The time at which timeline stopped playing\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getStopTime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _timeStopped = [timeline] call BIS_fnc_timeline_getStopTime;\n```","BIS Functions\\BIS_fnc_timeline_getTimeLeft.md":"The time left of given timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_getTimeLeft`\n\n---\n*Example 1:*\n\n```sqf\nprivate _timeLeft = [timeline] call BIS_fnc_timeline_getTimeLeft;\n```","BIS Functions\\BIS_fnc_timeline_init.md":"Initialized a timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline, initPosition, length, playRate, loop] call `BIS_fnc_timeline_init`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_init;\n```","BIS Functions\\BIS_fnc_timeline_isFinished.md":"Returns whether given timeline has finished.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_isFinished`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isFinished = [timeline] call BIS_fnc_timeline_isFinished;\n```","BIS Functions\\BIS_fnc_timeline_isLooping.md":"Returns whether given timeline is in loop mode.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_isLooping`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isLooping = [timeline] call BIS_fnc_timeline_isLooping;\n```","BIS Functions\\BIS_fnc_timeline_isPaused.md":"Returns whether given timeline is paused.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_isPaused`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isPaused = [timeline] call BIS_fnc_timeline_isPaused;\n```","BIS Functions\\BIS_fnc_timeline_isPlaying.md":"Whether given timeline is playing (can be paused at same time!)\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_isPlaying`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isPlaying = [timeline] call BIS_fnc_timeline_isPlaying;\n```","BIS Functions\\BIS_fnc_timeline_isReverse.md":"Whether given timeline is in reverse mode\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_isReverse`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isReverse = [timeline] call BIS_fnc_timeline_isReverse;\n```","BIS Functions\\BIS_fnc_timeline_play.md":"Play given timeline if currently not playing. If we are playing and paused, we unpause.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_play`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_play;\n```","BIS Functions\\BIS_fnc_timeline_setInterpMode.md":"Set's the interpolation mode of the timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline, mode] call `BIS_fnc_timeline_setInterpMode`\n\n---\n*Example 1:*\n\n```sqf\n[timeline,15] call BIS_fnc_timeline_setInterpMode;\n```","BIS Functions\\BIS_fnc_timeline_setLength.md":"Set's the length of this timeline in seconds.\n\n\n---\n*Syntaxes:*\n\n[timeline, length] call `BIS_fnc_timeline_setLength`\n\n---\n*Example 1:*\n\n```sqf\n[timeline,5.5] call BIS_fnc_timeline_setLength;\n```","BIS Functions\\BIS_fnc_timeline_setLoop.md":"Set's this timeline playback loop mode\n\n\n---\n*Syntaxes:*\n\n[timeline, loop] call `BIS_fnc_timeline_setLoop`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_setLoop;\n```","BIS Functions\\BIS_fnc_timeline_setPause.md":"Pauses or unpauses timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline, pause] call `BIS_fnc_timeline_setPause`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_setPause;\n```","BIS Functions\\BIS_fnc_timeline_setPlayRate.md":"Sets playrate of timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline, rate] call `BIS_fnc_timeline_setPlayRate`\n\n---\n*Example 1:*\n\n```sqf\n[timeline,2] call BIS_fnc_timeline_setPlayRate;\n```","BIS Functions\\BIS_fnc_timeline_setPosition.md":"Sets position of timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline, position] call `BIS_fnc_timeline_setPosition`\n\n---\n*Example 1:*\n\n```sqf\n[timeline,2] call BIS_fnc_timeline_setPosition;\n```","BIS Functions\\BIS_fnc_timeline_setReverse.md":"Change direction of timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline, reverse] call `BIS_fnc_timeline_setReverse`\n\n---\n*Example 1:*\n\n```sqf\n[timeline, false] call BIS_fnc_timeline_setReverse;\n```","BIS Functions\\BIS_fnc_timeline_simulateCurves.md":"<pre>/*\n\tAuthor: Nelson Duarte <@Nelson_G_Duarte>\n\n\tDescription:\n\tSets this timeline playback as reverse or not.\n\n\tParameter(s):\n\t_this select 0: Object\t\t- The timeline\n\t_this select 1: Alpha\t\t- Current timeline alpha\n\t_this select 1: DeltaT\t\t- Delta time\n\n\tReturns:\n\tNothing\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_timeline_simulateCurves`\n\n---\n","BIS Functions\\BIS_fnc_timeline_stop.md":"Stops a timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_stop`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_stop;\n```","BIS Functions\\BIS_fnc_timeline_tick.md":"Ticks a timeline.\n\n\n---\n*Syntaxes:*\n\n[timeline] call `BIS_fnc_timeline_tick`\n\n---\n*Example 1:*\n\n```sqf\n[timeline] call BIS_fnc_timeline_tick;\n```","BIS Functions\\BIS_fnc_timeToString.md":"This function returns a 24-hour time as a string (or array) from a decimal.\n\n\n---\n*Syntaxes:*\n\n[time, format] call `BIS_fnc_timeToString`\n\n---\n*Example 1:*\n\n```sqf\nprivate _time = 7.36;\n[_time] call BIS_fnc_timeToString; // 07:21:36\n```\n\n*Example 2:*\n\n```sqf\nprivate _time = 7.36;\n[_time, \"HH:MM\"] call BIS_fnc_timeToString; // 07:21\n```","BIS Functions\\BIS_fnc_titlecard.md":"Display a mission-specific titlecard before the mission begins. Only works the first time it is called.\n\n\n---\n*Syntaxes:*\n\n[path, subtitle] call `BIS_fnc_titlecard`\n\n---\n*Example 1:*\n\n```sqf\n[\"\\a3\\missions_f_epb\\video\\b_out2_quotation.ogv\", \"your translation\"] call BIS_fnc_titlecard;\n```","BIS Functions\\BIS_fnc_titleText.md":"Display given string as structured text.\n\n\n---\n*Syntaxes:*\n\nmessage call `BIS_fnc_titleText`\n\n---\n*Example 1:*\n\n```sqf\n\"Stratis, 2035-07-14 0130<nowiki><br /></nowiki>A dark night ahead…\" call BIS_fnc_titleText;\n```","BIS Functions\\BIS_fnc_toggleCuratorVisionMode.md":"Toggle curator vision mode.\n\n\n---\n*Syntaxes:*\n\n[curator, mode] call `BIS_fnc_toggleCuratorVisionMode`\n\n---\n*Example 1:*\n\n```sqf\n[Curator, -2] call BIS_fnc_toggleCuratorVisionMode;\n```","BIS Functions\\BIS_fnc_toUpperDisplayTexts.md":"Converts text of selected classes in one display to upper-case except classes with name `PlayersName`. Also searches inside `CT_CONTROLS_GROUP`s.\n\n\n---\n*Syntaxes:*\n\n[displayClass, controlClasses, blacklist] call `BIS_fnc_toUpperDisplayTexts`\n\n---\n*Example 1:*\n\n```sqf\n[\"RscDisplayOptionsAudio\", [\"RscText\"]] call BIS_fnc_toUpperDisplayTexts;\n```","BIS Functions\\BIS_fnc_traceBullets.md":"Visualise unit's bullet trajectories. Can only be used on one shooter in a single instance.<br>\nIf you want to change the unit, first set <sqf inline>BIS_tracedShooter = nil\n``` `then` execute the script again.\n\n\n---\n*Syntaxes:*\n\n[unit, number] call `BIS_fnc_traceBullets`\n\n---\n*Example 1:*\n\n```sqf\n[player] spawn BIS_fnc_traceBullets;\n```\n\n*Example 2:*\n\n```sqf\n[player, 50] spawn BIS_fnc_traceBullets;\n```\n\n*Example 3:*\n\n```sqf\n[player, 0] spawn BIS_fnc_traceBullets; // remove bullet tracing\n```","BIS Functions\\BIS_fnc_trackMissionTime.md":"Tracks mission time by storing time in `profileNamespace`.\n\n\n---\n*Syntaxes:*\n\n[save, delete] call `BIS_fnc_trackMissionTime`\n\n---\n*Example 1:*\n\n```sqf\n[true, true] call BIS_fnc_trackMissionTime; // Delete saved mission time\n```\n\n*Example 2:*\n\n```sqf\n[true] call BIS_fnc_trackMissionTime; // Save mission time\n```","BIS Functions\\BIS_fnc_transformVectorDirAndUp.md":"`Image:transformVectorUpAndDir.jpg|300px|right`\nRotates both `vectorDir` and `vectorUp` on 3 axes: z (yaw), x (pitch) and y (roll). Positive angle direction is according to the [right hand rule](https://en.wikipedia.org/wiki/Right-hand_rule).\n\n\n---\n*Syntaxes:*\n\n[vectorDirAndUp, yaw, pitch, roll] call `BIS_fnc_transformVectorDirAndUp`\n\n---\n*Example 1:*\n\n```sqf\nprivate _vDirUp = [[vectorDirVisual uav, vectorUpVisual uav], 0, 0, 90] call BIS_fnc_transformVectorDirAndUp;\n```\n\n*Example 2:*\n\nCreate UAV object and make it pitch with mouse up/down and roll with mouse left/right:\n\n```sqf\nuav = \"B_UAV_05_F\" createVehicle [0,0,0];\nuav attachTo [player, [0,30,10]];\nfindDisplay 46 displayAddEventHandler [\"MouseMoving\", \n{\n\tuav setVectorDirAndUp\n\t(\n\t\t[\n\t\t\t[vectorDirVisual uav, vectorUpVisual uav],\n\t\t\tgetDirVisual uav,\n\t\t\t_this select 2,\n\t\t\t_this select 1\n\t\t]\n\t\tcall BIS_fnc_transformVectorDirAndUp\n\t);\n}];\n```","BIS Functions\\BIS_fnc_transportService.md":"<pre>\n/*\n\tFile: transportService.sqf\n\n\tDescription:\n\tTransportation system\n\n\tParameter(s):\n\t1: <object> unit allowed to use the transport system\n\t2: <object> vehicle providing transport\n\t3: <array> positions to be chosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL)\n\t4: <position> (NEEDED ONLY IF PARAMETER #3 IS USED)\n\n\tReturns:\n\tN/A\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n[caller, vehicle, position, mainScope, secopScope] call `BIS_fnc_transportService`\n\n---\n","BIS Functions\\BIS_fnc_tridentClient.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_tridentClient` -->\n\n---\n","BIS Functions\\BIS_fnc_tridentExecute.md":"Execute a code based on Trident relationship.\n\n\n---\n*Syntaxes:*\n\n[side_1, side_2, codeFriendly, codeEnemy] call `BIS_fnc_tridentExecute`\n\n---\n*Example 1:*\n\n```sqf\n[west, east, { params [\"_higherScore\", \"_lowerScore\", \"_areAllied\"] }] call BIS_fnc_tridentExecute;\n```","BIS Functions\\BIS_fnc_tridentGetRelationship.md":"Gets the relationship of competing Trident sides. The value slowly decreases towards 0.\n\n\n---\n*Syntaxes:*\n\n[sideA, sideB] call `BIS_fnc_tridentGetRelationship`\n\n---\n*Example 1:*\n\n```sqf\n[west, east] call BIS_fnc_tridentGetRelationship;\n```","BIS Functions\\BIS_fnc_tridentHandleDamage.md":"Register a unit as Trident unit.\nWhen competing sides are still friendly and the unit is killed by the competing side,\nthe killer won't be punsihed by negative score. Instead, Trident relationship will decrease.\n\n\n---\n*Syntaxes:*\n\nobject call `BIS_fnc_tridentHandleDamage`\n\n---\n*Example 1:*\n\n```sqf\nBIS_tridentObject call BIS_fnc_tridentHandleDamage;\n```","BIS Functions\\BIS_fnc_tridentSetRelationship.md":"Set relationship of competing Trident sides.\nWhen the value reaches threshold, side relationship will change.\nThe value slowly decreases towards 0.\n\n\n---\n*Syntaxes:*\n\n[side1, side2, value, absolute] call `BIS_fnc_tridentSetRelationship`\n\n---\n*Example 1:*\n\n```sqf\n[west, east, 0.5, true] call BIS_fnc_tridentSetRelationship;\n```","BIS Functions\\BIS_fnc_triggerToMarker.md":"Makes an existing or new trigger cover a marker area.\n\n\n---\n*Syntaxes:*\n\n[trigger, markerName] call `BIS_fnc_triggerToMarker`\n\n---\n*Example 1:*\n\n```sqf\nprivate _createdTrigger = [objNull, myAreaTrigger] call BIS_fnc_triggerToMarker;\n```","BIS Functions\\BIS_fnc_trimString.md":"Get a substring out of the string.\n\n\n---\n*Syntaxes:*\n\n[someText, beginning, length] call `BIS_fnc_trimString`\n\n---\n*Example 1:*\n\n```sqf\n[\"dreaded_is_the_man\", 0, 6] call BIS_fnc_trimString; // will return \"dreaded\"\n```\n\n*Example 2:*\n\n```sqf\n[\"dreaded_is_the_man\", 15] call BIS_fnc_trimString; // will return \"man\"\n```\n\n*Example 3:*\n\n```sqf\n[\"dreaded_is_the_man\"] call BIS_fnc_trimString; // will return \"dreaded_is_the_man\"\n```","BIS Functions\\BIS_fnc_turretConfig.md":"Returns vehicle turret config for the turret given by the turret path.\n\n\n---\n*Syntaxes:*\n\n[vehicle, turret] call `BIS_fnc_turretConfig`\n\n---\n*Example 1:*\n\n```sqf\ngetNumber ([\"B_APC_Wheeled_01_cannon_F\", [0,0]] call BIS_fnc_turretConfig >> \"hasGunner\") > 0;\n```\n\n*Example 2:*\n\n```sqf\ngetNumber ([car1, [-1]] call BIS_fnc_turretConfig >> \"hasDriver\") > 0;\n```","BIS Functions\\BIS_fnc_twoWingDoorNoHandleClose.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingDoorNoHandleClose`\n\n---\n","BIS Functions\\BIS_fnc_twoWingDoorNoHandleOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingDoorNoHandleOpen`\n\n---\n","BIS Functions\\BIS_fnc_twoWingDoorOneHandleClose.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingDoorOneHandleClose`\n\n---\n","BIS Functions\\BIS_fnc_twoWingDoorOneHandleOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingDoorOneHandleOpen`\n\n---\n","BIS Functions\\BIS_fnc_twoWingDoorTwoHandleClose.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingDoorTwoHandleClose`\n\n---\n","BIS Functions\\BIS_fnc_twoWingDoorTwoHandleOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingDoorTwoHandleOpen`\n\n---\n","BIS Functions\\BIS_fnc_twoWingSlideDoorClose.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingSlideDoorClose`\n\n---\n","BIS Functions\\BIS_fnc_twoWingSlideDoorOpen.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_twoWingSlideDoorOpen`\n\n---\n","BIS Functions\\BIS_fnc_typeText.md":"Types a structured text on the screen, letter by letter, cursor blinking.<br>\n\n\n---\n*Syntaxes:*\n\n[stringLines, posX, posY, rootFormat] spawn `BIS_fnc_typeText`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t[\n\t\t[\"CAMP ROGAIN,\", \"<t align = 'center' shadow = '1' size = '0.7' font='PuristaBold'>%1</t>\"],\n\t\t[\"RESUPPLY POINT\", \"<t align = 'center' shadow = '1' size = '0.7'>%1</t><br/>\"],\n\t\t[\"10 MINUTES LATER ...\", \"<t align = 'center' shadow = '1' size = '1.0'>%1</t>\", 15]\n\t]\n] spawn BIS_fnc_typeText;\n```\n\n*Example 2:*\n\n```sqf\n[\n\t[\n\t\t[\"Hello there...\", nil, 30]\n\t],\n\t0, safeZoneY + safeZoneH / 2\n] spawn BIS_fnc_typeText;\n```","BIS Functions\\BIS_fnc_typeText2.md":"Types a structured text on the screen, letter by letter, cursor blinking. Note that line returns are manual, unlike `BIS_fnc_typeText`.\n\n\n---\n*Syntaxes:*\n\n[stringLines, posX, posY, alignBottom, rootFormat, abortParams, abortCond, playSounds] call `BIS_fnc_typeText2`\n\n---\n*Example 1:*\n\n```sqf\n[\n\t[\n\t\t[\"CAMP ROGAIN, \", \"align = 'center' shadow = '1' size = '0.7' font='PuristaBold'\"],\n\t\t[\"RESUPPLY POINT\", \"align = 'center' shadow = '1' size = '0.7'\", \"#aaaaaa\"],\n\t\t[\"\", \"<br/>\"], // line break\n\t\t[\"10 MINUTES LATER...\", \"align = 'center' shadow = '1' size = '1.0'\"]\n\t]\n] spawn BIS_fnc_typeText2;\n```\n\n*Example 2:*\n\n```sqf\n[\n\t[\"Hello there\"],\n\tsafeZoneX, safeZoneH / 2,\n\ttrue,\n\t\"<t font='PuristaBold'>%1</t>\",\n\t[],\n\t{ false },\n\ttrue\n] spawn BIS_fnc_typeText2;\n```","BIS Functions\\BIS_fnc_uniqueClasses.md":"<pre>/*\n\n\tDescription:\n\tComposes array of classes with unique param (based on returned value of passed code).\n\tIf class inherits the param from parent, it is not listed.\n\t\n\tParameter(s):\n\t\t0: CONFIG - class which is searched\n\t\t1: CODE - code executed on class, which is passed as _this\n\t\n\tReturns:\n\t\tARRAY - classes in format [class,value]\n\t\t\tclass: CONFIG - class with unique param\n\t\t\tvalue: ANY - value returned by the passed code for the given class\n*/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_uniqueClasses`; -->\n\n---\n","BIS Functions\\BIS_fnc_unitAddon.md":"Return addon from CfgPatches to which a given object belongs to.\n\n\n---\n*Syntaxes:*\n\n[object] call `BIS_fnc_unitAddon`\n\n---\n*Example 1:*\n\n```sqf\n[ player ] call BIS_fnc_unitAddon;\n```","BIS Functions\\BIS_fnc_unitCapture.md":"Records movement data of input unit over a specified period of time. Simplified.\nPressing the *(Reference Controls \"Esc\")* key, the duration ending, or the unit dying ends the recording.<br>\nCopies to clipboard an `Array` in format [frameTime, unitPosition, unitDirectionVector, unitUpVector, unitVelocity] for each frame.\n\n\n---\n*Syntaxes:*\n\n[unit, duration, FPS, firing, startTime] spawn `BIS_fnc_unitCapture`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Vehicle, 50, 30, true, 10] spawn BIS_fnc_unitCapture;\n```","BIS Functions\\BIS_fnc_unitCaptureFiring.md":"Records weapon fire data of input unit over a specified period of time. Pressing the ESC key, the duration ending, or the unit dying ends the recording.\n\n\n---\n*Syntaxes:*\n\n[unit, duration, startTime] spawn `BIS_fnc_unitCaptureFiring`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Vehicle, 50, 10] spawn BIS_fnc_unitCaptureFiring;\n```\n\n*Example 2:*\n\n```sqf\n`2.135, \"GAU8\", \"<NULL-object>\"], [2.157,\"GAU8\",\"<NULL-object>\"` // output example\n```","BIS Functions\\BIS_fnc_unitCaptureSimple.md":"Records movement data of input unit over a specified period of time. Simplified.\nPressing the *(Reference Controls \"Esc\")* key, the duration ending, or the unit dying ends the recording.<br>\nCopies to clipboard an `Array` in format [frameTime, unitPosition, unitDirection] for each frame.\n\n\n---\n*Syntaxes:*\n\n[unit, duration, FPS, firing, startTime] spawn `BIS_fnc_unitCaptureSimple`\n\n---\n*Example 1:*\n\n```sqf\n[BIS_Vehicle, 50, 30, true, 10] spawn BIS_fnc_unitCaptureSimple;\n```","BIS Functions\\BIS_fnc_unitHeadgear.md":"Randomise headgear and facewear of a character.\n\n\n---\n*Syntaxes:*\n\n[unit, headgear, facewear] call `BIS_fnc_unitHeadgear`\n\n---\n*Example 1:*\n\n```sqf\n[this] call BIS_fnc_unitHeadgear;\t\t\t\t\t// headgear and face wear, same as [this, [], []]\n[this, [], []] call BIS_fnc_unitHeadgear;\t\t\t// headgear only\n[this, nil, []] call BIS_fnc_unitHeadgear;\t\t\t// facewear only\n[this, \"myTemplate\"] call BIS_fnc_unitHeadgear;\t// class defined in Description.ext - CfgUnitTemplates\n```","BIS Functions\\BIS_fnc_unitPlay.md":"Plays back input movement data on input unit. Simplified.\n\n\n---\n*Syntaxes:*\n\n[unit, data, varDone, stateIgnore, obsolete_1, obsolete_2, skipTime] spawn `BIS_fnc_unitPlay`\n\n---\n*Example 1:*\n\n```sqf\n[ vehicle player, _unitCaptureData ] spawn BIS_fnc_unitPlay\n```","BIS Functions\\BIS_fnc_unitPlayFiring.md":"Plays back input weapon fire data on input unit.\n\n\n---\n*Syntaxes:*\n\n[unit, data, stateIgnore] spawn `BIS_fnc_unitPlayFiring`\n\n---\n*Example 1:*\n\n```sqf\nprivate _capturedFireData = `2.135,\"GAU8\",\"<NULL-object>\"`;\n[BIS_Vehicle, _capturedData, true] spawn BIS_fnc_unitPlayFiring;\n```","BIS Functions\\BIS_fnc_unitPlaySimple.md":"Plays back input movement data on input unit. Simplified.\n\n\n---\n*Syntaxes:*\n\n[unit, data, varDone, stateIngnore, debug, sleep, skipTime] spawn `BIS_fnc_unitPlaySimple`\n\n---\n*Example 1:*\n\n```sqf\nprivate _capturedData = `0,[8208.26,1953.13,296.04],67`;\n[BIS_Vehicle, _capturedData, [BIS_Object, \"DoneRecording\"], true, false, 0.2, 5] spawn BIS_fnc_unitPlaySimple;\n```","BIS Functions\\BIS_fnc_unitVector.md":"<pre>\n/************************************************************\n\tUnit Vector\n\nReturns the unit vector for the passed vector (vector pointing\nin the same direction, but with magnitude == 1)\nThis does not modify the original array.\nThe array can have any number of elements (2, 3, etc).\n************************************************************/</pre>\n\n*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_unitVector`; -->\n\n---\n","BIS Functions\\BIS_fnc_unpackStaticWeapon.md":"This function will move given support team to the given weapon position.\nThe weapon crew will unpack carried weapon and start watching given target position.\nRequires three personnel in the team: Team Leader, Gunner and Asst. Gunner.\nThis function is MP compatible.<br>\nWhen the weapon is unpacked, the `Arma 3: Scripted Event Handlers#Events|\"StaticWeaponUnpacked\"` scripted EH is called.\n\n\n---\n*Syntaxes:*\n\n[group, weaponPos, targetPos, leaderPos] call `BIS_fnc_unpackStaticWeapon`\n\n---\n*Example 1:*\n\n```sqf\n[leader1, \"weapon_mrk\", \"target_mrk\"] call BIS_fnc_unpackStaticWeapon;\n```\n\n*Example 2:*\n\n```sqf\ngroup1 allowFleeing 0;\n[group1, \"weapon_mrk\", tank1, \"leader_mrk\"] call BIS_fnc_unpackStaticWeapon;\n```","BIS Functions\\BIS_fnc_updatePlayerArray.md":"Updates dead player objects to their current respawned objects.\n\n\n---\n*Syntaxes:*\n\n[input] call `BIS_fnc_updatePlayerArray`\n\n---\n*Example 1:*\n\n```sqf\nprivate _newPlayerObjects = _oldPlayerObjects call BIS_fnc_updatePlayerArray;\n```","BIS Functions\\BIS_fnc_validateParametersOO.md":"Validating the parameters of a certain method in a class.\n\n\n---\n*Syntaxes:*\n\n[class,method,params] call `BIS_fnc_validateParametersOO`\n\n---\n*Example 1:*\n\n```sqf\n[\"someClass\",\"someMethod\",[5,47,\"test\"]] call BIS_fnc_validateParametersOO;\n```","BIS Functions\\BIS_fnc_variableSpaceAdd.md":"Add element to variable from someone's variable space.\n\n\n---\n*Syntaxes:*\n\n[object, varName, element, global, inArray] call `BIS_fnc_variableSpaceAdd`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"someVar\", 1337, true, true] call BIS_fnc_variableSpaceAdd;\n```","BIS Functions\\BIS_fnc_variableSpaceRemove.md":"Remove element from variable from someone's variable space.\n\n\n---\n*Syntaxes:*\n\n[object,varName,element,global,inArray] call `BIS_fnc_variableSpaceRemove`\n\n---\n*Example 1:*\n\n```sqf\n[player, \"someVar\", 1337, true] call BIS_fnc_variableSpaceRemove;\n```","BIS Functions\\BIS_fnc_vectorAdd.md":"Returns the sum of two vectors.\n\n\n---\n*Syntaxes:*\n\n[vector1, vector2] call `BIS_fnc_vectorAdd`\n\n---\n*Example 1:*\n\n```sqf\n`1, 1, 1, 1, 1], [2, 5, 3, 1, 1` call BIS_fnc_vectorAdd; // returns [3,6,4,2,2]\n```","BIS Functions\\BIS_fnc_vectorDiff.md":"Returns a vector that is the difference between two vectors.\n\n\n---\n*Syntaxes:*\n\n[vector1, vector2] call `BIS_fnc_vectorDiff`\n\n---\n*Example 1:*\n\n```sqf\nprivate _vectorDiff = `1,2,3], [5,6,7` call BIS_fnc_vectorDiff;\n```","BIS Functions\\BIS_fnc_vectorDirAndUpRelative.md":"Returns `vectorDirAndUp` of object 1 relative to object 2\n\n\n---\n*Syntaxes:*\n\n[object1, object2, visual] call `BIS_fnc_vectorDirAndUpRelative`\n\n---\n*Example 1:*\n\n```sqf\nprivate _vectorDirAndUp = [tank, car] call BIS_fnc_vectorDirAndUpRelative;\n```","BIS Functions\\BIS_fnc_vectorDivide.md":"Divides vector by scalar, by dividing all vector elements.\n\n\n---\n*Syntaxes:*\n\n[vector, divider] call `BIS_fnc_vectorDivide`\n\n---\n*Example 1:*\n\n```sqf\n[[123, 456, 789], 5] call BIS_fnc_vectorDivide;\n```\n\n*Example 2:*\n\n```sqf\n[[1, 2, 3, 4, 5, 6, 7, 8, 9], 5] call BIS_fnc_vectorDivide;\n```","BIS Functions\\BIS_fnc_vectorFromXToY.md":"Returns a unit vector that 'points' from `vector1` to `vector2`.\nThis is a very useful function as it can be used with the `velocity` command to move an object from one position to another (i.e `vector1` to `vector2`).\n\n\n---\n*Syntaxes:*\n\n[vector1, vector2] call `BIS_fnc_vectorFromXToY`\n\n---\n*Example 1:*\n\n```sqf\nprivate _resultVector = [getPosASL vehicle player, getPosASL airTarget] call BIS_fnc_vectorFromXToY;\n```","BIS Functions\\BIS_fnc_vectorMultiply.md":"Multiplies 3D vector by a scalar.\n\n\n---\n*Syntaxes:*\n\n[vector, factor] call `BIS_fnc_vectorMultiply`\n\n---\n*Example 1:*\n\n```sqf\nprivate _newVector = [[1,2,3], 3] call BIS_fnc_vectorMultiply; // returns [3,6,9]\n```","BIS Functions\\BIS_fnc_vehicleCrewTurrets.md":"Returns vehicle crew turrets, which will be filled with crew if `createVehicleCrew` command is executed on the vehicle. If vehicle class is passed as param, all vehicle crew turrets are returned.\n\n\n---\n*Syntaxes:*\n\nvehicle call `BIS_fnc_vehicleCrewTurrets`\n\n---\n*Example 1:*\n\n```sqf\n\"B_APC_Wheeled_01_cannon_F\" call BIS_fnc_vehicleCrewTurrets;\n```\n\n*Example 2:*\n\n```sqf\ncar1 call BIS_fnc_vehicleCrewTurrets;\n```","BIS Functions\\BIS_fnc_vehicleRoles.md":"Returns vehicle roles.\n\n\n---\n*Syntaxes:*\n\nvehicle call `BIS_fnc_vehicleRoles`\n\n---\n*Example 1:*\n\n```sqf\ncursorObject call BIS_fnc_vehicleRoles;\n```\n\n*Example 2:*\n\n```sqf\n\"B_MBT_01_cannon_F\" call BIS_fnc_vehicleRoles;\n```","BIS Functions\\BIS_fnc_version.md":"Detects which `{{arma2}}` expansions and addons are available. Only works in {{arma2}}/{{arma2oa}}.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_version`\n\n---\n*Example 1:*\n\n```sqf\nprivate _availableExpansions = call BIS_fnc_version;\n```\n\n*Example 2:*\n\n```sqf\nprivate _playerHasPMC = 4 in (call BIS_fnc_version);\n```","BIS Functions\\BIS_fnc_versionInfo.md":"Fills the first passed control with game type and version number, and positions both controls according to the game type.\n\n\n---\n*Syntaxes:*\n\n[gameTypeVersionControl, modControl] call `BIS_fnc_versionInfo`\n\n---\n*Example 1:*\n\n```sqf\n[_ctrlVersion, _ctrlModded] call BIS_fnc_versionInfo;\n```","BIS Functions\\BIS_fnc_VRCourseBallistics1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseBallistics2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseBallistics3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseBallistics4.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingActions1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingActions2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingActions3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingBehaviour1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingBehaviour2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingBehaviour3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingMovement1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingMovement2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingVehicles1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingVehicles2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseCommandingVehicles3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliAdvanced1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliAdvanced2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliAdvanced3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliAdvanced4.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliAdvanced5.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliAdvanced6.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliBasics1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliBasics2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliBasics3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliSlingload1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliWeapons1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliWeapons2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliWeapons3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseHeliWeapons4.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseLaunchers1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseLaunchers2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseLaunchers3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCoursePlaceables1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCoursePlaceables2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCoursePlaceables3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseTargetDesignation1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseTargetDesignation2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseTargetDesignation3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingA1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingA2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingA3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingB1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingB2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingB3.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingC1.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRCourseWeaponHandlingC2.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_VRDrawBorder.md":"Visualizes area border (used primarily for VR missions).\n\n\n---\n*Syntaxes:*\n\n[center, radius] call `BIS_fnc_VRDrawBorder`\n\n---\n*Example 1:*\n\n```sqf\n[[0,0,0], 200] call BIS_fnc_VRDrawBorder;\n```","BIS Functions\\BIS_fnc_VRDrawGrid.md":"Visualizes surface grid (used primarily for VR missions).<br>\n\n\n---\n*Syntaxes:*\n\n[location, colour] call `BIS_fnc_VRDrawGrid`\n\n---\n*Example 1:*\n\n```sqf\n[getPosATL player, [0.078, 0.3647, 0.0]] call BIS_fnc_VRDrawGrid;\n```\n\n*Example 2:*\n\n```sqf\n[false] call BIS_fnc_VRDrawGrid;\n```","BIS Functions\\BIS_fnc_VREffectKilled.md":"Delete body of a virtual soldier after he's killed.\n\n\n---\n*Syntaxes:*\n\n[object, instant, delay] call `BIS_fnc_VREffectKilled`\n\n---\n*Example 1:*\n\n```sqf\n[ player ] call BIS_fnc_VREffectKilled;\n```\n\n*Example 2:*\n\n```sqf\n[ player, true, 5 ] spawn BIS_fnc_VREffectKilled;\n```","BIS Functions\\BIS_fnc_VRFadeIn.md":"Fade In effect for VR.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_VRFadeIn`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_VRFadeIn;\n```","BIS Functions\\BIS_fnc_VRFadeOut.md":"Fade Out effect for VR.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_VRFadeOut`\n\n---\n*Example 1:*\n\n```sqf\ncall BIS_fnc_VRFadeOut;\n```","BIS Functions\\BIS_fnc_VRHitpart.md":"Initialize hit effects on VR targets.<br>\n\t<br>grey - undamaged\n\t<br>orange - damaged\n\t<br>red - destroyed\n\n\n---\n*Syntaxes:*\n\n[object,time] call `BIS_fnc_VRHitpart`\n\n---\n*Example 1:*\n\n```sqf\nprivate _delta = [someObject, 60] call BIS_fnc_VRHitpart;\n```","BIS Functions\\BIS_fnc_VRSpawnEffect.md":"VR (unit) spawn effect.\n\n\n---\n*Syntaxes:*\n\n[object, reverse, size] call `BIS_fnc_VRSpawnEffect`\n\n---\n*Example 1:*\n\n```sqf\n[ player, false, 5 ] call BIS_fnc_VRSpawnEffect;\n```","BIS Functions\\BIS_fnc_VRSpawnSelector.md":"Spawns the course selector (used primarily for VR missions).\n\n\n---\n*Syntaxes:*\n\n[center, type] call `BIS_fnc_VRSpawnSelector`\n\n---\n*Example 1:*\n\n```sqf\n[ [0,0,0], \"exit\" ] call BIS_fnc_VRSpawnSelector;\n```","BIS Functions\\BIS_fnc_VRTimer.md":"Timer for VR and time trials. The following `missionNamespace` variables can be used:\n* **BIS_stopTimer**: set to `true` to stop the timer. Once stopped, the function must be executed again to restart the timer\n* **RscFiringDrillTime_current**: fill with `Structured Text` to display text instead of timer (when timer is stopped)\n* **RscFiringDrillTime_done**: set to `true` to close the display. `Stop the timer first`\n\n\n---\n*Syntaxes:*\n\n[colour] spawn `BIS_fnc_VRTimer`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn BIS_fnc_VRTimer;\n```\n\n*Example 2:*\n\n```sqf\n\"#025D00\" spawn BIS_fnc_VRTimer;\n```\n\n*Example 3:*\n\n```sqf\n[\"#025D00\"] spawn BIS_fnc_VRTimer;\n```","BIS Functions\\BIS_fnc_weaponAddon.md":"Return addon from CfgPatches to which a given weapon class belongs to.\n\n\n---\n*Syntaxes:*\n\nclassname call `BIS_fnc_weaponAddon`\n\n---\n*Example 1:*\n\n```sqf\n\"arifle_MX_F\" call BIS_fnc_weaponAddon; // returns \"A3_Weapons_F_Rifles_MX\"\n```","BIS Functions\\BIS_fnc_weaponComponents.md":"Returns array with classname of the parent weapon (without attachments), followed by classnames of all its attachments.<br>\n\n\n---\n*Syntaxes:*\n\n[classname] call `BIS_fnc_weaponComponents`\n\n---\n*Example 1:*\n\n```sqf\n\"arifle_mx_aco_pointer_f\" call BIS_fnc_weaponComponents; // [\"arifle_mx_f\",\"optic_aco\",\"acc_pointer_ir\"]\n```\n\n*Example 2:*\n\n```sqf\n\"arifle_mx_gl_black_hamr_pointer_f\" call BIS_fnc_weaponComponents; // [\"arifle_mx_gl_black_f\",\"optic_hamr\",\"acc_pointer_ir\"]\n```\n\n*Example 3:*\n\n```sqf\n\"arifle_mx_black_f\" call BIS_fnc_weaponComponents; // [\"arifle_mx_f\"]\n```","BIS Functions\\BIS_fnc_weaponDirectionRelative.md":"Returns relative direction vector of given weapon for the given vehicle\n\n\n---\n*Syntaxes:*\n\n[vehicle, weapon, visual] call `BIS_fnc_weaponDirectionRelative`\n\n---\n*Example 1:*\n\n```sqf\nprivate _relweapondir = [tank, \"cannon_105mm\"] call BIS_fnc_weaponDirectionRelative;\n```","BIS Functions\\BIS_fnc_weaponsEntityType.md":"Return object's weapons as defined in config. Scans also turrets and pylons.\n\n\n---\n*Syntaxes:*\n\nclass call `BIS_fnc_weaponsEntityType`\n\n---\n*Example 1:*\n\n```sqf\n[\"B_Soldier_GL_F\"] call BIS_fnc_weaponsEntityType;\n// returns e.g [\"arifle_MX_GL_ACO_F\",\"hgun_P07_F\",\"Throw\",\"Put\"]\n```\n\n*Example 2:*\n\n```sqf\n\"B_Plane_CAS_01_dynamicLoadout_F\" call BIS_fnc_weaponsEntityType;\n/*\n\treturns e.g\n\t[\n\t\t\"Gatling_30mm_Plane_CAS_01_F\",\n\t\t\"Laserdesignator_pilotCamera\",\n\t\t\"CMFlareLauncher\",\n\t\t\"Missile_AA_04_Plane_CAS_01_F\",\n\t\t\"Rocket_04_HE_Plane_CAS_01_F\",\n\t\t\"Missile_AGM_02_Plane_CAS_01_F\",\n\t\t\"Bomb_04_Plane_CAS_01_F\",\n\t\t\"Rocket_04_AP_Plane_CAS_01_F\"\n\t]\n*/\n```","BIS Functions\\BIS_fnc_WLAICore.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLAICore`\n\n---\n","BIS Functions\\BIS_fnc_WLAIPathSegmentation.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Sets up a path and behavior for AI to a specific sector.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLAIPathSegmentation`\n\n---\n","BIS Functions\\BIS_fnc_WLAIPurchases.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLAIPurchases`\n\n---\n","BIS Functions\\BIS_fnc_WLAircraftArrival.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Spawns a requested aircraft and makes it land properly.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLAircraftArrival`\n\n---\n","BIS Functions\\BIS_fnc_WLAirdrop.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Spawns a requested asset and drops it on a specific location.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLAirdrop`\n\n---\n","BIS Functions\\BIS_fnc_WLAISectorScan.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Sector scan routine for AI.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLAISectorScan`\n\n---\n","BIS Functions\\BIS_fnc_WLArsenalFilter.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLArsenalFilter`\n\n---\n","BIS Functions\\BIS_fnc_WLCalculateIncome.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Recalculate CP income for a specific side.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLCalculateIncome`\n\n---\n","BIS Functions\\BIS_fnc_WLCalculateSectorConnections.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Evaluates sector grid so it can be drawn on map.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLCalculateSectorConnections`\n\n---\n","BIS Functions\\BIS_fnc_WLClientInit.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: System init (client-side).\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLClientInit`\n\n---\n","BIS Functions\\BIS_fnc_WLDebug.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Debug logging.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLDebug`\n\n---\n","BIS Functions\\BIS_fnc_WLDefenceSetup.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Requested static weapon positionining routine.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLDefenceSetup`\n\n---\n","BIS Functions\\BIS_fnc_WLDropPurchase.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Airdrop location selection routine.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLDropPurchase`\n\n---\n","BIS Functions\\BIS_fnc_WLFundsInfo.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Funds & sector status UI handle\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLFundsInfo`\n\n---\n","BIS Functions\\BIS_fnc_WLGarrisonRetreat.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLGarrisonRetreat`\n\n---\n","BIS Functions\\BIS_fnc_WLInit.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: System init.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLInit`\n\n---\n","BIS Functions\\BIS_fnc_WLInSectorArea.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Checks if the given unit is inside a specific sector.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLInSectorArea`\n\n---\n","BIS Functions\\BIS_fnc_WLLoadoutApply.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Reapply a saved loadout.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLLoadoutApply`\n\n---\n","BIS Functions\\BIS_fnc_WLLoadoutGrab.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Save a loadout for later.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLLoadoutGrab`\n\n---\n","BIS Functions\\BIS_fnc_WLMostVotedSector.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Evaluates which sector was most voted for.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLMostVotedSector`\n\n---\n","BIS Functions\\BIS_fnc_WLNavalArrival.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Spawns a requested naval asset.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLNavalArrival`\n\n---\n","BIS Functions\\BIS_fnc_WLOpenArsenal.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Opens Arsenal interface.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLOpenArsenal`\n\n---\n","BIS Functions\\BIS_fnc_WLOSD.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Manages temporary info in hints.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLOSD`\n\n---\n","BIS Functions\\BIS_fnc_WLOutlineIcons.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Handles icons selection visualization in map.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLOutlineIcons`\n\n---\n","BIS Functions\\BIS_fnc_WLParseAssetList.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLParseAssetList`\n\n---\n","BIS Functions\\BIS_fnc_WLPlayersTracking.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Keeps track of player unit & its marker.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLPlayersTracking`\n\n---\n","BIS Functions\\BIS_fnc_WLPlayersTrackingServer.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Manage connecting and disconnecting players.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLPlayersTrackingServer`\n\n---\n","BIS Functions\\BIS_fnc_WLPurchaseMenu.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Purchase interface handle.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLPurchaseMenu`\n\n---\n","BIS Functions\\BIS_fnc_WLRandomPosRect.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Returns a random position in rectangle area.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRandomPosRect`\n\n---\n","BIS Functions\\BIS_fnc_WLRecalculateServices.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Refreshes a side's available services.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRecalculateServices`\n\n---\n","BIS Functions\\BIS_fnc_WLRemovalHandle.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Units & vehicles garbage collector.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRemovalHandle`\n\n---\n","BIS Functions\\BIS_fnc_WLReputation.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Calculate player's reputiation (how rapidly they lose subordinates).\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLReputation`\n\n---\n","BIS Functions\\BIS_fnc_WLRequestFastTravel.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Fast travel routine.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRequestFastTravel`\n\n---\n","BIS Functions\\BIS_fnc_WLRequestFundsTransfer.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Funds transfer routine.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRequestFundsTransfer`\n\n---\n","BIS Functions\\BIS_fnc_WLRequestPurchase.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Handles proper purchase subroutine based on asset type.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRequestPurchase`\n\n---\n","BIS Functions\\BIS_fnc_WLRequestSectorScan.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Sector scan routine (selection part).\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRequestSectorScan`\n\n---\n","BIS Functions\\BIS_fnc_WLRequestVotingReset.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Voting reset routine.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLRequestVotingReset`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorFundsPayoff.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorFundsPayoff`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorHandle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorHandle`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorHandleServer.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorHandleServer`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorIconUpdate.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Handles sector icons.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorIconUpdate`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorInit.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Spawns sector garrison based on its size, sends a patrolling vehicle if feasible.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorInit`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorListing.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Keeps track of sectors status for a given side.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorListing`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorPopulate.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Spawns sector garrison.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorPopulate`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorScanHandle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorScanHandle`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorsCommonInit.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Sectors init (client-side).\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorsCommonInit`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorSelectionEnd.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Sector voting termination subroutine.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorSelectionEnd`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorSelectionHandle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorSelectionHandle`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorSelectionHandleServer.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorSelectionHandleServer`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorSelectionStart.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Initializes sector voting.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorSelectionStart`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorsSetup.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Sectors init (server-side).\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorsSetup`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorTaskHandle.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorTaskHandle`\n\n---\n","BIS Functions\\BIS_fnc_WLSectorUpdate.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Sector update after its owner changed.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSectorUpdate`\n\n---\n","BIS Functions\\BIS_fnc_WLSeizingBarHandle.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Handles the seizing bar element in UI.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSeizingBarHandle`\n\n---\n","BIS Functions\\BIS_fnc_WLSendResponseTeam.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Spawns and manages response teams.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSendResponseTeam`\n\n---\n","BIS Functions\\BIS_fnc_WLShowInfo.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Hints buffer.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLShowInfo`\n\n---\n","BIS Functions\\BIS_fnc_WLSideToFaction.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Returns the primary faction for a given side.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSideToFaction`\n\n---\n","BIS Functions\\BIS_fnc_WLSmoothText.md":"Display given text smoothly.\n\n\n---\n*Syntaxes:*\n\n[text, nbOfLines, duration, color, outline] call `BIS_fnc_WLSmoothText`\n\n---\n*Example 1:*\n\n```sqf\n[\"Hello, hidden FX\", 2, 3, [1,0,0,1], true] spawn BIS_fnc_WLSmoothText; // no sounds, letters appear in a smooth transition\n```","BIS Functions\\BIS_fnc_WLSoundMsg.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Play a given announcer message.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSoundMsg`\n\n---\n","BIS Functions\\BIS_fnc_WLSubroutine_purchaseMenuAssetAvailability.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSubroutine_purchaseMenuAssetAvailability`\n\n---\n","BIS Functions\\BIS_fnc_WLSubroutine_purchaseMenuGetUIScale.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSubroutine_purchaseMenuGetUIScale`\n\n---\n","BIS Functions\\BIS_fnc_WLSubroutine_purchaseMenuHandleDLC.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSubroutine_purchaseMenuHandleDLC`\n\n---\n","BIS Functions\\BIS_fnc_WLSubroutine_purchaseMenuRefresh.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSubroutine_purchaseMenuRefresh`\n\n---\n","BIS Functions\\BIS_fnc_WLSubroutine_purchaseMenuSetAssetDetails.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSubroutine_purchaseMenuSetAssetDetails`\n\n---\n","BIS Functions\\BIS_fnc_WLSubroutine_purchaseMenuSetItemsList.md":"`N/A`\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSubroutine_purchaseMenuSetItemsList`\n\n---\n","BIS Functions\\BIS_fnc_WLSyncedTime.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Returns time synced between server and clients\n*/</pre>*(Reference Wiki \"placeholder\")*\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSyncedTime`\n\n---\n","BIS Functions\\BIS_fnc_WLSyncTime.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Introduces a synchronized time value for server and clients.\nOBSOLETE NOW AFTER SERVERTIME FIX\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLSyncTime`\n\n---\n","BIS Functions\\BIS_fnc_WLUpdateAO.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Recalculates AO info (sector distribution).\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLUpdateAO`\n\n---\n","BIS Functions\\BIS_fnc_WLVarsInit.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Init variables.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLVarsInit`\n\n---\n","BIS Functions\\BIS_fnc_WLVehicleHandle.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Keeps track of spawned vehicles.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLVehicleHandle`\n\n---\n","BIS Functions\\BIS_fnc_WLVotingBarHandle.md":"<pre>/*\nWARLORDS-SPECIFIC FUNCTION\n\nAuthor: Josef Zemánek\n\nDescription: Handles the voting bar element in UI.\n*/</pre>*(Reference Wiki \"placeholder\")*<!-- Remove this after fill-in -->\n\n\n---\n*Syntaxes:*\n\n[] call `BIS_fnc_WLVotingBarHandle`\n\n---\n","BIS Functions\\BIS_fnc_worldArea.md":"Creates (or returns if it already exists) trigger with size of map.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_worldArea`\n\n---\n*Example 1:*\n\n```sqf\nprivate _bigTrigger = call BIS_fnc_worldArea;\n```","BIS Functions\\BIS_fnc_wpAerobatics.md":"AEROBATICS `custom waypoint`.\n\nPlayer must perform all the required manoeuvres:\n* \"hover_turn_360\"\n* \"hover_bow\"\n* \"fast_turn_180\"\n* \"backwards\"\n* \"strafe\"\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [visuals, detectionCode, completionCode]\n\n---\n*Example 1:*\n\n```sqf\n[player, { hint \"OK, start!\" }, { hint \"success!\" }] spawn BIS_fnc_wpAerobatics;\n```","BIS Functions\\BIS_fnc_wpAngle.md":"CIRCLE `custom waypoint`.\nKeep helicopter rotated in given vector toward target.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [circleLimit, circleBorder, circleDir, customCond, hint]\n\n---\n","BIS Functions\\BIS_fnc_wpArtillery.md":"Let group members fire artillery barrage on waypoint position. Units must have magazine type.\n\n\n---\n*Syntaxes:*\n\n[group, position, target, firedRounds, type] call `BIS_fnc_wpArtillery`\n\n---\n*Example 1:*\n\n```sqf\n[group player, getMarkerPos \"artilleryStrike\", objNull, 30, \"8Rnd_82mm_Mo_shells\"] call BIS_fnc_wpArtillery;\n```","BIS Functions\\BIS_fnc_wpCheckpoint.md":"CHECKPOINT `custom waypoint`.\n\nPlayer has to reach waypoint position with certain precision (as opposed to normal `Move` waypoint, which became completed in around 500m).\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [posLimit]\n\n---\n*Example 1:*\n\n```sqf\n[player, getPosASL dude, 10, 2] spawn BIS_fnc_wpCheckpoint;\n```","BIS Functions\\BIS_fnc_wpDemine.md":"Scripted \"CLEAR MINES\" `Advanced Waypoint`.\nThe script needs a unit with the abiility to demine (engineer or explosive specialist `trait` `and` a toolkit).\n\n\n---\n*Syntaxes:*\n\n[group, position, target, clearUnknownMines] call `BIS_fnc_wpDemine`\n\n---\n*Example 1:*\n\n```sqf\n[group player, getMarkerPos \"mineField\", objNull, false] call BIS_fnc_wpDemine;\n```","BIS Functions\\BIS_fnc_wpFastRope.md":"FAST-ROPE `custom waypoint`.\n\nLet everybody in vehicles' cargo space rappel down on a rope.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [limitHeight,limitSpeed,fastropeID]\n\n---\n*Example 1:*\n\n```sqf\n[player, position dude, 50, 5, 15, 1] spawn BIS_fnc_wpFastRope;\n```","BIS Functions\\BIS_fnc_wpFormation.md":"FORMATION `custom waypoint`.\n\nPlayer must stay within certain radius and angle towards followed vehicle.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [failCode, maxTime, relPos, diffAlt, visualize]\n\n---\n*Example 1:*\n\n```sqf\n[player, dude, 80, { HSim_keptFormation = false }, -60, [80,160], 20, true] spawn BIS_fnc_wpFormation;\n```","BIS Functions\\BIS_fnc_wpHover.md":"HOVER `custom waypoint`.\nHover on specific spot.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [minTime, reset, altDiff, visualize]\n\n---\n*Example 1:*\n\n```sqf\n[player, position dude, 10, 10, false, -1, true] spawn BIS_fnc_wpLand;\n```","BIS Functions\\BIS_fnc_wpPatrol.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_wpRelax.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_wpRestricted.md":"RESTRICTED `custom waypoint`.\n\nPlayer must fly in given limits.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [limits, maxTime, failCode, visualize, warnCode]\n\n---\n*Example 1:*\n\n```sqf\n[player, objNull, 0, [250, -1, 150, -1], 30, { HSim_RestrictedFlight = false }, true] spawn BIS_fnc_wpFormation;\n```","BIS Functions\\BIS_fnc_wpSlingLoadAttach.md":"ATTACH SLINGLOAD `custom waypoint`.\n\nLoad an object to rope.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [posLimit, failCode, weight]\n\n---\n*Example 1:*\n\n```sqf\n[player, dude, 50, 10, { hintC \"You lost the cargo!\" }, 1000] spawn BIS_fnc_wpSlingLoadAttach;\n```\n\n*Example 2:*\n\n```sqf\n[player, dude, 0, true] spawn BIS_fnc_wpSlingLoadAttach; // attaches the cargo immediately\n```","BIS Functions\\BIS_fnc_wpSlingLoadDetach.md":"DETACH SLINGLOAD `custom waypoint`.\n\nUnload an object which was previously loaded using `BIS_fnc_wpSlingLoadAttach`.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [posLimit,limitDir]\n\n---\n*Example 1:*\n\n```sqf\n[player, position dude, 50, 10, [42, 52]] spawn BIS_fnc_wpSlingLoadDetach;\n```","BIS Functions\\BIS_fnc_wpSlingLoadDrop.md":"DROP SLINGLOAD `custom waypoint`.\n\nDrop an object which was previously loaded using `BIS_fnc_wpSlingLoadAttach`\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: none\n\n---\n*Example 1:*\n\n```sqf\n[player, position dude, 50] spawn BIS_fnc_wpSlingLoadDrop;\n```","BIS Functions\\BIS_fnc_wpSteady.md":"FLY STEADY `custom waypoint`.\n\nKeep helicopter's pitch, bank, relative velocity a relative vector in given limits\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [limitArray, failLimit, failCode, warningCode, positiveCode]\n\n---\n*Example 1:*\n\n```sqf\n[\n\tplayer,\n\tposition dude,\n\tnil,\n\t[15,1.3,30], 10, { hintC \"You failed\"; }, { hint \"Watch out!\"; }, { hint \"Good\"; }\n] spawn BIS_fnc_wpSteady;\n```","BIS Functions\\BIS_fnc_wpSuppress.md":"\n\n\n---\n*Syntaxes:*\n\n-\n\n---\n*Example 1:*\n\n-","BIS Functions\\BIS_fnc_wpTimed.md":"COUNTDOWN `custom waypoint`.\n\nPlayer has to reach waypoint area before time runs out.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [failCode,timeLimit,showHint]\n\n---\n*Example 1:*\n\n```sqf\n[player, position dude, 100, { hintC \"You failed!\" }, 42, true] spawn BIS_fnc_wpTimed;\n```","BIS Functions\\BIS_fnc_wpTransport.md":"TRANSPORT `custom waypoint`.\n\nPlayer must pick up group of units in their location.\nGet in AI pathfinding is supressed (to avoid unwanted behaviour on building roofs), units are teleported into player's vehicle instead.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: none\n\n---\n*Example 1:*\n\n```sqf\n[player, dude, 100] spawn BIS_fnc_wpTransport;\n```","BIS Functions\\BIS_fnc_wpWinchLoad.md":"WINCH LOAD `custom waypoint`.\n\nLoad a group into helicopter cargo using winch.\n\n\n---\n*Syntaxes:*\n\n`Custom Waypoint arguments`: [limitHeight, winchID, crewman, failCode, loadCode]\n\n---\n*Example 1:*\n\n```sqf\n[player, dude, 50, 5, 1, rescuer, {hintC \"Rescuer died!\"}, {hintC \"Dude saved\"}] spawn BIS_fnc_wpWinchLoad;\n```","BIS Functions\\BIS_fnc_zoomLock.md":"Locks the camera in place when the map is open.\n\n\n---\n*Syntaxes:*\n\n[cameraCenter] call `BIS_fnc_zoomLock`\n\n---\n*Example 1:*\n\n```sqf\n`0, 0` call BIS_fnc_zoomLock;\n```","BIS Functions\\BIS_fnc_zoomLockEH.md":"Event handler function for locking the camera.\n\n\n---\n*Syntaxes:*\n\nposition call `BIS_fnc_zoomLockEH`\n\n---\n*Example 1:*\n\n```sqf\n[position player] call BIS_fnc_zoomLockEH;\n```","BIS Functions\\BIS_fnc_zoomOnArea.md":"Map will zoom on the given area. Function always takes the longer side of the area to zoom on.\n\n\n---\n*Syntaxes:*\n\n[area, center, time, handler, forceCam] call `BIS_fnc_zoomOnArea`\n\n---\n*Example 1:*\n\n```sqf\nopenMap true;\n[markerSize \"BIS_areaMarker\", markerPos \"BIS_areaMarker\", 5] call BIS_fnc_zoomOnArea;\n```","BIS Functions\\BIS_fnc_zoomUnlock.md":"Function that unlocks the camera in which has been previously locked with `BIS_fnc_zoomLock`.\n\n\n---\n*Syntaxes:*\n\ncall `BIS_fnc_zoomUnlock`\n\n---\n*Example 1:*\n\n```sqf\n[] call BIS_fnc_zoomUnlock;\n```","BIS Functions\\BIS_fnc_zzRotate.md":"\n\n\n---\n*Syntaxes:*\n\n<!-- [] call `BIS_fnc_zzRotate` -->\n\n---\n*Example 1:*\n\n<!-- \n```sqf\n[] call BIS_fnc_zzRotate;\n``` -->","BIS Functions\\BIS_SOM_addSupportRequestFunc.md":"Function behind the `Secondary Operations Manager` module.\n\n\n---\n*Syntaxes:*\n\n[secops, unit] call `BIS_SOM_addSupportRequestFunc`\n\n---\n*Example 1:*\n\n```sqf\n[[\"transport\", \"aerial_reconnaissance\", \"supply_drop\", \"tactical_airstrike\", \"artillery_barrage\", \"gunship_run\"], player] call BIS_SOM_addSupportRequestFunc;\n```","commands\\! a.md":"Returns the negation of a Boolean expression. This means **`true`}} becomes {{hl|`false`** and vice versa.\n\n\n---\n*Syntaxes:*\n\n`!` a\n\n---\n*Example 1:*\n\nThe code\n\n```sqf\nprivate _isAlive = alive player;\nif (!_isAlive) then\n{\n\thint \"The player is dead!\";\n};\n```\nis the same as\n\n```sqf\nprivate _isAlive = alive player;\nif (not _isAlive) then\n{\n\thint \"The player is dead!\";\n};\n```","commands\\+.md":"Add two `Number`s, concatenate two `Array`s or two `String`s, or create a copy of an Array or `HashMap`.\n\n\n---\n*Syntaxes:*\n\nnumberA `+` numberB\n\n`+` number\n\narrayA `+` arrayB\n\nstringA `+` stringB\n\n`+` array\n\n`+` hashMap\n\n---\n*Example 1:*\n\n<sqf notrim>\n 5 +  3\t// returns  8\n-5 + -3\t// returns -8\n```\n\n*Example 2:*\n\n```sqf\n+  2\t// returns  2\n+ -7\t// returns -7\n```\n\n*Example 3:*\n\n```sqf\n_arrayA = [1,2,3];\n_arrayB = [3,4,5];\n_arrayAB = _arrayA + _arrayB; // _arrayAB = [1,2,3,3,4,5]\n// _arrayA and _arrayB remain unchanged\n```\n\n*Example 4:*\n\n```sqf\n_result = \"Hello\" + \" \" + \"there\"; // \"Hello there\"\n```\n\n*Example 5:*\n\n```sqf\n_arrayA = [1,2,3];\n_arrayB = + _arrayA;\n_arrayB set [0, 99]; // _arrayA = [1,2,3], _arrayB = [99,2,3]\n```\n\n*Example 6:*\n\nShallow copy with **ARRAY + []**:\n\n```sqf\nprivate _subArray = [1, 2, 3];\nprivate _array1 = [_subArray, 1, 2, 3];\nprivate _array2 = _array1 + [];\n_array2 select 0 set [0, \"oops\"];\nhint str _subArray; // [\"oops\", 2, 3]\n```\n\nDeep copy with **+ ARRAY**:\n\n```sqf\nprivate _subArray = [1, 2, 3];\nprivate _array1 = [_subArray, 1, 2, 3];\nprivate _array2 = + _array1;\n_array2 select 0 set [0, \"oops\"];\nhint str _subArray; // [1, 2, 3]\n```","commands\\-.md":"Subtracts numbers or arrays from each another, negates a number. For arrays also see `deleteAt` and `deleteRange`.\n\n\n---\n*Syntaxes:*\n\nnumberA `-` numberB\n\n`-` numberA\n\narrayA `-` arrayB\n\n---\n*Example 1:*\n\n```sqf\n_result = 10 - 7; // result is 3\n```\n\n*Example 2:*\n\n```sqf\n_numA = 4;\n_numB = -_numA; // result is -4\n_numB = -_numB; // result is  4\n```\n\n*Example 3:*\n\n```sqf\n_result = [1, 2, 2, player, \"String\"] - [2, player, player, \"String\"]; // _result is [1]\n```\n\n*Example 4:*\n\n```sqf\n_result = [0, [0], [[0]]] - [0]; // [[0], [[0]]]\n```\n\n*Example 5:*\n\n```sqf\n_result = [0, [0], [[0]]] - [[0]];\t\t// [0, [[0]]] - Since Arma 3\n_result = [0, [0], [[0]]] - [[[0]]];\t// [0, [0]]   - Since Arma 3\n```","commands\\a != b.md":"Returns whether one value is `not` equal to another. String comparison is case-`in`sensitive (e.g <sqf inline>\"STRINGtext\" != \"stringTEXT\" // returns false - strings are equivalent\n```).\n\n\n---\n*Syntaxes:*\n\na `!=` b\n\n---\n*Example 1:*\n\n```sqf\nif (_counter != 4) then\n{\n\thint \"The counter is not equal to the number 4\";\n};\n```\n\n*Example 2:*\n\n```sqf\nif (vehicle player != player) then\n{\n\thint \"you are in a vehicle\";\n}\nelse\n{\n\thint \"you are on foot\";\n};\n```\n\n*Example 3:*\n\n```sqf\nif (fuel truck1 != 1) then\n{\n\thint \"Truck1 has less than a full tank of fuel.\";\n};\n```\n\n*Example 4:*\n\n```sqf\nif (alive _unit1 != alive _unit2) then { hint \"One of the units is dead while another is alive\" };\n```","commands\\a % b.md":"Remainder of `a` divided by `b`.\n\n\n---\n*Syntaxes:*\n\na `%` b\n\n---\n*Example 1:*\n\n```sqf\n4.5 % 3 // result is 1.5\n```","commands\\a && b.md":"Returns `true` only if both conditions are `true`.\nIn case of the alternative syntax, [lazy evaluation](https://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures) is used - if left operand is `false`, evaluation of the right side is ignored.\n\n\n---\n*Syntaxes:*\n\nbooleanA `&&` booleanB\n\nboolean `&&` code\n\n---\n*Example 1:*\n\n```sqf\nprivate _allEnemiesKilled = true;\nif (alive player && _allEnemiesKilled) then\n{\n\thint \"you win !\";\n};\n```\n\n*Example 2:*\n\n```sqf\nif ((count _array > 0) && { (_array select 0) == player }) then // an error would be thrown without lazy evaluation\n{\n\thint \"It works!\";\n};\n```\n\n*Example 3:*\n\n```sqf\nif ((alive player) && { player setDamage 0.5; true }) then // valid AS LONG AS the code block returns a Boolean\n{\n\thint \"It works!\";\n};\n```","commands\\a = b.md":"Assigns the result of expression on the right to the variable on the left. Technically this is not a command and it is not listed in `supportInfo`; this is more of a compiler instruction.\n\n\n---\n*Syntaxes:*\n\nvariable [[a = b\n\n---\n*Example 1:*\n\n```sqf\n_value = 5;\n```\n\n*Example 2:*\n\n```sqf\n_mygroup = group player;\n```\n\n*Example 3:*\n\n```sqf\n_greeting = \"Hello!\";\n```\n\n*Example 4:*\n\n```sqf\nprivate _enemyTank = myTank1;\n```","commands\\a == b.md":"Check if `a` is equal to `b`. String comparison is case-`in`sensitive  - use `isEqualTo` if case sensitivity is needed.\n\n\n---\n*Syntaxes:*\n\na `==` b\n\n---\n*Example 1:*\n\n```sqf\nif (player == leader group player) then\n{\n\thint \"You are the leader of your group.\";\n}\nelse\n{\n\thint \"Someone else is the boss\";\n};\n```\n\n*Example 2:*\n\n```sqf\n\"MyRabbit\" == \"MYRABBIT\"; // returns true\n```\n\n*Example 3:*\n\n```sqf\nif (alive _unit1 == alive _unit2) then { hint \"Both units are either dead or both alive\" };\n```","commands\\a divide b.md":"Returns the quotient of two numbers. If the divisor is 0 a `Division by zero` error is shown but the script does not stop and the result of such division is assumed to be 0.<br><br>\nAlternative syntax returns `Config` entry with given name (alias for `>>`, slightly slower but with ` higher precedence`).\n\n\n---\n*Syntaxes:*\n\na `/` b\n\nconfig `/` name\n\n---\n*Example 1:*\n\n```sqf\n_result = 15 / 3; // result is 5\n```\n\n*Example 2:*\n\n```sqf\n_cfgVehicles = configFile / \"CfgVehicles\"; // identical to configFile >> \"CfgVehicles\" (but the order of precedence)\n```","commands\\a greater b.md":"Returns `true` if `a` is greater than `b`, else returns `false`.\n\n\n---\n*Syntaxes:*\n\na `>` b\n\n---\n*Example 1:*\n\n```sqf\nif (fuel truck1 > 0) then { hint \"Truck1 has some fuel left.\"; };\n```","commands\\a greater= b.md":"Returns if `a` is greater than or equal to `b`.\n\n\n---\n*Syntaxes:*\n\na `>=` b\n\n---\n*Example 1:*\n\n```sqf\nif (fuel truck1 >= 0.5) then { hint \"Truck1 has at least half a tank of fuel left.\" };\n```","commands\\a hash b.md":"Selects an element from an ` array`, same as `select` command for arrays, but has ` higher precedence`\n\n\n---\n*Syntaxes:*\n\narray  `#` index\n\n---\n*Example 1:*\n\n```sqf\n[1,2,3,4] # 2;\t\t\t// result is 3\n```\n\n*Example 2:*\n\n```sqf\ngetPosASL player # 2;\t\t// result is Z component of player's position\n```\n\n*Example 3:*\n\n```sqf\n//'getPosASL' is unary; '#' and '+' are binary; precedence is: 'getPosASL' > '#' > '+'\ngetPosASL player # 2 + 1; // equivalent to (getPosASL player # 2) + 1, not (getPosASL player)#(2+1)\n```","commands\\a less b.md":"Returns if `a` is lesser than `b`.\n\n\n---\n*Syntaxes:*\n\na `<` b\n\n---\n*Example 1:*\n\n```sqf\n_test = 1 < 2; // true\n```\n\n*Example 2:*\n\n```sqf\n_test = 2 < 1; // false\n```","commands\\a less= b.md":"Returns `true` if `a` is less than or equal to `b`, else returns `false`.\n\n\n---\n*Syntaxes:*\n\na `<=` b\n\n---\n*Example 1:*\n\n```sqf\nif (fuel truck1 <= 0) then { hint \"Truck1 has no fuel left.\" };\n```","commands\\a or b.md":"Returns `true` only if one or both conditions are `true`. In case of the alternative syntax, [lazy evaluation](https://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures) is used (if left operand is `true`, evaluation of the right side is skipped completely).\n\n\n---\n*Syntaxes:*\n\na `{{!}}{{!}}` b\n\n---\n*Example 1:*\n\n```sqf\nif (OBJ1 || _enemycount == 0) then { hint \"you win !\" };\n```\n\n*Example 2:*\n\n```sqf\nif (count _array == 0 || { (_array select 0) != player }) then\n{\n\thint \"It works! Without lazy evaluation it would throw an error if array was empty.\";\n};\n```","commands\\a switch b.md":"See `switch`\n\n\n---\n*Syntaxes:*\n\na `:` b\n\n---\n*Example 1:*\n\n<sqs>? (_var == _test) : hint \"_var is equal to _test!\";</sqs>\n\n*Example 2:*\n\n```sqf\nswitch (_condition) do\n{\n\tcase 1: { hint \"1\" };\n\tcase 2: { hint \"2\" };\n\tdefault { hint \"default\" }; // note: NO colon for the default case\n};\n```","commands\\a times b.md":"Returns the value of `a` multiplied by `b`.\n\n\n---\n*Syntaxes:*\n\na `*` b\n\n---\n*Example 1:*\n\n```sqf\n_percentage = 0.5 * 100;\n```","commands\\a ^ b.md":"`a` raised to the power of `b`\n\n\n---\n*Syntaxes:*\n\na `^` b\n\n---\n*Example 1:*\n\n```sqf\n5 ^ 2 // 5², result is 25\n```","commands\\abs.md":"Returns absolute (positive) value of a real number.\n\n\n---\n*Syntaxes:*\n\n`abs` x\n\n---\n*Example 1:*\n\n```sqf\n_n = abs -3; // Returns 3\n```","commands\\accTime.md":"Returns the current simulation acceleration factor.\n\n\n---\n*Syntaxes:*\n\n`accTime`\n\n---\n*Example 1:*\n\n```sqf\n_acc = accTime;\n```","commands\\acos.md":"ArcCosine of a number, result in `Degrees`\n\n\n---\n*Syntaxes:*\n\n`acos` x\n\n---\n*Example 1:*\n\n```sqf\n_degrees = acos 0.5; // Returns 60\n```","commands\\action.md":"Make a unit perform an action. See `:Category:Actions` for action names and syntaxes.\n\n\n---\n*Syntaxes:*\n\nunit `action` actionArray\n\n`action` actionArray\n\n---\n*Example 1:*\n\n```sqf\nplayer action [\"SitDown\", player];\n```\n\n*Example 2:*\n\n```sqf\n_soldier action [\"Eject\", vehicle _soldier];\n```\n\n*Example 3:*\n\n```sqf\nplayer action [\"UseWeapon\", player, player, 7]; // plays pick up animation before throwing grenade\naction [\"UseWeapon\", player, player, 7]; // normal grenade throw\n```","commands\\actionIDs.md":"Returns `Array` of `Number`s, where numbers are IDs of all user actions added to given entity with `addAction` command.\n\n\n---\n*Syntaxes:*\n\n`actionIDs` entity\n\n---\n*Example 1:*\n\n```sqf\n_actions = actionIDs player;\n```","commands\\actionKeys.md":"Returns `Array` containing `dikCodes` of keys, buttons and combos assigned to the given user action. Action names could be found in config class ControllerSchemes or `user action names` or user profile, for example:\n```cpp\nkeyWatch[] = { 24 };\n```\nTo retrieve the value, use the property name without 'key':\n\n```sqf\nactionKeys \"Watch\"; // 24\n```\nIn addition, some of the actions are also listed in here: `inputAction/actions`\n\n\n---\n*Syntaxes:*\n\n`actionKeys` userAction\n\n`actionKeys` [userAction]\n\n---\n*Example 1:*\n\n```sqf\n_arrayOfNumbers = actionKeys \"ReloadMagazine\";\n```\n\n*Example 2:*\n\nFrom Arma 3 v2.08:\n\n```sqf\n_arrayOfStrings = actionKeys [\"ReloadMagazine\"];\n```","commands\\actionKeysEx.md":"Gives a broken down version of `actionKeys` return. Returns an `Array` containing the breakdowns of the `dikCodes` of keys, buttons and combos assigned to the given user action. Action names can be found in config class ControllerSchemes or `user action names` or user profile (see *(Reference HashLink \"#Example 1\")*).\nIn addition, some of the actions are also listed here: `inputAction/actions`\n\nThe Key Device can be one of several types:\n{{Columns|3\n|\n* **\"KEYBOARD\"**\n* **\"MOUSE_BUTTON\"**\n* **\"MOUSE_AXIS\"**\n* **\"JOYSTICK_BUTTON\"**\n* **\"JOYSTICK_AXIS\"**\n* **\"JOYSTICK_POV\"**\n* **\"XINPUT\"** - (Xbox) Controller Input\n* **\"TRACKER\"** - Motion Tracking (TrackIR, Tobii etc)\n\n\n---\n*Syntaxes:*\n\n`actionKeysEx` userAction\n\n---\n*Example 1:*\n\nTo retrieve the following key's data, use the property name without 'key':\n```cpp\nkeyWatch[] = { 24 };\n```\n\n```sqf\nactionKeysEx \"Watch\"; // [[[24, \"KEYBOARD\"], [], false]]\n```\n\n*Example 2:*\n\n```sqf\nprivate _result = actionKeysEx \"OpticsMode\"; // [[[129,\"MOUSE_BUTTON\"],[29,\"KEYBOARD\"],false],[[181,\"KEYBOARD\"],[],false]]\n```","commands\\actionKeysImages.md":"Returns a list of button images or names assigned to the given user action.\nA maximum of maxKeys keys is listed.\nYou can find the action names in config class ControllerSchemes or `user action names`.\n\n\n---\n*Syntaxes:*\n\n`actionKeysImages` userAction\n\n`actionKeysImages` [userAction, maxKeys]\n\n---\n*Example 1:*\n\n```sqf\n_text = actionKeysImages \"ReloadMagazine\";\n```\n\n*Example 2:*\n\n```sqf\n_reload = actionKeysImages [\"ReloadMagazine\", 1] // will return \"R\" (incl. the quotation marks!)\n```","commands\\actionKeysNames.md":"Returns a list of button names assigned to the given user action.\nAction names can be found in config class **ControllerSchemes** or `user action names`.\n\n\n---\n*Syntaxes:*\n\n`actionKeysNames`  userAction\n\n`actionKeysNames`  [userAction, maxKeys, inputDevicePriority]\n\n---\n*Example 1:*\n\n```sqf\n_list = actionKeysNames \"ReloadMagazine\"; // \"R\"\n```","commands\\actionKeysNamesArray.md":"Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or `user action names`.\n\n\n---\n*Syntaxes:*\n\n`actionKeysNamesArray`  userAction\n\n`actionKeysNamesArray`  [userAction, maxKeys, inputDevicePriority]\n\n---\n*Example 1:*\n\n```sqf\n_actionList = actionKeysNamesArray \"ReloadMagazine\";\n```\n\n*Example 2:*\n\n```sqf\n_actionList = actionKeysNamesArray [\"ReloadMagazine\", 1];\n```","commands\\actionName.md":"Returns localized name of action.\n\n\n---\n*Syntaxes:*\n\n`actionName` action\n\n---\n*Example 1:*\n\n```sqf\nactionName \"ReloadMagazine\"; // returns \"Reload\"\n```","commands\\actionParams.md":"Returns `Array` with params for given user action id (similar to `addAction` param array).\n\n\n---\n*Syntaxes:*\n\nentity `actionParams` id\n\n---\n*Example 1:*\n\n```sqf\n_params = player actionParams 0;\n```","commands\\activateAddons.md":"Activates the listed addons.\n\n\n---\n*Syntaxes:*\n\n`activateAddons` addonsList\n\n---\n*Example 1:*\n\n```sqf\nactivateAddons [\"BISOFP\"];\n```","commands\\activatedAddons.md":"Returns a list of all activated addons.\n\n\n---\n*Syntaxes:*\n\n`activatedAddons`\n\n---\n*Example 1:*\n\n```sqf\n_addons = activatedAddons;\n```","commands\\activateKey.md":"Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\nSee keys, keysLimit and doneKeys in the `description.ext` file of the missions.\n\n\n---\n*Syntaxes:*\n\n`activateKey` keyname\n\n---\n*Example 1:*\n\n```sqf\nactivateKey \"Mission04Key\";\n```","commands\\activeTitleEffectParams.md":"Returns type, effect, speed and map visibility of the given active title effect (see `allActiveTitleEffects`)\n\n\n---\n*Syntaxes:*\n\n`activeTitleEffectParams` layer\n\n---\n*Example 1:*\n\n```sqf\n21 cutText [\"Hello World!\", \"PLAIN\", 2];\nhint str activeTitleEffectParams 21; // [\"TXT\", \"PLAIN\", 2, true]\n```\n\n*Example 2:*\n\n```sqf\ntitleText [\"Hello World!\", \"BLACK\"];\nhint str activeTitleEffectParams -1; // [\"TXT\", \"BLACK\", 1, true]\n```","commands\\add3DENConnection.md":"`Connect` entities together.\n\n\n---\n*Syntaxes:*\n\n[[add3DENConnection]]  [type, from, to]\n\n---\n*Example 1:*\n\n```sqf\nadd3DENConnection [\"RandomStart\", get3DENSelected \"Object\", \"marker_0\"];// Set random start on marker \"marker_0\" for all selected objects.\n```","commands\\add3DENEventHandler.md":"Adds an [[Arma 3: Event Handlers: Eden Editor|Eden Editor Event Handler]].\n\n\n---\n*Syntaxes:*\n\n[[add3DENEventHandler]]  [type, code]\n\n---\n*Example 1:*\n\n```sqf\neh = add3DENEventHandler [\"onUndo\", {systemChat \"Zip...\"}];\n```","commands\\add3DENLayer.md":"Adds an editing layer in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\nparentLayerID [[add3DENLayer]]  name\n\n---\n*Example 1:*\n\n```sqf\n_myLayer = -1 add3DENLayer \"Enemy Base\";\n_myLayerFort = _myLayer add3DENLayer \"Fortifications\";\n_myLayerPatrol = _myLayer add3DENLayer \"Patrols\";\n```","commands\\addBackpack.md":"Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit. Items defined in the backpack's config will be added as well.\n\n\n---\n*Syntaxes:*\n\nunit `addBackpack` backpackClassName\n\n---\n*Example 1:*\n\n```sqf\nthis addBackpack \"TK_RPG_Backpack_EP1\";\n```\n\n*Example 2:*\n\n```sqf\n_mySoldierDude addBackpack \"US_Patrol_Pack_EP1\";\n```\n\n*Example 3:*\n\n```sqf\n_mySoldierDude addBackpack \"B_AssaultPack_mcamo_Ammo\";// Adds backpack prefilled with items defined in its config\n```","commands\\addBackpackCargo.md":"Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is [[Arma 2: Operation Arrowhead: Backpacks|here]].\nFor a list of possible backpacks, see:\n* *(Reference GVI \"arma2|1.50\")* [[Arma 2: Operation Arrowhead: Backpacks]]\n* *(Reference GVI \"arma3|1.00\")* [[Arma 3: CfgVehicles Equipment]] (starting with **B_**)\n\n\n---\n*Syntaxes:*\n\nvehicle `addBackpackCargo` [backpackClassName, count]\n\n---\n*Example 1:*\n\n```sqf\nthis addBackpackCargo [\"TK_RPG_Backpack_EP1\", 2];\n```\n\n*Example 2:*\n\n```sqf\n_apc addBackpackCargo [\"US_Patrol_Pack_EP1\", 4];\n```","commands\\addBackpackCargoGlobal.md":"Add backpack(s) to the cargo space of vehicle.\n\n\n---\n*Syntaxes:*\n\nvehicle `addBackpackCargoGlobal` [packClassName, count]\n\n---\n*Example 1:*\n\n```sqf\nthis addBackpackCargoGlobal [\"TK_RPG_Backpack_EP1\", 2];\n```\n\n*Example 2:*\n\n```sqf\n_apc addBackpackCargoGlobal [\"US_Patrol_Pack_EP1\", 4];\n```","commands\\addBackpackGlobal.md":"Adds a backpack to a unit (even non-local).\n\n\n---\n*Syntaxes:*\n\nunit `addBackpackGlobal` backpack\n\n---\n*Example 1:*\n\n```sqf\nplayer addBackpackGlobal \"B_AssaultPack_khk\";\n```\n\n*Example 2:*\n\n```sqf\n_unit spawn \n{\n\tif (!isNull backpackContainer _this) then\n\t{\n\t\tremoveBackpackGlobal _this;\n\t\twaitUntil { isNull backpackContainer _this };\n\t};\n\t_this addBackpackGlobal \"B_AssaultPack_khk\";\n\twaitUntil { !isNull backpackContainer _this };\n\tbackpackContainer _this addMagazineCargoGlobal [\"30Rnd_556x45_Stanag\",5];\n};\n```","commands\\addBinocularItem.md":"Adds weapon item, including magazine, directly to the `binocular` weapon. This is used for infantry weapons.\n\n\n---\n*Syntaxes:*\n\nunit `addBinocularItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addBinocularItem \"Laserbatteries\";\n```","commands\\addCamShake.md":"Creates the camera shaking effect, like when you are near an explosion\n\n\n---\n*Syntaxes:*\n\n`addCamShake`  [power, duration, frequency]\n\n---\n*Example 1:*\n\n```sqf\naddCamShake [10, 2, 25]; // Shakes the camera for 1 second\n```\n\n*Example 2:*\n\n```sqf\nenableCamShake true;\naddCamShake [5, 5, 25];\n```","commands\\addCuratorAddons.md":"Allow curator use of given addon.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `addCuratorAddons` addons\n\n---\n*Example 1:*\n\n```sqf\ncuratorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];\n```\n\n*Example 2:*\n\n```sqf\ncuratorObj addCuratorAddons [\"A3_Modules_F_Curator_Lightning\"];\n```\n\n*Example 3:*\n\nAddons can be stacked:\n\n```sqf\ncuratorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];\ncuratorObj addCuratorAddons [\"A3_Modules_F_Curator_Lightning\"];\ndiag_log curatorAddons curatorObj;\n```\n<br>\n\n```sqf\n[\n\t\"A3_Armor_F_AMV\",\n\t\"A3_Armor_F_Panther\",\n\t\"A3_Modules_F_Curator_Lightning\"\n]\n```","commands\\addCuratorCameraArea.md":"Adds or changes curator camera area (depends on if ID is already used).\n\n\n---\n*Syntaxes:*\n\ncuratorObj `addCuratorCameraArea` [cameraAreaID, position, radius]\n\n---\n*Example 1:*\n\n```sqf\nmyCurator addCuratorCameraArea [3,position mySoldier,300];\n```","commands\\addCuratorEditableObjects.md":"Register objects which can be edited by a curator.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `addCuratorEditableObjects` [objects, addCrew]\n\n---\n*Example 1:*\n\n```sqf\nMyCuratorModule addCuratorEditableObjects [[MyCar], true];\n```","commands\\addCuratorEditingArea.md":"Adds or changes curator edit area (depends on if ID is already used).\n\n\n---\n*Syntaxes:*\n\ncuratorObj `addCuratorEditingArea` [editAreaID, position, radius]\n\n---\n*Example 1:*\n\n```sqf\nmyCurator addCuratorEditingArea [4, position player, 1000];\n```","commands\\addCuratorPoints.md":"Adds or removes curator points. Points can be only in range from 0 to 1.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `addCuratorPoints` points\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule addCuratorPoints 0.5;\n```","commands\\addEditorObject.md":"Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional.\n\n\n---\n*Syntaxes:*\n\nmap `addEditorObject` [type,[name1,value1,...],subtype class]\n\n---\n*Example 1:*\n\n-","commands\\addEventHandler.md":"Adds an Event Handler to the given object.\n* As many Event Handlers of any type can be added - existing Event Handlers do not get overwritten\n* Use `removeEventHandler` to remove an Event Handler\nRead `Event Handlers` for more information and a list of all available Event Handlers.\n\n\n---\n*Syntaxes:*\n\ntarget `addEventHandler` [type, code]\n\n---\n*Example 1:*\n\n```sqf\nthis addEventHandler [\"Killed\", {\n\tparams [\"_unit\", \"_killer\"];\n\tsystemChat format [\"%1 has been killed by %2.\", _unit, _killer];\n}];\n```\n\n*Example 2:*\n\n<sqs>_index = player addEventHandler [\"Killed\", { _this exec \"playerKilled.sqs\" }]</sqs>","commands\\addForce.md":"Applies impulse force to given PhysX object at given position.\n\n\n---\n*Syntaxes:*\n\nobject `addForce`  [force, position]\n\n---\n*Example 1:*\n\nApply force [0,1000,0] defined in world space (not factoring object actual positioning) to object position [1,0,0]:\n\n```sqf\n_object addForce [[0,1000,0], [1,0,0]];\n```\n\n*Example 2:*\n\nApply force [0,1000,0] defined in model space (relative to object) to object position [1,0,0]:\n\n```sqf\n_object addForce [_object vectorModelToWorld [0,1000,0], [1,0,0]];\n```\n\n*Example 3:*\n\nCan be used on units since {{arma3}} v2.04:\n\n```sqf\nif (local bob) then\n{\n\t[] spawn \n\t{\n\t\tbob addForce [bob vectorModelToWorld [0,-200,0], bob selectionPosition \"rightfoot\"];\n\t\tsleep 5;\n\t\tbob setUnconscious false;\n\t};\n};\n```","commands\\addForceGeneratorRTD.md":"Adds force generator to world.\n\n\n---\n*Syntaxes:*\n\n`addForceGeneratorRTD` parameters\n\n---\n","commands\\addGoggles.md":"Create a new item and try to link it into goggles (glasses) slot.\n\n\n---\n*Syntaxes:*\n\nunit `addGoggles` type\n\n---\n*Example 1:*\n\n```sqf\nplayer addGoggles \"G_Tactical_Clear\";\n```\n\n*Example 2:*\n\n```sqf\ndiver addGoggles \"G_Diving\";\n```","commands\\addGroupIcon.md":"Adds icon to a group leader. Returns icon ID, Control icons visibility with `setGroupIconsVisible`.\n\n\n---\n*Syntaxes:*\n\ngroup `addGroupIcon` [iconClass, offset]\n\n---\n*Example 1:*\n\n```sqf\ngroupName addGroupIcon [\"b_inf\", [offsetX, offsetY]];\n```\n\n*Example 2:*\n\n```sqf\n// Enable icons in 2D and 3D \nsetGroupIconsVisible [true, true]; \nsetGroupIconsSelectable true; \n \n// Add the icon for all existing groups \nallGroups apply \n{ \n  private _icon = [\"o_inf\", \"b_inf\", \"n_inf\", \"c_unknown\"] select (side _x call BIS_fnc_sideID); \n  private _color = [side _x, false] call BIS_fnc_sideColor; \n  _x addGroupIcon [_icon, [0, 0]]; \n  _x setGroupIconParams [_color, groupID _x, linearConversion [1, 15, count units _x, 0.5, 3, false], true]; \n}; \n \n// Add group event handler to all existing groups to handle to icon sizing \nallGroups apply  \n{ \n  _x addEventHandler [\"UnitLeft\",  \n  { \n    params [\"_group\"]; \n    getGroupIconParams group player params [\"_color\", \"_text\", \"_scale\", \"_visibility\"]; \n    _group setGroupIconParams [_color, _text, linearConversion [1, 15, count units _group, 0.5, 2, true], _visibility]; \n  }]; \n}; \n \n// Add the icons whenever a group get's created \naddMissionEventHandler [\"GroupCreated\", \n{ \n  params [\"_group\"]; \n  _group spawn \n  { \n    params [\"_group\"]; \n    private _start = diag_tickTime; \n    waitUntil {sleep 1; units _group isNotEqualTo [] || diag_tickTime - _start > 5}; \n    if (units _group isEqualTo []) exitWith {}; \n \n    private _icon = [\"o_inf\", \"b_inf\", \"n_inf\", \"c_unknown\"] select (side _group call BIS_fnc_sideID); \n    private _color = [side _group, false] call BIS_fnc_sideColor; \n \n    _group addGroupIcon [_icon, [0, 0]]; \n     \n    // Scale icon depending on group size \n    _group setGroupIconParams [_color, groupID _group, linearConversion [1, 15, count units _group, 0.5, 2, true], true]; \n \n    _group addEventHandler [\"UnitLeft\",  \n    { \n      params [\"_group\"]; \n      getGroupIconParams group player params [\"_color\", \"_text\", \"_scale\", \"_visibility\"]; \n      _group setGroupIconParams [_color, _text, linearConversion [1, 15, count units _group, 0.5, 2, true], _visibility]; \n    }]; \n  };   \n}]; \n \n// Show group info when hovering over an icon (2D/3D) \naddMissionEventHandler [\"GroupIconOverEnter\", \n{ \n  params \n  [ \n    \"_is3D\", \"_group\", \"_waypointId\", \n    \"_posX\", \"_posY\", \n    \"_shift\", \"_control\", \"_alt\" \n  ]; \n  hintSilent parseText format \n  [ \n    \"<t align='left' font='EtelkaMonospacePro'><br/><t size='1.2'>General Information:</t><br/>Callsign: %1<br/>Leader: %2<br/>No. of Units: %3<br/>Delete when Empty: %4<br/><br/><t size='1.2'>Group Status:</t><br/>Health: %5<br/>Fleeing: %6<br/>Attack Enabled: %7<br/>Combat Behaviour: %8<br/>Combat Mode: %9<br/>Formation: %10<br/>Speed: %11<br/><br/><t size='1.2'>Waypoints:</t><br/>No. of Waypoints: %12<br/>Current Waypoint: %13<br/>Speed: %14</t>\", \n    format [\"%1 (%2)\",groupID _group, if (vehicle leader _group isNotEqualTo leader _group) then {[configFile >> \"CfgVehicles\" >> typeOf vehicle leader _group ] call BIS_fnc_displayName} else {\"-\"}], \n    name leader _group, \n    count units _group, \n    isGroupDeletedWhenEmpty _group, \n    units _group apply {str round ((1 - damage _x)* 100) + \" %\"}, \n    fleeing leader _x, \n    attackEnabled _group, \n    combatBehaviour _group, \n    combatMode _group, \n    formation _group, \n    speedMode _group, \n    count waypoints _group, \n    waypointType [_group, currentWaypoint _group], \n    units _group apply {str round speed _x + \" km/h\"} \n  ];\n\n  if !(_group getVariable [\"IconEnlarged\", false]) then\n  {\n    _group setVariable [\"IconEnlarged\", true];\n\n    getGroupIconParams _group params [\"_color\", \"_text\", \"_scale\", \"_visibility\"]; \n    _group setGroupIconParams [_color, _text, _scale * 1.25, _visibility];\n  };\n}]; \n \n// Remove the hint whenever the mouse is leaving the icon area (2D/3D) \naddMissionEventHandler [\"GroupIconOverLeave\", \n{ \n  params \n  [ \n    \"_is3D\", \"_group\", \"_waypointId\", \n    \"_posX\", \"_posY\", \n    \"_shift\", \"_control\", \"_alt\" \n  ]; \n  hintSilent \"\";\n\n  if (_group getVariable [\"IconEnlarged\", false]) then\n  {\n    _group setVariable [\"IconEnlarged\", false];\n\n    getGroupIconParams _group params [\"_color\", \"_text\", \"_scale\", \"_visibility\"]; \n    _group setGroupIconParams [_color, _text, linearConversion [1, 15, count units _group, 0.5, 2, true], _visibility];\n  };\n}]; \n \n// Delete group and its units when clicking on the icon \naddMissionEventHandler [\"GroupIconClick\", \n{ \n  params \n  [ \n    \"_is3D\", \"_group\", \"_waypointId\", \n    \"_mouseButton\", \"_posX\", \"_posY\", \n    \"_shift\", \"_control\", \"_alt\" \n  ]; \n \n  if (!_shift && _control && !_alt) then \n  { \n    units _group apply {deleteVehicle _x}; \n    deleteGroup _group; \n  }; \n}];\n```","commands\\addHandgunItem.md":"Adds weapon item, including magazine, directly to the `handgunWeapon`. This is used for infantry weapons.\n\n\n---\n*Syntaxes:*\n\nunit `addHandgunItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addHandgunItem \"muzzle_snds_L\";\n```","commands\\addHeadgear.md":"Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.\n\n\n---\n*Syntaxes:*\n\nunit `addHeadgear` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addHeadgear \"H_HelmetB\";\n```","commands\\addItem.md":"Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.\n\n\n---\n*Syntaxes:*\n\nunit `addItem` item\n\n---\n*Example 1:*\n\n```sqf\n// identical to bluforUnit linkItem \"NVGoggles\"\n// addItem then assignItem makes the item go through through inventory storage and fail if storage space was missing\nbluforUnit addItem \"NVGoggles\";\nbluforUnit assignItem \"NVGoggles\";\n\nopforUnit addItem \"NVGoggles_OPFOR\";\nopforUnit assignItem \"NVGoggles_OPFOR\";\n\nindependentUnit addItem \"NVGoggles_INDEP\";\nindependentUnit assignItem \"NVGoggles_INDEP\";\n```","commands\\addItemCargo.md":"Creates new items and stores them in given container.\nWorks with [[Arma_3:_CfgWeapons_Items|items]], [[Arma_3:_CfgWeapons_Weapons|weapons]], [[Arma_3:_CfgMagazines|magazines]], [[Arma_3:_CfgWeapons_Equipment|equipment]] and [[Arma_3:_Characters_And_Gear_Encoding_Guide#Facewear_configuration|glasses]] but not backpacks.\nIn the latter case use `addBackpackCargo` instead. For the global variant, see `addItemCargoGlobal`.\n\n\n---\n*Syntaxes:*\n\nbox `addItemCargo` [item, count]\n\n---\n*Example 1:*\n\n```sqf\nsupplyBox addItemCargo [\"optic_ARCO\", 10];\n```","commands\\addItemCargoGlobal.md":"Global variant of `addItemCargo`.\n\n\n---\n*Syntaxes:*\n\nbox `addItemCargoGlobal` [item, count]\n\n---\n*Example 1:*\n\n```sqf\nsupplyBox addItemCargoGlobal [\"optic_Arco\", 10];\n```","commands\\addItemPool.md":"Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)\n\n\n---\n*Syntaxes:*\n\n`addItemPool` [itemName, count]\n\n---\n*Example 1:*\n\n```sqf\naddItemPool [\"ItemGPS\", 5];\n```","commands\\addItemToBackpack.md":"Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.\n\n\n---\n*Syntaxes:*\n\nunit `addItemToBackpack` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addItemToBackpack \"arifle_MXM_Hamr_pointer_F\";\n```\n\n*Example 2:*\n\n```sqf\nplayer addItemToBackpack \"itemGPS\";\n```","commands\\addItemToUniform.md":"Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.\n\n\n---\n*Syntaxes:*\n\nunit `addItemToUniform` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addItemToUniform \"itemGPS\";\n```\n\n*Example 2:*\n\n```sqf\nplayer addItemToUniform \"hgun_Rook40_F\";\n```","commands\\addItemToVest.md":"Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.\n\n\n---\n*Syntaxes:*\n\nunit `addItemToVest` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addItemToVest \"itemGPS\";\n```\n\n*Example 2:*\n\n```sqf\nplayer addItemToVest \"hgun_Rook40_F\";\n```","commands\\addLiveStats.md":"Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle).\n\n\n---\n*Syntaxes:*\n\nunit `addLiveStats` score\n\n---\n*Example 1:*\n\n```sqf\nplayer addLiveStats 10;\n```","commands\\addMagazine.md":"Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in {{arma3}}), any further `addMagazine` commands are ignored. If class of magazine does not exist, an error message is printed in .rpt:\n\n```sqf\nplayer addMagazine \"dasdsa\"; // .rpt: Given magazine[dasdsa] not found)\n```\n\n\n---\n*Syntaxes:*\n\nunitName `addMagazine` magazineName\n\nunitName `addMagazine` [magazineName, ammoCount]<br>\n*(Reference GVI \"arma2oa|1.62\")* *(Reference Icon \"32\" at localArgument)**(Reference Icon \"32\" at globalEffect)*<br>\n*(Reference GVI \"arma3|1.00\")* *(Reference Icon \"32\" at globalArgument)**(Reference Icon \"32\" at globalEffect)*\n\n---\n*Example 1:*\n\n```sqf\nplayer addMagazine \"30Rnd_556x45_STANAG\";\n```\n\n*Example 2:*\n\n```sqf\nplayer addMagazine [\"30Rnd_556x45_STANAG\", 15]; // since Arma 2 OA 1.62\n```\n\n*Example 3:*\n\n```sqf\nnonLocalUnit addMagazine [\"30Rnd_556x45_STANAG\", 15]; // global argument since Arma 3\n```\n\n*Example 4:*\n\n```sqf\nplayer addMagazine [\"30Rnd_556x45_STANAG\", 9999]; // will give a 30 rounds magazine anyway\n```","commands\\addMagazineAmmoCargo.md":"Adds magazines with specified ammo count to the cargo space of a vehicle or a container.\n\n\n---\n*Syntaxes:*\n\ncargospace `addMagazineAmmoCargo` [magazine, quantity, ammocount]\n\n---\n*Example 1:*\n\n```sqf\n_ammobox addMagazineAmmoCargo [\"30Rnd_65x39_caseless_mag\", 2, 5];\n```","commands\\addMagazineCargo.md":"Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored.\n\n\n---\n*Syntaxes:*\n\nvehicleName `addMagazineCargo` [magazineName, count]\n\n---\n*Example 1:*\n\n```sqf\n_truck addMagazineCargo [\"M16\", 5];\n```","commands\\addMagazineCargoGlobal.md":"Add magazines to the cargo space of vehicles, which can be taken out by infantry units.\n\nMP Synchronized\n\n\n---\n*Syntaxes:*\n\nvehicleName `addMagazineCargoGlobal` [magazineName, count]\n\n---\n*Example 1:*\n\n```sqf\n_truck addMagazineCargoGlobal [\"M16\", 5];\n```","commands\\addMagazineGlobal.md":"Adds magazine to a unit regardless of locality. This command can also be used to add magazine to a vehicle, like a static gun, for example.\n\n\n---\n*Syntaxes:*\n\nunit `addMagazineGlobal` magazineName\n\n---\n*Example 1:*\n\n```sqf\nplayer addMagazineGlobal \"30Rnd_65x39_caseless_mag\";\n```","commands\\addMagazinePool.md":"Adds magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only.\n\n\n---\n*Syntaxes:*\n\n`addMagazinePool`  [magazineName, count]\n\n---\n*Example 1:*\n\n```sqf\naddMagazinePool [\"M16\", 20];\n```","commands\\addMagazines.md":"Adds multiple magazines to the unit. For cargo containers use `addMagazineCargoGlobal` command.\n\n\n---\n*Syntaxes:*\n\nunit `addMagazines` [magazineName, count]\n\n---\n*Example 1:*\n\n```sqf\nplayer addMagazines [\"30Rnd_65x39_caseless_mag\", 3];\n```","commands\\addMagazineTurret.md":"Adds a magazine to the turret. Use turret path [-1] for driver's turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `addMagazineTurret` [magazineName, turretPath, ammoCount]\n\n---\n*Example 1:*\n\n```sqf\n_tank addMagazineTurret [\"SmokeLauncherMag\", [0,0]];\n```\n\n*Example 2:*\n\n```sqf\n_tank addMagazineTurret [\"20Rnd_120mmSABOT_M1A2\", [0]];\n```","commands\\addMenu.md":"Adds a new menu button. Priority is optional.\n\n\n---\n*Syntaxes:*\n\nmap `addMenu` [text,priority]\n\n---\n*Example 1:*\n\n-","commands\\addMenuItem.md":"Creates a new menu item. Menu can be \"file\" or \"view\",index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first).\n\n\n---\n*Syntaxes:*\n\nmap `addMenuItem` [menu or index,text,command,priority]\n\n---\n*Example 1:*\n\n-","commands\\addMissionEventHandler.md":"Adds event handler attached to the current mission and returns event handler handle. For the list of available mission event handlers see: [[Arma 3: Mission Event Handlers]]\n\n\n---\n*Syntaxes:*\n\n`addMissionEventHandler`  [event, expression, arguments]\n\n---\n*Example 1:*\n\n```sqf\n_id = addMissionEventHandler [\"PlayerDisconnected\", { systemChat str _this }];\n```\n\n*Example 2:*\n\n```sqf\n_id = addMissionEventHandler [\"EachFrame\", { systemChat str [_thisArgs, time] }, [time]];\n```","commands\\addMPEventHandler.md":"Adds a multiplayer event handler (EH) to the given object and returns EH handle.\n\n\n---\n*Syntaxes:*\n\nobject `addMPEventHandler` [type, expression]\n\n---\n*Example 1:*\n\n```sqf\n_index = player addMPEventHandler [\"MPKilled\", { _this execVM \"playerKilled.sqf\"; }];\n```","commands\\addMusicEventHandler.md":"Adds `playMusic` event handler. Returns id of the handler or -1 when failed. Like `addMissionEventHandler`, the music event handler is attached to the mission.\n\n\n---\n*Syntaxes:*\n\n`addMusicEventHandler` [type, function]\n\n---\n*Example 1:*\n\n```sqf\nprivate _ehID = addMusicEventHandler [\"MusicStart\", { hint str _this }];\n```\n\n*Example 2:*\n\n```sqf\nprivate _ehID = addMusicEventHandler [\"MusicStop\", { hint str _this }];\n```","commands\\addonFiles.md":"Returns a list of files present in the addon.<br>\n\n\n---\n*Syntaxes:*\n\n`addonFiles` [pboPrefix, fileExtension]\n\n---\n*Example 1:*\n\n```sqf\naddonFiles [\"a3\\3den\\\", \".paa\"];\n/*\n\t[\n\t\t\"a3\\3den\\data\\attributes\\formation\\ech_left_ca.paa\",\n\t\t\"a3\\3den\\data\\attributes\\formation\\stag_column_ca.paa\",\n\t\t\"a3\\3den\\data\\attributes\\stance\\down_ca.paa\",\n\t\t\"a3\\3den\\data\\cfg3den\\layer\\icondisabled_ca.paa\",\n\t\t\"a3\\3den\\data\\controlsgroups\\diagmousecontrol\\mouse_ca.paa\",\n\t\t...\n\t]\n*/\n```","commands\\addOwnedMine.md":"Sets ownership over a remotely detonatable mine to the unit.\n\n\n---\n*Syntaxes:*\n\nunit `addOwnedMine` mine\n\n---\n*Example 1:*\n\n```sqf\nplayer addOwnedMine _superMine;\n```","commands\\addPlayerScores.md":"MP server only: Adds player score.\n\n\n---\n*Syntaxes:*\n\nunit `addPlayerScores` values\n\n---\n*Example 1:*\n\n```sqf\nplayer addPlayerScores [0, 1, 0, 0, 1];\n```","commands\\addPrimaryWeaponItem.md":"Adds weapon item, including magazine, directly to the `primaryWeapon`. This is used for infantry weapons.\n\n\n---\n*Syntaxes:*\n\nunit `addPrimaryWeaponItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addPrimaryWeaponItem \"muzzle_snds_H\";\n```","commands\\addPublicVariableEventHandler.md":"\n\n\n---\n*Syntaxes:*\n\nvarName `addPublicVariableEventHandler`  code\n\nvarName `addPublicVariableEventHandler`  [target, code]\n\n---\n*Example 1:*\n\n```sqf\n\"publicThis\" addPublicVariableEventHandler {\n\thint format [\n\t\t\"%1 has been updated to: %2\",\n\t\t_this select 0,\n\t\t_this select 1\n\t]\n};\n```\n\n*Example 2:*\n\nClient:\n\n```sqf\n\"'^:)123BURP,+=lol\" addPublicVariableEventHandler {hint (\"NUTS are \" + (_this select 1))};\n```\nServer:\n\n```sqf\nmissionNamespace setVariable [\"'^:)123BURP,+=lol\", \"craZZZZy\"];\npublicVariable \"'^:)123BURP,+=lol\";\n```","commands\\addRating.md":"Add a number to the `rating` of a unit - negative values can be used to reduce the rating.\n<br>This command is usually used to reward for completed mission objectives. The rating is given at the end of the mission and is automatically adjusted when killing enemies or friendlies. \n\n<br>When the rating gets below -2000, the unit's side switches to \"ENEMY\" (`sideEnemy`) and the unit is attacked by everyone.(see `Rating Values`)\n\n<br><br>See also: [[Arma_3:_Event_Handlers#HandleRating]]\n\n\n---\n*Syntaxes:*\n\nunitName `addRating` rating\n\n---\n*Example 1:*\n\n```sqf\nplayer addRating 2000;\n```","commands\\addResources.md":"Adds resources to a team member.\n\n\n---\n*Syntaxes:*\n\nteamMember `addResources` [resource1, resource2, ...]\n\n---\n","commands\\addScore.md":"Adds a number to the score of a unit. Negative values will remove from the score.\n\n\n---\n*Syntaxes:*\n\nunit `addScore` score\n\n---\n*Example 1:*\n\n```sqf\nunit addScore 10;\n```\n\n*Example 2:*\n\n```sqf\nunit addScore -1337; // reduce the unit's score by 1337 points\n```","commands\\addScoreSide.md":"Adds side score. This is shown in the MP score tab as the total score. `MP only`.\n\n\n---\n*Syntaxes:*\n\nside `addScoreSide` value\n\n---\n*Example 1:*\n\n```sqf\nwest addScoreSide 10;\n```","commands\\addSecondaryWeaponItem.md":"Adds weapon item, including magazine, directly to the `secondaryWeapon`. This is used for infantry weapons.\n\n\n---\n*Syntaxes:*\n\nunit `addSecondaryWeaponItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer addSecondaryWeaponItem \"muzzle_snds_L\";\n```","commands\\addSwitchableUnit.md":"Adds a unit to the list of units available for `Team Switch`. Units marked as `playable` in editor are automatically switchable.\nThis command adds non-playable unit into array of `switchableUnits` and makes them available for `teamSwitch`. `Singleplayer only!`\n\n\n---\n*Syntaxes:*\n\n`addSwitchableUnit` unit\n\n---\n*Example 1:*\n\n```sqf\naddSwitchableUnit bob;\n```","commands\\addTeamMember.md":"Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.\n\n<br><br> The same `Team Member` can be member of several different `teams` at the same time.\n\n\n---\n*Syntaxes:*\n\nteam `addTeamMember` member\n\n---\n*Example 1:*\n\n```sqf\n_team addTeamMember _teamMember;\n```","commands\\addToRemainsCollector.md":"Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in `description.ext`\n\n\n---\n*Syntaxes:*\n\n`addToRemainsCollector` remains\n\n---\n*Example 1:*\n\n```sqf\naddToRemainsCollector [unit1, unit2, vehicle1];\n```","commands\\addTorque.md":"[[Image:addTorque_correct.jpg|400px|right]]\nApplies torque (rotation momentum) to the ` center of mass` of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by `vectorModelToWorld` or `vectorModelToWorldVisual` command. The torque applied as impulse. Diagram below explain which way the object would rotate.  For more information see [http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/apireference/files/classPxRigidBody.html#acb04ffc816d45afff2d04e93d7446e79 NVIDIA docs] <br>\n\n\n---\n*Syntaxes:*\n\nobject `addTorque` torque\n\n---\n*Example 1:*\n\nApply torque [1000,0,0] to object not factoring object positioning:\n\n```sqf\n_wheel addTorque [1000,0,0];\n```\n\n*Example 2:*\n\nApply torque [1000,0,0] relative to object:\n\n```sqf\n_wheel addTorque (_wheel vectorModelToWorld [1000,0,0]);\n```","commands\\addUniform.md":"Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier).\n\n\n---\n*Syntaxes:*\n\nunit `addUniform` type\n\n---\n*Example 1:*\n\n```sqf\n_unit addUniform \"U_B_CombatUniform_mcam\";\n```","commands\\addUserActionEventHandler.md":"Adds a user action event handler to the current mission and returns its event handler index.\n\n\n---\n*Syntaxes:*\n\n`addUserActionEventHandler`  [keyName, event, expression]\n\n---\n*Example 1:*\n\n```sqf\nprivate _ehId = addUserActionEventHandler [\"ReloadMagazine\", \"Activate\", { systemChat \"reloading!\"; }];\n```","commands\\addVehicle.md":"Adds a specified vehicle for use by a specified AI led group.\n\n\n---\n*Syntaxes:*\n\ngroupName `addVehicle` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_grp addVehicle _vehicle;\n```\n\n*Example 2:*\n\nUsing on crewed vehicle:\n\n```sqf\ngroup tank addVehicle tank;\n```","commands\\addVest.md":"Create a new vest and try to link it into vest slot.\n\n\n---\n*Syntaxes:*\n\nunit `addVest` type\n\n---\n*Example 1:*\n\n```sqf\nplayer addVest \"V_TacVest_blk_POLICE\";\n```","commands\\addWaypoint.md":"Adds (or inserts when index is given) a new waypoint to a group.\n\nThe waypoint is placed randomly within a circle with the given center and radius.\n\nThe function returns a waypoint with format [group, index].<br><br>\n\n\n---\n*Syntaxes:*\n\ngroupName `addWaypoint` [center, radius, index, name]\n\n---\n*Example 1:*\n\n```sqf\n_wp = _grp addWaypoint [position player, 0];\n```","commands\\addWeapon.md":"Add a weapon to a unit. For a global version of this command see `addWeaponGlobal`.\n\nInfantry units can only carry a specific number of weapons, once the weapon slots are filled, any further `addWeapon` commands are ignored.\n\n\n---\n*Syntaxes:*\n\nobject `addWeapon` weapon\n\n---\n*Example 1:*\n\n```sqf\nplayer addMagazine \"30Rnd_556x45_Stanag\";\nplayer addWeapon \"BAF_L85A2_RIS_SUSAT\";\n```\n\n*Example 2:*\n\n```sqf\nAn_2 addMagazine \"100Rnd_762x51_M240\";\nAn_2 addWeapon \"M240_veh\";\n```","commands\\addWeaponCargo.md":"Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space.\n\n\n---\n*Syntaxes:*\n\nvehicleName `addWeaponCargo` [weaponName, count]\n\n---\n*Example 1:*\n\n```sqf\n_truck addWeaponCargo [\"M16\", 5];\n```","commands\\addWeaponCargoGlobal.md":"Add weapons to the cargo space of vehicles, which can be taken out by infantry units.\n\n\n---\n*Syntaxes:*\n\nvehicleName `addWeaponCargoGlobal` [weaponName, count]\n\n---\n*Example 1:*\n\n```sqf\n_truck addWeaponCargoGlobal [\"M16\", 5];\n```","commands\\addWeaponGlobal.md":"Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the `addWeaponGlobal` command will replace the weapon currently in a slot with the added weapon if it shares the same slot. This command can link items to respective slots as well, in which case the functionality is identical to `linkItem`.\n\nTo make sure the added weapon is loaded and ready, add the magazine first.\n\n\n---\n*Syntaxes:*\n\nobject `addWeaponGlobal` weapon\n\n---\n*Example 1:*\n\n```sqf\n{\n\t_x addMagazineGlobal \"Laserbatteries\";\n\t_x addWeaponGlobal \"Laserdesignator\";\n} forEach allUnits;\n```\n\n*Example 2:*\n\n```sqf\n{\n\tif (typeOf _x == \"O_Heli_Attack_02_black_F\") then {\n\t\t_x addMagazineGlobal \"38Rnd_80mm_rockets\";\n\t\t_x addWeaponGlobal \"rockets_Skyfire\";\n\t};\n} forEach vehicles;\n```","commands\\addWeaponItem.md":"Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.\n\n\n---\n*Syntaxes:*\n\nunit `addWeaponItem` [weaponName, itemName, instant]\n\nunit `addWeaponItem` [weaponName, [itemName, ammoCount, muzzleName], instant]\n\n---\n*Example 1:*\n\n```sqf\nplayer addWeaponItem [\"arifle_MX_GL_ACO_F\", \"1Rnd_HE_Grenade_shell\"];\n```\n\n*Example 2:*\n\n```sqf\nplayer addWeaponItem [\"arifle_MX_GL_ACO_F\", [\"1Rnd_HE_Grenade_shell\", 1, \"GL_3GL_F\"]];\n```\n\n*Example 3:*\n\n```sqf\nplayer addWeaponItem [\"LaserDesignator\", \"LaserBatteries\"];\n```","commands\\addWeaponPool.md":"Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only.\n\n\n---\n*Syntaxes:*\n\n`addWeaponPool`  [weaponName, count]\n\n---\n*Example 1:*\n\n```sqf\naddWeaponPool [\"M16\",5];\n```","commands\\addWeaponTurret.md":"Adds a weapon to the turret. Use turret path [-1] for driver's turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `addWeaponTurret` [weaponName, turretPath]\n\n---\n*Example 1:*\n\n```sqf\n_tank addWeaponTurret [\"LMG_M200\", [0,0]];\n```","commands\\addWeaponWithAttachmentsCargo.md":"Adds a weapon into the cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.\n\n\n---\n*Syntaxes:*\n\ncontainer `addWeaponWithAttachmentsCargo` [weaponConfiguration, weaponsCount]\n\n---\n*Example 1:*\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargo [[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2];\n```\n\n*Example 2:*\n\nAdd five MX GL rifles, each with flashlight side attachment, a full 30 rounds magazine loaded into the gun and a full 3Rnd HE grenade magazine loaded into the grenade launcher:\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargo [[\"arifle_MX_GL_F\", \"\", \"acc_flashlight\", \"\", [\"30Rnd_65x39_caseless_mag\", 30], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 5];\n```\n\n*Example 3:*\n\nAdd one MX rifle without any attachments or magazines event though the class has linked items:\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargo [[\"arifle_MX_Holo_pointer_F\", \"\", \"\", \"\", [], [], \"\"], 1];\n```\n\n*Example 4:*\n\nAdd all weapons on player with attachments:\n\n```sqf\n{ cursorObject addWeaponWithAttachmentsCargo [_x, 1] } forEach weaponsItems player;\n```","commands\\addWeaponWithAttachmentsCargoGlobal.md":"Adds a weapon into the cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.\n\n\n---\n*Syntaxes:*\n\ncontainer `addWeaponWithAttachmentsCargoGlobal` [weaponConfiguration, weaponsCount]\n\n---\n*Example 1:*\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargoGlobal [[\"arifle_MX_GL_F\", \"muzzle_snds_H\", \"\", \"optic_aco\", [\"30Rnd_65x39_caseless_mag\", 15], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 2];\n```\n\n*Example 2:*\n\nAdd five MX GL rifles, each with flashlight side attachment, a full 30 rounds magazine loaded into the gun and a full 3Rnd HE grenade magazine loaded into the grenade launcher:\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargoGlobal [[\"arifle_MX_GL_F\", \"\", \"acc_flashlight\", \"\", [\"30Rnd_65x39_caseless_mag\", 30], [\"3Rnd_HE_Grenade_shell\", 2], \"\"], 5];\n```\n\n*Example 3:*\n\nAdd one MX rifle without any attachments or magazines event though the class has linked items:\n\n```sqf\ncursorObject addWeaponWithAttachmentsCargoGlobal [[\"arifle_MX_Holo_pointer_F\", \"\", \"\", \"\", [], [], \"\"], 1];\n```\n\n*Example 4:*\n\nAdd all weapons on player with attachments:\n\n```sqf\n{ cursorObject addWeaponWithAttachmentsCargoGlobal [_x, 1] } forEach weaponsItems player;\n```","commands\\admin.md":"This is dedicated server command, which queries the admin state of any client on the network by their client (`owner`) id.\n\n\n---\n*Syntaxes:*\n\n`admin` ownerID\n\n---\n*Example 1:*\n\n```sqf\nprivate _isLoggedInAdmin = admin 3 == 2;\n```\n\n*Example 2:*\n\n```sqf\nprivate _adminState = admin owner unit1;\n```","commands\\agent.md":"Return a person for a given agent.\n\n\n---\n*Syntaxes:*\n\n`agent` teamMember\n\n---\n*Example 1:*\n\n```sqf\n_obj = agent teamMember _unit;\n```","commands\\agents.md":"Return a list of agents in the current mission.\n\n\n---\n*Syntaxes:*\n\n`agents`\n\n---\n*Example 1:*\n\n```sqf\n{agent _x moveTo position player} forEach agents;\n```","commands\\AGLToASL.md":"Converts position from `PositionAGL` to `PositionASL`.\n\n\n---\n*Syntaxes:*\n\n`AGLToASL` posAGL\n\n---\n*Example 1:*\n\n```sqf\n_playerPosASL = AGLToASL (player modelToWorld [0,0,0]);\n```\n\n*Example 2:*\n\n```sqf\n_camPosASL = AGLToASL positionCameraToWorld [0,0,0];\n```","commands\\aimedAtTarget.md":"Returns how good the weapon of the vehicle is aimed at the target.\n\n\n---\n*Syntaxes:*\n\nvehicle `aimedAtTarget` [target, weapon]\n\n---\n*Example 1:*\n\n```sqf\n_aimingQuality = heli aimedAtTarget [target];\n```\n\n*Example 2:*\n\n```sqf\n_aimingQuality = heli aimedAtTarget [target, \"M197\"];\n```","commands\\aimPos.md":"Returns the position of the object other units can aim to.\n\n\n---\n*Syntaxes:*\n\n`aimPos`  unit\n\n---\n*Example 1:*\n\n```sqf\n_aimPos = aimPos player;\n```","commands\\airDensityCurveRTD.md":"Returns array with air density data.\n\n\n---\n*Syntaxes:*\n\n`airDensityCurveRTD`\n\n---\n*Example 1:*\n\n```sqf\nprivate _densityArray = airDensityCurveRTD;\n```","commands\\airDensityRTD.md":"Returns air density in given altitude.\n\n\n---\n*Syntaxes:*\n\n`airDensityRTD` altitude\n\n---\n*Example 1:*\n\n```sqf\n_density = airDensityRTD 0; // returns 1.22406\n```\n\n*Example 2:*\n\n```sqf\n_density = airDensityRTD 1000; // Returns 1.11096\n```","commands\\airplaneThrottle.md":"Returns throttle position. Works only on player's vehicle.\n\n\n---\n*Syntaxes:*\n\n`airplaneThrottle` airplane\n\n---\n*Example 1:*\n\n```sqf\nprivate _throttle = airplaneThrottle objectParent player;\n```","commands\\airportSide.md":"Gets the side of an airport, set by `setAirportSide`. Default side is `sideUnknown`.\n\n\n---\n*Syntaxes:*\n\n`airportSide` id\n\n`airportSide` target\n\n---\n*Example 1:*\n\n```sqf\nprivate _airportSide = airportSide 0;\n```","commands\\AISFinishHeal.md":"Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using \"HandleHeal\" event handler.\n\n\n---\n*Syntaxes:*\n\n`AISFinishHeal` [unit, healer, healerCanHeal]\n\n---\n*Example 1:*\n\n```sqf\nAISFinishHeal [_wounded, _medic, true];\n```","commands\\alive.md":"Check if given vehicle/person/building is alive (i.e. not dead or destroyed).\n\n\n---\n*Syntaxes:*\n\n`alive` object\n\n---\n*Example 1:*\n\nSQS:\n<sqs>? not alive player : exit</sqs>\n\n*Example 2:*\n\nSQF:\n\n```sqf\nif (!alive player) exitWith {};\n```\n\n*Example 3:*\n\n```sqf\nalive objNull; // returns false\n```","commands\\all3DENEntities.md":"Returns an array of all currently placed `Eden Editor entities`.\n\n\n---\n*Syntaxes:*\n\n[[all3DENEntities]]\n\n---\n*Example 1:*\n\n```sqf\nsystemChat str all3DENEntities;\n```\n\n*Example 2:*\n\n```sqf\nall3DENEntities params [\"_objects\", \"_groups\", \"_triggers\", \"_systems\", \"_waypoints\", \"_markers\", \"_layers\", \"_comments\"];\n```","commands\\allActiveTitleEffects.md":"Returns a list of all layers that have currently active title effect. Numbers equal to or greater than 0 represent cut layers, where as -1 represents title layer (see `Title Effect Type`). Named layers are represented by their respective index.\n\n\n---\n*Syntaxes:*\n\n`allActiveTitleEffects`\n\n---\n*Example 1:*\n\n```sqf\ncutText [\"Hello World!\" ,\"PLAIN\", 2];\nhint str allActiveTitleEffects; // [0]\n```\n\n*Example 2:*\n\n```sqf\n21 cutText [\"Hello World!\", \"PLAIN\", 2];\nhint str allActiveTitleEffects; // [21]\n```\n\n*Example 3:*\n\n```sqf\ncutText [\"Hello World!\", \"PLAIN\", 2];\ntitleText [\"Hello World!\", \"PLAIN\", 2];\nhint str allActiveTitleEffects; // [-1, 0]\n```","commands\\allAddonsInfo.md":"Returns the list of all loaded addons.\n\n\n---\n*Syntaxes:*\n\n`allAddonsInfo`\n\n---\n*Example 1:*\n\n```sqf\nallAddonsInfo\n/*\n\t[\n\t\t[\"bin\\\",\"146398\",false],\n\t\t[\"core\\\",\"129618\",false],\n\t\t[\"Languagecore_F\\\",\"148726\",false],\n\t\t[\"a3\\air_f_enoch\\\",\"145904\",false],\n\t\t[\"a3\\anims_f_enoch\\\",\"146917\",false],\n\t\t[\"a3\\armor_f_enoch\\\",\"145904\",false],\n\t\t...\n\t]\n*/\n```","commands\\allAirports.md":"Returns all map airports, both static and dynamic.\n\n\n---\n*Syntaxes:*\n\n`allAirports`\n\n---\n*Example 1:*\n\n```sqf\n_airplane landAt selectRandom (allAirports select 0);\n```","commands\\allControls.md":"Returns a list of all controls for desired existing display. Returned controls also include controls from `CT_CONTROLS_GROUP`s.\n\n\n---\n*Syntaxes:*\n\n`allControls` display\n\n`allControls` controlsGroup\n\n---\n*Example 1:*\n\n```sqf\n_allCtrls = allControls findDisplay 46;\n```\n\n*Example 2:*\n\n```sqf\n_allSubCtrls = allControls _myControlsGroup;\n```","commands\\allCurators.md":"Returns list of all curator logic units, not the units assigned to the logic.\n\n\n---\n*Syntaxes:*\n\n`allCurators`\n\n---\n*Example 1:*\n\n```sqf\n_allCuratorLogics = allCurators;\n```","commands\\allCutLayers.md":"Returns all named layers used by `cutRsc`, `cutText`, `cutObj` or `cutFadeOut`.\nThe layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so:\n\n```sqf\nprivate _layerNum = \"TAG_myLayerName\" cutFadeOut 0;\n```\n\n\n---\n*Syntaxes:*\n\n`allCutLayers`\n\n---\n*Example 1:*\n\n```sqf\nprivate _allLayers = allCutLayers;\n```","commands\\allDead.md":"Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles.\n\n\n---\n*Syntaxes:*\n\n`allDead`\n\n---\n*Example 1:*\n\n```sqf\n{ deleteVehicle _x } forEach allDead;\n```\n\n*Example 2:*\n\nallAlive:\n\n```sqf\n_all = allUnits + vehicles;\n{\n\t_all pushBack agent _x;\n} forEach (agents - [teamMemberNull]);\nallAlive = _all - allDead;\n```","commands\\allDeadMen.md":"Return a list of dead units including agents. Dead unit might be inside vehicle.\n\n\n---\n*Syntaxes:*\n\n`allDeadMen`\n\n---\n*Example 1:*\n\n```sqf\n{ deleteVehicle _x } forEach allDeadMen;\n```","commands\\allDiaryRecords.md":"Returns array with all `Diary` Records for the given subject available to the given person. See `Diary` for the explanation on the available subjects and their structure.\n\n\n---\n*Syntaxes:*\n\nperson `allDiaryRecords` subject\n\n---\n*Example 1:*\n\n```sqf\nplayer allDiaryRecords \"Diary\";\n```","commands\\allDiarySubjects.md":"Returns array with all `Diary` subjects available to the given person. See `Diary` for the explanation on the available subjects and their structure.\n\n\n---\n*Syntaxes:*\n\n`allDiarySubjects` person\n\n---\n*Example 1:*\n\n```sqf\nallDiarySubjects player;\n```","commands\\allDisplays.md":"Returns a list of all opened GUI displays.\n\n\n---\n*Syntaxes:*\n\n`allDisplays`\n\n---\n*Example 1:*\n\n```sqf\nprivate _allDisps = allDisplays;\n```","commands\\allEnv3DSoundSources.md":"Returns all environmental 3D sound sources (`Object`s) like trees and houses in camera vicinity.\n\n\n---\n*Syntaxes:*\n\n[[allEnv3DSoundSources]]\n\n---\n*Example 1:*\n\n```sqf\nprivate _sources = allEnv3DSoundSources;\n```","commands\\allGroups.md":"Return a list of all groups created on the following sides `east`, `west`, `resistance`/`independent` and `civilian` only. Does not contain groups of `sideLogic`.\n\n\n---\n*Syntaxes:*\n\n`allGroups`\n\n---\n*Example 1:*\n\n```sqf\n{ leader _x sideChat \"Go ! Go ! Go !\" } forEach allGroups;\n```\n\n*Example 2:*\n\nAll groups with players:\n\n```sqf\nprivate _allGroupsWithPlayers = [];\n{ _allGroupsWithPlayers pushBackUnique group _x } forEach allPlayers;\n```","commands\\allLODs.md":"Returns the list of object or model `LOD`s.\n\n\n---\n*Syntaxes:*\n\n`allLODs` objectOrModel\n\n---\n*Example 1:*\n\n```sqf\nallLODs player;\n/*\n\t[\n\t\t[0,\"1\",1,91],\n\t\t[1,\"2\",2,91],\n\t\t[2,\"3\",3,84],\n\t\t[3,\"4\",4,43],\n\t\t[4,\"5\",5,34],\n\t\t[5,\"VIEW_PILOT\",1100,89],\n\t\t[6,\"shadow(0)\",10000,80],\n\t\t[7,\"shadow(10)\",10010,33],\n\t\t[8,\"geometry\",1e+013,42],\n\t\t[9,\"memory\",1e+015,55],\n\t\t[10,\"landContact\",2e+015,0],\n\t\t[11,\"hitpoints\",5e+015,33],\n\t\t[12,\"geometryView\",6e+015,19],\n\t\t[13,\"geometryFire\",7e+015,57],\n\t\t[14,\"shadow(1000)\",11000,80],\n\t\t[15,\"shadow(1010)\",11010,33]\n\t]\n*/\n```\n\n*Example 2:*\n\n```sqf\nallLODs getText (configFile >> \"CfgWeapons\" >> \"arifle_MX_F\" >> \"model\");\n/*\n\t[\n\t\t[0,\"1\",1,17],\n\t\t[1,\"2\",2,17],\n\t\t[2,\"3\",3,16],\n\t\t[3,\"4\",4,14],\n\t\t[4,\"5\",5,12],\n\t\t[5,\"6\",6,9],\n\t\t[6,\"VIEW_PILOT\",1100,16],\n\t\t[7,\"shadow(0)\",10000,2],\n\t\t[8,\"shadow(10)\",10010,0],\n\t\t[9,\"geometry\",1e+013,0],\n\t\t[10,\"geometrySimple\",2e+013,0],\n\t\t[11,\"memory\",1e+015,13],\n\t\t[12,\"geometryView\",6e+015,2],\n\t\t[13,\"shadow(1000)\",11000,2],\n\t\t[14,\"shadow(1010)\",11010,0]\n\t]\n*/\n```","commands\\allMapMarkers.md":"Returns all markers in map including user placed markers (_USER_DEFINED #). <br><br>\nSince Arma 3 v1.58 User defined markers have the following name format: <br>**_USER_DEFINED #<PlayerID>/<MarkerID>/<ChannelID>** where:\n* <PlayerID> - unique network id of the player in `String` format, also available as `String` in the 6th param in [[Arma 3: Mission Event Handlers#PlayerConnected | \"PlayerConnected\"]] and [[Arma 3: Mission Event Handlers#PlayerDisconnected|\"PlayerDisconnected\"]] EHs \n* <MarkerID> - a marker counter id\n* <ChannelID> - id of the chat channel on which marker was placed (see `currentChannel`)\nFor custom waypoint position (LShift+LMB) see `customWaypointPosition`\n\n\n---\n*Syntaxes:*\n\n`allMapMarkers`\n\n---\n*Example 1:*\n\n```sqf\n_markers = allMapMarkers;\n```\n\nreturns: [\"marker1\",\"_USER_DEFINED #2/0\"]\n\n*Example 2:*\n\n```sqf\n{\n\tprivate \"_a\";\n\t_a = toArray _x;\n\t_a resize 15;\n\tif (toString _a == \"_USER_DEFINED #\") then\n\t{\n\t\tdeleteMarker _x;\n\t}\n} forEach allMapMarkers;\n```\n\n*Example 3:*\n\n```sqf\nif (_someString in allMapMarkers) then\n{\n\thint (_someString + \" is a valid marker name\");\n};\n```","commands\\allMines.md":"Returns an array of all mines in the mission\n\n\n---\n*Syntaxes:*\n\n`allMines`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"there are %1 mines total\", count allMines];\n```\n\n*Example 2:*\n\n```sqf\nprivate _isFirstMineDetected = (allMines select 0) mineDetectedBy blufor;\n```","commands\\allMissionObjects.md":"Returns all objects of the given type that are currently present in the mission. In some cases, the `entities` command is a much faster alternative to this command.<br>\nSome of the special types that can be detected with this command (and with `nearestObject`):\n* **\"\"** - returns everything, e.g. agents, bees, mosquitoes, footprints, armed mines, ...\n* **\"all\"}} - more restrictive than {{hl|\"\"**: no ambient insects, only agents such as rabbits and snakes, no footprints, tracks, no armed mines\n* **\"#slop\"** - blood drops\n* **\"#mark\"** - unit footprints\n* **\"#track\"** - vehicle tracks\n* **\"#crater\"** - explosion craters on the ground\n* **\"#crateronvehicle\"** - bullet marks on vehicles\n* **\"#explosion\"** - explosions\n* **\"#objectdestructed\"** - building, tree or bush destruction\n* **\"#soundonvehicle\"** - sounds created with [[say3D]] for example\n* **\"#dynamicsound\"** - sound sources created using `createSoundSource`\n* **\"EmptyDetector\"** - all `Trigger`s\n* **\"Logic\"** - all game logics\n\n\n---\n*Syntaxes:*\n\n`allMissionObjects` type\n\n---\n*Example 1:*\n\n```sqf\n_airObjects = allMissionObjects \"Air\";\n```\n\n*Example 2:*\n\n```sqf\n{ deleteVehicle _x; } forEach (allMissionObjects \"\");\n```\n\n*Example 3:*\n\n```sqf\n_allMObjects = allMissionObjects \"All\";\n```","commands\\allObjects.md":"Returns array of requested objects as fast as the engine allows it. The objects can be requested by object type and simulation kind.\n\n\n---\n*Syntaxes:*\n\nobjectType `allObjects` objectCollection\n\n---\n*Example 1:*\n\n```sqf\nprivate _visitorBuildings = 1 allObjects 0;\n```\n\n*Example 2:*\n\n```sqf\nprivate _userPlacedBuildings = 8 allObjects 0;\n```\n\n*Example 3:*\n\n```sqf\nonEachFrame\n{\n\thintSilent str\n\t[\n\t\tcount (63 allObjects 0),\n\t\tcount (63 allObjects 1),\n\t\tcount (63 allObjects 2),\n\t\tcount (63 allObjects 3),\n\t\tcount (63 allObjects 4),\n\t\tcount (63 allObjects 5),\n\t\tcount (63 allObjects 6)\n\t];\n};\n```","commands\\allow3DMode.md":"Allow/dissallow 3D mode.,\n\n\n---\n*Syntaxes:*\n\nmap [[allow3DMode]] bool\n\n---\n*Example 1:*\n\n-","commands\\allowCrewInImmobile.md":"If `true`, units will remain in a vehicle with broken tracks/wheels; they will still eject if the vehicle is drowning, about to explode or upside down for a while.\nThe *(Reference Link \"alternative syntax\" at #Syntax 2)* provides the ability to keep the crew in vehicle when it is upside down.\n\n\n---\n*Syntaxes:*\n\nvehicle `allowCrewInImmobile` allow\n\nvehicle `allowCrewInImmobile` [brokenWheels, upsideDown]\n\n---\n*Example 1:*\n\n```sqf\n_vehicle allowCrewInImmobile true;\n```","commands\\allowCuratorLogicIgnoreAreas.md":"Allows curator placing and working with modules outside of edit areas.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `allowCuratorLogicIgnoreAreas` allow\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule allowCuratorLogicIgnoreAreas true;\n```","commands\\allowDamage.md":"Enables / disables an entity's ability to receive damage. This command does not prevent the entity from taking scripted damage from commands such as `setDamage`, `setHit`, `setHitIndex` or `setHitPointDamage`.\n\n\n---\n*Syntaxes:*\n\nentity `allowDamage` allow\n\n---\n*Example 1:*\n\n```sqf\nplayer allowDamage false;\n```","commands\\allowDammage.md":"Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as `setDamage` or `setHit`.\n\n\n---\n*Syntaxes:*\n\nobject `allowDammage` allow\n\n---\n*Example 1:*\n\n```sqf\nplayer allowDammage false;\n```","commands\\allowFileOperations.md":"Allow/dissallow file ops (load/save etc).\n\n\n---\n*Syntaxes:*\n\nmap `allowFileOperations` bool\n\n---\n*Example 1:*\n\n-","commands\\allowFleeing.md":"Sets the cowardice level (the lack of courage or bravery) of a group or unit. \n<br><br>\nNotes:\n* Fleeing only affects AI led groups.\n* Only the group as a whole can flee (or not).\n* The courage of the AI group is based on the group's leader [[Arma_3_AI_Skill#Sub-Skills|courage subskill]].\n* Each group has a max strength (summed \"armor\" of all infantry units - plus armor when inside vehicles).\n* If the group losses by injury/damage or death/destruction are higher than the max strength, multiplied by leader's courage or `allowFleeing` level , then the group will start fleeing.\n* As result primarily the AI flees to a nearby \"supply point\" (some friendly units - preferably with medic or engineer, or a vehicle with repair/ammo/fuel cargo). Alternatively it will try to find a safe position within a 600m radius from the initial waypoint (danger, distance, amount of cover positions are taken into account).\n* After the fleeing has been finished the group's initial strength is reset.\n* Fleeing units in `combatMode` red, will be set to yellow when fleeing to avoid engaging enemies while doing so.\n* While fleeing, the group leader will be set to green, to avoid giving engage or fire orders, unless in `combatMode` blue already. Also `speedMode` is set to full.\n* When reaching their flee point/destination, they will change to `combatMode` yellow and `speedMode` normal.\n* With `allowFleeing` one can make unit's flee earlier (or essentially never flee). Apply it, overrides the courage subskill influence.\n\n\n---\n*Syntaxes:*\n\nunitOrGroup `allowFleeing`  cowardice\n\n---\n*Example 1:*\n\n```sqf\n_group1 allowFleeing 0;\n```","commands\\allowGetIn.md":"Set if the units given in the list are allowed to enter vehicles.\n\n\n---\n*Syntaxes:*\n\nunitArray `allowGetIn` allow\n\n---\n*Example 1:*\n\n```sqf\n[_soldier1, _soldier2] allowGetIn true;\n```","commands\\allowSprint.md":"Force player to run/jog if set to false.\n\n\n---\n*Syntaxes:*\n\nunit `allowSprint`  state\n\n---\n*Example 1:*\n\n```sqf\nplayer allowSprint false;\n```","commands\\allPlayers.md":"Returns a list of all units controlled by `connected clients` - human players including dead players, but also [[Arma 3 Headless Client|Headless Clients]].<br>\nUse `BIS_fnc_listPlayers` or see *(Reference HashLink \"#Example 1\")* to only get human players.\n\n\n---\n*Syntaxes:*\n\n`allPlayers`\n\n---\n*Example 1:*\n\n```sqf\n// only gets human players\nprivate _headlessClients = entities \"HeadlessClient_F\";\nprivate _humanPlayers = allPlayers - _headlessClients;\n```\n\n*Example 2:*\n\n```sqf\n{\n\tsystemChat format [\n\t\t\"Player %1 is %2\", \n\t\tname _x, \n\t\t[\"dead\", \"alive\"] select alive _x\n\t];\n} forEach allPlayers;\n```\n\n*Example 3:*\n\n```sqf\nprivate _bluNums = west countSide allPlayers;\n```","commands\\allSimpleObjects.md":"Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name.\n\n\n---\n*Syntaxes:*\n\n`allSimpleObjects` classes\n\n---\n*Example 1:*\n\n```sqf\nprivate _boxesAndChairs = allSimpleObjects [\"Box_NATO_Equip_F\", \"Land_CampingChair_V2_F\"];\n```\n\n*Example 2:*\n\n```sqf\nprivate _allSimpleObjects = allSimpleObjects [];\n```","commands\\allSites.md":"Return all sites in map.\n\n\n---\n*Syntaxes:*\n\n`allSites`\n\n---\n*Example 1:*\n\n```sqf\n_allSites = allSites;\n```","commands\\allTurrets.md":"Returns array of available turret paths from vehicle object.\n\n\n---\n*Syntaxes:*\n\n`allTurrets` vehicle\n\n`allTurrets` [vehicle, includeFFV]\n\n---\n*Example 1:*\n\n```sqf\n_turretPaths = allTurrets _mySlammerUP;\t\t\t\t// [[0],[0,0]]\n_turretPaths = allTurrets [_mySlammerUP, true];\t\t// [[0],[0,0]] <- Commander turret is also an FFV turret\n_turretPaths = allTurrets [_mySlammerUP, false];\t// [[0]]\n```\n\n*Example 2:*\n\nReturn FFV turrets only:\n\n```sqf\n_FFVTurrets = allTurrets [tank, true] - allTurrets [tank, false];\n```","commands\\allUnits.md":"Returns a list of all units, `except agents, dead units or units waiting for respawn`, outside and inside vehicles that were created on the following sides `east`, `west`, `independent` and `civilian`.\n\n\n---\n*Syntaxes:*\n\n`allUnits`\n\n---\n*Example 1:*\n\n```sqf\n{ _x setDamage 0.5; _x groupChat \"Braaains\"; } forEach allUnits;\n```\n\n*Example 2:*\n\n```sqf\nallUnits apply { diag_log _x; };\n```","commands\\allUnitsUAV.md":"Return a list of all UAV vehicles.\n\n\n---\n*Syntaxes:*\n\n`allUnitsUAV`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"Number of UAV(s) on the map: %1\", count allUnitsUAV];\n```\n\n*Example 2:*\n\n```sqf\n{ _x setDamage 1 } forEach allUnitsUAV;\n```","commands\\allUsers.md":"Returns a list of `player ids` of all the users on an MP server.\n\n\n---\n*Syntaxes:*\n\n`allUsers`\n\n---\n*Example 1:*\n\n```sqf\nif (isServer) then\n{\n\tprivate _allUserIDs = allUsers;\n\tfor \"_i\" from 1 to count _allUserIds do\n\t{\n\t\tdiag_log format [\"User #%1 id: %2\", _i, _allUserIds select _i];\n\t};\n};\n```","commands\\allVariables.md":"Returns a list of all variables from desired namespace. Namespaces supported:<br>\n*`Control` - `Since {{arma3}} v2.01`\n*`Display` - `Since {{arma3}} v2.01`\n*`Team Member`\n*`Namespace`\n*`Object`\n*`Group`\n*`Task`\n*`Location`\n\n\n---\n*Syntaxes:*\n\n`allVariables` namespace\n\n---\n*Example 1:*\n\n```sqf\n_allVarsUINamespace = allVariables uiNamespace;\n```\n\n*Example 2:*\n\n```sqf\n_allVarsTrigger = allVariables trigger1;\n```","commands\\ambientTemperature.md":"Returns ambient temperature on the current terrain in Celsius in format: [airTemperature, blackSurfaceTemperature, whiteSurfaceTemperature]\n\n\n---\n*Syntaxes:*\n\n`ambientTemperature`\n\n---\n*Example 1:*\n\n```sqf\nprivate _airTemp = ambientTemperature select 0;\n```","commands\\ammo.md":"Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.56 the command also returns ammo for units in vehicles.\n\n\n---\n*Syntaxes:*\n\nunit `ammo` muzzle\n\n---\n*Example 1:*\n\n```sqf\n_count = player ammo \"M16\"; //returns 30 in case of a full magazine\n```\n\n*Example 2:*\n\n```sqf\n_count = player ammo \"M203Muzzle\";\n```\n\n*Example 3:*\n\n```sqf\n_count = player ammo primaryWeapon player;\n```","commands\\ammoOnPylon.md":"Returns ammo count on given pylon (or `false` on failure).\n\n\n---\n*Syntaxes:*\n\nvehicle `ammoOnPylon` pylon\n\n---\n*Example 1:*\n\n```sqf\nprivate _ammoCount = (vehicle player) ammoOnPylon \"pylon1\";\n```\n\n*Example 2:*\n\n```sqf\nhint str (vehicle player ammoOnPylon \"pylonCenter\");\n```","commands\\and.md":"Returns `true` only if both conditions are `true`.\nIn case of the alternative syntax, [lazy evaluation](https://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures) is used - if left operand is `false`, evaluation of the right side is ignored.\n\n\n---\n*Syntaxes:*\n\na `and` b\n\na `and` b\n\n---\n*Example 1:*\n\n```sqf\nif ((not isNull player) and (alive player) and (_enemycount == 0)) then\n{\n\thint \"you win !\";\n};\n```\n\n*Example 2:*\n\n```sqf\nif ((count _array > 0) and { (_array select 0) == player }) then\t// works as expected\n{\n\thint \"It works!\";\n};\n\nif ((count _array > 0) and (_array select 0) == player) then\t\t// Error: _array select 0 is evaluated\n{\n\thint \"It... works?\";\n};\n```","commands\\animate.md":"Activates given object animation. Animation is defined in CfgModels `animations` class. Class names listed in CfgVehicles `AnimationSources` bound to \"Proxy\" controller can also be animated with `animate` command (see [[Arma 3: createVehicle/vehicles]]).\n\n\n---\n*Syntaxes:*\n\nobject `animate` [animationName, phase, speed]\n\n---\n*Example 1:*\n\n```sqf\n_building animate [\"maindoor\", 1];\n```\n\n*Example 2:*\n\n```sqf\n_building animate [\"Door_1_rot\", 1, true];\n```\n\n*Example 3:*\n\nCreate Offroad and add flashing police light bar:\n\n```sqf\noffroad = \"C_Offroad_01_F\" createVehicle (player getRelPos [5, 0]);\noffroad animate [\"HidePolice\", 0];\noffroad animate [\"BeaconsStart\", 1];\n```","commands\\animateBay.md":"Forces animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state == 1.\n\n\n---\n*Syntaxes:*\n\nvehicle `animateBay`  [bay, animphase, instant]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player animateBay [1, 0.5];\n```\n\n*Example 2:*\n\n```sqf\nvehicle player animateBay [1, 1, true];\n```","commands\\animateDoor.md":"Animates a door on a vehicle. Animation is defined in config file in `CfgVehicles` -> ` AnimationSources`. Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with `animateDoor` but not CargoRamp_Open: **heli `animateDoor` [\"Door_L\", 1];**  <br>\n```cpp\nclass AnimationSources\n{\n\tclass CargoRamp_Open\n\t{\n\t\tsource = \"user\";\n\t\tanimPeriod = 5;\n\t\tinitPhase = 0;\n\t};\n\tclass Door_L\n\t{\n\t\tsource = \"door\";\n\t\tanimPeriod = 1.6;\n\t};\n};\n```\nTo animate doors or other sources that have \"user\" controller, use `animate` command, or even better, `animateSource` (recommended). Sources with \"hit\" controller can be animated with `setHitPointDamage` command applied to the name contained in hitpoint property. For availability of animation sources and their controller types see: [[Arma 3: createVehicle/vehicles]]\n\n\n---\n*Syntaxes:*\n\nobject `animateDoor` [doorname, phase, instant]\n\n---\n*Example 1:*\n\n```sqf\nTaru animateDoor [\"Door_1_source\", 1];\n```\n\n*Example 2:*\n\nOpen left front door on Ifrit instantly:\n\n```sqf\nIfrit animateDoor [\"Door_LF\", 1, true];\n```","commands\\animatePylon.md":"Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released  when pylon state == 1.\n\n\n---\n*Syntaxes:*\n\nvehicle `animatePylon` [pylon, animphase, instant]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player animatePylon [1, 0.5];\n```\n\n*Example 2:*\n\n```sqf\nvehicle player animatePylon [\"pylon1\", 0.5];\n```\n\n*Example 3:*\n\n```sqf\nvehicle player animatePylon [\"pylon1\", 1, true];\n```","commands\\animateSource.md":"Process an animation of the object. If `animate` uses class name from `CfgModels` `Animations`, `animateSource` uses name defined by the `source` property. AnimationSources can animate multiple `animate` Animations. AnimationSource is defined in `CfgVehicles`' `AnimationSources` (see [[Arma 3: createVehicle/vehicles]]).\n\n\n---\n*Syntaxes:*\n\nobject `animateSource` [source, phase, speed]\n\n---\n*Example 1:*\n\n```sqf\nhouse animateSource [\"Door_1_source\", 1, true];\n```\n\n*Example 2:*\n\nCreate UGV and manipulate its turret (Not possible to do with `animate` command. See [[Arma 3: createVehicle/vehicles]] for reference)\n\n```sqf\nugv = \"B_UGV_01_F\" createVehicle (player getRelPos [5, 0]);\nugv addAction [\"Show Turret\",\n{\n\tugv animateSource [\"Turret\", 0];\n\tugv animateSource [\"MainTurret\", rad 0, true];\n\tugv animateSource [\"MainGun\", rad 0, true];\n}];\nugv addAction [\"Hide Turret\",  { ugv animateSource [\"Turret\", 1] }];\nugv addAction [\"Turret Left\",  { ugv animateSource [\"MainTurret\",  rad 90] }];\nugv addAction [\"Turret Right\", { ugv animateSource [\"MainTurret\", -rad 90] }];\nugv addAction [\"Turret Up\",    { ugv animateSource [\"MainGun\",  rad 30] }];\nugv addAction [\"Turret Down\",  { ugv animateSource [\"MainGun\", -rad 20] }];\n```\n\n*Example 3:*\n\n```sqf\nbarGate animateSource [\"Door_1_sound_source\", 1]; // Open\nbarGate animateSource [\"Door_1_sound_source\", 0]; // Close\n```\n\n*Example 4:*\n\nOpen/close Bar Gate automatically:\n\n```sqf\n// Bar Gate init\nif (isServer) then\n{\t\n\tprivate _gateTrigger = createTrigger [\"EmptyDetector\", getPosWorld this, false];\n\t_gateTrigger setVariable [\"BarGateObj\", this];\n\t_gateTrigger setTriggerActivation [\"ANYPLAYER\", \"PRESENT\", true];\n\t_gateTrigger setTriggerArea [5, 25, getDir this, true];\n\t_gateTrigger setTriggerStatements \n\t[\n\t\t\"this\",\n\t\t\"thisTrigger getVariable 'BarGateObj' animateSource ['Door_1_sound_source', 1]\",\n\t\t\"thisTrigger getVariable 'BarGateObj' animateSource ['Door_1_sound_source', 0]\"\n\t];\n};\n```","commands\\animationNames.md":"Returns `Array` of `Strings` where elements are the names of model animations, which should theoretically be available for use with `animate` command. However in practice this depends on whether animation is also made available for use in scripts via config.\n\n\n---\n*Syntaxes:*\n\n`animationNames` object\n\n---\n*Example 1:*\n\n```sqf\n_names = animationNames static_AT;\n``` Returns: [\"MainTurret\", \"MainGun\", \"MainTurret_destructX\", \"MainTurret_destructY\", \"MainTurret_destructZ\", \"MainGun_destructX\", \"MainGun_destructY\", \"MainGun_destructZ\", \"magazine_destruct\", \"ammo_belt_destruct\", \"bolt_destruct\", \"charging_handle_destruct\", \"damagehideVez_destruct\", \"damagehideHlaven_destruct\", \"damagehideRecoil_destruct\", \"Turret_shake\", \"Turret_shake_aside\", \"Magazine_hide\", \"Ammo_belt_hide\", \"muzzleFlash\", \"AddAutonomous_unhide\", \"bullet001_reload_hide\", \"bullet002_reload_hide\", \"bullet003_reload_hide\", \"bullet004_reload_hide\", \"bullet005_reload_hide\", \"bullet006_reload_hide\", \"bullet007_reload_hide\", \"bullet008_reload_hide\"]","commands\\animationPhase.md":"Returns the phase of the given animation on the given object. Animation can be scripted (`animate`, `animateSource`, `animateDoor`) or engine driven. Animation names for an object could be found out with `animationNames` command. When animation is rotation, like with \"MainTurret\" for example, the output is in radians, to convert to degrees use `deg` command.\n\n\n---\n*Syntaxes:*\n\nobject `animationPhase`  animationName\n\n---\n*Example 1:*\n\n```sqf\n_building animate [\"maindoor\",1];\nsleep 1;\n_p = _building animationPhase \"maindoor\";// Returns 1, if the animation speed is two seconds\n```\n\n*Example 2:*\n\n```sqf\n_flagPole animationPhase \"flag\";\n```\n\n*Example 3:*\n\n```sqf\n_tank animationPhase \"MainTurret\";\n```","commands\\animationSourcePhase.md":"Returns current animation phase of given source. Similar to `animationPhase` or `doorPhase` but designed to complement `animateSource`. This command could be used to obtain relative turret direction and gun elevation on a vehicle (see *(Reference HashLink \"#Example 2\")*).\n\n\n---\n*Syntaxes:*\n\nobject `animationSourcePhase` source\n\n---\n*Example 1:*\n\n```sqf\nprivate _phase = house animationSourcePhase \"Door_1_source\";\n```\n\n*Example 2:*\n\n```sqf\nprivate _mainturretDirection =\tdeg (_marshall animationSourcePhase \"mainturret\"); // relative to Marshall direction\nprivate _maingunElevation =\t\tdeg (_marshall animationSourcePhase \"maingun\");\nprivate _obsturretDirection =\tdeg (_marshall animationSourcePhase \"obsturret\"); // relative to main turret direction\nprivate _obsgunElevation =\t\tdeg (_marshall animationSourcePhase \"obsgun\");\n```","commands\\animationState.md":"Returns the name of a unit's current primary animation. Seems to be forced to lower case in {{arma3}}.\n\n\n---\n*Syntaxes:*\n\n`animationState` unitName\n\n---\n*Example 1:*\n\n```sqf\n_state = animationState player;\n```","commands\\apertureParams.md":"Returns current aperture parameters.\n\n\n---\n*Syntaxes:*\n\n`apertureParams`\n\n---\n*Example 1:*\n\n```sqf\nprivate _apertureParams = apertureParams;\n```","commands\\append.md":"Appends array2 to the back of array1 modifying array1. See `insert` for an \"appendUnique\" equivalent.\n\n\n---\n*Syntaxes:*\n\narray1 `append` array2\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,2,3];\n_arr append [4,5,6];\nhint str _arr; // [1,2,3,4,5,6]\n```","commands\\apply.md":"Applies the given code to each element of the given data structure and collects the results in an array.\n\n\n---\n*Syntaxes:*\n\narray `apply` code\n\nhashmap `apply` code\n\n---\n*Example 1:*\n\n```sqf\nprivate _arr = [1,2,3,4,5,6,7,8,9,0] apply { [1,0] select (_x % 2 == 0) }; // [1,0,1,0,1,0,1,0,1,0]\n```\n\n*Example 2:*\n\n```sqf\nprivate _arr = [1,2,3,4,5,6,7,8,9,0] apply { _x ^ _x }; // [1,4,27,256,3125,46656,823543,16777216,387420480,1]\n```\n\n*Example 3:*\n\n```sqf\nprivate _arr1 = [];\n_arr1 resize 20;\n_arr2 = _arr1 apply { 0 }; // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n```\n\n*Example 4:*\n\n```sqf\n[0,1,2,3,4] apply { str _x }; // [\"0\",\"1\",\"2\",\"3\",\"4\"]\n```\n\n*Example 5:*\n\n```sqf\nprivate _hashmap = createHashMapFromArray [[\"Key 1\", \"Value 1\"], [\"Key 2\", \"Value 2\"]];\nprivate _array = _hashmap apply { _y + \" Test\" }; // [\"Value 2 Test\",\"Value 1 Test\"]\n```","commands\\armoryPoints.md":"Returns, stored in [USERNAME].ArmaXProfile, value of `armoryPoints` entry. If the entry doesn't exist, it returns 0.\n\n\n---\n*Syntaxes:*\n\n`armoryPoints`\n\n---\n*Example 1:*\n\n```sqf\n_points = armoryPoints;\n```","commands\\arrayIntersect.md":"Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.\n\n\n---\n*Syntaxes:*\n\narray1 `arrayIntersect` array2\n\n---\n*Example 1:*\n\n```sqf\n_arr1 = [1,2,3,4,5,2,3,4];\n_arr2 = [4,5,6,1,2,3,5,6];\nhint str (_arr1 arrayIntersect _arr2); // [4,5,1,2,3]\n```\n\n*Example 2:*\n\n```sqf\n_arr = [1,2,3,1,2,3,1,2,3,4,5];\nhint str (_arr arrayIntersect _arr); // [1,2,3,4,5]\n```\n\n*Example 3:*\n\nRemove `nil`s:\n\n```sqf\nhint str ([1,2,nil,3] arrayIntersect [1,2,nil,3]); // [1,2,3]\n```\n\n*Example 4:*\n\nAlso works with array elements which are `equal`:\n\n```sqf\nhint str ([[1],[2],[3]] arrayIntersect [[2],[3],[4]]); // [[2],[3]]\n```\n\n*Example 5:*\n\nThis command is case-sensitive:\n\n```sqf\n[\"cAse\"] arrayIntersect [\"cAse\"]; // [\"cAse\"]\n[\"cAse\"] arrayIntersect [\"casE\"]; // []\n```","commands\\asin.md":"Arcsine of a number, result in `Degrees`.\n\n\n---\n*Syntaxes:*\n\n`asin` x\n\n---\n*Example 1:*\n\n```sqf\n_degrees = asin 0.5; // Returns 30\n```","commands\\ASLToAGL.md":"Converts position from `PositionASL` to `PositionAGL`\n\n\n---\n*Syntaxes:*\n\n`ASLToAGL` posASL\n\n---\n*Example 1:*\n\n```sqf\n_playerPosAGL = ASLToAGL getPosASL player;\n```","commands\\ASLToATL.md":"Converts a position from `PositionASL` to `PositionATL`\n\n\n---\n*Syntaxes:*\n\n`ASLToATL` pos\n\n---\n*Example 1:*\n\n```sqf\nASLToATL (getPosASL player) isEqualTo getPosATL player;\n```","commands\\assert.md":"Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file. It does not interrupt the script execution.\n\nIf script was pre-processed with `preprocessFileLineNumbers`, it will also show/log the error line number and the file name.\n\n\n---\n*Syntaxes:*\n\n`assert` condition\n\n---\n*Example 1:*\n\n```sqf\nassert (1 > 2);\n``` \n\n`Image:PreprocessFile.jpg`\n\n*Example 2:*\n\nCheck function params (Faster alternative to `BIS_fnc_param`)\n\n```sqf\nsome_func = {\n\t_0 = _this select 0;\n\t_1 = _this select 1;\n\t_2 = _this select 2;\n\tif (!assert (\n\t\ttypeName _0 == \"ARRAY\" && \n\t\ttypeName _1 == \"STRING\" &&\n\t\ttypeName _2 == \"SCALAR\"\n\t)) exitWith { /* optional error logging */ };\n\thint \"Alright!\";\n};\n[1,2,3] call some_func; // assert error\n[[1],\"2\",3] call some_func; // Alright!\n```","commands\\assignAsCargo.md":"Assign a unit as cargo of a vehicle. Used together with `orderGetIn` to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit has not got the option to get into the cargo space of the vehicle.\n\n\n---\n*Syntaxes:*\n\nunitName `assignAsCargo` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 assignAsCargo _truck;\n[_soldier1] orderGetIn true;\n```","commands\\assignAsCargoIndex.md":"Assigns the character to a specific cargo / passenger index of the given vehicle.\n\n\n---\n*Syntaxes:*\n\ncharacter `assignAsCargoIndex` [vehicle, index]\n\n---\n*Example 1:*\n\n```sqf\nplayer assignAsCargoIndex [myHelicopter, 1];\n```","commands\\assignAsCommander.md":"Assign a unit as commander of a vehicle. Used together with `orderGetIn` to order subordinate units to get in as commander of a specific vehicle.\nBefore usage of this command a subordinate unit has not got the option to get into the commander place of the vehicle.\n\n\n---\n*Syntaxes:*\n\nunitName `assignAsCommander` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 assignAsCommander _tank;\n[_soldier1] orderGetIn true;\n```","commands\\assignAsDriver.md":"Assign a unit as driver of a vehicle. Used together with `orderGetIn` to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit has not got the option to get into the driver place of the vehicle.\n\n\n---\n*Syntaxes:*\n\nunitName `assignAsDriver` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 assignAsDriver _tank;\n[_soldier1] orderGetIn true;\n```","commands\\assignAsGunner.md":"Assign a unit as gunner of a vehicle. Used together with `orderGetIn` to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit has not got the option to get into the gunner place of the vehicle.\n\n\n---\n*Syntaxes:*\n\nunitName `assignAsGunner` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 assignAsGunner _tank;\n[_soldier1] orderGetIn true;\n```","commands\\assignAsTurret.md":"Assigns the soldier to turret.\n\n\n---\n*Syntaxes:*\n\nunit `assignAsTurret` [vehicle, turretPath]\n\n---\n*Example 1:*\n\n```sqf\nplayer assignAsTurret [BIS_vehicle, [0,1]];\n```","commands\\assignCurator.md":"Assign player as curator. Two players cannot act as one curator.\n\n\n---\n*Syntaxes:*\n\nplayer `assignCurator` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nplayer assignCurator myCurator;\n```","commands\\assignedCargo.md":"Returns the list of soldiers assigned to the given vehicle as a cargo.\n\n\n---\n*Syntaxes:*\n\n`assignedCargo` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_list = assignedCargo _vehicleName;\n```","commands\\assignedCommander.md":"Returns the soldier assigned to the given vehicle as a commander.\n\n\n---\n*Syntaxes:*\n\n`assignedCommander`  vehicle\n\n---\n*Example 1:*\n\n```sqf\n_commander = assignedCommander vehicleName;\n```","commands\\assignedDriver.md":"Returns the soldier assigned to the given vehicle as a driver.\n\n\n---\n*Syntaxes:*\n\n`assignedDriver` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_driver = assignedDriver vehicleName;\n```","commands\\assignedGroup.md":"Returns `Group` to which the given vehicle was added last with `addVehicle`. To update `assignedGroup` to the current group, run `addVehicle` to the current group again.\n\n\n---\n*Syntaxes:*\n\n`assignedGroup` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_group = assignedGroup vehicle player;\n```","commands\\assignedGunner.md":"Returns the soldier assigned to the given vehicle as a gunner.\n\n\n---\n*Syntaxes:*\n\n`assignedGunner` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_gunner = assignedGunner vehicle player;\n```","commands\\assignedItems.md":"Get array with all assigned items. The resulting Array is sorted like: [<Map>, <Compass>, <Watch>, <Radio>, <GPS>, <NVG>, <Binoculars>]. But if something is missing it get's omitted so you can not be sure that some element is at a constant index. To return stored items see `items` and `itemsWithMagazines`.\n\n\n---\n*Syntaxes:*\n\n`assignedItems`  unit\n\n---\n*Example 1:*\n\n```sqf\nhint str assignedItems player;\n```","commands\\assignedTarget.md":"Returns the target assigned to an unit or the vehicle's `effectiveCommander`. The target can be assigned by the group/vehicle/formation leader (as player via [[Arma 3 Field Manual - Commanding#Target_Assignment|quick command menu]] or [[Operation Flashpoint: Commander Guide#TARGET .282.29|\"target\" complex command menu]]).<br>\nTo unassign the target use `doWatch` `objNull` or `commandWatch` `objNull` or as player and group leader order \"no target\" in the [[Operation Flashpoint: Commander Guide#TARGET .282.29|\"target\" complex command menu]].\n\n\n---\n*Syntaxes:*\n\n`assignedTarget` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_target = assignedTarget _T72;\n```","commands\\assignedTeam.md":"Returns the team the unit belongs to. Possible values:\n\n* **\"MAIN\"** (default and white)\n* **\"RED\"**\n* **\"GREEN\"**\n* **\"BLUE\"**\n* **\"YELLOW\"**\n* *(Reference GVI \"arma3|1.94\")* **\"\"** if given unit is `objNull` or `remoteControl`ling another unit\n\n\n---\n*Syntaxes:*\n\n`assignedTeam` unitName\n\n---\n*Example 1:*\n\n```sqf\n_team = assignedTeam player;\n```","commands\\assignedVehicle.md":"Returns the vehicle to which a unit is assigned, usually with `assignAsXXX` command. If no vehicle is assigned `objNull` is returned.\n\n\n---\n*Syntaxes:*\n\n`assignedVehicle` unit\n\n---\n*Example 1:*\n\n```sqf\n_vehicle = assignedVehicle player;\n```\n\n*Example 2:*\n\n```sqf\n_units apply { _x leaveVehicle (assignedVehicle _x) };\n```","commands\\assignedVehicleRole.md":"Returns the role a unit is assigned to within its assigned vehicle.\n\n\n---\n*Syntaxes:*\n\n`assignedVehicleRole` unitName\n\n---\n*Example 1:*\n\n```sqf\n_RoleArray = assignedVehicleRole player;\n```\n\n*Example 2:*\n\nGet weapons available to player at player occupied turret:\n\n```sqf\n_weaponsTurret = vehicle player weaponsTurret (assignedVehicleRole player select 1);\n```","commands\\assignedVehicles.md":"Returns all vehicles added to the given `Group` with `addVehicle`.\n\n\n---\n*Syntaxes:*\n\n`assignedVehicles` group\n\n---\n*Example 1:*\n\n```sqf\n_vehicles = assignedVehicles group player;\n```","commands\\assignItem.md":"Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.\n\n\n---\n*Syntaxes:*\n\nunit `assignItem` item\n\n---\n*Example 1:*\n\n```sqf\nbluforUnit addItem \"NVGoggles\";\nbluforUnit assignItem \"NVGoggles\";\nopforUnit addItem \"NVGoggles_OPFOR\";\nopforUnit assignItem \"NVGoggles_OPFOR\";\nindependentUnit addItem \"NVGoggles_INDEP\";\nindependentUnit assignItem \"NVGoggles_INDEP\";\n```","commands\\assignTeam.md":"Assigns the unit (in case of a vehicle, its commander) to the given team. Team is an option in group control (unit management) menu that allows to split player group in teams and then give bulk order to separate teams. In order to operate properly, the command requires specific conditions:\n* The command requires `player` to be fully initialised\n* The unit getting assigned must be either player himself or a unit in player's group\n* Units in player's group as well as player himself can all have different teams assigned\n* The colour of the assigned team for a unit is seen on the group management UI as well as squad radar\nThe possible team values (colours) are: \n* \"MAIN\" - (white)\n* \"RED\" - (red)\n* \"GREEN\" - (green)\n* \"BLUE\" - (blue)\n* \"YELLOW\"  - (yellow)\n`NOTE`: In older version of the game the effect of this command is local *(Reference Icon \"32\" at localEffect)*\n\n\n---\n*Syntaxes:*\n\nunit `assignTeam` team\n\n---\n*Example 1:*\n\n```sqf\n_soldier2 assignTeam \"RED\";\n```\n\n*Example 2:*\n\nIn a unit's init script in the editor you should use the following. Or else you might experience [race conditions](https://en.wikipedia.org/wiki/Race_condition). \n\n```sqf\nthis spawn {_this assignTeam \"RED\"};\n```","commands\\assignToAirport.md":"Assigns a plane to an airport ID or object.\n\n\n---\n*Syntaxes:*\n\nplane `assignToAirport` id\n\nplane `assignToAirport` target\n\n---\n*Example 1:*\n\n```sqf\nplane1 assignToAirport 0;\n```\n\n*Example 2:*\n\n```sqf\nplane1 assignToAirport carrier1;\n```","commands\\atan.md":"Returns the `arcus tangens`.<br><br>[[Image:atan.jpg|200px]]\n\n\n---\n*Syntaxes:*\n\n`atan`  x\n\n---\n*Example 1:*\n\n```sqf\n_degrees = atan 1; // 45\n```","commands\\atan2.md":"[[Image:atan.jpg|right|200px]] ArcTangent of `y/x`. Used to determine the angle of a vector `[y,x]`. Result in `Degrees` between -180 and 180.\n\n\n---\n*Syntaxes:*\n\ny [[atan2]] x\n\n---\n*Example 1:*\n\n```sqf\n_yx = [5,3];\n_degrees = (_yx select 0) atan2 (_yx select 1); // 59.0362\n```\n\n*Example 2:*\n\nGet direction from _obj1 to _obj2:\n\n```sqf\n_vd = getPosASL _obj2 vectorDiff getPosASL _obj1;\n_dir = (_vd select 0) atan2 (_vd select 1); // _dir range from -180 to +180\n_dir = (_dir + 360) % 360; // _dir range from 0 to 360\n```\n\n*Example 3:*\n\nGet relative direction from _obj1 to _obj2:\n\n```sqf\n_yx = _obj1 worldToModel getPosASL _obj2;\n_dir = (_yx select 0) atan2 (_yx select 1); // _dir range from -180 to +180\n_dir = (_dir + 360) % 360; // _dir range from 0 to 360\n```","commands\\atg.md":"Returns the `arcus tangens`.<br><br>[[Image:atan.jpg|200px]]\n\n\n---\n*Syntaxes:*\n\n`atg` x\n\n---\n*Example 1:*\n\n```sqf\n_atanThreeFifth = atg 3/5;\n```","commands\\ATLToASL.md":"Converts a position from `PositionATL` to `PositionASL`\n\n\n---\n*Syntaxes:*\n\n`ATLToASL` pos\n\n---\n*Example 1:*\n\n```sqf\nATLToASL (getPosATL player) isEqualTo getPosASL player;\n```\n\n*Example 2:*\n\n```sqf\n_camPosASL = ATLToASL positionCameraToWorld [0,0,0];\n```","commands\\attachedObject.md":"Returns the object a location is attached to. If the location is unattached, then `objNull` is returned.\n\n\n---\n*Syntaxes:*\n\n`attachedObject` location\n\n---\n*Example 1:*\n\n```sqf\n_locAttachedObj = attachedObject myLocation;\n```","commands\\attachedObjects.md":"Returns a list of objects attached to the given object.\n\n\n---\n*Syntaxes:*\n\n`attachedObjects` obj\n\n---\n*Example 1:*\n\n```sqf\n{\n  detach _x;\n} forEach attachedObjects player;\n```\n\n*Example 2:*\n\n```sqf\nif (count attachedObjects player == 0) then {\n  hint \"There are no objects attached to player\";\n};\n```","commands\\attachedTo.md":"Returns object the given object is attached to or `objNull` if the given object is not attached to anything.\n\n\n---\n*Syntaxes:*\n\n`attachedTo` obj\n\n---\n*Example 1:*\n\n```sqf\nif (isNull attachedTo _obj1) then {\n  hint \"_obj1 is not attached to anything.\";\n};\n```","commands\\attachObject.md":"Attaches a location to the specified object. To detach a location, attach it to `objNull`.\n\n\n---\n*Syntaxes:*\n\nlocation `attachObject` object\n\n---\n*Example 1:*\n\n```sqf\nmyLocation attachObject player;\n```","commands\\attachTo.md":"Attaches an object to another object.\n* The offset is applied to the object center unless a memory point is provided, in which case the offset will be applied to the memory point position.\n* If no offset is specified, the current offset between the two objects will be used.\n\n\n---\n*Syntaxes:*\n\nobject1 `attachTo` [object2, offset, memPoint, followBoneRotation]\n\n---\n*Example 1:*\n\n```sqf\nplayer attachTo [car, [0, 0, 1]];\n```\n\n*Example 2:*\n\n```sqf\nplayer attachTo [tank, [0, -1, 0], \"Usti hlavne\"];\n```\n\n*Example 3:*\n\nAutomatic offset:\n\n```sqf\nammoCrate attachTo [player];\n```\n\n*Example 4:*\n\nTo set orientation of attached object use `setVectorDirAndUp` command:<br>\n\n\n```sqf\n_expl1 = \"DemoCharge_Remote_Ammo\" createVehicle position player;\n_expl1 attachTo [player, [-0.1, 0.1, 0.15], \"Pelvis\"];\n_expl1 setVectorDirAndUp [[0.5, 0.5, 0], [-0.5, 0.5, 0]];\n_expl2 = \"DemoCharge_Remote_Ammo\" createVehicle position player;\n_expl2 attachTo [player, [0, 0.15, 0.15], \"Pelvis\"];\n_expl2 setVectorDirAndUp [[1, 0, 0], [0, 1, 0]];\n_expl3 = \"DemoCharge_Remote_Ammo\" createVehicle position player;\n_expl3 attachTo [player, [0.1, 0.1, 0.15], \"Pelvis\"];\n_expl3 setVectorDirAndUp [[0.5, -0.5, 0], [0.5, 0.5, 0]];\n```","commands\\attackEnabled.md":"Return whether a group's leader can issue attack commands to soldiers under his command.\n\n\n---\n*Syntaxes:*\n\n`attackEnabled` name\n\n---\n*Example 1:*\n\n```sqf\nif (not attackEnabled _soldier) then { _soldier setCombatMode \"Careless\" };\n```","commands\\awake.md":"Wakes up sleeping PhysX object or puts a PhysX object to sleep. In 2.10 this command can be used on corpses of type **Man** and has no effect on `alive` units. When unit gets killed it goes into ragdoll state for a short while, then the units get frozen and any simulation and collision is removed to save system resources. As a result, corpses do not react to their surrounding any more. Using this command will temporarily re-enable ragdoll state of a corpse to the same state it was when unit died. If this command is used in \"enable/disable\" sequence on a dead body, it gives the corpse a visible nudge (See example 3).\n\n\n---\n*Syntaxes:*\n\nobject `awake` awake\n\n---\n*Example 1:*\n\n```sqf\n_object awake false;\n```\n\n*Example 2:*\n\nSince 2.10: \n```sqf\n_deadUnit awake true;\n```\n\n*Example 3:*\n\nMake corpse react to explosion (since 2.10): \n```sqf\n_deadUnit addEventHandler [\"Explosion\", \n{\n\tparams [\"_unit\", \"_damage\"];\n\tif (_damage < 0.01) exitWith {};\n\t_unit awake true;\n\t_unit awake false;\n}];\n```","commands\\backpack.md":"Returns a class of a backpack.\n\n\n---\n*Syntaxes:*\n\n`backpack` unit\n\n---\n*Example 1:*\n\n```sqf\n_classname = backpack player;\n```","commands\\backpackCargo.md":"Get array with backpacks from ammo box (or any general weapon holder container).\n\n\n---\n*Syntaxes:*\n\n`backpackCargo` box\n\n---\n*Example 1:*\n\n```sqf\nhint str backpackCargo vehicle player;\n```","commands\\backpackContainer.md":"Returns a cargo container of a unit's backpack.\n\n\n---\n*Syntaxes:*\n\n`backpackContainer` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str backpackContainer player; // 1a5f7900# 163944: backpack_fast.p3d\n```\n\n*Example 2:*\n\n```sqf\nhint str getMagazineCargo backpackContainer player;\n/*\n\treturns e.g\n\t[\n\t\t[\n\t\t\t\"APERSBoundingMine_Range_Mag\",\n\t\t\t\"ClaymoreDirectionalMine_Remote_Mag\",\n\t\t\t\"SLAMDirectionalMine_Wire_Mag\",\n\t\t\t\"DemoCharge_Remote_Mag\"\n\t\t],[\n\t\t\t3,\n\t\t\t2,\n\t\t\t2,\n\t\t\t1\n\t\t]\n\t]\n*/\n```\n\n*Example 3:*\n\n```sqf\n(backpackContainer player) addWeaponCargoGlobal [weapons player select 0, 1];\n```","commands\\backpackItems.md":"Get array with all items (of any kind, even weapons) in backpack of the given unit.\n\n\n---\n*Syntaxes:*\n\n`backpackItems` unit\n\n---\n*Example 1:*\n\n```sqf\nbackpackItems player; // returns e.g [\"hgun_P07_F\", \"Titan_AT\"]\n```","commands\\backpackMagazines.md":"Get array with all magazines from backpack of the given unit.\n\n\n---\n*Syntaxes:*\n\n`backpackMagazines` unit\n\n---\n*Example 1:*\n\n```sqf\nbackpackMagazines player;\n// returns e.g\n/*\n[\n\t\"Titan AT Missile(1/1)[id/cr:16/0](2x)\"\n]\n*/\n```","commands\\backpackSpaceFor.md":"Returns how much space is in backpack for given weapon or magazine\n\n\n---\n*Syntaxes:*\n\nbackpack `backpackSpaceFor` weaponName\n\n---\n*Example 1:*\n\n```sqf\n(backpackContainer player) backpackSpaceFor \"m16\"; // [weapons, magazines]\n```","commands\\behaviour.md":"Returns the behaviour of the individual unit, this is why it only accepts `Object` as the argument. For Arma 3 behaviour explanation see [[Arma_3_AI_Behavior]]\n\n\n---\n*Syntaxes:*\n\n`behaviour` unit\n\n---\n*Example 1:*\n\n```sqf\n_soldier setBehaviour \"CARELESS\";\n_b = behaviour _soldier; // returns \"CARELESS\"\n```","commands\\benchmark.md":"Returns the value of \"3D Performance\" in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions.\n\n\n---\n*Syntaxes:*\n\n`benchmark`\n\n---\n*Example 1:*\n\n<sqs>? (benchmark > 2000) : setViewDistance 2000</sqs>","commands\\bezierInterpolation.md":"Gets interpolated value based on *(Reference Wikipedia \"Bézier_curve|Bézier curve\")* with given control points (progress value is 0...1 for a curve that starts at pos0 and finishes at posN) <br>\n[[Image:bezierInterpolation2.jpg|400px]]\n\n\n---\n*Syntaxes:*\n\nprogress `bezierInterpolation` positions\n\n---\n*Example 1:*\n\nQuick demonstration that spawns some spheres around player object:\n\n```sqf\nfor \"_i\" from 0 to 1 step 0.05 do {\n\tcreateVehicle [\"Sign_Sphere10cm_F\", (_i bezierInterpolation [\n\t\tplayer modelToWorld [0,0,0],\n\t\tplayer modelToWorld [0,2,2],\n\t\tplayer modelToWorld [2,0,2],\n\t\tplayer modelToWorld [0,0,4]\n\t]), [], 0, \"CAN_COLLIDE\"];\n};\n```\n\n*Example 2:*\n\nCreate a map marker curve from 4 control points with overlap (progress is -0.5...1.5 instead of 0...1):\n\n```sqf\nprivate _controlPoints = [[100,-90], [200,-30], [150,60], [100,90]] apply { player getRelPos _x };\n{\n\tprivate _marker = createMarkerLocal [str _x, _x];\n\t_marker setMarkerTypeLocal \"mil_objective\";\n\t_marker setMarkerTextLocal (\"P\" + str _forEachIndex);\n}\nforEach _controlPoints;\n\nfor \"_i\" from -0.5 to 1.5 step 0.01 do\n{\n\tprivate _marker = createMarkerLocal [str _i, _i bezierInterpolation _controlPoints];\n\t_marker setMarkerTypeLocal \"mil_dot\";\n};\nopenMap true;\n```","commands\\binocular.md":"Returns class name of currently used binocular weapon.\n\n\n---\n*Syntaxes:*\n\n`binocular` unit\n\n---\n*Example 1:*\n\n```sqf\n_binocs = binocular player; //Rangefinder\n```","commands\\binocularItems.md":"Returns array with all items assigned to the `binocular` weapon except magazines. Use `binocularMagazine` command for the latter. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`binocularItems` unit\n\n---\n*Example 1:*\n\n```sqf\nbinocularItems player;\n```","commands\\binocularMagazine.md":"Collects all loaded `magazines` from all `binocular` muzzles and returns them in `Array`, otherwise it returns []. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`binocularMagazine`  unit\n\n---\n*Example 1:*\n\n```sqf\nhint str binocularMagazine player; // [\"Laserbatteries\"]\n```","commands\\blufor.md":"Pre-defined variable for the blufor `side`.\n\n\n---\n*Syntaxes:*\n\n`blufor`\n\n---\n*Example 1:*\n\n```sqf\nif (side player == blufor) then\n{\n\thint \"BLUFOR\";\n};\n```","commands\\boundingBox.md":"[[Image:Boundingbox.jpg|right|200px]] Returns a bounding box of given object in model coordinate space, adjusted according to destruction/animation of an object. This command is rather generous on the size estimation, for more precise coordinates use `boundingBoxReal`.\n\n\n---\n*Syntaxes:*\n\n`boundingBox` object\n\nclippingType `boundingBox` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _box = boundingBox _abrams;\n```\n\n*Example 2:*\n\n```sqf\nhint str (0 boundingBox cursorObject);\n```","commands\\boundingBoxReal.md":"[[Image:Boundingbox.jpg|right|200px]] Returns a raw bounding box of given object in model coordinates space. This command is similar to `boundingBox` but gives more precise measurements.<br>\nThe alternative syntax allows to specify clipping type to be used, which in some cases could make the result even more precise.\n\n\n---\n*Syntaxes:*\n\n`boundingBoxReal` object\n\nclippingType `boundingBoxReal` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _bbr = boundingBoxReal vehicle player;\nprivate _p1 = _bbr select 0;\nprivate _p2 = _bbr select 1;\nprivate _maxWidth = abs ((_p2 select 0) - (_p1 select 0));\nprivate _maxLength = abs ((_p2 select 1) - (_p1 select 1));\nprivate _maxHeight = abs ((_p2 select 2) - (_p1 select 2));\n```\n\n*Example 2:*\n\n```sqf\nhint str (0 boundingBoxReal cursorObject);\n```","commands\\boundingCenter.md":"Returns the position of original (loaded) center of object in model coordinates.\n\n\n---\n*Syntaxes:*\n\n`boundingCenter` object\n\n---\n*Example 1:*\n\n```sqf\n_center = boundingCenter TruckOne;\n```","commands\\brakesDisabled.md":"Returns the status of autobrake (see `disableBrakes`).\n\n\n---\n*Syntaxes:*\n\n`brakesDisabled` transport\n\n---\n*Example 1:*\n\n```sqf\nif !(brakesDisabled _vehicle) then\n{\n\tdisableBrakes _vehicle;\n};\n```","commands\\break.md":"Skips all loop interations.\n\n\n---\n*Syntaxes:*\n\n`break`\n\n---\n*Example 1:*\n\n```sqf\n// prints 0, 1 and then exits\nfor \"_i\" from 0 to 3 do\n{\n\tif (_i == 2) then { break };\n\tsystemChat str _i;\n};\n```","commands\\breakOut.md":"Breaks out of the `scope` with given `name`.\n* An unknown `scopeName` name will cause the script error **Generic error in expression**\n* If multiple scopes with the same `name` exist, the command will break out the nearest scope. See *(Reference Link \"#Example 3\")*.\n\n\n---\n*Syntaxes:*\n\n`breakOut`  name\n\nvalue `breakOut`  name\n\n---\n*Example 1:*\n\n```sqf\nscopeName \"main\";\nwhile { true } do {\n\tscopeName \"loop1\";\n\twhile {true} do {\n\t\tscopeName \"loop2\";\n\t\tif (condition1) then {breakTo \"main\"}; // Breaks all scopes and return to \"main\"\n\t\tif (condition2) then {breakOut \"loop2\"}; // Breaks scope named \"loop2\"\n\t\tsleep 1;\n\t};\n\tsleep 1;\n};\n```\n\n*Example 2:*\n\n```sqf\ncall {\n\tscopeName \"main\";\n\tcall {\n\t\t123 breakOut \"main\"\n\t};\n\t345\n}; // call returns 123\n```\n\n*Example 3:*\n\n```sqf\ncall {\n\tscopeName \"Main\"; // Parent Main\n\tcall {\n\t\tscopeName \"Main\"; // Child Main\n\t\t\"String\" breakOut \"Main\"; // Will break out of child main and return \"String\" to parent main\n\t};\n};\n```","commands\\breakTo.md":"Breaks block to scope named `name`. Nil is returned.\n\nScope name can be assigned using `scopeName` command.\n\n\n---\n*Syntaxes:*\n\n`breakTo` name\n\n---\n*Example 1:*\n\n```sqf\nscopeName \"main\";\nwhile { true } do\n{\n\tscopeName \"loop1\";\n\twhile { true } do\n\t{\n\t\tscopeName \"loop2\";\n\t\tif (condition1) then { breakTo \"main\" };\t// breaks all scopes and return to \"main\"\n\t\tif (condition2) then { breakOut \"loop2\" };\t// breaks scope named \"loop2\"\n\t\tsleep 1;\n\t};\n\tsleep 1;\n};\n```","commands\\breakWith.md":"Skips all loop iterations and immediately returns the given value.\n\n\n---\n*Syntaxes:*\n\n`breakWith` return\n\n---\n*Example 1:*\n\n```sqf\n// stops once _i reaches 5 and outputs 0, 1, 2, 3, 4, END\nsystemChat call {\n\tfor \"_i\" from 0 to 10 do {\n\t\tif (_i == 5) then { breakWith \"END\"; };\n\t\tsystemChat str _i;\n\t};\n};\n```","commands\\briefingName.md":"Returns the name of the current briefing/scenario name.\n\n\n---\n*Syntaxes:*\n\n`briefingName`\n\n---\n*Example 1:*\n\n```sqf\n_name = briefingName;\n```","commands\\buildingExit.md":"Returns the given indexed exit in a building. The returned value is in format Position.\n\n\n---\n*Syntaxes:*\n\nbuilding `buildingExit` index\n\n---\n*Example 1:*\n\n```sqf\n_building buildingExit 0;\n```","commands\\buildingPos.md":"Returns position of a given indexed position in a `building`.\n\n\n---\n*Syntaxes:*\n\nbuilding `buildingPos`  index\n\n---\n*Example 1:*\n\n```sqf\n_soldier setPosATL (_house1 buildingPos 2);\n```\n\n*Example 2:*\n\n```sqf\n_allpositions = nearestBuilding player buildingPos -1;\n```","commands\\buldozer_enableRoadDiag.md":"Enables road diagnostics in buldozer.\n\n\n---\n*Syntaxes:*\n\n`buldozer_enableRoadDiag` enable\n\n---\n*Example 1:*\n\n```sqf\nbuldozer_enableRoadDiag true;\n```","commands\\buldozer_isEnabledRoadDiag.md":"Returns if road diagnostics are enabled in buldozer.\n\n\n---\n*Syntaxes:*\n\n`buldozer_isEnabledRoadDiag`\n\n---\n*Example 1:*\n\n```sqf\n_isEnabled = buldozer_isEnabledRoadDiag;\n```","commands\\buldozer_loadNewRoads.md":"Generates new roads. Working only in `buldozer`.\n\n\n---\n*Syntaxes:*\n\n`buldozer_loadNewRoads` path\n\n---\n*Example 1:*\n\n```sqf\n_loaded = buldozer_loadNewRoads \"C:/A3/Map_Stratis/data/roads/\"\n```","commands\\buldozer_reloadOperMap.md":"Reload oper map visible in costMap diag tool. Working only in `buldozer`.\n\n\n---\n*Syntaxes:*\n\n`buldozer_reloadOperMap`\n\n---\n*Example 1:*\n\n```sqf\nbuldozer_reloadOperMap;\n```","commands\\buttonAction.md":"Returns the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read `Arma: GUI Configuration` for more information about user dialogs and controls.\n\n\n---\n*Syntaxes:*\n\n`buttonAction`  idc\n\n`buttonAction`  control\n\n---\n*Example 1:*\n\n```sqf\nbuttonSetAction [100, { player exec \"reply.sqs\" }]\n_action = buttonAction 100; // Returns { player exec \"reply.sqs\" }\n```","commands\\buttonSetAction.md":"is available, but contains \"\"; See `Arma: GUI Configuration` for more information about user dialogs. Works with:\n* `CT_BUTTON`\n* `CT_XBUTTON`\n* `CT_ACTIVETEXT`\n* `CT_SHORTCUTBUTTON`\n\n\n---\n*Syntaxes:*\n\n`buttonSetAction`  [idc, action]\n\ncontrol `buttonSetAction`  action\n\n---\n*Example 1:*\n\n```sqf\nbuttonSetAction [100, \"player exec \"\"reply.sqs\"\"\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl buttonSetAction \"if (alive bob) then {hint 'alive'} else {hint 'dead'}\"; // SQF but SQS compatible, see SQS\n```\n\n*Example 3:*\n\nScript is `SQS`:\n<sqs>_control buttonSetAction \"hint format ['Is SQS: %1', !isNil '_time']\"</sqs>","commands\\cadetMode.md":"`Prior to {{arma3}}` it returns if the player is currently playing in cadet or veteran mode.\n\n\n---\n*Syntaxes:*\n\n`cadetMode`\n\n---\n*Example 1:*\n\n`SQS Syntax`: <sqs>? (cadetMode) : _AIsoldier setSkill 0.1</sqs>\n\n*Example 2:*\n\n`SQF Syntax`: \n```sqf\nif (cadetMode) then { _AIsoldier setSkill 0.1 };\n```","commands\\calculatePath.md":"Spawns an agent that will execute an AI path calculation and fire the **\"PathCalculated\"** [[Arma_3:_Event_Handlers#PathCalculated | event handler]]. The vehicle type to simulate could be one of the following presets:\n{{Columns|2|\n* **\"man\"** (will use \"C_man_1\")\n* **\"car\"** (will use \"C_Offroad_01_F\")\n* **\"tank\"** (will use \"B_MBT_01_cannon_F\")\n* **\"wheeled_APC\"** (will use \"B_APC_Tracked_01_rcws_F\")\n* **\"boat\"** (will use \"C_Rubberboat\")\n* **\"plane\"** (will use \"B_Plane_CAS_01_dynamicLoadout_F\")\n* **\"helicopter\"** (will use \"B_Heli_Light_01_F\")\n\n\n---\n*Syntaxes:*\n\n`calculatePath` [type, behaviour, from, to]\n\n---\n*Example 1:*\n\n```sqf\ncalculatePath [\"car\", \"safe\", [2150.67,5778.19,0], [2184.11,5802.28,0]];\n```\n\n*Example 2:*\n\nDraws the path from South West to North East of Agia Marina:\n\n```sqf\n(calculatePath [\"man\",\"safe\",[2832.9,5927.79,0],[3107.46,6036.61,0]]) addEventHandler [\"PathCalculated\", {\n\t{\n\t\tprivate _marker = createMarker [\"marker\" + str _forEachIndex, _x];\n\t\t_marker setMarkerType \"mil_dot\";\n\t\t_marker setMarkerText str _forEachIndex;\n\t} forEach (_this select 1);\n}];\n```\n\n*Example 3:*\n\nAlternative usage of `calculatePath` functionality that is free of double execution bug (and calculatePath command):\n\n```sqf\nprivate _agent = createAgent [typeOf player, position player, [], 0, \"NONE\"];\n_agent addEventHandler [\"PathCalculated\",\n{ \n\t{ \n\t\tprivate _marker = createMarker [\"marker\" + str _forEachIndex, _x];\n\t\t_marker setMarkerType \"mil_dot\";\n\t\t_marker setMarkerText str _forEachIndex;\n\t} \n\tforEach (_this select 1);\n}];\n_agent setDestination [player getRelPos [500, 0], \"LEADER PLANNED\", true];\n```\n\n*Example 4:*\n\nSame as above but for a vehicle:\n\n```sqf\nprivate _agent = createAgent [typeOf player, position player, [], 0, \"NONE\"];\nprivate _car = \"B_Quadbike_01_F\" createVehicle position player;\n_agent moveInDriver _car;\n_agent addEventHandler [\"PathCalculated\",\n{ \n\t{ \n\t\tprivate _marker = createMarker [\"marker\" + str _forEachIndex, _x];\n\t\t_marker setMarkerType \"mil_dot\";\n\t\t_marker setMarkerText str _forEachIndex;\n\t} \n\tforEach (_this select 1);\n}];\n_agent setDestination [player getRelPos [500, 0], \"LEADER PLANNED\", true];\n```","commands\\calculatePlayerVisibilityByFriendly.md":"Sets if friendly units will calculate `player`'s visibility or not. Default value is `false`.\n\n\n---\n*Syntaxes:*\n\n`calculatePlayerVisibilityByFriendly` calculate\n\n---\n*Example 1:*\n\n```sqf\ncalculatePlayerVisibilityByFriendly true;\n```","commands\\call.md":"Adds given set of compiled instructions to the current stack and waits for it to finish and return, provides an option to pass arguments to the executed `Code`. See `Scheduler` to learn more about how the code is excuted and behaves.\n\n\n---\n*Syntaxes:*\n\n`call` code\n\nargs `call` code\n\n---\n*Example 1:*\n\n```sqf\ncall { hint str 123; };\n```\n\n*Example 2:*\n\n```sqf\n123 call { hint str _this; };\n```\n\n*Example 3:*\n\n```sqf\n_sum = [1, 2] call { (_this select 0) + (_this select 1); };\nhint str _sum; // displays 3\n```\n\n*Example 4:*\n\n```sqf\n123 call compile \"hint str _this;\";\n```\n\n*Example 5:*\n\n```sqf\n_result = 123 call compile preprocessFileLineNumbers \"myFile.sqf\";\n```","commands\\callExtension.md":"Calls custom .dll also known as `Extension`. The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.\n<br><br>\nThis command is blocking, meaning that the game will wait for the extension to return before continuing. This may cause FPS drop if extension is not optimised. If extension takes too long, consider making asynchronous extension, where the result of the work of the extension is collected in a separate call.\n<br><br>\nCurrently there is no limit how much data you can send to the extension. However there is a limit on how much data you can return from extension in one call. The limit is known to the extension and is passed in ** int outputSize**. The limit may or may not change in the future and is currently 10240 bytes. It is up to extension designer to handle multipart results if returned data exceeds output limit.\n<br><br>\nSince Arma 3 v1.67 it is possible to pass array of arguments to extensions. The array of arguments could be anything and all elements will be converted to strings, however you might want to only send simple types like `Boolean`s, `String`s, `Number`s and `Array`s of all of the above. There is currently a limit on how many arguments can be sent and it is 2048 (since Arma 3 v1.92; previous limit: 1024). However an argument could be an `Array` itself, in this case extension maker will have to provide additional methods for parsing such arguments.\n<br><br>\nPossible error codes:\n* 101: SYNTAX_ERROR_WRONG_PARAMS_SIZE\n* 102: SYNTAX_ERROR_WRONG_PARAMS_TYPE\n* 201: PARAMS_ERROR_TOO_MANY_ARGS\n* 301: EXECUTION_WARNING_TAKES_TOO_LONG\nEach error will have entry in .rpt file with more details.<br><br>\n\nThe extension execution timeout, after which **301: EXECUTION_WARNING_TAKES_TOO_LONG}} warning is issued, is hardcoded on clients and is 1000.0 milliseconds (1 second). On the server the default limit is also 1 second, however it is possible to set custom limit with {{hl|callExtReportLimit** param (see ` Server Options`).\n<br><br>\nIf an extension with the given name can't be found (or it is found but doesn't implement the required interface properly / at all) the following error will be written into the RPT (In this example the given dll-name was \"MyExtension\"):\n<code>14:27:07 CallExtension 'MyExtension' could not be found</code>\n<br>\nIf an extension is not whitelisted with BattlEye (see `Extensions` for more info) it will be blocked on clients running with enabled BattlEye protection. RPT message outputted however is a little obscure:\n<code>21:35:04 Call extension 'MyExtension' could not be loaded: Insufficient system resources exist to complete the requested service</code>\n<br>\nSince Arma 3 v1.69, **RVExtensionVersion** interface (see source code example below) has been added, which is called by the engine on extension load and expects extension version. This interface is designed to work with both, Linux and Windows. The max buffer size is 32 bytes. The version information will then appear in .`rpt` file like so:\n<code>19:06:36 CallExtension loaded: test_extension (.\\test_extension.dll) [1.0.0.1]</code>\n<br>\nFor more information see `Extensions`.\n<br><br>\n<u>Linux specific</u><br>\nWhile on Windows the extension name is case-insensitive, on Linux the extension name is case-sensitive and should match the name of the .so file exactly (minus \".so\" part).<br><br>\n\n `serverName`\n\n\n---\n*Syntaxes:*\n\nextension `callExtension` function\n\nextension `callExtension`  [function, arguments]\n\n---\n*Example 1:*\n\n```sqf\n_return = \"myExtension\" callExtension \"stringToBeParsed\";\n```\n\n*Example 2:*\n\n```sqf\n_result = \"test_extension\" callExtension str weapons player;\n_result = \"test_extension\" callExtension [\"fnc1\", getUnitLoadout player];\n_result = \"test_extension\" callExtension [\"fnc2\", magazinesAmmoFull player];\n_result = \"test_extension\" callExtension [\"fnc1\", [weapons player, magazines player]];\n```\n\n*Example 3:*\n\n```sqf\n_result = \"test_extension\" callExtension [\"fnc1\", [1, \"two\", true, [4, \"five\", false]]];\nparseSimpleArray (_result select 0) params [\"_number\",\"_string\",\"_boolean\",\"_array\"];\nsystemChat str [_number,_string,_boolean,_array];\n```\n<br>\n<u>Source Code</u> ({{ExternalLink\n\n*Example 4:*\n\n```sqf\nfncToExecute_1 = { hint format [\"Extension Result 1: %1\", _this] };\nfncToExecute_2 = { hint format [\"Extension Result 2: %1\", _this] };\nfncToExecute_3 = { hint format [\"Extension Result 3: %1\", _this] };\n\naddMissionEventHandler [\"ExtensionCallback\", \n{\n\tparams [\"_name\", \"_function\", \"_data\"];\n\tif (_name isEqualTo \"test_callback\") then \n\t{ \n\t\tparseSimpleArray _data call (missionNamespace getVariable [_function, \n\t\t{ \n\t\t\thint \"Function does not exist!\"\n\t\t}]);\n\t};\n}];\n\n\"test_callback\" callExtension str \"test data\";\n```\n<br>\nHere is a minimal example of an extension utilising [[Arma 3: Mission Event Handlers#ExtensionCallback | extension callback]] (don't actually do it like this). `fncToExecute_X` function is called from \"ExtensionCallback\" event handler when it is triggered after 2 seconds of the extension call.\n<spoiler>\n```cpp\n#include <thread>\n#include <string>\n#include <chrono>\n\nextern \"C\"\n{\n\t__declspec (dllexport) void __stdcall RVExtensionRegisterCallback(int(*callbackProc)(char const *name, char const *function, char const *data));\n\t__declspec (dllexport) void __stdcall RVExtension(char *output, int outputSize, const char *function);\n}\n\nint(*callbackPtr)(char const *name, char const *function, char const *data) = nullptr;\n\nvoid __stdcall RVExtensionRegisterCallback(int(*callbackProc)(char const *name, char const *function, char const *data))\n{\n\tcallbackPtr = callbackProc;\n}\n\nvoid __stdcall RVExtension(char *output, int outputSize, const char *function)\n{\n\tif (!callbackPtr)\n\t\treturn;\n\n\tstd::thread ([](std::string fnc)\n\t{\t\t\n\t\tusing namespace std::chrono_literals;\n\t\tfnc = \"[1,2,3,\" + fnc + \"]\";\n\n\t\tfor (int i = 1; i < 4; ++i) // run 3 times\n\t\t{\n\t\t\tstd::this_thread::sleep_for(2s); // sleep for 2 seconds\n\t\t\tcallbackPtr(\"test_callback\", (\"fncToExecute_\" + std::to_string(i)).c_str(), fnc.c_str());\n\t\t}\n\n\t}, function).detach();\n}\n```\n</spoiler>\n\n*Example 5:*\n\nSince Arma 3 v2.11: \n```sqf\nhint (\"myExtContext\" callExtension \"\");\n```\nHere is a minimal example: <spoiler>\n```cpp\n#include <string>\n#include <vector>\n#include <iterator>\n#include <sstream>\n#include <iomanip>\n \nBOOL APIENTRY DllMain( HMODULE hModule,\n                       DWORD  ul_reason_for_call,\n                       LPVOID lpReserved\n                     )\n{\n    switch (ul_reason_for_call)\n    {\n    case DLL_PROCESS_ATTACH:\n    case DLL_THREAD_ATTACH:\n    case DLL_THREAD_DETACH:\n    case DLL_PROCESS_DETACH:\n        break;\n    }\n    return TRUE;\n}\n \nstd::vector<std::string> contextInfo;\n \nextern \"C\"\n{\n\t//--- User entry point\n\t__declspec (dllexport) void __stdcall RVExtension(char *output, int outputSize, const char *function);\n\t//--- Engine passed context\n\t__declspec (dllexport) void __stdcall RVExtensionContext(const char **args, int argsCnt);\n}\n \n//--- name callExtension function\nvoid __stdcall RVExtension(char *output, int outputSize, const char *function)\n{\n\t//--- Not used here\n\t(void)function;\n \n\tif (!contextInfo.empty())\n\t{\n\t\tstd::ostringstream oss;\n\t\tconst char qt = '\"';\n \n\t\tfor (auto it = contextInfo.begin(); it != contextInfo.end() - 1; ++it)\n\t\t\toss << std::quoted(*it, qt, qt) << \",\";\n\t\toss << std::quoted(contextInfo.back(), qt, qt);\n \n\t\t//--- Send context info back\n\t\tstrncpy_s(output, outputSize, (\"[\" + oss.str() + \"]\").c_str(), _TRUNCATE);\n\t}\n}\n \n//--- Context is executed first, copy it\nvoid __stdcall RVExtensionContext(const char **args, int argsCnt)\n{\n\tcontextInfo.assign(args, std::next(args, argsCnt));\n}\n```\n</spoiler>","commands\\camCommand.md":"Executes a command on the given `camera / actor` object. Known commands:\n\n\n---\n*Syntaxes:*\n\ncamera `camCommand` command\n\n---\n*Example 1:*\n\n```sqf\n_camera camCommand \"manual on\";\n```\n\n*Example 2:*\n\n```sqf\nprivate _camera = \"CamCurator\" camCreate [0,0,0];\n_camera camCommand \"maxPitch 89\";\n_camera camCommand \"minPitch -89\";\n_camera camCommand \"speedDefault 0.1\";\n_camera camCommand \"speedMax 2\";\n_camera camCommand \"ceilingHeight 5000\";\n_camera camCommand \"atl off\";\n_camera camCommand \"surfaceSpeed off\";\n```","commands\\camCommit.md":"Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. For **camPrepareXXX** commands use `camCommitPrepared`.\n\n\n---\n*Syntaxes:*\n\ncamera `camCommit` time\n\n---\n*Example 1:*\n\n`SQS Syntax`:\n<sqs>\n; create a camera object\n_cam = \"camera\" camCreate [5600,4800,10]\n_cam camSetTarget player\n_cam cameraEffect [\"internal\", \"BACK\"]\n_cam camCommit 0\n\n; smoothly move the camera to its new position in 6 seconds\n_cam camSetPos [5680,4720,20]\n_cam camCommit 6\n@camCommitted _cam\n\n; proceed\n</sqs>\n\n*Example 2:*\n\n`SQF Syntax`:\n\n```sqf\nprivate \"_cam\";\n\n// create a camera object\n_cam = \"camera\" camCreate [position player select 0, position player select 1, 2];\n_cam camSetTarget player;\n_cam cameraEffect [\"internal\", \"BACK\"];\n_cam camCommit 0;\n\n// smoothly move the camera to its new position in 6 seconds\n_cam camSetPos [position player select 0, (position player select 1) + 10, 20];\n_cam camCommit 6;\nwaitUntil { camCommitted _cam; };\n```","commands\\camCommitPrepared.md":"Smoothly conducts the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. This command is for use with **camPrepareXXX** commands. For the normal cam command use `camCommit`.\n\n\n---\n*Syntaxes:*\n\ncamera `camCommitPrepared` time\n\n---\n*Example 1:*\n\n```sqf\n// Create a camera object\n_cam = \"camera\" camCreate [5600,4800,10];\n_cam camPrepareTarget player;\n_cam cameraEffect [\"internal\", \"BACK\"];\n_cam camCommitPrepared 0;\n// Smoothly move the camera to its new position in 6 seconds\n_cam camPreparePos [5680,4720,20];\n_cam camCommitPrepared 6;\nwaitUntil {camCommitted _cam};\n// Proceed\n```","commands\\camCommitted.md":"Checks if the conduction of the last camCommit call already finished.\n\n\n---\n*Syntaxes:*\n\n`camCommitted` camera\n\n---\n*Example 1:*\n\nSQS:\n<sqs>\n; create a camera object\n_cam = \"camera\" camCreate [5600,4800,10]\n_cam camSetTarget player\n_cam cameraEffect [\"internal\", \"BACK\"]\n_cam camCommit 0\n\n; smoothly move the camera to its new position in 6 seconds\n_cam camSetPos [5680,4720,20]\n_cam camCommit 6\n@camCommitted _cam\n\n; proceed\n</sqs>\n\n*Example 2:*\n\nSQF:\n\n```sqf\n_cam = \"camera\" camCreate [0, 0, 0];\n_cam camSetTarget player;\n_cam camSetRelPos [0, -5, 10];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 0;\n\nwaitUntil { camCommitted _cam };\n\n_cam camSetTarget player;\n_cam camSetRelPos [90, 25, 10];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 5;\n\nwaitUntil {camCommitted _cam};\n\n_cam camSetTarget player;\n_cam camSetRelPos [-90, -5, 10];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 5;\n```","commands\\camConstuctionSetParams.md":"Sets construction camera parameters. To work with \"camconstruct\" object.\n\n\n---\n*Syntaxes:*\n\ncamera `camConstuctionSetParams` [position, radius, maxAboveLand]\n\n---\n*Example 1:*\n\n```sqf\n_camera camConstuctionSetParams [getPos player, 50, 20];\n```","commands\\camCreate.md":"Create a camera or a seagull object on the given position. The creation happens immediately and doesn't wait for `camCommit`.<br>\nAmong other commands, `cameraEffect` must be used to enter the camera's view and `camDestroy` to delete the created camera. See also `Camera Control`.\n\n\n---\n*Syntaxes:*\n\ntype `camCreate` position\n\n---\n*Example 1:*\n\n```sqf\n_cam = \"camera\" camCreate (ASLToAGL eyePos player);\n```\n\n*Example 2:*\n\n```sqf\n_flr = \"flare\" camCreate (position _myPlane); // works too\n```","commands\\camDestroy.md":"Destroys camera object created with `camCreate`. This command doesn't need `camCommit`.\n\n\n---\n*Syntaxes:*\n\n`camDestroy` object\n\n---\n*Example 1:*\n\n```sqf\ncamDestroy _cam;\n```\n\n*Example 2:*\n\n```sqf\n_cam cameraEffect [\"terminate\",\"back\"];\ncamDestroy _cam;\n```","commands\\cameraEffect.md":"Sets the given effect on the given camera. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use `switchCamera` instead. The effect type \"Terminate\" is used to exit the current camera view and switch back to the player's view. Does not need `camCommit`.\n<br><br>\nSince *(Reference GVI \"arma3|1.74\")*, it is possible to terminate individual r2t source. For example:\n\n```sqf\ncam cameraEffect [\"terminate\", \"back\", \"rtt1\"]; // would terminate \"rtt1\" r2t source\ncam cameraEffect [\"terminate\", \"back\"]; // would terminate all r2t sources\n```\n\n\n---\n*Syntaxes:*\n\ncamera `cameraEffect` [effectName, effectPosition, r2tName]\n\n---\n*Example 1:*\n\n```sqf\n_cam cameraEffect [\"internal\", \"BACK\"];\n```\n\n*Example 2:*\n\n```sqf\n_cam cameraEffect [\"internal\", \"back\", \"rendersurface\"];\n```\n\n*Example 3:*\n\n```sqf\ncam = \"seagull\" camCreate (player modelToWorld [0,0,100]);\ncam cameraEffect [\"FIXED\", \"LEFT TOP\"];\ncam camCommand \"MANUAL ON\";\n```\n\n*Example 4:*\n\n```sqf\n_ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscPicture\", -1];\n_ctrl ctrlSetPosition [0.5, 0, 0.5, 0.5];\n_ctrl ctrlSetText \"#(argb,512,512,1)r2t(rtt1,1.0)\";\n_ctrl ctrlCommit 0;\n_cam1 = \"camera\" camCreate (ASLToAGL eyePos player vectorAdd [0, -10, 0]);\n_cam1 cameraEffect [\"Internal\", \"Back\", \"rtt1\"];\n_cam2 = \"Land_HandyCam_F\" createVehicle [0,0,0];\n_cam2 enableSimulation false;\n_cam2 setPos (ASLToAGL eyePos player vectorAdd [0, 10, 0]);\n_cam2 setDir (_cam2 getDir player);\nswitchCamera _cam2;\n```","commands\\cameraEffectEnableHUD.md":"Enable / disable showing of in-game UI during currently active camera effect. By default the HUD is off, which will make results of [[drawIcon3D]] invisible, for example.\n\n\n---\n*Syntaxes:*\n\n`cameraEffectEnableHUD` enable\n\n---\n*Example 1:*\n\n```sqf\ncameraEffectEnableHUD true;\n```","commands\\cameraInterest.md":"Return camera interest for given entity, as set by `setCameraInterest`, or as autodetected.\n\n\n---\n*Syntaxes:*\n\n`cameraInterest` entity\n\n---\n*Example 1:*\n\n```sqf\ncamInterest = cameraInterest myUnit;\n```","commands\\cameraOn.md":"Returns the vehicle to which the camera is attached.\n\n\n---\n*Syntaxes:*\n\n`cameraOn`\n\n---\n*Example 1:*\n\n```sqf\n_object = cameraOn;\n```","commands\\cameraView.md":"Returns mode of active camera view. Mode is one of: \n* \"INTERNAL\" (1st person)\n* \"EXTERNAL\" (3rd person)\n* \"GUNNER\" (optics / sights)\n* \"GROUP\" (commander view)\n\n\n---\n*Syntaxes:*\n\n`cameraView`\n\n---\n*Example 1:*\n\n```sqf\nif (cameraOn == _vehicle && cameraView == \"External\") then\n{\n  _vehicle switchCamera \"Internal\";\n};\n```","commands\\campaignConfigFile.md":"Returns root of campaign description.ext entries hierarchy.\n\n\n---\n*Syntaxes:*\n\n`campaignConfigFile`\n\n---\n*Example 1:*\n\n```sqf\n_config = campaignConfigFile;\n```","commands\\camPreload.md":"Preloads the scene for the prepared camera with given timeout after which preloading is aborted. Max timeout is 30 seconds. Timeout of 0 means max timeout of 30 seconds as well.\n\n\n---\n*Syntaxes:*\n\ncamera `camPreload` timeout\n\n---\n*Example 1:*\n\n```sqf\n_camera camPreload 5;\n```\n\n*Example 2:*\n\nPreload camera around player to avoid stuttering on optics zooming:\n\n```sqf\n[] spawn \n{\n\t_cam = \"camera\" camCreate (player selectionPosition \"camera\");\n\tfor \"_i\" from 0 to 359 do\n\t{\n\t\t_cam setDir _i;\n\t\t_cam camPrepareFov 0.25;\n\t\t_cam camPreload 0;\n\t\twaitUntil { camPreloaded _cam };\n\t};\n\tcamDestroy _cam;\n};\n```","commands\\camPreloaded.md":"Checks whether the camera has finished preloading.\n\n\n---\n*Syntaxes:*\n\n`camPreloaded` camera\n\n---\n*Example 1:*\n\n```sqf\nif (camPreloaded _camera) exitWith { hint \"loaded\" };\n```","commands\\camPrepareBank.md":"Prepares the camera bank angle.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareBank` bank\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareBank -0.1;\n```","commands\\camPrepareDir.md":"Prepares the camera heading.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareDir` direction\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareDir 150;\n```","commands\\camPrepareDive.md":"Prepares the camera dive angle.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareDive` dive\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareDive -0.1;\n```","commands\\camPrepareFocus.md":"focusRange is . Prepares the camera focus blur.\n\n`[-1,1]` will reset default values (auto focusing), `[-1,-1]` will disable postprocessing (all is focused). Needs the call of `camCommitPrepared` to be conducted.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareFocus` [distance, blur]\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareFocus [50, 1];\n```","commands\\camPrepareFov.md":"Prepares the camera field of view (zoom). The default zoom level is 0.75, 0.01 is the nearest and 2 the furthest zoom value. The angle of the field of view is `atan(FOV)*2` radians when in 4:3 aspect ratio. Needs the call of `camCommitPrepared` to be conducted.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareFov` fieldOfView\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareFov 0.1;\n```","commands\\camPrepareFovRange.md":"Prepares the camera field of view range for auto zooming.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareFovRange` fovRange\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareFovRange [0.1, 0.5];\n```","commands\\camPreparePos.md":"Prepares the camera position. Needs the call of `camCommitPrepared` to be conducted.\n\n\n---\n*Syntaxes:*\n\ncamera `camPreparePos`  position\n\n---\n*Example 1:*\n\n```sqf\n_camera camPreparePos getPos player;\n```","commands\\camPrepareRelPos.md":"Prepares the camera position relative to the current position of the currect target (see `camPrepareTarget`). Needs the call of `camCommitPrepared` to be conducted.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareRelPos` position\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareRelPos [10,5,-2];\n```","commands\\camPrepareTarget.md":"Prepares the camera target to a position or to a target. Needs the call of `camCommitPrepared` to be conducted.\n\n\n---\n*Syntaxes:*\n\ncamera `camPrepareTarget` position\n\ncamera `camPrepareTarget` target\n\n---\n*Example 1:*\n\n```sqf\n_camera camPrepareTarget getPos player;\n```\n\n*Example 2:*\n\n```sqf\n_camera camPrepareTarget player;\n```","commands\\camSetBank.md":"Sets camera bank angle. Does not commit changes.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetBank`  bank\n\n---\n*Example 1:*\n\n```sqf\n_camera camSetBank -0.1;\n```","commands\\camSetDir.md":"Sets the orientation of the given camera in the direction of the given vector. Needs `camCommit`.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetDir` direction\n\n---\n*Example 1:*\n\nSince {{arma3}}:\n\n```sqf\nprivate _pos1 = player modelToWorld [0, 5, 5];\nprivate _pos2 = player modelToWorld [0, 50, 50];\n\nprivate _cam = \"camera\" camCreate _pos1;\n_cam cameraEffect [\"INTERNAL\", \"BACK\"];\n\n_cam camSetPos _pos2;\n_cam camSetDir (_pos2 vectorFromTo _pos1);\n_cam camCommit 5;\nwaitUntil { camCommitted _cam };\n\n_cam camSetPos _pos1;\n_cam camCommit 5;\n```\n\n*Example 2:*\n\nBefore {{arma3}}:\n\n```sqf\nprivate _pos1 = player modelToWorld [0, 5, 5];\nprivate _pos2 = player modelToWorld [0, 50, 50];\n\nprivate _cam = \"camera\" camCreate _pos1;\n_cam cameraEffect [\"INTERNAL\", \"BACK\"];\n\n_cam camSetPos _pos2;\n_cam camSetDir 180;\n_cam camCommit 5;\nwaitUntil { camCommitted _cam };\n\n_cam camSetPos _pos1;\n_cam camCommit 5;\n```","commands\\camSetDive.md":"Sets camera dive angle. Does not commit changes.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetDive`  dive\n\n---\n*Example 1:*\n\n```sqf\n_camera camSetDive -0.1;\n```","commands\\camSetFocus.md":"Sets camera focus range in format [distance, blur]. blur param - sets the camera focus blur. It does not automatically commit changes (see `camCommit`). Use [-1, -1] to disable focus completely.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetFocus` focusRange\n\n---\n*Example 1:*\n\n```sqf\n_camera camSetFocus [50, 1];\n```","commands\\camSetFov.md":"Set the zoom level (`F`ield `O`f `V`iew) of the given camera.\n<br>\nThe zoom level is from `**0.01}}` for the nearest and `*(Reference hl \"8.5\")*` for the furthest zoom value, with a default zoom level of `{{hl|0.75**`\n<br>\nThe angle of the field of view is `**atan(FOV)*2**` radians when in 4:3 aspect ratio. Needs the call of `camCommit` to be conducted.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetFov` level\n\n---\n*Example 1:*\n\n```sqf\n_cam camSetFov 0.75;\n```","commands\\camSetFovRange.md":"Set the zoom level (`F`ield `O`f `V`iew) start and end values for automatical zooming. <!-- \"automatical\"? LoL ;-) -->\n<br>\nThe default zoom level is `**0.7}}` where `*(Reference hl \"0\")*` is the nearest and `{{hl|1**` is the most far zoom value.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetFovRange` fovRange\n\n---\n*Example 1:*\n\n```sqf\n_cam camSetFovRange [0.1, 0.7];\n```","commands\\camSetPos.md":"Sets the position of the given camera or seagull (see `camCreate`). It is worth mentioning that camera position can also be set with `setPos`, in which case it would be instant. With `camSetPos` it is possible to make smooth position transition in time, defined with `camCommit`, which is required in this case.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetPos` position\n\n---\n*Example 1:*\n\n```sqf\n_cam camSetPos [2300,1000,130];\n_cam camCommit 10;\n```","commands\\camSetRelPos.md":"Sets the position of the given camera relative to its target, set with `camSetTarget`. Needs a call to `camCommit` to be conducted.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetRelPos` position\n\n---\n*Example 1:*\n\n```sqf\n_cam camSetTarget _car;\n_cam camSetRelPos [0,10,8];\n```","commands\\camSetTarget.md":"Set the target object or position where the given camera should point at. Needs the call of `camCommit` to be conducted. To reset the target use `objNull`.\n\n\n---\n*Syntaxes:*\n\ncamera `camSetTarget` target\n\ncamera `camSetTarget` position\n\n---\n*Example 1:*\n\n```sqf\n_camera camSetTarget player;\n```\n\n*Example 2:*\n\n```sqf\n_camera camSetTarget [2540,1503,26];\n```\n\n*Example 3:*\n\n```sqf\n_cam = \"camera\" camCreate (player modelToWorld [0, 100, 10]);\n_cam camSetTarget player;\n_cam camSetRelPos [0, 0.5, 1.5];\n_cam cameraEffect [\"internal\", \"back\"];\n_cam camCommit 1;\nplayer setRandomLip true;\n```","commands\\camTarget.md":"Returns camera's target.\n\n\n---\n*Syntaxes:*\n\n`camTarget` camera\n\n---\n*Example 1:*\n\n```sqf\n_someObject = camTarget _camera;\n```","commands\\camUseNVG.md":"Set / clear using of night vision during cutscenes. This command only works with `camCreate` created camera that is currently the main camera for the player (see example).\n\n\n---\n*Syntaxes:*\n\n`camUseNVG` set\n\n---\n*Example 1:*\n\n```sqf\ncamUseNVG true;\n```\n\n*Example 2:*\n\n```sqf\nsetDate [2000,12,31,0,0];\n_cam = \"camera\" camCreate [0,0,0];\n_cam camSetTarget player;\n_cam camSetRelPos [0,-5,3];\n_cam cameraEffect [\"Internal\",\"Back\"];\n_cam camCommit 0;\ncamUseNVG true;\n```","commands\\canAdd.md":"Checks if given object can be stored in inventory of given object or any inventory container (`uniform`, `vest`, `backpack`) of given unit. Since Arma 3 v2.09 this command will count unit storage space as whole, instead of as biggest container, when multiple items are queried.\n\n\n---\n*Syntaxes:*\n\nobject `canAdd` item\n\nobject `canAdd` [item, count]\n\nweapon `canAdd` item\n\nweapon `canAdd` [attachment, slot]\n\nweapon `canAdd` [magazine, muzzle]\n\n---\n*Example 1:*\n\n```sqf\nif (player canAdd \"FirstAidKit\") then\n{\n\tplayer addItem \"FirstAidKit\";\n}\nelse\n{\n\thint \"Not enough space\";\n};\n```\n\n*Example 2:*\n\n```sqf\nif (_box canAdd \"FirstAidKit\") then\n{\n\t_box addWeaponCargo [\"FirstAidKit\", 1];\n}\nelse\n{\n\thint \"Not enough space\";\n};\n```\n\n*Example 3:*\n\n```sqf\ncar canAdd [currentWeapon player, 50];\n```\n\n*Example 4:*\n\n```sqf\n// check if attachment can be loaded\n\"arifle_Katiba_GL_F\" canAdd \"acc_pointer_IR\";\n\"arifle_Katiba_GL_F\" canAdd [\"acc_pointer_IR\", \"PointerSlot\"];\n```\n\n*Example 5:*\n\n```sqf\n// check if magazine can be loaded\n\"arifle_Katiba_GL_F\" canAdd \"30Rnd_65x39_caseless_green\";\n\"arifle_Katiba_GL_F\" canAdd [\"30Rnd_65x39_caseless_green\", \"this\"];\n\"arifle_Katiba_GL_F\" canAdd [\"1Rnd_SmokeRed_Grenade_shell\", \"EGLM\"];\n```","commands\\canAddItemToBackpack.md":"Checks if given object can be stored into soldier's backpack.\n\n\n---\n*Syntaxes:*\n\nunit `canAddItemToBackpack` item\n\nunit `canAddItemToBackpack` [item, count]\n\n---\n*Example 1:*\n\n```sqf\nif (player canAddItemToBackpack \"HandGrenade\") then { player addItemToBackpack _item } else { hint \"no room!\" };\n```","commands\\canAddItemToUniform.md":"Checks if given object can be stored into soldier's uniform.\n\n\n---\n*Syntaxes:*\n\nunit `canAddItemToUniform` item\n\nunit `canAddItemToUniform` [item, count]\n\n---\n*Example 1:*\n\n```sqf\n_item = \"HandGrenade\";\n_fits = player canAddItemToUniform _item;\nif (_fits) then {\n\tplayer addItemToUniform _item;\n} else {\n\thint \"no room!\";\n};\n```","commands\\canAddItemToVest.md":"Checks if given object can be stored into soldier's vest.\n\n\n---\n*Syntaxes:*\n\nunit `canAddItemToVest` item\n\nunit `canAddItemToVest` [item, count]\n\n---\n*Example 1:*\n\n```sqf\n_item = \"HandGrenade\";\nprivate _fits = player canAddItemToVest _item;\nif (_fits) then {\n\tplayer addItemToVest _item;\n} else {\n\thint \"no room!\";\n};\n```","commands\\cancelSimpleTaskDestination.md":"Cancels a simple task destination.\n\n\n---\n*Syntaxes:*\n\n`cancelSimpleTaskDestination` task\n\n---\n*Example 1:*\n\n```sqf\ncancelSimpleTaskDestination myTask;\n```","commands\\canDeployWeapon.md":"Returns `true` if a unit's weapon can be deployed.\n\n\n---\n*Syntaxes:*\n\n`canDeployWeapon` unit\n\n---\n*Example 1:*\n\n```sqf\nif (canDeployWeapon player) then { hint \"I could rest my weapon here...\" };\n```","commands\\canFire.md":"Returns `true` if the given vehicle is still able to fire. For the command to return `true`, vehicle must be alive, have weapon operator and the weapon cannot be damaged &ge; 0.9 but can be empty due to running out of ammo. If mission starts with vehicle having no ammo or `setVehicleAmmo` 0 command is executed on the vehicle, then `canFire` will always report `false` for it.\n\n\n---\n*Syntaxes:*\n\n`canFire` unitName\n\n---\n*Example 1:*\n\n```sqf\nif (not canFire _tank) then\n{\n\tplayer sideChat \"Tank disabled!\";\n};\n```","commands\\canMove.md":"Returns if the given vehicle is still able to move.\n* This command does not check for the amount of fuel the vehicle has, except for helicopters and airplanes.\n* A helicopter with a damaged tail rotor may return that it cannot move, where a skilled pilot could use it.\n\n\n---\n*Syntaxes:*\n\n`canMove` vehicle\n\n---\n*Example 1:*\n\n```sqf\nif (not canMove _tank) then\n{\n\tplayer sideChat \"He's nailed on the ground! Now hurry!\";\n};\n```","commands\\canSlingLoad.md":"Returns `true` if `setSlingLoad` is possible.\n\n\n---\n*Syntaxes:*\n\nheli `canSlingLoad` cargo\n\n---\n*Example 1:*\n\n```sqf\n_canSling = veh1 canSlingLoad veh2;\n```\n\n*Example 2:*\n\n```sqf\nhint str ((vehicle player) canSlingLoad veh1);\n```","commands\\canStand.md":"Returns if the given soldier is able to stand up. It only checks for the unit's legs and not its alive/dead status - it can return `true` for a dead unit.\n\n\n---\n*Syntaxes:*\n\n`canStand` unit\n\n---\n*Example 1:*\n\n`SQS`:\n<sqs>? (not canStand player) : player groupChat \"My legs! They hit my legs!\"</sqs>\n\n*Example 2:*\n\n```sqf\nif (not canStand player) then\n{\n\tplayer groupChat \"My legs! They hit my legs!\";\n};\n```","commands\\canSuspend.md":"Returns `true` if `sleep`, `uiSleep` or `waitUntil` commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in `unscheduled environment`, the script engine would ignore any suspension command and throw error: \"Suspending not allowed in this context\". Using `canSuspend` command allows to detect the correct environment for the code.\n\n\n---\n*Syntaxes:*\n\n`canSuspend`\n\n---\n*Example 1:*\n\n```sqf\nonEachFrame \n{\n\tsystemChat str canSuspend;\t\t\t// false\n\t[] spawn { hint str canSuspend };\t// true\n\tonEachFrame {};\n};\n```\n\n*Example 2:*\n\nMake sure the function code is always spawned even when called:\n\n```sqf\nsleepingCode = \n{\n\tif (!canSuspend) exitWith { _this spawn sleepingCode };\n\tsleep _this;\n\thint (\"slept \" + str _this);\n};\n\n5 call sleepingCode;\n```","commands\\canTriggerDynamicSimulation.md":"A getter for `triggerDynamicSimulation`\n\n\n---\n*Syntaxes:*\n\n`canTriggerDynamicSimulation` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str canTriggerDynamicSimulation player;\n```","commands\\canUnloadInCombat.md":"Check if cargo of this vehicle want to get out when in combat.\n\n\n---\n*Syntaxes:*\n\n`canUnloadInCombat` vehicle\n\n---\n*Example 1:*\n\n```sqf\nif (canUnloadInCombat _vehicle) then {...};\n```","commands\\canVehicleCargo.md":"Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle\n\n\n---\n*Syntaxes:*\n\nvehicle `canVehicleCargo` cargo\n\n---\n*Example 1:*\n\nBlackfish with no vehicle cargo loaded\n\n```sqf\nprivate _result = blackfish canVehicleCargo offroad; // [true, true]\n```\n\n*Example 2:*\n\nBlackfish with one vehicle cargo called offroad already loaded\n\n```sqf\nprivate _result = blackfish canVehicleCargo offroad; // [false, false]\n```\nEven if the Blackfish were empty, the offroad could not be loaded because it is already in a cargo space\n\n*Example 3:*\n\nBlackfish with one vehicle cargo called offroad already loaded\n\n```sqf\nprivate _result = blackfish canVehicleCargo offroad2; // [false, true]\n```\noffroad2 can't be loaded because there isn't enough space in the Blackfish, but if there were space offroad2 could be loaded into the Blackfish","commands\\captive.md":"Returns the captive state of the given unit (set with `setCaptive`). A captive unit will not be attacked by its enemies.\n\n\n---\n*Syntaxes:*\n\n`captive` object\n\n---\n*Example 1:*\n\n```sqf\nif (captive _general) then { removeAllWeapons _general; };\n```","commands\\captiveNum.md":"Checks whether the unit is a `captive`. If the unit is a vehicle, its commander is checked instead.<br>\nIf a unit's captivity level was set as a `Boolean`, then the returned number is either 0 (for `false`) or 1 (for `true`).\n\n\n---\n*Syntaxes:*\n\n`captiveNum` unit\n\n---\n*Example 1:*\n\n```sqf\n_captivity = captiveNum _unit;\n```\n\n*Example 2:*\n\n```sqf\n_unit setCaptive 1024;\nhint str captive _unit; // true\nhint str captiveNum _unit; // 1024\n```","commands\\case.md":"This command is used inside a `switch` construct. <br>Although the syntax below states that this operator takes only one argument, that is most likely not true. It seems like it needs two arguments of which the left one is some sort of hidden variable that gets defined inside a `switch` construct. That is the reason why <b>this operator can not be used outside a `switch` construct</b>. (see https://foxhound.international/arma-3-sqf-grammar.html for further explaination)<br>\nAlso note that it is not possible to store the returned `Switch Type` in a variable and use that variable in another `switch` construct. It will never lead to an execution of the corresponding code block.\n\n\n---\n*Syntaxes:*\n\n`case` b\n\n---\n*Example 1:*\n\n```sqf\nswitch (_condition) do\n{\n\tcase 1: { hint \"1\" };\n\tcase 2: { hint \"2\" };\n\tdefault { hint \"default\" };\n};\n```","commands\\catch.md":"Processes code when an `exception` is thrown in a `try` block. The exception caught can be found in the `_exception` variable.\n\n\n---\n*Syntaxes:*\n\ntryBlock `catch` code\n\n---\n*Example 1:*\n\n```sqf\ntry {throw \"invalid argument\"} catch {hint str _exception};\n```\n\n*Example 2:*\n\n```sqf\n123 try {if (_this != 123) throw \"invalid argument\"} catch {hint str _exception};\n```\n\n*Example 3:*\n\nThe correct usage of shorthand alt syntax:\n\n```sqf\ntry {\n\tif (a > b) throw \"Error: some error\"; // OK\n\t// The command argument is static\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) throw (call _someFunc); // NOT OK\n\t// The command argument is dynamic\n\t// _someFunc is called first to get the value regardless of (a > b) outcome\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) then {throw (call _someFunc)}; /// OK\n\t// The command argument is dynamic\n\t// _someFunc is only called when (a > b) is true\n} catch {\n\thint str _exception;\n};\n```","commands\\cbChecked.md":"Returns the current state of a `CT_CHECKBOX` control.\n\n\n---\n*Syntaxes:*\n\n`cbChecked` control\n\n---\n*Example 1:*\n\n```sqf\n_checked = cbChecked _myCheckBox;\n```","commands\\cbSetChecked.md":"Sets the current state of a `CT_CHECKBOX` control. Use **\"CheckedChanged\"** control event handler with it.\n\n\n---\n*Syntaxes:*\n\ncontrol `cbSetChecked` state\n\n---\n*Example 1:*\n\n```sqf\n_myCheckBox cbSetChecked true;\n```\n\n*Example 2:*\n\n```sqf\n_disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n_chk = _disp ctrlCreate [\"RscCheckBox\", -1];\n_chk cbSetChecked true;\n```","commands\\ceil.md":"The ceil value of x.\n\n\n---\n*Syntaxes:*\n\n`ceil`  x\n\n---\n*Example 1:*\n\n```sqf\nceil 5.25; // Result is 6\n```\n\n*Example 2:*\n\n```sqf\nceil -5.25; // Result is -5\n```","commands\\channelEnabled.md":"Returns `Array` of `Boolean`s in format [enabledChat, enabledVoN] for the given channel. For more information about enabling/disabling of chat channels see `enableChannel`.\n\n\n---\n*Syntaxes:*\n\n`channelEnabled` channelID\n\n---\n*Example 1:*\n\n```sqf\n_isGlobalChatEnabled = (channelEnabled 0) select 0; // check if user can use text on global channel\n```\n\n*Example 2:*\n\n```sqf\n_isGlobalVoiceEnabled = (channelEnabled 0) select 1; // check if user can use the VoN on global channel\n```\n\n*Example 3:*\n\n```sqf\n(channelEnabled 0) params [\"_isGlobalChatEnabled\", \"_isGlobalVoiceEnabled\"]; // sets both variables\n```","commands\\cheatsEnabled.md":"Checks whether cheats are enabled (whether the designers' version is running).\n\n\n---\n*Syntaxes:*\n\n`cheatsEnabled`\n\n---\n*Example 1:*\n\n```sqf\n_enabled = cheatsEnabled;\n```","commands\\checkAIFeature.md":"Checks if the given AI feature is currently enabled.\n\n\n---\n*Syntaxes:*\n\n`checkAIFeature` feature\n\nunit `checkAIFeature` feature\n\n---\n*Example 1:*\n\n```sqf\n_featureUsed = checkAIFeature \"AwareFormationSoft\";\n```\n\n*Example 2:*\n\n```sqf\n_autotargetOn = bob checkAIFeature \"AUTOTARGET\";\n```","commands\\checkVisibility.md":"Checks if one position is visible from another position and how much.\nThe results can be affected by `getTerrainGrid` value, especially if position is near the ground.\nParticle effects such as smoke can also affect the results.\n\n\n---\n*Syntaxes:*\n\n[ignore, LOD, ignore2] `checkVisibility` [beg, end]\n\n---\n*Example 1:*\n\n```sqf\nprivate _canSee = [objNull, \"VIEW\"] checkVisibility [eyePos player, eyePos unit1];\n```","commands\\civilian.md":"Pre-defined variable for the civilian `side`.<br>\nWhen used in a `format` statement (**hint `format`[\"%1\",civilian]}}), the string returned is {{hl|\"CIV\"**.\n\n\n---\n*Syntaxes:*\n\n`civilian`\n\n---\n*Example 1:*\n\n`SQS`:\n<sqs>? side _unit == civilian : hint \"This is a civilian unit!\"</sqs>\n\n*Example 2:*\n\n`SQF`:\n\n```sqf\nif (side _unit == civilian) then\n{\n\thint \"This is a civilian unit!\";\n};\n```","commands\\className.md":"Returns short name of location. For config class name, see `configName`\n\n\n---\n*Syntaxes:*\n\n`className` location\n\n---\n*Example 1:*\n\n```sqf\n_shortName = className myLocation;\n```","commands\\clear3DENAttribute.md":"Clears the value of the given entity's `attribute` in `Eden Editor`. An attribute is identified by its **property}} ({{hl|data** when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see `Setting Attributes`.\n\n\n---\n*Syntaxes:*\n\nentity [[clear3DENAttribute]]  attribute\n\n---\n*Example 1:*\n\n```sqf\n0 clear3DENAttribute \"name\";\n```","commands\\clear3DENInventory.md":"Deletes inventory from mission.sqm of given units. Effect is not immediately visible, only when previewing the inventory resets to default.\n\n\n---\n*Syntaxes:*\n\n[[clear3DENInventory]]  entities\n\n---\n*Example 1:*\n\n```sqf\nclear3DENInventory get3DENSelected \"Object\";\n```","commands\\clearAllItemsFromBackpack.md":"Removes all items from backpack of a unit.\n\n\n---\n*Syntaxes:*\n\n`clearAllItemsFromBackpack` unit\n\n---\n*Example 1:*\n\n```sqf\nclearAllItemsFromBackpack player;\n```","commands\\clearBackpackCargo.md":"Removes all backpacks from ammo box (or any general weapon holder container).\n\n\n---\n*Syntaxes:*\n\n`clearBackpackCargo` box\n\n---\n*Example 1:*\n\n```sqf\nclearBackpackCargo myBox;\n```","commands\\clearBackpackCargoGlobal.md":"Removes all backpacks from the vehicle cargo space. MP synchronized.\n\n\n---\n*Syntaxes:*\n\n`clearBackpackCargoGlobal` unit\n\n---\n*Example 1:*\n\n```sqf\nclearBackpackCargoGlobal jeepOne;\n```","commands\\clearForcesRTD.md":"Removes all force generators from world.\n\n\n---\n*Syntaxes:*\n\n`clearForcesRTD`\n\n---\n*Example 1:*\n\n```sqf\nclearForcesRTD;\n```","commands\\clearGroupIcons.md":"Removes all icons from group.\n\n\n---\n*Syntaxes:*\n\n`clearGroupIcons`  group\n\n---\n*Example 1:*\n\n```sqf\nclearGroupIcons (group player);\n```","commands\\clearItemCargo.md":"Removes all items from ammo box (or any general weapon holder container).\n\n\n---\n*Syntaxes:*\n\n`clearItemCargo` box\n\n---\n*Example 1:*\n\n```sqf\nclearItemCargo myBox;\n```","commands\\clearItemCargoGlobal.md":"Removes all items from ammo box (or any general weapon holder container). It also removes vests and uniforms.\n\n\n---\n*Syntaxes:*\n\n`clearItemCargoGlobal` box\n\n---\n*Example 1:*\n\n```sqf\nclearItemCargoGlobal _ammoBox;\n```","commands\\clearItemPool.md":"Removes all items from ammo box (or any general weapon holder container)\n\n\n---\n*Syntaxes:*\n\n`clearItemPool` box\n\n---\n*Example 1:*\n\n```sqf\nclearItemPool jeepOne;\n```","commands\\clearMagazineCargo.md":"Remove all magazines from the given vehicle's magazine cargo space.\n\n\n---\n*Syntaxes:*\n\n`clearMagazineCargo` vehicleName\n\n---\n*Example 1:*\n\n```sqf\nclearMagazineCargo _truck;\n```","commands\\clearMagazineCargoGlobal.md":"Removes all magazines from the vehicle cargo space. MP synchronized.\n\n\n---\n*Syntaxes:*\n\n`clearMagazineCargoGlobal`  object\n\n---\n*Example 1:*\n\n```sqf\nclearMagazineCargoGlobal jeepOne;\n```","commands\\clearMagazinePool.md":"Removes all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only.\n\n\n---\n*Syntaxes:*\n\n`clearMagazinePool`\n\n---\n*Example 1:*\n\n```sqf\nclearMagazinePool;\n```","commands\\clearOverlay.md":"Clear the current overlay.\n\n\n---\n*Syntaxes:*\n\n`clearOverlay` map\n\n---\n*Example 1:*\n\n```sqf\nclearOverlay _map,;\n```","commands\\clearRadio.md":"Clean up the content of radio protocol history.\n\n\n---\n*Syntaxes:*\n\n`clearRadio`\n\n---\n*Example 1:*\n\n```sqf\nclearRadio;\n```","commands\\clearWeaponCargo.md":"Remove all weapons from the given vehicle's weapon cargo space.\n\n\n---\n*Syntaxes:*\n\n`clearWeaponCargo` vehicleName\n\n---\n*Example 1:*\n\n```sqf\nclearWeaponCargo _truck;\n```","commands\\clearWeaponCargoGlobal.md":"Removes all weapons from the vehicle cargo space. MP synchronized.\n\n\n---\n*Syntaxes:*\n\n`clearWeaponCargoGlobal` unit\n\n---\n*Example 1:*\n\n```sqf\nclearWeaponCargoGlobal jeepOne;\n```","commands\\clearWeaponPool.md":"Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only.\n\n\n---\n*Syntaxes:*\n\n`clearWeaponPool`\n\n---\n*Example 1:*\n\n```sqf\nclearWeaponPool;\n```","commands\\clientOwner.md":"Returns the ` machine network ID` of the client executing the command.\n\n\n---\n*Syntaxes:*\n\n`clientOwner`\n\n---\n*Example 1:*\n\n```sqf\nprivate _myNetworkId = clientOwner;\n```","commands\\closeDialog.md":"Close the currently active user dialog with exit code. Most common exit codes are:\n\n```sqf\n#define IDC_OK            1 // emulate \"Ok\" button\n#define IDC_CANCEL        2 // emulate \"Cancel\" button\n```\n\n\n---\n*Syntaxes:*\n\n`closeDialog`  exitcode\n\n---\n*Example 1:*\n\n```sqf\ncloseDialog 2;\n```\n\n*Example 2:*\n\n```sqf\n#define IDC_CANCEL 2\ncloseDialog IDC_CANCEL;\n```","commands\\closeDisplay.md":"Closes given display with exit code. It does not instantly close the display but does it on next simulation cycle. Most common exit codes are:\n```cpp\n#define IDC_OK\t\t1 // emulate \"OK\" button\n#define IDC_CANCEL\t2 // emulate \"Cancel\" button\n```\n\n\n---\n*Syntaxes:*\n\ndisplay `closeDisplay` exitCode\n\n---\n*Example 1:*\n\n```sqf\n_display closeDisplay 1;\n```\n\n*Example 2:*\n\n```sqf\n#define IDC_OK 1\n_display closeDisplay IDC_OK;\n```","commands\\closeOverlay.md":"Closes the current overlay without committing.\n\n\n---\n*Syntaxes:*\n\n`closeOverlay` map\n\n---\n*Example 1:*\n\n-","commands\\collapseObjectTree.md":"Collapse the object tree.\n\n\n---\n*Syntaxes:*\n\n`collapseObjectTree` map\n\n---\n*Example 1:*\n\n```sqf\ncollapseObjectTree _map,;\n```","commands\\collect3DENHistory.md":"Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single `collect3DENHistory` block will group them together and the user will need to undo only once to revert the changes.\n\n\n</spoiler>\n\n\n---\n*Syntaxes:*\n\n[[collect3DENHistory]] code\n\n[text, tooltip, icon] [[collect3DENHistory]] code\n\n---\n*Example 1:*\n\n```sqf\ncollect3DENHistory \n{\n\t_logic = create3DENEntity [\"Logic\", \"Logic\", position player];\n\tadd3DENConnection [\"Sync\", [_logic], player ];\n}; // Creates a logic and connects it to player in one history step.\n```\n\n*Example 2:*\n\n```sqf\n[\"Create Entity\", \"B_Soldier_F\", \"a3\\3den\\data\\cfg3den\\history\\create_ca.paa\"] collect3DENHistory \n{\n\tcreate3DENEntity [\"Object\",\"B_Soldier_F\", screenToWorld [0.5,0.5]];\n};\n```\n\n*Example 3:*\n\n```sqf\n[nil, nil, \"a3\\3den\\data\\cfg3den\\history\\moveitems_ca.paa\"] collect3DENHistory \n{\n\tcreate3DENEntity [\"Object\",\"B_Soldier_F\", screenToWorld [0.5,0.5]];\n}; // Change only the icon\n```","commands\\collectiveRTD.md":"Returns the current position of a helicopter's collective pitch control.\n* 0: fully lowered\n* 1: fully raised\n\n\n---\n*Syntaxes:*\n\n`collectiveRTD` helicopterRTD\n\n---\n*Example 1:*\n\n```sqf\n_collective = collectiveRTD vehicle player;\n```","commands\\collisionDisabledWith.md":"Returns the object, given object has collision disabled with and whether or not returned object has also collision disabled with given object.\n\n\n---\n*Syntaxes:*\n\n`collisionDisabledWith` obj\n\n---\n*Example 1:*\n\n```sqf\nprivate _collisionInfo = collisionDisabledWith _tank;\n```","commands\\combatBehaviour.md":"Returns combat behaviour of unit or group. To set unit or group behaviour see `setCombatBehaviour`. The behaviour is one of:\n{{Columns|2|\n* \"CARELESS\"\n* \"SAFE\"\n* \"AWARE\"\n* \"COMBAT\"\n* \"STEALTH\"\n* \"ERROR\" - when not available\n\n\n---\n*Syntaxes:*\n\n`combatBehaviour` unit\n\n`combatBehaviour` group\n\n---\n*Example 1:*\n\n```sqf\nunit1 setCombatBehaviour \"CARELESS\";\ncombatBehaviour unit1; // \"CARELESS\"\n```\n\n*Example 2:*\n\n```sqf\ngroup unit1 setCombatBehaviour \"SAFE\";\ncombatBehaviour group unit1; // \"SAFE\"\n```","commands\\combatMode.md":"Returns the combat mode of the given AI ` group`. See `setCombatMode` for more information about combat modes.\n\n\n---\n*Syntaxes:*\n\n`combatMode` group\n\n---\n*Example 1:*\n\n```sqf\nif (combatMode _grp1 == \"BLUE\") then {_grp1 setCombatMode \"GREEN\"};\n```","commands\\commandArtilleryFire.md":"Orders an artillery unit to fire a burst on the given position (via the radio).\n\n\n---\n*Syntaxes:*\n\nunit `commandArtilleryFire` [position, type, rounds]\n\n---\n*Example 1:*\n\n```sqf\nMortar commandArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];\n```","commands\\commandChat.md":"Types text to the command radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see `remoteExec`)\n\n\n---\n*Syntaxes:*\n\nunitName `commandChat` chatText\n\n[side, identity] `commandChat` chatText\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne commandChat \"Show this text\";\n```\n\n*Example 2:*\n\n```sqf\n[playerSide, \"HQ\"] commandChat \"Do this! That's an order!\";\n```\n\n*Example 3:*\n\n```sqf\ndriver vehicle player sideChat \"sideChat\";\ndriver vehicle player globalChat \"globalChat\";\ndriver vehicle player groupChat \"groupChat\";\nvehicle player vehicleChat \"vehicleChat\";\ndriver vehicle player commandChat \"commandChat\";\ndriver vehicle player customChat [1, \"customChat\"];\nsystemChat \"systemChat\";\n```","commands\\commander.md":"In {{ofp}} it returns the commander of a vehicle. Since {{arma1}} it returns the primary observer. The commander of a vehicle can be found with `effectiveCommander`.\n\n\n---\n*Syntaxes:*\n\n`commander`  vehicle\n\n---\n*Example 1:*\n\n```sqf\nmoveOut commander _tank;\n```\n\n*Example 2:*\n\nDetect if player is in commander turret of a vehicle:\n\n```sqf\n_isVehicleCommander = player isEqualTo commander objectParent player;\n```","commands\\commandFire.md":"Order the given unit to fire on the given target (via the radio).\nIf the target is `objNull`, the unit is ordered to fire on its current target (set with `doTarget` or `commandTarget`).\n\n\n---\n*Syntaxes:*\n\nunitName `commandFire` target\n\n---\n*Example 1:*\n\n```sqf\n_ESoldier1 commandFire _WSoldier1;\n```","commands\\commandFollow.md":"Order the given unit(s) to follow another from his own group (`via` radio).\nIt can also be used to resume unit formation after e.g `doStop`.\n\n\n---\n*Syntaxes:*\n\nunit `commandFollow` unitLead\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 commandFollow _soldier2;\n```\n\n*Example 2:*\n\n```sqf\n(units group _leader - [_leader]) commandFollow _leader; // returns all the units (but the leader) to formation\n```","commands\\commandFSM.md":"Orders a unit to process command defined by `FSM` file (`via` the radio).\n\n\n---\n*Syntaxes:*\n\nunitName `commandFSM` [fsmFile, position, target]\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne commandFSM [\"move.fsm\", position player, player];\n```","commands\\commandGetOut.md":"Orders one or multiple units to get out from the vehicle (via the radio). Same as `doGetOut` with latter being silent.\n\n\n---\n*Syntaxes:*\n\n`commandGetOut` unit(s)\n\n---\n*Example 1:*\n\n```sqf\ncommandGetOut _unitOne;\n```\n\n*Example 2:*\n\n```sqf\ncommandGetOut [_unitOne,_unitTwo];\n```","commands\\commandingMenu.md":"Returns the name of the topmost commanding menu or \"\" if the menu is closed. For action menu visibility check see `isActionMenuVisible`. See *(Reference HashLink \"#Notes\")* for {{arma2}}/{{arma3}} structure.\n\n\n---\n*Syntaxes:*\n\n`commandingMenu`\n\n---\n*Example 1:*\n\n```sqf\nwaitUntil {commandingMenu == \"RscStatus\"}; hint \"Press 4, I'm bleeding !\";\n```\n\n*Example 2:*\n\n```sqf\nif (commandingMenu != \"\") then { hint \"Command menu is opened\" };\n```","commands\\commandMove.md":"Order the given unit(s) to move to the given location (via the radio). Exactly the same as `doMove`, except this command displays a radio message. The command will not put a visible waypoint marker unlike when move command is given via commanding menu.\n\n\n---\n*Syntaxes:*\n\nunitName `commandMove`  position\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 commandMove getMarkerPos \"Marker1\";\n```\n\n*Example 2:*\n\n```sqf\n[_soldier1, _soldier2] commandMove getMarkerPos \"Marker1\";\n```","commands\\commandRadio.md":"Sends the audio message to the command radio channel. The message is defined in CfgRadio in the `description.ext` file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\nunit `commandRadio` radioName\n\n[side, identity] `commandRadio` radioName\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne commandRadio \"messageOne\";\n```\n\n*Example 2:*\n\n```sqf\nplayer commandRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n\n*Example 3:*\n\n```sqf\n[west, \"Base\"] commandRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```","commands\\commandStop.md":"Order the given unit(s) to stop via radio. A stop command will never finish, the unit(s) will never be ready.\n\n\n---\n*Syntaxes:*\n\n`commandStop`  target\n\n---\n*Example 1:*\n\n```sqf\ncommandStop _soldier1;\n```\n\n*Example 2:*\n\n```sqf\ncommandStop [_soldier1, _soldier2];\n```\n\n*Example 3:*\n\n```sqf\ncommandStop (units player);\n```","commands\\commandSuppressiveFire.md":"Orders the given unit or a group of units to suppress the given position or target (with radio messages, see `doSuppressiveFire` if you don't want messages). \n* When an `Array` of units is passed as param, only units from the same `Group` as the first unit in array are considered. \n* The unit (units) starts firing at the given target or position random amount of shots (exact formula unknown, but seems to depend on amount of ammo unit has) after which it stops. \n* `currentCommand` shows **\"Suppress\"** and there is no way of stopping unit before it completes random amount of rounds. \n* If position is passed as target param, it stays fixed. \n* If object is passed as target param, it depends on what kind of object. If it is considered a proper target by the unit, it is tracked by the unit dynamically. If it is not, the position gets obtained via `getPosWorld`, which could be different from `PositionASL` of the object, and it is fixed even if the target is able to change position later.\n\n\n---\n*Syntaxes:*\n\nunit `commandSuppressiveFire` target\n\n---\n*Example 1:*\n\n```sqf\n_soldier commandSuppressiveFire [1869.508,5760.962,0.000];\n```\n\n*Example 2:*\n\n```sqf\n_soldier commandSuppressiveFire cursorTarget;\n```","commands\\commandTarget.md":"Order the given unit(s) to target the given target (via the radio). Command given to the player, puts a red square with words Target and Distance on player's HUD at target location. If player in vehicle and has radar facilities, it also adds target marker to the radar.\n\n\n---\n*Syntaxes:*\n\nunit `commandTarget` target\n\n---\n*Example 1:*\n\n```sqf\n_ESoldier1 commandTarget _WSoldier1;\n```\n\n*Example 2:*\n\n```sqf\nplayer commandTarget [ted, bill];\n```","commands\\commandWatch.md":"Orders the unit(s) to watch the given position or target (via the radio). Use `objNull` as the target to order a unit to stop watching a position/target.\n\n\n---\n*Syntaxes:*\n\nunits `commandWatch` position\n\nunits `commandWatch` target\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne commandWatch markerPos \"MarkerMoveOne\";\n```\n\n*Example 2:*\n\n```sqf\n[s1, s2] commandWatch player;\n```","commands\\comment.md":"Defines a comment. See *(Reference HashLink \"SQF Syntax#Comments\")* to learn more about comments.\n\n\n---\n*Syntaxes:*\n\n`comment` text\n\n---\n*Example 1:*\n\n```sqf\ncomment \"This is a commented line\";\t\t// bad\n\"This is a commented line\";\t\t\t\t// good\n// This is a commented line\t\t\t\t// perfect\n```","commands\\commitOverlay.md":"Commit the current overlay.\n\n\n---\n*Syntaxes:*\n\n`commitOverlay` map\n\n---\n*Example 1:*\n\n```sqf\ncommitOverlay _map,;\n```","commands\\compatibleItems.md":"Returns all items (attachments) that can be mounted on the given weapon.\n\n\n---\n*Syntaxes:*\n\n`compatibleItems` weapon\n\n`compatibleItems` [weapon, slot]\n\n---\n*Example 1:*\n\n```sqf\ncompatibleItems \"arifle_Katiba_GL_F\"; // [\"optic_Nightstalker\",\"optic_tws\",\"optic_tws_mg\",\"optic_NVS\", ...]\n```\n\n*Example 2:*\n\n```sqf\ncompatibleItems [\"arifle_Katiba_GL_F\", \"PointerSlot\"]; // [\"acc_flashlight\",\"acc_flashlight_broken\",\"acc_pointer_IR\", ...]\n```","commands\\compatibleMagazines.md":"Returns all magazines that can be loaded in the given weapon.\n\n\n---\n*Syntaxes:*\n\n`compatibleMagazines` weapon\n\n`compatibleMagazines` [weapon, muzzle]\n\n---\n*Example 1:*\n\n```sqf\ncompatibleMagazines \"arifle_Katiba_GL_F\";\n```\n\n*Example 2:*\n\n```sqf\ncompatibleMagazines [\"arifle_Katiba_GL_F\", \"this\"];\n```\n\n*Example 3:*\n\n```sqf\ncompatibleMagazines [\"arifle_Katiba_GL_F\", \"EGLM\"];\n```","commands\\compile.md":"Compiles `String` expression into `Code`.\n\n\n---\n*Syntaxes:*\n\n`compile` expression\n\n---\n*Example 1:*\n\n```sqf\n_string = \"a = a + 1\";\n_code = compile _string;\ncall _code;\n```\n\n*Example 2:*\n\n```sqf\nhint str compile \"a = b\";\n// result: { a = b }\n```","commands\\compileFinal.md":"Compile expression and makes it final, preventing it from:\n* repeated `compile` or `compileFinal`\n* removal by `nil`\n* remote rewrite using `publicVariable`, `publicVariableClient` and `publicVariableServer`\n\n\n---\n*Syntaxes:*\n\n`compileFinal`  expression\n\n---\n*Example 1:*\n\n```sqf\nmyCode = compileFinal \"a = a + 1\";\ncall myCode;\n \n// Repeated compile won't have any effect\nmyCode = compileFinal \"a = a + 2\";\n\n// Duplicate code will be final as well\nmyDuplicateCode = myCode;\n```","commands\\compileScript.md":"This command is an alias for **`compile`(Final) (prefixHeader + `preprocessFileLineNumbers` path)**. See description of `preprocessFileLineNumbers` for more details.<br>\nIn addition, this command can also compile `SQF Bytecode` files, which can reduce compilation time.\n\n\n---\n*Syntaxes:*\n\n`compileScript` [path, final, prefixHeader]\n\n---\n*Example 1:*\n\n```sqf\ncompileScript [\"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\"];\n// has the same functionality as \ncompile preprocessFileLineNumbers \"a3\\props_f_enoch\\military\\equipment\\scripts\\meteo.sqf\";\n```","commands\\completedFSM.md":"Checks whether the given FSM is completed. The FSM handle is the number returned by the `execFSM` command.\n\n\n---\n*Syntaxes:*\n\n`completedFSM` fsmHandle\n\n---\n*Example 1:*\n\n```sqf\n_completed = completedFSM _fsmHandle;\n```","commands\\composeText.md":"Creates a `Structured Text` by joining the given ` structured` or ` plain` text arguments.\n\n\n---\n*Syntaxes:*\n\n`composeText` arguments\n\n---\n*Example 1:*\n\n```sqf\nhint composeText [\"Image: \", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"];\n```\n\n*Example 2:*\n\n```sqf\nhint composeText [\"line1\", \"<br/>\", \"line2\"];\t\t// result displayed in one line\nhint composeText [\"line1\", lineBreak, \"line2\"];\t// result displayed in two lines\n```","commands\\config greater greater name.md":"Returns ` config` entry with given name (alias of `a / b`, slightly faster but with `lower precedence`)\n\n\n---\n*Syntaxes:*\n\nconfig `>>` name\n\n---\n*Example 1:*\n\n```sqf\nconfigFile >> \"CfgVehicles\";\n```","commands\\configClasses.md":"Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative `count` command implementation). Condition has to return `true` in order for the looked at config to be added to the resulting array. Slightly faster than `configProperties`, but doesn't account for config properties or inherited entries.\n\n\n---\n*Syntaxes:*\n\ncondition `configClasses` config\n\n---\n*Example 1:*\n\ncollect all CfgVehicles configs:\n\n```sqf\n_configs = \"true\" configClasses (configFile >> \"CfgVehicles\");\n```\n\n*Example 2:*\n\nReturn all classes that can transport 10 and more soldiers:\n\n```sqf\n_transporters = \"getNumber (_x >> 'transportSoldier') >= 10\" configClasses (configFile >> \"CfgVehicles\");\n```\n\n*Example 3:*\n\nReturn all classes that inherit from 'RscText':\n\n```sqf\nhint str (\"inheritsFrom _x == (configFile >> 'RscText')\" configClasses configFile);\n```","commands\\configFile.md":"Return root of config entries hierarchy.\n\n\n---\n*Syntaxes:*\n\n`configFile`\n\n---\n*Example 1:*\n\n```sqf\n_isMyClassActive = isClass (configFile >> \"CfgPatches\" >> \"MyClass\");\n```","commands\\configHierarchy.md":"Returns hierarchy of the given config class. Just like with `inheritsFrom`, only complete config classes are supported.\n\n\n---\n*Syntaxes:*\n\n`configHierarchy` configClass\n\n---\n*Example 1:*\n\n```sqf\n_hierarchy = configHierarchy (configFile >> \"CfgVehicles\" >> \"Car\");\n// [bin\\config.bin,bin\\config.bin/CfgVehicles,bin\\config.bin/CfgVehicles/Car]\n```","commands\\configName.md":"Returns name of config entry.\n\n\n---\n*Syntaxes:*\n\n`configName` config\n\n---\n*Example 1:*\n\n```sqf\n_name = configName (configFile >> \"CfgVehicles\"); // result is \"CfgVehicles\"\n```","commands\\configNull.md":"A non-existing `Config`.\n\n\n---\n*Syntaxes:*\n\n`configNull`\n\n---\n*Example 1:*\n\n```sqf\n_config = missionNamespace getVariable [\"myConfig\", configNull];\n```\n\n*Example 2:*\n\n```sqf\nstr configNull; // returns \"\"\n```","commands\\configOf.md":"Returns config path of the provided object.\n\n\n---\n*Syntaxes:*\n\n`configOf` object\n\n---\n*Example 1:*\n\n```sqf\nconfigOf player; // returns bin\\config.bin/CfgVehicles/B_W_Soldier_TL_F\n```","commands\\configProperties.md":"Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry.\nIf 3rd param is `true` the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative `count` command implementation).\nCondition has to return `true` in order for the looked at property to be added to the resulting array. A bit slower than `configClasses` but allows to access inherited entries.\n\n\n---\n*Syntaxes:*\n\n`configProperties` [config, condition, inherit]\n\n---\n*Example 1:*\n\n```sqf\n_configs = configProperties [configFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\"];\n```\n\n*Example 2:*\n\n```sqf\n_configs = configProperties [configFile >> \"RscText\", \"true\", true];\n```\n\n*Example 3:*\n\nGet all hitpoints of a truck:\n\n```sqf\n_hitPoints = [];\n_hitPointsCfgs = configProperties [\n\tconfigFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\" >> \"HitPoints\", \n\t\"true\", \n\ttrue\n];\nhint str _hitPointsCfgs;\n```","commands\\configSourceAddonList.md":"Returns an array of addons (`CfgPatches`) in which the given config class is defined.\n\n\n---\n*Syntaxes:*\n\n`configSourceAddonList` config\n\n---\n*Example 1:*\n\n```sqf\n_addons = configSourceAddonList (configFile >> \"CfgVehicles\" >> \"Man\"); // returns [\"A3_Data_F\", \"A3_Characters_F\", \"A3_Data_F_Curator\", \"A3_Air_F_Heli\"]\n```","commands\\configSourceMod.md":"Returns modDir of the mod that given config class was loaded from.\n\n\n---\n*Syntaxes:*\n\n`configSourceMod` config\n\n---\n*Example 1:*\n\n```sqf\nconfigSourceMod (configFile >> \"CfgVehicles\" >> \"Heli_Transport_04_base_F\"); // returns \"heli\"\n```\n\n*Example 2:*\n\n```sqf\nconfigSourceMod (configFile >> \"CfgVehicles\" >> \"Car\"); // returns \"A3\"\n```","commands\\configSourceModList.md":"Returns an array of mods (CfgMods) in which the given config class is defined.\n\n\n---\n*Syntaxes:*\n\n`configSourceModList` config\n\n---\n*Example 1:*\n\n```sqf\n_mods = configSourceModList (configFile >> \"CfgVehicles\" >> \"Man\");\nhint str _mods; // [\"A3\",\"curator\",\"heli\"]\n```","commands\\confirmSensorTarget.md":"Sets for which `Side` the entity becomes a \"confirmed hostile\" target - a target that becomes highlighted red on the sensors display.\n\n\n---\n*Syntaxes:*\n\nvehicle `confirmSensorTarget` [side, isConfirmed]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player confirmSensorTarget [blufor, true];\n```","commands\\connectTerminalToUAV.md":"Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot.\nIf UAV is already connected to another terminal, this new connection will fail.\n\n\n---\n*Syntaxes:*\n\nperson `connectTerminalToUAV` uav\n\n---\n*Example 1:*\n\n```sqf\nbool = player connectTerminalToUAV uav1;\n```\n\n*Example 2:*\n\n```sqf\nplayer connectTerminalToUAV objNull; //disconnect\n```","commands\\connectToServer.md":"Connects the client to the provided server.\n\n\n---\n*Syntaxes:*\n\n`connectToServer` [ip, port, password]\n\n---\n*Example 1:*\n\n```sqf\nconnectToServer [\"192.168.0.2\", 2302, \"test\"];\n```","commands\\continue.md":"Skips current loop iteration and continues with the next one.\n\n\n---\n*Syntaxes:*\n\n`continue`\n\n---\n*Example 1:*\n\n```sqf\n// prints 0, 1, 3\nfor \"_i\" from 0 to 3 do \n{\n\tif (_i == 2) then { continue };\n\tsystemChat str _i;\n};\n```","commands\\continueWith.md":"Skips the current loop iteration, continues with the next one and returns the given value.\n\n\n---\n*Syntaxes:*\n\n`continueWith` return\n\n---\n*Example 1:*\n\n```sqf\n// results in [2, \"TEST\", 4]\nprivate _result = [1, 2, 3] apply {\n\tif (_x == 2) then {\n\t\tcontinueWith \"TEST\";\n\t} else {\n\t\t_x + 1;\n\t};\n};\n```","commands\\controlNull.md":"A non-existing `Control`. To compare non-existent objects use `isNull` or `isEqualTo` (see examples).\n\n\n---\n*Syntaxes:*\n\n`controlNull`\n\n---\n*Example 1:*\n\n```sqf\nif (_myCtrl isEqualTo controllNull) then { hint \"_myCtrl is null!\"; };\n```\n\n*Example 2:*\n\n```sqf\ncontrolNull == controlNull;\t\t\t// returns false\nisNull controlNull;\t\t\t\t\t\t// returns true\ncontrolNull isEqualTo controlNull;\t\t// returns true\n```\n\n*Example 3:*\n\n```sqf\nstr controlNull; // No control\n```","commands\\controlsGroupCtrl.md":"Returns a child control with specified idc from a controls group\n\n\n---\n*Syntaxes:*\n\nctrlgrp `controlsGroupCtrl` idc\n\n---\n*Example 1:*\n\n```sqf\n_control = _controlsGroup controlsGroupCtrl 101;\n```","commands\\conversationDisabled.md":"A getter for `disableConversation`.\n\n\n---\n*Syntaxes:*\n\n`conversationDisabled` unit\n\n---\n*Example 1:*\n\n```sqf\nif (conversationDisabled soldier1) then { soldier1 disableConversation false };\n```","commands\\copyFromClipboard.md":"Return ANSI content of the (text) clipboard. If Unicode support is desired, see `forceUnicode`.\n\n\n---\n*Syntaxes:*\n\n`copyFromClipboard`\n\n---\n*Example 1:*\n\n```sqf\nhint copyFromClipboard;\n```","commands\\copyToClipboard.md":"Copies ANSI text string to the clipboard. If Unicode support is desired, see `forceUnicode`.\n\n\n---\n*Syntaxes:*\n\n`copyToClipboard` text\n\n---\n*Example 1:*\n\n```sqf\ncopyToClipboard str _data;\n```","commands\\copyWaypoints.md":"Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.\n\n\n---\n*Syntaxes:*\n\ngroupTo `copyWaypoints` groupFrom\n\n---\n*Example 1:*\n\n```sqf\ngroup1 copyWaypoints group2;\n```","commands\\cos.md":"Cosine of a number, argument in degrees.\n\n\n---\n*Syntaxes:*\n\n`cos` x\n\n---\n*Example 1:*\n\n```sqf\ncos 60; // returns 0.5\n```","commands\\count.md":"Can be used to count:\n* The number of elements in an array (returns the already internally known array size)\n* The number of elements in an array matching the condition\n* The number of sub-entries in a config entry\n* {{GVI|arma3|1.28\n\n\n---\n*Syntaxes:*\n\n`count` value\n\ncondition `count` array\n\n---\n*Example 1:*\n\n```sqf\ncount [0, 0, 1, 2]; // returns 4\ncount units group player; // returns number of units in player group\n```\n\n*Example 2:*\n\n```sqf\nprivate _cnt = { _x == 4 } count [1, 9, 8, 3, 4, 4, 4, 5, 6]; // returns 3\n_cnt = { alive _x } count allUnits; // returns the number of alive units\n```\n\n*Example 3:*\n\n```sqf\nprivate _cnt = count (configFile >> \"CfgVehicles\");\n```\n\n*Example 4:*\n\n```sqf\nhint str count \"japa is the man!\"; // 16\n```\n\n*Example 5:*\n\n```sqf\nif (count _myHashMap < 1) then { hint \"empty hashmap!\"; };\n```","commands\\countEnemy.md":"Count how many units in the array are considered enemy to the given unit.\n\n\n---\n*Syntaxes:*\n\nunitName `countEnemy` arrayName\n\n---\n*Example 1:*\n\n```sqf\n_num = player countEnemy list _triggerOne;\n```","commands\\countFriendly.md":"Count how many units in the array are considered friendly to the given unit.\n\n\n---\n*Syntaxes:*\n\nunitName `countFriendly` arrayName\n\n---\n*Example 1:*\n\n```sqf\n_num = player countFriendly list _triggerOne;\n```","commands\\countSide.md":"Returns how many units in the given array belong to given side.\n\n\n---\n*Syntaxes:*\n\nside `countSide`  array\n\n---\n*Example 1:*\n\n```sqf\n_num = west countSide list _triggerOne;\n```\n\n*Example 2:*\n\n```sqf\n_numCivPlayable = civilian countSide playableUnits;\n```","commands\\countType.md":"Count how many objects in the array are of given type. This command also works with parent classes like \"Air\", \"Tank\", and \"Car\". For a full class reference see `Classes`.\n\n\n---\n*Syntaxes:*\n\ntype `countType` objects\n\n---\n*Example 1:*\n\n```sqf\n_count = \"Tank\" countType list _triggerOne;\n```\n\n*Example 2:*\n\n```sqf\n_count = \"B_medic_F\" countType units player;\n```","commands\\countUnknown.md":"Count how many units in the array are unknown to the given unit.\n\n\n---\n*Syntaxes:*\n\nunitName `countUnknown` arrayName\n\n---\n*Example 1:*\n\n```sqf\n_num = player countUnknown list _triggerOne;\n```","commands\\create3DENComposition.md":"Create new `Composition`. To create individual entities, use [[create3DENEntity]].\n\n\n---\n*Syntaxes:*\n\n[[create3DENComposition]] [configPath,  position]\n\n---\n*Example 1:*\n\n```sqf\nmyComposition = create3DENComposition [\n\tconfigFile >> \"CfgGroups\" >> \"West\" >> \"BLU_F\" >> \"Infantry\" >> \"BUS_InfSquad\",\n\tscreenToWorld [0.5, 0.5]\n];\n```","commands\\create3DENEntity.md":"Create new `Eden Entity`. Used for creating individual entities; to create a `composition` (e.g., infantry squad), use [[create3DENComposition]].<br>\nThis is the only way to add new editable entities to an `Eden Editor` scenario. Other 'create' commands like `createVehicle` or `createUnit` will still work, but the resulting entity will not be editable.\n\n\n---\n*Syntaxes:*\n\n[[create3DENEntity]] [mode, class, position, isEmpty]\n\ngroup [[create3DENEntity]] [mode, class, position, isEmpty]\n\n---\n*Example 1:*\n\n```sqf\ndude1 = create3DENEntity [\"Object\", \"B_Soldier_F\", screenToWorld [0.5, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\ndude2 = group dude1 create3DENEntity [\"Object\", \"B_Soldier_AR_F\", screenToWorld [0.5, 0.5]];\n```\n\n*Example 3:*\n\n```sqf\nmyMarker = create3DENEntity [\"Marker\", \"mil_warning\", position player];\n```\n\n*Example 4:*\n\n```sqf\nmytrigger = create3DENEntity [\"Trigger\", \"EmptyDetectorArea10x10\", position player];\n```\n\n*Example 5:*\n\n{{GVI|arma3|2.06","commands\\createAgent.md":"Creates an agent of the given type. An agent does not have a group or leader or the standard soldier `FSM` associated with it - for instance, an enemy soldier spawned as an agent has limited AI and will do nothing when fired upon - which can be useful to limit the amount of AI processing being done in a mission with very large numbers of \"AI\". Animals are also commonly created as agents.\n\n\n---\n*Syntaxes:*\n\n`createAgent` [type, position, markers, placement, special]\n\n---\n*Example 1:*\n\n```sqf\nprivate _agent = createAgent [\"B_Soldier_F\", getPosATL player, [], 0, \"FORM\"];\n```\n\n*Example 2:*\n\n```sqf\nprivate _agent = createAgent [\"Snake_random_F\", ASLtoAGL getPosASL player, [], 0, \"CAN_COLLIDE\"]; // Creates a snake at player's feet\n```","commands\\createCenter.md":"Instanciate a `Side` center. A `Side` center is required to be able to `create groups` of this side.<br>\nCenters can only be created for `east`, `west`, `resistance`, `civilian` and `sideLogic` `sides`.<br>\nCreated sides must have their \"side-friendship\" defined with `setFriend`.\n\n\n---\n*Syntaxes:*\n\n`createCenter` side\n\n---\n*Example 1:*\n\n```sqf\ncreateCenter east;\n```","commands\\createDialog.md":"Creates a dialog which is defined either in the mission's `description.ext`, in the campaign's description.ext or in the global `resource.cpp`. The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened.\n\n\n---\n*Syntaxes:*\n\n`createDialog`  dialogName\n\n`createDialog` [dialogName, forceOnTop]\n\n---\n*Example 1:*\n\n```sqf\n_ok = createDialog \"RscDisplayGame\";\nif (!_ok) then {hint \"Dialog couldn't be opened!\"};\n```","commands\\createDiaryLink.md":"Creates a link to the given diary entry.\n\n\n---\n*Syntaxes:*\n\n`createDiaryLink` [subject, record, text]\n\n---\n*Example 1:*\n\n```sqf\n_diaryRec1 = player createDiaryRecord [\"Diary\", [\"Record 1\", \"We can not refer to the next record because it does not exist yet.\"]];\n_diaryRec2 = player createDiaryRecord [\"Diary\", [\"Record 2\", \"Go to \" + createDiaryLink [\"Diary\", _diaryRec1, \"record 1\"]]];\n_diaryRec3 = player createDiaryRecord [\"Diary\", [\"Record 3\", \"Go to \" + createDiaryLink [\"Diary\", _diaryRec2, \"record 2\"]]];\n```\n\n*Example 2:*\n\nIn this example, one can go to any next record.\n\n```sqf\nTAG_fnc_processDiaryLink = {\n\tprocessDiaryLink createDiaryLink [\"Diary\", _this, \"\"];\n};\nDiaryRec1 = player createDiaryRecord [\"Diary\", [\"Record 1\", \n\t\"Go to <execute expression='DiaryRec2 call TAG_fnc_processDiaryLink'>Record 2</execute>\"\n]];\nDiaryRec2 = player createDiaryRecord [\"Diary\", [\"Record 2\", \n\t\"Go to <execute expression='DiaryRec3 call TAG_fnc_processDiaryLink'>Record 3</execute>\"\n]];\nDiaryRec3 = player createDiaryRecord [\"Diary\", [\"Record 3\", \n\t\"Go to <execute expression='DiaryRec1 call TAG_fnc_processDiaryLink'>Record 1</execute>\"\n]];\n```","commands\\createDiaryRecord.md":"<syntaxhighlight lang=\"html\"></syntaxhighlight><!-- needed for spoiler to have it -->\nCreates a `diary` entry. Supported tags and their parameters: <spoiler>\n{\n\n\n---\n*Syntaxes:*\n\nplayer `createDiaryRecord` [subject, text, task, taskState, showTitle]\n\nplayer `createDiaryRecord` [subject, [title, text, icon], task, taskState, showTitle]\n\n---\n*Example 1:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Intel\", \"Enemy base is on grid <marker name='enemyBase'>161170</marker>\"]]\n```\n\n*Example 2:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", \"Information gathered.<br /><img image='wellDone_ca.paa' />\"]\n```\n\n*Example 3:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"No Title\", \"description\"], taskNull, \"\", false];\n```\n\n*Example 4:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Font tag\",\"<font color='#7FFF00' size='30' face='TahomaB'>This will changed text size, colour and font</font>\"], taskNull, \"\",false];\n```\n\n*Example 5:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Image\", \"<img image='\\A3\\Ui_F_Curator\\Data\\Logos\\arma3_curator_artwork.jpg' width='500' height='800'/>\"], taskNull, \"\", false];\n```\n\n*Example 6:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Linebreak\",\"Line1<br></br>Line2<br></br><br></br>Line4\"], taskNull, \"\", false];\n```\n\n*Example 7:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"Execute\",\"<execute expression='hint \"\"Some code\"\";'>Some text</execute>\"], taskNull, \"\", false];\n```\n\n*Example 8:*\n\n```sqf\nplayer createDiaryRecord [\"Diary\", [\"ExecuteClose\", \"<executeClose expression=\"\"hint 'Diary closed';\"\">Close Diary</executeClose>\"], taskNull, \"\", false];\n```","commands\\createDiarySubject.md":"Creates a new subject in the `Diary`.\n\n\n---\n*Syntaxes:*\n\nplayer `createDiarySubject`  [subject, displayName, picture]\n\n---\n*Example 1:*\n\n```sqf\n_index = player createDiarySubject [\"myPage\",\"My page\"];\n```","commands\\createDisplay.md":"Creates child display of given display and loads from \"resourceName\". The notable difference between `createDisplay` and `createDialog` is that with `createDisplay` the player would be able to move around while the display is shown.<br>\nDisplays created with `createDisplay` or `createDialog` will take control of the mouse pointer and will close when user presses *(Reference Controls \"Esc\")*.\n\n\n---\n*Syntaxes:*\n\nparent `createDisplay`  resourceName\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 46 createDisplay \"RscCredits\";\n```\n\n*Example 2:*\n\n```sqf\n// creates an empty display\nprivate _emptyDisplay = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n```","commands\\createGearDialog.md":"Opens gear dialog for given unit.\n\n\n---\n*Syntaxes:*\n\n`createGearDialog` [unit, resource]\n\n---\n*Example 1:*\n\n```sqf\ncreateGearDialog [player];\n```","commands\\createGroup.md":"Creates a new `Group` for the given `Side`. Using this command if the group limit is reached will return `grpNull`. The new `Group` exists globally, but it's locality is where this command was executed.\n\n\n---\n*Syntaxes:*\n\n`createGroup` side\n\n`createGroup` [side, deleteWhenEmpty]\n\n---\n*Example 1:*\n\n```sqf\nprivate _group = createGroup east;\n```\n\n*Example 2:*\n\n```sqf\nprivate _group = createGroup [east, true];\n```","commands\\createGuardedPoint.md":"Adds a point guarded by the given side (scripted way of adding equivalent of \"GUARDED BY\" trigger in [[3DEN|Editor]]). A closest AI group in the given side with assigned \"GUARD\" waypoint will attempt to secure this guard point. The actual guarded position is determined via the following rules:\n* Given \"position\" is always considered. It could be `Object`, `Group`, [[Position#Introduction|Position2D]] or [[Position#Introduction|Position3D]]. In every case, z coordinate will be ignored and point will be placed on nearest surface.\n* If \"objectMapID\" is not negative, the position of the object with the given ID is used (Overrides \"position\"). -1 to ignore this argument. z of the object position will be intact.\n* If the given \"vehicle\" is valid, the position of the vehicle is extracted and guarded (Overrides both \"position\" and \"objectMapID\"). `objNull` to ignore. z of the vehicle position will be intact.\nTo be used with \"GUARD\" `waypoint`.\n\n\n---\n*Syntaxes:*\n\n`createGuardedPoint` [side, position, objectMapID, vehicle]\n\n---\n*Example 1:*\n\n```sqf\ncreateGuardedPoint [east, [0,0], -1, vehicle player];\n```","commands\\createHashMap.md":"Creates a new empty `HashMap`.\n\n\n---\n*Syntaxes:*\n\n`createHashMap`\n\n---\n*Example 1:*\n\n```sqf\nprivate _myHashMap = createHashMap;\n```","commands\\createHashMapFromArray.md":"Creates a new `HashMap` and initializes it from a key-value pair array\n\n\n---\n*Syntaxes:*\n\n`createHashMapFromArray` [[key1, value1], [key2, value2]]\n\nkeys `createHashMapFromArray` values\n\n---\n*Example 1:*\n\n```sqf\ncreateHashMapFromArray [[\"a\", 1], [\"b\", 2], [\"c\", 3]];\n```\n\n*Example 2:*\n\n```sqf\n[1, 2, 3, 4] createHashMapFromArray []; // returns [[1, <null>], [2, <null>], [4, <null>], [3, <null>]]\n```\n\n*Example 3:*\n\n```sqf\n[1, 2, 3] createHashMapFromArray [\"one\", \"two\", \"three\", \"four\"]; // returns [[1, \"one\"], [2, \"two\"], [3, \"three\"]]\n```","commands\\createLocation.md":"Creates a location of the specified class and dimensions at the specified position.\nClasses are defined in **CfgLocationTypes**; for possible location types see `Location Types`.<br>\nThe alternative syntax allows to convert a non-editable (built-in) terrain location into an editable one, with the following restrictions:\n* it cannot be deleted (but can be `setType` to \"Invisible\" to hide it)\n* it cannot be moved\n\n\n---\n*Syntaxes:*\n\n`createLocation` [className, position, sizeX, sizeY]\n\n`createLocation` [location]\n\n---\n*Example 1:*\n\n```sqf\n_location = createLocation [\"NameVillage\", [4035,2151,10], 100, 100];\n```\n\n*Example 2:*\n\n```sqf\n_location = createLocation [\"NameVillage\", [4035,2151,10], 30, 30];\n_location setText \"Player town\";\n```\n\n*Example 3:*\n\n```sqf\nprivate _terrainLocation = nearestLocation [player, \"nameCity\"];\t// assuming it returns a built-in location\n_terrainLocation setType \"Invisible\";\t\t\t\t\t\t\t\t// does not do anything\nprivate _editableLocation = createLocation [_terrainLocation];\t\t// does the conversion\n_editableLocation setType \"Invisible\";\t\t\t\t\t\t\t\t// hides the location\n```","commands\\createMarker.md":"Creates a new map marker at the given position. The marker will be created for every connected player as well as all JIP players. The marker name has to be unique; the command will be ignored if a marker with the given name already exists.\n\n\n---\n*Syntaxes:*\n\n`createMarker` [name, position, channel, creator]\n\n---\n*Example 1:*\n\n```sqf\n_marker1 = createMarker [\"Marker1\", position player];\n```\n\n*Example 2:*\n\n```sqf\n_marker2 = createMarker [\"Marker2\", player]; // since Arma 3 1.50\n```","commands\\createMarkerLocal.md":"Creates a `local` marker at the given position - the marker only exists on the machine that created it. The marker name has to be unique, if a marker with the given name exists, the command will be ignored. Use `deleteMarkerLocal` to delete a local marker.<br><br>\nIf the position is given in 3D format, **z}} coordinate is stored with the marker and will be used when marker is passed to commands like `createVehicle`, `createUnit`, `createAgent`, `createMine`, `setVehiclePosition` for example. However `getMarkerPos` and `markerPos` will always return 0 for {{hl|z**.\n\n\n---\n*Syntaxes:*\n\n`createMarkerLocal` [name, position, channel, creator]\n\n---\n*Example 1:*\n\n```sqf\n_marker = createMarkerLocal [\"Marker1\", position player];\n```","commands\\createMenu.md":"Creates a previously added menu.\n\n\n---\n*Syntaxes:*\n\nmap `createMenu` index\n\n---\n*Example 1:*\n\n-","commands\\createMine.md":"Creates a mine of the given type (type is the name of the subclass of **CfgVehicles**).\nIf the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used.\nThe mine is placed inside a circle with this position as its center and placement as its radius.\n\n\n---\n*Syntaxes:*\n\n`createMine` [type, position, markers, placement]\n\n---\n*Example 1:*\n\n```sqf\n_mine = createMine [\"APERSMine\", position player, [], 0];\n```\n\n*Example 2:*\n\nCreate satchel charge and give player control over it:\n\n```sqf\n_charge = createMine [\"SatchelCharge_F\", position player, [], 0];\nplayer addOwnedMine _charge;\n```","commands\\createMissionDisplay.md":"Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument \"root\".\n\n\n---\n*Syntaxes:*\n\ndisplay `createMissionDisplay` missionRootDirectoryString\n\ndisplay `createMissionDisplay`  [missionRootDirectoryString, cfgMissionsClass]\n\n---\n*Example 1:*\n\n```sqf\n_ChildDisplay = _Rootdisplay createMissionDisplay \"Tutorial\";\n```\n\n*Example 2:*\n\nIn {{arma3}} this creates the scenarios UI\n\n```sqf\nfindDisplay 46 createMissionDisplay \"\";\n```\n\n*Example 3:*\n\nOther options for {{arma3}}:\n\n```sqf\n(findDisplay 46) createMissionDisplay [\"\",\"Cutscenes\"];\n(findDisplay 46) createMissionDisplay [\"\",\"Campaigns\"];\n(findDisplay 46) createMissionDisplay [\"\",\"MPMissions\"];\n(findDisplay 46) createMissionDisplay [\"\",\"Challenges\"];\n(findDisplay 46) createMissionDisplay [\"\",\"Showcases\"];\n```","commands\\createMPCampaignDisplay.md":"Create a MP campaign display. The class name must be a mission collection declared in the configs; for example, <sqf inline>configFile >> \"CfgMissions\" >> \"MPMissions\" >> \"Apex\"\n```<br>\nIf the class does not exist or is not a mission collection, the display will be created empty.\n\n\n---\n*Syntaxes:*\n\ndisplay `createMPCampaignDisplay` class\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 46 createMPCampaignDisplay \"Apex\";\n```","commands\\createSimpleObject.md":"Create object with given shape defined as path to .p3d model. Supported `LOD`s include `Geometry`, `Fire Geometry`, `Roadway`, `View Geometry` and `ShadowVolume`. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.<br><br>\n\nGiven the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command are: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally.<br>\nSome of the models can be found here: `createSimpleObject/objects`.<br>\nFor Livonia furniture see: [[Arma 3 Livonia Props]].<br><br>\n\nSee [[Arma 3: Simple Objects]] to learn more about simple objects.\n\n\n---\n*Syntaxes:*\n\n`createSimpleObject` [shapeName, positionWorld, local]\n\n`createSimpleObject` [className, positionASL, local]\n\n---\n*Example 1:*\n\n```sqf\nprivate _pos = player getRelPos [10, 0];\nprivate _tank = createSimpleObject [\"a3\\armor_f_beta\\apc_tracked_01\\apc_tracked_01_rcws_f.p3d\", _pos];\n_tank setPos (_pos vectorAdd (getPosWorld _tank vectorDiff (_tank modelToWorld [0,0,0])));\n\n_tank hideSelection [\"zasleh\", true];\n_tank hideSelection [\"zasleh2\", true];\n_tank hideSelection [\"clan\", true];\n \n_tank animate [\"Wheel_podkoloL3\", 0.5, true];\n_tank animate [\"Wheel_podkoloL6\", 0.5, true];\n```\n\n*Example 2:*\n\n```sqf\nprivate _pos = player getRelPos [10, 0];\nprivate _tank = createSimpleObject [\"B_APC_Tracked_01_CRV_F\", AGLToASL _pos];\n_tank setObjectTexture [0, \"#(rgb,8,8,3)color(0,1,0,0.01)\"];\n\n_tank hideSelection [\"zasleh\", true];\n_tank hideSelection [\"zasleh2\", true];\n_tank hideSelection [\"clan\", true];\n  \n_tank animate [\"Wheel_podkoloL3\", 0.5, true];\n_tank animate [\"Wheel_podkoloL6\", 0.5, true];\n```","commands\\createSimpleTask.md":"Creates a new `Task` and adds it to the Diary.\n\n\n---\n*Syntaxes:*\n\nunit `createSimpleTask`  [name, parentTask]\n\n---\n*Example 1:*\n\n```sqf\n_currentTask = player createSimpleTask [\"NewTask\"];\n```\n\n*Example 2:*\n\n```sqf\n_childTask = player createSimpleTask [\"ChildTask\", _currentTask];\n```","commands\\createSite.md":"Create a new site.\n\n\n---\n*Syntaxes:*\n\ntype `createSite` pos\n\n---\n*Example 1:*\n\n-","commands\\createSoundSource.md":"Creates a sound source of the given type (type is the name of the subclass of `CfgVehicles` which is pointing to the sound defined in `CfgSFX`). The actual sound object created is of type **\"#dynamicsound\"}} and could be detected with `allMissionObjects`. If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius. Some of the vanilla classes pre-configured in {{arma3**:\n{{Columns|4|\n* **\"Sound_Alarm\"**\n* **\"Sound_Alarm2\"**\n* **\"Sound_BattlefieldExplosions\"**\n* **\"Sound_BattlefieldFirefight\"**\n* **\"Sound_Fire\"**\n* **\"Sound_SmokeWreck1\"**\n* **\"Sound_SparklesWreck1\"**\n* **\"Sound_SparklesWreck2\"**\n* **\"Sound_Stream\"**\n}}\n\nSince {{arma3}} v1.70 it is possible to define sounds for use with `createSoundSource` in mission config. As mentioned earlier, the sounds needed for this command should be defined inside `CfgVehicles` class, which itself references `CfgSFX` class. If given class searched in main config and is not found, the search will continue in `description.ext` - see *(Reference HashLink \"#Example 3\")*.<br>\nNote that the sound created by `createSoundSource` will always be looping.\nAlso when `CfgSFX` sound definition contains more than 1 sound, there is no guarantee that the sound played will be the same on every PC in Multiplayer.\n\n\n---\n*Syntaxes:*\n\n`createSoundSource` [type, position, markers, placement]\n\n---\n*Example 1:*\n\n```sqf\n_soundSource = createSoundSource [\"LittleDog\", position player, [], 0];\n```\n\n*Example 2:*\n\n```sqf\n[] spawn \n{\n\t_alarm = createSoundSource [\"Sound_Alarm\", position player, [], 0]; // starts alarm\n\tsleep 10;\n\tdeleteVehicle _alarm; // stops alarm\n};\n```\n\n*Example 3:*\n\n*(Reference GVI \"arma3|1.70\")* Here is an example of suitable mission config definition:\n```cpp\n// description.ext\nclass CfgSFX\n{\n\tclass MyOwl\n\t{\n\t\tsound0[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl1\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsound1[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl2\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsound2[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl3\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsounds[] = {sound0, sound1, sound2};\n\t\tempty[] = {\"\", 0, 0, 0, 0, 0, 0, 0};\n\t};\n};\n\nclass CfgVehicles\n{\n\tclass MyOwlSound // class name to be used with createSoundSource\n\t{\n\t\tsound = \"MyOwl\"; // reference to CfgSFX class\n\t};\n};\n```\n\n\n```sqf\nprivate _owl = createSoundSource [\"MyOwlSound\", position player, [], 0];\n```","commands\\createTarget.md":"Create a target.\n\n\n---\n*Syntaxes:*\n\nobj `createTarget` [type, position, typeAccuracy, posAccuracy]\n\n---\n*Example 1:*\n\n```sqf\n_target = createTarget [\"targetType\", [0,0,0], 1, 1];\n```","commands\\createTask.md":"Create a new AI task (subtask of parentTask). Type is name of registered task type.\n\n\n---\n*Syntaxes:*\n\nteamMember `createTask` [<nowiki/>[type, parentTask], priority, name1, value1, (...), nameN, valueN]\n\n---\n","commands\\createTeam.md":"Creates a `Team` and names it.\n\n\n---\n*Syntaxes:*\n\n`createTeam`  [type, name]\n\n---\n*Example 1:*\n\n```sqf\n_team = createTeam [\"USMC_Team\", \"Fire Team Red\"];\n```","commands\\createTrigger.md":"Creates a `trigger` of the given type and at the given position. The type must be a class name in `CfgNonAIVehicles` or `CfgVehicles` with <syntaxhighlight lang=\"cpp\" inline>simulation = detector</syntaxhighlight>. An array containing all units that have activated the trigger is available via <sqf inline>list triggerobj\n```. Since triggers are ``Object`s`, commands such as `getPosASL`, `setPosASL`, `deleteVehicle` etc. work on them.\n\n: \"\"\n* {{GVI|arma3|1.98\n\n\n---\n*Syntaxes:*\n\n`createTrigger` [type, position, makeGlobal]\n\n---\n*Example 1:*\n\n```sqf\n_trg = createTrigger [\"EmptyDetector\", getPos player];\n_trg setTriggerArea [5, 5, 0, false];\n_trg setTriggerActivation [\"CIV\", \"PRESENT\", true];\n_trg setTriggerStatements [\"this\", \"hint 'Civilian near player'\", \"hint 'no civilian near'\"];\n```\n\n*Example 2:*\n\nOpen/close Bar Gate automatically:\n\n```sqf\n//--- init of the Bar Gate\nif (isServer) then\n{\t\n\t_gateTrigger = createTrigger [\"EmptyDetector\", getPosWorld this, false];\n\t_gateTrigger setVariable [\"BarGateObj\", this];\n\t_gateTrigger setTriggerActivation [\"ANYPLAYER\", \"PRESENT\", true];\n\t_gateTrigger setTriggerArea [5, 25, getDir this, true];\n\t_gateTrigger setTriggerStatements \n\t[\n\t\t\"this\", \n\t\t\"thisTrigger getVariable \"\"BarGateObj\"\"; animateSource [\"\"Door_1_sound_source\"\", 1]\", \n\t\t\"thisTrigger getVariable \"\"BarGateObj\"\"; animateSource [\"\"Door_1_sound_source\"\", 0]\"\n\t];\n};\n```","commands\\createUnit.md":"Create a unit of the provided `CfgVehicles` class.\n\n\n---\n*Syntaxes:*\n\ngroup `createUnit` [type, position, markers, placement, special]\n\ntype `createUnit` [position, group, init, skill, rank]\n\n---\n*Example 1:*\n\n```sqf\n_unit = group player createUnit [\"B_RangeMaster_F\", position player, [], 0, \"FORM\"];\n```\n\n*Example 2:*\n\n```sqf\n\"B_RangeMaster_F\" createUnit [position player, group player];\n```\n\n*Example 3:*\n\n```sqf\n\"B_RangeMaster_F\" createUnit [getMarkerPos \"barracks\", _groupAlpha];\n```\n\n*Example 4:*\n\n```sqf\n\"B_RangeMaster_F\" createUnit [\n\tgetMarkerPos \"marker_1\",\n\t_groupAlpha,\n\t\"loon1 = this; this addWeapon 'BAF_L85A2_RIS_SUSAT'\",\n\t0.6,\n\t\"corporal\"\n];\n```\n\n*Example 5:*\n\n<!-- referenced in parameters (p6) -->\n\n```sqf\n_veh = \"O_Quadbike_01_F\" createVehicle (player getRelPos [10, 0]);\n_grp = createVehicleCrew _veh;\n_unit = _grp createUnit [typeOf driver _veh, _grp, [], 0, \"CARGO\"];\n```\n\n*Example 6:*\n\n<!-- referenced in the description -->Creating a unit from a different side may lead to issues:\n\n```sqf\n_grp = createGroup east;\nhint str side _grp; // EAST\n_ap = _grp createUnit [ \"C_man_p_beggar_F\", position player, [], 0, \"FORM\"];\nhint str side _ap; // CIV, not EAST\n\n// workaround\n[_ap] joinSilent _grp;\nhint str side _ap; // EAST\n```\n\n*Example 7:*\n\n<!-- referenced in alternative result (r2) -->\nReference the created unit through a global variable:\n\n```sqf\n_myUnit = \"B_RangeMaster_F\" createUnit [position player, group player];\t\t// wrong - this syntax does not return a reference\n\n\"B_RangeMaster_F\" createUnit [position player, group player, \"myUnit = this\"];\t// correct - the unit is myUnit\n```","commands\\createVehicle.md":"Creates an empty object of given classname type.\nSee [[Arma 3 Assets]] / [[Arma 3: createVehicle/vehicles]], or `:Category:CfgVehicles` for earlier games.\n\n\n---\n*Syntaxes:*\n\ntype `createVehicle` position\n\n`createVehicle` [type, position, markers, placement, special]\n\n---\n*Example 1:*\n\n```sqf\n_jeep = \"Jeep\" createVehicle position player;\n```\n\n*Example 2:*\n\n```sqf\n_heli = \"AH1Z\" createVehicle getMarkerPos \"hspawn\";\n```\n\n*Example 3:*\n\n```sqf\n_veh = createVehicle [\"ah1w\", position player, [], 0, \"FLY\"];\n```\n\n*Example 4:*\n\n```sqf\n_veh = createVehicle [\"2S6M_Tunguska\", getMarkerPos \"marker1\", [\"marker2\", \"marker3\"], 0, \"NONE\"];\n```\n\n*Example 5:*\n\nObjects such as\n* \"test_EmptyObjectForBubbles\"\n* \"test_EmptyObjectForFireBig\"\n* \"test_EmptyObjectForSmoke\"\ncreate additional emitters, which are stored in \"effects\" variable on the object. Since {{arma3}} v1.72 these emitters are automatically deleted when object is deleted\n\n```sqf\n[] spawn\n{\n\tprivate _fire = \"test_EmptyObjectForFireBig\" createVehicle position player;\n\tsleep 5;\n\tdeleteVehicle _fire;\n};\n```\n\n*Example 6:*\n\nThe following explosives (ending with **_Scripted**) can be set off by applying `setDamage` 1 to them for ease of scripting:\n* \"DemoCharge_Remote_Ammo_Scripted\"\n* \"SatchelCharge_Remote_Ammo_Scripted\"\n* \"ClaymoreDirectionalMine_Remote_Ammo_Scripted\"\n\n```sqf\n_claymore = \"ClaymoreDirectionalMine_Remote_Ammo_Scripted\" createVehicle position player;\n_claymore spawn\n{\n\tsleep 5;\n\t_this setDamage 1;\n};\n```\n\n*Example 7:*\n\nAdd inventory to objects without inventory:\n\n```sqf\n_boxes = \"Land_Pallet_MilBoxes_F\" createVehicle position player;\n_cargo = \"Supply500\" createVehicle [0,0,0];\n_cargo attachTo [_boxes, [0,0,0.85]];\n\n// optional for objects that can take damage\n_boxes addEventHandler [\"Killed\",\n{\n\t{\n\t\tdetach _x,\n\t\tdeleteVehicle _x;\n\t}\n\tforEach attachedObjects (_this select 0);\n}];\n```\n\n*Example 8:*\n\nDrop player's weapon:\n\n```sqf\n_wh = \"GroundWeaponHolder_Scripted\" createVehicle position player;\nplayer action [\"DropWeapon\", _wh, currentWeapon player];\n```\n\n*Example 9:*\n\nThe following weapon holders (ending with `_Scripted`) do `not` auto-delete when empty. It is up to the mission maker to take care of these:\n* \"GroundWeaponHolder_Scripted\"\n* \"WeaponHolderSimulated_Scripted\"\n* \"Weapon_Empty\" (a special weaponholder that displays only a single weapon, even if it contains magazines for this weapon)\n\n```sqf\nprivate _weaponHolder = createVehicle [\"Weapon_Empty\", getPosATL player, [], 0, \"CAN_COLLIDE\"];\n_weaponHolder addWeaponCargo [\"arifle_Katiba_F\", 1];\nhint \"You have 5 seconds to grab this weapon\";\nsleep 5;\ndeleteVehicle _weaponHolder;\n```","commands\\createVehicleCrew.md":"Creates vehicle crew corresponding to the provided vehicle's `faction`. If the vehicle is already occupied, the command will only create missing crew in the existing vehicle's group.<br>\nTo find out which crew will be created, use `BIS_fnc_vehicleCrewTurrets`.\n  \n{{Feature|informative|This command:\n* {{GVI|arma3|1.26\n\n\n---\n*Syntaxes:*\n\n`createVehicleCrew` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_veh = createVehicle [\"B_MRAP_01_F\", getMarkerPos \"createVeh\", [], 0, \"NONE\"];\ncreateVehicleCrew _veh;\n```\n\n*Example 2:*\n\n```sqf\n_veh = createVehicle [\"O_MRAP_02_hmg_F\", position player, [], 0, \"NONE\"];\ncreateVehicleCrew _veh;\n{\n\tdiag_log [_x, faction _x, side _x, side group _x];\n} forEach crew _veh;\n\n// [O Alpha 1-1:1,\"OPF_F\",EAST,EAST]\n// [O Alpha 1-1:2,\"OPF_F\",EAST,EAST]\n```","commands\\createVehicleLocal.md":"Creates an object of the given type. Created object is not transferred through network in MP games. `netId` of such vehicle in multiplayer will be \"0:0\". To disable local vehicle creation, use `CfgDisabledCommands` to blacklist this command. Alternatively, you can use `createSimpleObject` with local option enabled where applicable.\n\n\n---\n*Syntaxes:*\n\ntype `createVehicleLocal` position\n\n---\n*Example 1:*\n\n```sqf\n_lightsource = \"#lightpoint\" createVehicleLocal _pos;\n```\n\n*Example 2:*\n\n```sqf\n_lightsource = \"#lightreflector\" createVehicleLocal _pos;\n```","commands\\crew.md":"Returns the crew (both dead and alive) of the given vehicle.\n\n\n---\n*Syntaxes:*\n\n`crew` vehicleName\n\n---\n*Example 1:*\n\n```sqf\nplayer in (crew _tank);\n```","commands\\ctAddHeader.md":"Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in  format:<br>\n**[<headerIndex>, [<control0>, <control1>...<control n>]]**.\n<br>\nNote that rows and headers are indexed separately.\n\n\n---\n*Syntaxes:*\n\n`ctAddHeader` control\n\n---\n*Example 1:*\n\n```sqf\n_array = ctAddHeader _control;\n```","commands\\ctAddRow.md":"Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [<rowIndex>, [<control0>, <control1>...<control n>]].\n<br>\nNote that rows and headers are indexed separately.\n\n\n---\n*Syntaxes:*\n\n`ctAddRow` control\n\n---\n*Example 1:*\n\n```sqf\n_array = ctAddRow _control;\n```","commands\\ctClear.md":"Removes all the lines from the RscControlsTable. Returns Nothing.\n\n\n---\n*Syntaxes:*\n\n`ctClear` ctrl\n\n---\n*Example 1:*\n\n```sqf\nctClear _control;\n```","commands\\ctCurSel.md":"Returns index of the selected row. Will take only rows, but not headers into account.\n\n\n---\n*Syntaxes:*\n\n`ctCurSel` ctrl\n\n---\n*Example 1:*\n\n```sqf\n_curSel = ctCurSel _control;\n```","commands\\ctData.md":"Returns metadata associated with a particular row of a `CT_CONTROLS_TABLE` control.\n\n\n---\n*Syntaxes:*\n\nctrl `ctData` row\n\n---\n*Example 1:*\n\n```sqf\nprivate _data = _ctrl ctData 0;\n```","commands\\ctFindHeaderRows.md":"Gets array of indices of rows under this header.\n\n\n---\n*Syntaxes:*\n\nctrl `ctFindHeaderRows` index\n\n---\n*Example 1:*\n\n```sqf\nprivate _indices = _control ctFindHeaderRows 0;\n```","commands\\ctFindRowHeader.md":"Gets index of the closest header above this row.\n\n\n---\n*Syntaxes:*\n\nctrl `ctFindRowHeader` rowIndex\n\n---\n*Example 1:*\n\n```sqf\nprivate _index = _control ctFindRowHeader 0;\n```","commands\\ctHeaderControls.md":"Returns array of controls on the header with the given index.\n\n\n---\n*Syntaxes:*\n\nctrl `ctHeaderControls` index\n\n---\n*Example 1:*\n\n```sqf\n_array = _control ctHeaderControls 0;\n```","commands\\ctHeaderCount.md":"Returns number of headers (rows not included) in the RscControlsTable.\n\n\n---\n*Syntaxes:*\n\n`ctHeaderCount` ctrl\n\n---\n*Example 1:*\n\n```sqf\nctHeaderCount _control;\n```","commands\\ctRemoveHeaders.md":"Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.\n\n\n---\n*Syntaxes:*\n\nctrl `ctRemoveHeaders` indices\n\n---\n*Example 1:*\n\n```sqf\n_control ctRemoveHeaders [0, 1, 2];\n```","commands\\ctRemoveRows.md":"Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.\n\n\n---\n*Syntaxes:*\n\nctrl `ctRemoveRows` [index1, index2, ...]\n\n---\n*Example 1:*\n\n```sqf\n_control ctRemoveRows [0, 1, 2];\n```","commands\\ctrlActivate.md":"Launch actions attached to given (button based) control. <br> \nCommand only triggers `action` entry described in control config and engine-based actions (cancel or ok codes) and will not trigger button related `User Interface Event Handlers`.<br>\nCommand ignores control disabled state. (Example 2)\n\n\n---\n*Syntaxes:*\n\n`ctrlActivate` controlName\n\n---\n*Example 1:*\n\n```sqf\nctrlActivate _control;\n```\n\n*Example 2:*\n\n```sqf\n_control ctrlEnable false;\nctrlActivate _control; // Action fired.\n```","commands\\ctrlAddEventHandler.md":"Add an event handler to the given control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlAddEventHandler`  [handler, function]\n\n---\n*Example 1:*\n\n```sqf\n_map ctrlAddEventHandler [\"draw\", \"_this call BIS_fnc_strategicMapOpen_draw\"];\n```\n\n*Example 2:*\n\n```sqf\n_map ctrlAddEventHandler [\"draw\", { hintSilent str _this }];\n```","commands\\ctrlAngle.md":"Gets rotation info of a control set as **ST_PICTURE**. Supported control types:\n* `CT_STATIC`\n* `CT_ACTIVETEXT` (Since Arma 3 v2.09.149642)\n\n\n---\n*Syntaxes:*\n\n`ctrlAngle` control\n\n---\n*Example 1:*\n\n```sqf\nctrlAngle _control;\n```","commands\\ctrlAnimateModel.md":"Process an animation of 3D `Arma: GUI Configuration`. Command uses name defined by source property and works similar like `animateSource` command.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlAnimateModel` [source, phase, speed]\n\n---\n*Example 1:*\n\n```sqf\n_control3D ctrlAnimateModel [\"Close\", 1];\n```\n\n*Example 2:*\n\n```sqf\n_ctrlLaptop ctrlAnimateModel [\"Lid\", 1, 2];\n```","commands\\ctrlAnimationPhaseModel.md":"Returns current animation phase of given source. Similar to `animationSourcePhase`.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlAnimationPhaseModel` source\n\n---\n*Example 1:*\n\n```sqf\nprivate _phase = _control3D ctrlAnimationPhaseModel \"Close\";\n```","commands\\ctrlAutoScrollDelay.md":"Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present. \n<br><br>\nAutorscroll is available for `CT_LISTBOX` and `CT_CONTROLS_GROUP` types of controls only. Autoscroll will wait `ctrlAutoScrollDelay` seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. `ctrlAutoScrollSpeed` defines the speed with which scrollbar is scrolled. If `ctrlAutoScrollRewind` is `true`, the control will fade out, immediately rewind to the top, then fade in, wait `ctrlAutoScrollDelay` seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.\n\n\n---\n*Syntaxes:*\n\n`ctrlAutoScrollDelay` control\n\n---\n*Example 1:*\n\n```sqf\n_ctrlDelay = ctrlAutoScrollDelay _ctrlGroup;\n```","commands\\ctrlAutoScrollRewind.md":"Returns `true` if auto-scroll should move back to start after it reaches the end.\n<br><br>\nAutorscroll is available for `CT_LISTBOX` and `CT_CONTROLS_GROUP` types of controls only. Autoscroll will wait `ctrlAutoScrollDelay` seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. `ctrlAutoScrollSpeed` defines the speed with which scrollbar is scrolled. If `ctrlAutoScrollRewind` is `true`, the control will fade out, immediately rewind to the top, then fade in, wait `ctrlAutoScrollDelay` seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.\n\n\n---\n*Syntaxes:*\n\n`ctrlAutoScrollRewind` control\n\n---\n*Example 1:*\n\n```sqf\n_ctrlRewind = ctrlAutoScrollRewind _ctrlGroup;\n```","commands\\ctrlAutoScrollSpeed.md":"Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present.<br><br>\nAutoscroll is available for `CT_LISTBOX` and `CT_CONTROLS_GROUP` types of controls only. Autoscroll will wait `ctrlAutoScrollDelay` seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. `ctrlAutoScrollSpeed` defines the speed with which scrollbar is scrolled. If `ctrlAutoScrollRewind` is `true`, the control will fade out, immediately rewind to the top, then fade in, wait `ctrlAutoScrollDelay` seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.\n\n\n---\n*Syntaxes:*\n\n`ctrlAutoScrollSpeed` control\n\n---\n*Example 1:*\n\n```sqf\n_ctrlSpeed =  ctrlAutoScrollSpeed _ctrlGroup;\n```","commands\\ctrlBackgroundColor.md":"Returns control's background color.\n\n\n---\n*Syntaxes:*\n\n`ctrlBackgroundColor` control\n\n---\n*Example 1:*\n\n```sqf\nctrlBackgroundColor _control;\n```","commands\\ctrlChecked.md":"Returns the current state of given `CT_CHECKBOXES` control. Since Arma 3 v1.72 it is possible to query multiple checkboxes by providing checkbox index. For more information see `CT_CHECKBOXES`.\n\n\n---\n*Syntaxes:*\n\n`ctrlChecked` control\n\ncontrol `ctrlChecked`  index\n\n---\n*Example 1:*\n\n```sqf\nctrlChecked _control;\n```\n\n*Example 2:*\n\n```sqf\n_control ctrlChecked 3;\n```","commands\\ctrlClassName.md":"Returns the class name of a `Control` as it is defined in config. If you need config class of a game created `Display`, it is stored on display itself:\n\n```sqf\n_className = findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"\n```\n\n\n---\n*Syntaxes:*\n\n`ctrlClassName` control\n\n---\n*Example 1:*\n\nList class names of all controls present on display 46:\n\n```sqf\n_return = [];\n{\n\t_return pushBack format [\"IDC: %1, className: %2\", ctrlIDC _x, ctrlClassName _x];\n} forEach (allControls findDisplay 46);\n\ncopyToClipboard (_return joinString endl);\n```","commands\\ctrlCommit.md":"Commits control animation to last specified duration.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlCommit` time\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlCommit 2; // make animation last approx. 2 seconds\n```","commands\\ctrlCommitted.md":"Check if the control animation is finished.\n\n\n---\n*Syntaxes:*\n\n`ctrlCommitted` controlName\n\n---\n*Example 1:*\n\n```sqf\n_done = ctrlCommitted _control;\n```","commands\\ctrlCreate.md":"Creates a new control in the given display.<br>\nThe control class could be an existing class from the ` main config` or a custom class defined in the ` mission config`.\nThe main config is searched first, if the class does not exist there, the mission config is searched.\nSome of the common controls defined in the main config that can be used with this command:\n<spoiler text=\"Show list\">\n input box with [[DialogControls-EditBox | {{hl\n\n\n---\n*Syntaxes:*\n\ndisplay `ctrlCreate` [class, idc, controlsGroup]\n\n---\n*Example 1:*\n\n```sqf\n_display ctrlCreate [\"RscText\", 1234];\n```\n\n*Example 2:*\n\n```sqf\n_map = findDisplay 46 ctrlCreate [\"RscMapControl\", -1];\n_multiLineText = findDisplay 46 ctrlCreate [\"RscTextMulti\", -1];\n_multiLineEdit = findDisplay 46 ctrlCreate [\"RscEditMulti\", -1];\n```\n\n*Example 3:*\n\n```sqf\nmyControl = findDisplay 0 ctrlCreate [\"RscText\", 1234, findDisplay 0 displayCtrl 2300];\n```\n\n*Example 4:*\n\nCreate Tree View control with search. Available **RscTreeSearch}} class is hardcoded to be used with *(Reference hl \"RscEdit\")* with idc {{hl|645**. Example below demonstrates how to. After tree is generated, try typing something in the top box.\n\n```sqf\n[] spawn \n{\n\tdisableSerialization;\n\n\t_display = (if (is3DEN) then {findDisplay 313} else {[] call BIS_fnc_displayMission}) createDisplay \"RscDisplayEmpty\";\n\n\t_edit = _display ctrlCreate [\"RscEdit\", 645];\n\t_edit ctrlSetPosition [0,0,1,0.04];\n\t_edit ctrlSetBackgroundColor [0,0,0,1];\n\t_edit ctrlCommit 0;\n\n\t_tv = _display ctrlCreate [\"RscTreeSearch\", -1];\n\t_tv ctrlSetFont \"EtelkaMonospacePro\";\n\t_tv ctrlSetFontHeight 0.03;\n\t_tv ctrlSetPosition [0,0.06,1,0.94];\n\t_tv ctrlSetBackgroundColor [0,0,0,1];\n\t_tv ctrlCommit 0;\n\n\t_classes = \"true\" configClasses (configFile >> \"CfgVehicles\");\n\n\tfor \"_i\" from 0 to 5 do\n\t{\n\t\t_tv tvAdd [[], configName selectRandom _classes];\n\t\tfor \"_j\" from 0 to 5 do\n\t\t{\n\t\t\t_tv tvAdd [[_i], configName selectRandom _classes];\n\t\t\tfor \"_k\" from 0 to 5 do\n\t\t\t{\n\t\t\t\t_tv tvAdd [[_i, _j], configName selectRandom _classes];\n\t\t\t\tfor \"_n\" from 0 to 5 do\n\t\t\t\t{\n\t\t\t\t\t_tv tvAdd [[_i, _j, _k], configName selectRandom _classes];\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n```\n\n*Example 5:*\n\nCreate a simple submit edit box and show content in hint:\n\n```sqf\ndisableSerialization;\nprivate _display = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nprivate _ctrlGroup = _display ctrlCreate [\"RscControlsGroupNoScrollbars\", -1];\nprivate _ctrlBackground = _display ctrlCreate [\"RscTextMulti\", -1, _ctrlGroup];\nIDD_EDIT_BOX = 123;\nprivate _ctrlEdit = _display ctrlCreate [\"RscEditMulti\", IDD_EDIT_BOX, _ctrlGroup];\nprivate _ctrlButton = _display ctrlCreate [\"RscShortcutButton\", -1, _ctrlGroup];\n_ctrlGroup ctrlSetPosition [0.5, 0.5, 0, 0];\n_ctrlGroup ctrlCommit 0;\n_ctrlBackground ctrlSetPosition [0, 0, 0.5, 0.5];\n_ctrlBackground ctrlSetBackgroundColor [0.5, 0.5, 0.5, 0.9];\n_ctrlBackground ctrlSetText \"ENTER TEXT:\";\n_ctrlBackground ctrlEnable false;\n_ctrlBackground ctrlCommit 0;\n_ctrlEdit ctrlSetPosition [0.01, 0.05, 0.48, 0.34];\n_ctrlEdit ctrlSetBackgroundColor [0, 0, 0, 0.5];\n_ctrlEdit ctrlCommit 0;\n_ctrlButton ctrlSetPosition [0.185, 0.42, 0.13, 0.05];\n_ctrlButton ctrlCommit 0;\n_ctrlButton ctrlSetText \"SUBMIT\";\n_ctrlButton ctrlAddEventHandler [\"ButtonClick\", \n{\n\tparams [\"_ctrl\"];\n\t_display = ctrlParent _ctrl;\n\t_text = ctrlText (_display displayCtrl IDD_EDIT_BOX);\n\tif (_text == \"\") then { _text = \"EMPTY\" };\n\thint _text;\n\t_display closeDisplay 1;\n}];\nctrlSetFocus _ctrlEdit;\n_ctrlGroup ctrlSetPosition [0.25, 0.25, 0.5, 0.5];\n_ctrlGroup ctrlCommit 0.1;\nplaySound \"Hint3\";\n```","commands\\ctrlDelete.md":"Deletes given control. The control has to be created either by script with `ctrlCreate` or to have **deletable** property in config set to `true`. Use `ctrlShow` `false` and `ctrlEnable` `false` to disable controls that cannot be deleted. Returns `Boolean` indicating  whether the deletion was successful.\n\n\n---\n*Syntaxes:*\n\n`ctrlDelete` control\n\n---\n*Example 1:*\n\n```sqf\nctrlDelete ((findDisplay 20000) displayCtrl 20001);\n```","commands\\ctrlEnable.md":"Enables or disables a control of the currently active user dialog.\nDisabled controls cannot be clicked onto.\nRead `Arma: GUI Configuration` for more information about user dialogs and controls.\n\n\n---\n*Syntaxes:*\n\n`ctrlEnable`  [idc, enable]\n\ncontrolName `ctrlEnable` enable\n\n---\n*Example 1:*\n\n```sqf\nctrlEnable [100, false];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl ctrlEnable false;\n```","commands\\ctrlEnabled.md":"Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused. Read `Arma: GUI Configuration` for more information about user dialogs and controls.\n\n\n---\n*Syntaxes:*\n\n`ctrlEnabled`  idc\n\n`ctrlEnabled`  controlName\n\n---\n*Example 1:*\n\n```sqf\nif !(ctrlEnabled 100) then\n{\n  ctrlEnable [100, true];\n};\n```\n\n*Example 2:*\n\n```sqf\n_enabled = ctrlEnabled _control;\n```","commands\\ctrlFade.md":"Returns the current fade factor of control.\n\n\n---\n*Syntaxes:*\n\n`ctrlFade` controlName\n\n---\n*Example 1:*\n\n```sqf\n_scale = ctrlFade _control;\n```","commands\\ctrlFontHeight.md":"Returns control's font size, usually **sizeEx** value (see `ctrlSetFontHeight`).\n\n\n---\n*Syntaxes:*\n\n`ctrlFontHeight` control\n\n---\n*Example 1:*\n\n```sqf\nctrlFontHeight _control;\n```","commands\\ctrlForegroundColor.md":"Returns control's foreground color.\n\n\n---\n*Syntaxes:*\n\n`ctrlForegroundColor` control\n\n---\n*Example 1:*\n\n```sqf\nctrlForegroundColor _control;\n```","commands\\ctrlHTMLLoaded.md":"Returns `true` when HTML content was successfully loaded.\n\n\n---\n*Syntaxes:*\n\n`ctrlHTMLLoaded` control\n\n---\n*Example 1:*\n\n```sqf\n_control htmlLoad \"test.html\";\nif (!ctrlHTMLLoaded _control) then {\n\thint \"Loading test.html failed!\";\n};\n```","commands\\ctrlIDC.md":"Returns control IDC.\n\n\n---\n*Syntaxes:*\n\n`ctrlIDC`  control\n\n---\n*Example 1:*\n\n```sqf\nctrlIDC _ctrl;\n```","commands\\ctrlIDD.md":"Returns display IDD.\n\n\n---\n*Syntaxes:*\n\n`ctrlIDD`  display\n\n---\n*Example 1:*\n\n```sqf\nctrlIDD findDisplay 46; //46\n```","commands\\ctrlMapAnimAdd.md":"Adds the next frame to the map animation.\n\n\n---\n*Syntaxes:*\n\nmap `ctrlMapAnimAdd`  [time, zoom, position]\n\n---\n*Example 1:*\n\n```sqf\n_map ctrlMapAnimAdd [1, 0.1, getMarkerPos \"anim1\"];\nctrlMapAnimCommit _map;\n```\n\n*Example 2:*\n\nCenter map on player:\n\n```sqf\n_ctrl ctrlMapAnimAdd [0, 0.05, player];\nctrlMapAnimCommit _ctrl;\n```\n\n*Example 3:*\n\n```sqf\n_map ctrlMapSetPosition [];\n_map ctrlMapAnimAdd [1, 0.1, getMarkerPos \"anim1\"];\nctrlMapAnimCommit _map;\n```","commands\\ctrlMapAnimClear.md":"Clears the map animation.\n\n\n---\n*Syntaxes:*\n\n`ctrlMapAnimClear` controlName\n\n---\n*Example 1:*\n\n```sqf\nctrlMapAnimClear _ctrlMap;\n```","commands\\ctrlMapAnimCommit.md":"Plays the map animation.\n\n\n---\n*Syntaxes:*\n\n`ctrlMapAnimCommit`  mapControl\n\n---\n*Example 1:*\n\nCenter map on player:\n\n```sqf\n_ctrl ctrlMapAnimAdd [0, 0.05, player];\nctrlMapAnimCommit _ctrl;\n```","commands\\ctrlMapAnimDone.md":"Checks whether the map animation has finished.\n\n\n---\n*Syntaxes:*\n\n`ctrlMapAnimDone` controlName\n\n---\n*Example 1:*\n\n```sqf\n_isDone = ctrlMapAnimDone _ctrlMap;\n```","commands\\ctrlMapCursor.md":"Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlMapCursor` [defaultCursor, newCursor]\n\n---\n*Example 1:*\n\n```sqf\n_map ctrlMapCursor [\"Track\", \"Arrow\"];\n```\n\n*Example 2:*\n\n```sqf\nuiNamespace setVariable [\"_map\", findDisplay 12 displayCtrl 51];\n(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\", \"HC_overFriendly\"];\n```\n\n*Example 3:*\n\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlMapCursor [\"Scroll\", \"Wait\"];\n```\n\n*Example 4:*\n\nCycle through all available cursors over custom map:\n\n```sqf\n[] spawn\n{\n\tdisableSerialization;\n\t_map = findDisplay 46 createDisplay \"RscCredits\" ctrlCreate [\"RscMapControl\", -1];\n\t_map ctrlSetPosition [0,0,1,1];\n\t_map ctrlCommit 0;\n\t{\n\t\t_map ctrlMapCursor [\"\", configName _x]; //<-- the actual usage\n\t\thint format [\"Current cursor: %1\", configName _x];\n\t\tsleep 1;\n\t}\n\tforEach (\"true\" configClasses (configFile >> \"CfgWrapperUI\" >> \"Cursors\"));\n};\n```","commands\\ctrlMapMouseOver.md":"Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode.\n\n\n---\n*Syntaxes:*\n\n`ctrlMapMouseOver` control\n\n---\n*Example 1:*\n\n```sqf\n(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overFriendly\"];\n\n_mouseover = if (count (ctrlMapMouseOver (uiNamespace getVariable \"_map\")) > 0) then\n{\n\tctrlMapMouseOver (uiNamespace getVariable \"_map\")\n}\nelse\n{\n\t[\"\"]\n};\n\nif (_mouseover select 0 == \"task\" && str(_logic getVariable \"onTaskAssigned\") != str{}) then\n{\n\t//--- Task\n\t(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overMission\"];\n}\nelse\n{\n\t//--- Waypoint\n\t(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_move\"];\n};\n```\n\n*Example 2:*\n\n```sqf\nonEachFrame {hintSilent str ctrlMapMouseOver (findDisplay 12 displayCtrl 51)};\n```","commands\\ctrlMapPosition.md":"A getter for `ctrlMapSetPosition`. Returns map position in format [x, y, w, h]. If map is inside a Controls Group, the x and y position is relative to the Controls Group top left corner.\n\n\n---\n*Syntaxes:*\n\n`ctrlMapPosition` map\n\n---\n*Example 1:*\n\n```sqf\nctrlMapPosition _map;\n```","commands\\ctrlMapScale.md":"Returns the current scale of given map control.\n\n\n---\n*Syntaxes:*\n\n`ctrlMapScale` ctrl\n\n---\n*Example 1:*\n\n```sqf\n_control = (findDisplay 12) displayCtrl 51; //Arma 3\n_scale = ctrlMapScale _control; //returns number from 1 to 0.001\n```","commands\\ctrlMapScreenToWorld.md":"Converts map screen coordinates into world coordinates. Unlike `posScreenToWorld`, this command returns world position is format [x, y], otherwise it is identical to `posScreenToWorld`.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlMapScreenToWorld` [x, y]\n\n---\n*Example 1:*\n\n```sqf\n_worldCoord = _control ctrlMapScreenToWorld _ScreenCoord;\n```\n\n*Example 2:*\n\n```sqf\n_worldCoord = _control ctrlMapScreenToWorld [_x, _y];\n```\n\n*Example 3:*\n\n```sqf\n_worldCoord = findDisplay 12 displayCtrl 51 ctrlMapScreenToWorld [0.5, 0.5];\n```","commands\\ctrlMapSetPosition.md":"Sets position and size of the given map control and recalculates control center. The effect is immediate and no `ctrlCommit` is necessary, unlike with `ctrlSetPosition` command.\n\n\n---\n*Syntaxes:*\n\nmap `ctrlMapSetPosition` [x, y, w, h]\n\n---\n*Example 1:*\n\n```sqf\n_map ctrlMapSetPosition [0,0,1,1];\n```\n\n*Example 2:*\n\n```sqf\n_map ctrlSetPosition [0.5, 0.5, 0.5, 0.5];\n_map ctrlCommit 0;\n_map ctrlMapSetPosition []; // sync\n```\n\n*Example 3:*\n\n```sqf\nwith localNamespace do\n{\n\tprivate _display = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n\tprivate _ctrlGroup = _display ctrlCreate [\"RscControlsGroup\", -1];\n\tprivate _ctrlText = _display ctrlCreate [\"RscText\", -1, _ctrlGroup];\n\t_ctrltext ctrlSetPosition [0, 0, 1, 1];\n\t_ctrlText ctrlSetBackgroundColor [1, 0, 0, 0.5];\n\t_ctrlText ctrlCommit 0;\n\tprivate _ctrlMap = _display ctrlCreate [\"RscMapControl\", -1, _ctrlGroup];\n\t_ctrlMap ctrlMapSetPosition [0, 0, 0.5, 0.5]; // effect is immediate\n\t_ctrlMap ctrlMapAnimAdd [0, ctrlMapScale _ctrlMap, player];\n\tctrlMapAnimCommit _ctrlMap;\n\t_ctrlGroup ctrlSetPosition [safeZoneX, safeZoneY, 1, 1];\n\t_ctrlGroup ctrlCommit 0.3; // non instant transition\n\t_ctrlMap ctrlMapSetPosition []; // instant sync to new _ctrlGroup position\n};\n```","commands\\ctrlMapWorldToScreen.md":"Converts world coordinates into map screen coordinates. This command is identical to `posWorldToScreen`.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlMapWorldToScreen` position\n\n---\n*Example 1:*\n\n```sqf\n_screenCoord = _control ctrlMapWorldToScreen _worldCoord;\n```\n\n*Example 2:*\n\n```sqf\n_screenCoord = _control ctrlMapWorldToScreen position player;\n```","commands\\ctrlModel.md":"Returns model used in 3D-`Dialog`.\n\n\n---\n*Syntaxes:*\n\n`ctrlModel` control\n\n---\n*Example 1:*\n\n```sqf\n_model = ctrlModel _control3D;\n```","commands\\ctrlModelDirAndUp.md":"Returns `vectorDir` and `vectorUp` of the model used in 3D-`Dialogs`.\n\n\n---\n*Syntaxes:*\n\n`ctrlModelDirAndUp` control\n\n---\n*Example 1:*\n\n```sqf\n_vectorDirAndUp = ctrlModelDirAndUp _control3D;\n```","commands\\ctrlModelScale.md":"Returns 3D control model scale.\n\n\n---\n*Syntaxes:*\n\n`ctrlModelScale`  control\n\n---\n*Example 1:*\n\n```sqf\n_currentScale = ctrlModelScale _ctrl3D;\n```","commands\\ctrlMousePosition.md":"Returns position of the mouse on the screen relative to UI Control in UI coordinates. Also works within `CT_CONTROLS_GROUP`s. In that case, returned position is relative to the position of the group.\n\n\n---\n*Syntaxes:*\n\n`ctrlMousePosition` control\n\n---\n*Example 1:*\n\n```sqf\nprivate _mouseRelPos = ctrlMousePosition _ctrl;\n```","commands\\ctrlParent.md":"Returns the parent `Display` of the given control. For parent `Control`s group see `ctrlParentControlsGroup`.\n\n\n---\n*Syntaxes:*\n\n`ctrlParent` control\n\n---\n*Example 1:*\n\n```sqf\n_display = ctrlParent _control;\n```","commands\\ctrlParentControlsGroup.md":"Returns the parent control of a given child control. If the control is not part of a `CT_CONTROLS_GROUP` control then `controlNull` is returned. To return parent `Display` of the control use `ctrlParent`.\n\n\n---\n*Syntaxes:*\n\n`ctrlParentControlsGroup` ctrl\n\n---\n*Example 1:*\n\n```sqf\n_ctrlCombo = _ctrl controlsGroupCtrl 100; // control\nctrlParentControlsGroup _ctrlCombo; // parent control group (_ctrl)\n```","commands\\ctrlPosition.md":"Returns the current position of 2D control as **[x, y, w, h]}} array. For 3D control it returns relative {{hl|[x, y, z]**. If the control is part of a `CT_CONTROLS_GROUP`, the returned position will be relative to the group's position.\n\n\n---\n*Syntaxes:*\n\n`ctrlPosition`  controlName\n\n---\n*Example 1:*\n\n```sqf\n_pos = ctrlPosition _control;\n```","commands\\ctrlRemoveAllEventHandlers.md":"Remove all event handlers from the given control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlRemoveAllEventHandlers` handlerName\n\n---\n*Example 1:*\n\n```sqf\n_ctrlButton ctrlRemoveAllEventHandlers \"ButtonDown\";\n```","commands\\ctrlRemoveEventHandler.md":"Remove a given event handler from the given control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlRemoveEventHandler` [type, id]\n\n---\n*Example 1:*\n\n```sqf\n_map ctrlRemoveEventHandler [\"Draw\", _id];\n```","commands\\ctrlScale.md":"Returns the current scale of the control.\n\n\n---\n*Syntaxes:*\n\n`ctrlScale` control\n\n---\n*Example 1:*\n\n```sqf\n_scale = ctrlScale _control;\n```","commands\\ctrlScrollValues.md":"Returns scroll values for current scrollbars in range 0...1 (-1 if not applicable) for the following controls:\n{{Columns|2|\n* `CT_CONTROLS_TABLE`\n* `CT_CONTROLS_GROUP`\n* `CT_TREE`\n* `CT_LISTBOX`\n* `CT_COMBO`\n* `CT_XCOMBO`\n* `CT_LISTNBOX`\n* `CT_LISTNBOX_CHECKABLE`\n\n\n---\n*Syntaxes:*\n\n`ctrlScrollValues` control\n\n---\n*Example 1:*\n\n```sqf\nprivate _scrollvalues = ctrlScrollValues _ctrl;\n```\n\n*Example 2:*\n\n```sqf\n// ControlsGroup\nprivate _disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nprivate _ctrlGrp = _disp ctrlCreate [\"RscControlsGroup\", -1];\nprivate _ctrl = _disp ctrlCreate [\"RscTree\", -1, _ctrlGrp];\n_ctrl tvAdd [[], \"Root\"];\nfor \"_i\" from 1 to 25 do\n{\n\t_ctrl tvAdd [[0], format [\"Tree Item %1\", _i]];\n};\n_ctrl ctrlSetPosition [0,0,0.3,1.2];\n_ctrl ctrlCommit 0;\ntvExpandAll _ctrl;\n_ctrlGrp ctrlSetPosition [0,0,0.2,0.3];\n_ctrlGrp ctrlCommit 0;\n \nuiNamespace setVariable [\"_ctrl\", _ctrlGrp];\nonEachFrame\n{\n\thintSilent str ctrlScrollValues (uiNamespace getVariable [\"_ctrl\", controlNull]);\n};\n[] spawn\n{\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.3, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.3];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.7, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.7];\n};\n```","commands\\ctrlSetActiveColor.md":"Sets text color of given control when control is selected.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetActiveColor` color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetActiveColor [1, 0, 0, 1];\n```","commands\\ctrlSetAngle.md":"Sets the rotation of a control set as **ST_PICTURE**. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Only requires `ctrlCommit` when fourth parameter is set to `false`. Procedural textures filled controls do not rotate. Supported control types:\n* `CT_STATIC`\n* `CT_ACTIVETEXT` (Since Arma 3 v2.09.149642)\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetAngle` [angle, centerX, centerY, now]\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetAngle [25, 0.5, 0.5];\n```\n\n*Example 2:*\n\n```sqf\nwith uiNamespace do\n{\n\tctrl = findDisplay 46 ctrlCreate [\"RscPictureKeepAspect\", -1];\n\tctrl ctrlSetPosition [0,0,1,1];\n\tctrl ctrlSetText \"A3\\Missions_F_Exp\\data\\Img\\lobby\\ui_campaign_lobby_background_tablet_radial_left_ca.paa\";\n\tctrl ctrlCommit 0;\n\tangle = 0;\n\tonEachFrame\n\t{\n\t\twith uiNamespace do\n\t\t{\n\t\t\tif (angle > 359) then {angle = 0};\n\t\t\tctrl ctrlSetAngle [angle, 0.5, 0.5];\n\t\t\tangle = angle + 1;\n\t\t};\n\t};\n};\n```\n\n*Example 3:*\n\n```sqf\n_control ctrlSetAngle [25, 0.5, 0.5, false];\n_control ctrlCommit 1; // Rotation applies smoothly for 1 second.\n```","commands\\ctrlSetAutoScrollDelay.md":"Sets number of second before auto-scroll starts/rewinds. Setter for `ctrlAutoScrollDelay`.\n<br><br>\nAutorscroll is available for `CT_LISTBOX` and `CT_CONTROLS_GROUP` types of controls only. Autoscroll will wait `ctrlAutoScrollDelay` seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. `ctrlAutoScrollSpeed` defines the speed with which scrollbar is scrolled. If `ctrlAutoScrollRewind` is `true`, the control will fade out, immediately rewind to the top, then fade in, wait `ctrlAutoScrollDelay` seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetAutoScrollDelay` delay\n\n---\n*Example 1:*\n\n```sqf\n_ctrlGroup ctrlSetAutoScrollDelay 5;\n```","commands\\ctrlSetAutoScrollRewind.md":"Defines if scroll should rewind when auto-scroll reach end. Setter for `ctrlAutoScrollRewind`.\n<br><br>\nAutorscroll is available for `CT_LISTBOX` and `CT_CONTROLS_GROUP` types of controls only. Autoscroll will wait `ctrlAutoScrollDelay` seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. `ctrlAutoScrollSpeed` defines the speed with which scrollbar is scrolled. If `ctrlAutoScrollRewind` is `true`, the control will fade out, immediately rewind to the top, then fade in, wait `ctrlAutoScrollDelay` seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetAutoScrollRewind` set\n\n---\n*Example 1:*\n\n```sqf\n_ctrlGroup ctrlSetAutoScrollRewind true;\n```","commands\\ctrlSetAutoScrollSpeed.md":"Sets number of second required to scroll to next line. If speed < 0, auto-scroll is disabled. Setter for `ctrlAutoScrollSpeed`.\n<br><br>\nAutorscroll is available for `CT_LISTBOX` and `CT_CONTROLS_GROUP` types of controls only. Autoscroll will wait `ctrlAutoScrollDelay` seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. `ctrlAutoScrollSpeed` defines the speed with which scrollbar is scrolled. If `ctrlAutoScrollRewind` is `true`, the control will fade out, immediately rewind to the top, then fade in, wait `ctrlAutoScrollDelay` seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetAutoScrollSpeed` speed\n\n---\n*Example 1:*\n\n```sqf\n_ctrlGroup ctrlSetAutoScrollSpeed 0.1;\n```","commands\\ctrlSetBackgroundColor.md":"Sets background color of given control. Only affects:\n{{Columns|2|\n* `CT_COMBO`\n* `CT_STATIC`\n* `CT_STRUCTURED_TEXT`\n* `CT_MAP`\n* `CT_MAP_MAIN`\n* {{GVI|arma3|2.02\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetBackgroundColor` color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetBackgroundColor [1, 0, 0, 1];\n```","commands\\ctrlSetChecked.md":"Sets checked state of a `CT_CHECKBOXES` control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetChecked` checked\n\ncontrol `ctrlSetChecked` [index, checked]\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetChecked true;\n```\n\n*Example 2:*\n\n```sqf\n_control ctrlSetChecked [3, true];\n```","commands\\ctrlSetDisabledColor.md":"Sets the colorDisabled attribute of a control.\n\n\n---\n*Syntaxes:*\n\n`ctrlSetDisabledColor` [idc, color]\n\nctrl `ctrlSetDisabledColor` color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetDisabledColor [0.5, 0.5, 0.5, 0.5];\n```","commands\\ctrlSetEventHandler.md":"\n\n\n---\n*Syntaxes:*\n\ncontrolName `ctrlSetEventHandler` [handlerName, function]\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetEventHandler [\"KeyDown\", \"\"];\n```\n\n*Example 2:*\n\n```sqf\n(_display displayCtrl 108) ctrlSetEventHandler [\"LBSelChanged\",\"['ListChange',_this] call FireEvents\"];\n```","commands\\ctrlSetFade.md":"Sets wanted transparency for control animation. Requires `ctrlCommit` to commit changes. To hide or show a control instantly, use `ctrlShow`.\n\n\n---\n*Syntaxes:*\n\ncontrolName `ctrlSetFade` fade\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFade 1;\n_control ctrlCommit 5;\n```","commands\\ctrlSetFocus.md":"Sets the input focus on given control.\n\n\n---\n*Syntaxes:*\n\n`ctrlSetFocus`  control\n\n---\n*Example 1:*\n\n```sqf\nctrlSetFocus _control;\n```","commands\\ctrlSetFont.md":"Sets the font for given control (see `available fonts`)\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetFont` fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFont \"TahomaB\";\n```","commands\\ctrlSetFontH1.md":"Sets H1 font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH1]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH1 \"TahomaB\";\n```","commands\\ctrlSetFontH1B.md":"Sets H1 bold font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH1B]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH1B \"TahomaB\";\n```","commands\\ctrlSetFontH2.md":"Sets H2 font of given HTML control\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH2]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH2 \"TahomaB\";\n```","commands\\ctrlSetFontH2B.md":"Sets H2 bold font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH2B]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH2B \"TahomaB\";\n```","commands\\ctrlSetFontH3.md":"Sets H3 font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH3]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH3 \"TahomaB\";\n```","commands\\ctrlSetFontH3B.md":"Sets H3 bold font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH3B]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH3B \"TahomaB\";\n```","commands\\ctrlSetFontH4.md":"Sets H4 font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH4]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH4 \"TahomaB\";\n```","commands\\ctrlSetFontH4B.md":"Sets H4 bold font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH4B]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH4B \"TahomaB\";\n```","commands\\ctrlSetFontH5.md":"Sets H5 font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH5]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH5 \"TahomaB\";\n```","commands\\ctrlSetFontH5B.md":"Sets H5 bold font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH5B]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH5B \"TahomaB\";\n```","commands\\ctrlSetFontH6.md":"Sets H6 font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH6]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH6 \"TahomaB\";\n```","commands\\ctrlSetFontH6B.md":"Sets H6 bold font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontH6B]] fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontH6B \"TahomaB\";\n```","commands\\ctrlSetFontHeight.md":"Sets the **sizeEx** property for most controls as follows: \n* **CT_MAP** - \"sizeExNames\"\n* **CT_HTML** - \"P\" >> \"sizeEx\"\n* Other - \"sizeEx\"\n* {{GVI|arma3|2.02\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetFontHeight`  size\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontHeight 0.05;\n```","commands\\ctrlSetFontHeightH1.md":"Sets H1 font size of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontHeightH1]] height\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontHeightH1 0.05;\n```","commands\\ctrlSetFontHeightH2.md":"Sets H2 font size of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontHeightH2]] height\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontHeightH2 0.05;\n```","commands\\ctrlSetFontHeightH3.md":"Sets H3 font size of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontHeightH3]] height\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontHeightH3 0.05;\n```","commands\\ctrlSetFontHeightH4.md":"Sets H4 font size of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontHeightH4]] height\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontHeightH4 0.05;\n```","commands\\ctrlSetFontHeightH5.md":"Sets H5 font size of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontHeightH5]] height\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontHeightH5 0.05;\n```","commands\\ctrlSetFontHeightH6.md":"Sets H6 font size of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName [[ctrlSetFontHeightH6]] height\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontHeightH6 0.05;\n```","commands\\ctrlSetFontHeightSecondary.md":"Sets the font size of the secondary text of given control.\n\n\n---\n*Syntaxes:*\n\nctrl `ctrlSetFontHeightSecondary` value\n\n---\n*Example 1:*\n\n_control `ctrlSetFontHeightSecondary` 0.05;","commands\\ctrlSetFontP.md":"Sets P font of given HTML control or its size.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetFontP` fontOrSize\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontP \"TahomaB\";\n```\n\n*Example 2:*\n\n```sqf\n_control ctrlSetFontP 0.05;\n```","commands\\ctrlSetFontPB.md":"Sets P bold font of given HTML control.\n\n\n---\n*Syntaxes:*\n\ncontrolName `ctrlSetFontPB` fontName\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetFontPB \"TahomaB\";\n```","commands\\ctrlSetFontSecondary.md":"Sets the font size of the secondary text of given control.\n\n\n---\n*Syntaxes:*\n\nctrl `ctrlSetFontSecondary` fontClass\n\n---\n*Example 1:*\n\n_control `ctrlSetFontSecondary` \"TahomaB\";","commands\\ctrlSetForegroundColor.md":"Sets foreground color of the given control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetForegroundColor` color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetForegroundColor [1, 0, 0, 1];\n```","commands\\ctrlSetModel.md":"Sets model for 3D-`Dialogs`.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetModel` model\n\n---\n*Example 1:*\n\n```sqf\n_control3D ctrlSetModel \"\\a3\\Ui_f\\objects\\Compass.p3d\";\n```","commands\\ctrlSetModelDirAndUp.md":"Sets orientation of 3D control model. It is similar to `setVectorDirAndUp` command for an object.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetModelDirAndUp` dirAndUp\n\n---\n*Example 1:*\n\n```sqf\n_ctrl3D ctrlSetModelDirAndUp [[0,1,0],[0,0,1]]; //default orientation\n```","commands\\ctrlSetModelScale.md":"Sets 3D control model scale\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetModelScale`  scale\n\n---\n*Example 1:*\n\n```sqf\n_ctrl3D ctrlSetModelScale 1.5;\n```","commands\\ctrlSetMousePosition.md":"Similar to `setMousePosition` but relative to the given control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetMousePosition` [x, y]\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetMousePosition [0.5, 0.5];\n```","commands\\ctrlSetPixelPrecision.md":"Switches mode of pixel precision (rounding) in a given control interface.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetPixelPrecision` mode\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetPixelPrecision 2; // Enables pixel precision of the given control\n```","commands\\ctrlSetPosition.md":"Sets wanted position and size for 2D control animation. Width and height are optional. `ctrlCommit` is required to complete the operation. For 3D control, param is relative [x, y, z] and no `ctrlCommit` is required as it cannot be animated. If target control is inside a `CT_CONTROLS_GROUP`, the position needs to be relative to it.\n\n\n---\n*Syntaxes:*\n\ncontrolName `ctrlSetPosition`  [x, y]\n\ncontrolName `ctrlSetPosition`  [x, y, w, h]\n\ncontrolName `ctrlSetPosition`  [x, y, z]\n\n---\n*Example 1:*\n\nMove control:\n\n```sqf\n_control2D ctrlSetPosition [0, 0];\n_control2D ctrlCommit 0;\n```\n\n*Example 2:*\n\nMove control and resize:\n\n```sqf\n_control2D ctrlSetPosition [0, 0, 1, 1];\n_control2D ctrlCommit 0;\n```\n\n*Example 3:*\n\n```sqf\n_control3D ctrlSetPosition [0.5, 1, 0.5]; //centered and 1m away from screen\n```\n\n*Example 4:*\n\nTypewriter effect:\n\n```sqf\nwith uiNamespace do \t\n{ \n\t[] spawn\n\t{\n\t\t_text1 = \"This is a simple demo of typewriter text effect with various speed.\";\n\t\t_text2 = \"This took 10 seconds.\";\n\t\t_text3 = \"This is a fast one, set for 2 seconds.\";\n\t\t\n\t\tctrl = findDisplay 46 ctrlCreate [\"RscStructuredText\", -1];\n\t\t\n\t\tctrl ctrlSetPosition [0,0,0,0.1];\n\t\tctrl ctrlCommit 0;\n\t\tctrl ctrlSetStructuredText parseText format [\"<t color='#ff0000' size='2.1'>%1</t>\", _text1 splitString \" \" joinString \"&#160;\"];\n\t\tctrl ctrlSetPosition [0,0,ctrlTextWidth ctrl,0.1];\n\t\tctrl ctrlCommit 8;\n\t\t\n\t\twaitUntil {ctrlCommitted ctrl};\n\t\tsleep 0.5;\n\t\t\n\t\tctrl ctrlSetPosition [0,0,0,0.1];\n\t\tctrl ctrlCommit 0;\n\t\tctrl ctrlSetStructuredText parseText format [\"<t color='#ff0000' size='2.1'>%1</t>\", _text2 splitString \" \" joinString \"&#160;\"];\n\t\tctrl ctrlSetPosition [0,0,ctrlTextWidth ctrl,0.1];\n\t\tctrl ctrlCommit 2;\n\t\t\n\t\twaitUntil {ctrlCommitted ctrl};\n\t\tsleep 2;\n\t\t\n\t\tctrl ctrlSetPosition [0,0,0,0.1];\n\t\tctrl ctrlCommit 0;\n\t\tctrl ctrlSetStructuredText parseText format [\"<t color='#00ff00' size='2.1'>%1</t>\", _text3 splitString \" \" joinString \"&#160;\"];\n\t\tctrl ctrlSetPosition [0,0,ctrlTextWidth ctrl,0.1];\n\t\tctrl ctrlCommit 2;\n\t\t\n\t\twaitUntil {ctrlCommitted ctrl};\n\t\tsleep 2;\n\t\t\n\t\tctrlDelete ctrl;\n\t};\n};\n```","commands\\ctrlSetPositionH.md":"Sets the height of a 2D control. `ctrlCommit` is required to complete the operation.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetPositionH` h\n\n---\n*Example 1:*\n\n```sqf\n_ctrl ctrlSetPositionH 0.5;\n_ctrl ctrlCommit 1;\n```","commands\\ctrlSetPositionW.md":"Sets the width of a 2D control. `ctrlCommit` is required to complete the operation.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetPositionW` w\n\n---\n*Example 1:*\n\n```sqf\n_ctrl ctrlSetPositionW 0.5;\n_ctrl ctrlCommit 1;\n```","commands\\ctrlSetPositionX.md":"Sets horizontal position (x) of the 2D control. `ctrlCommit` is required to complete the operation.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetPositionX` x\n\n---\n*Example 1:*\n\n```sqf\n_ctrl ctrlSetPositionX 0.5;\n_ctrl ctrlCommit 1;\n```","commands\\ctrlSetPositionY.md":"Sets vertical position (y) of a 2D control. `ctrlCommit` is required to complete the operation.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetPositionY` y\n\n---\n*Example 1:*\n\n```sqf\n_ctrl ctrlSetPositionY 0.5;\n_ctrl ctrlCommit 1;\n```","commands\\ctrlSetScale.md":"Sets scale of a control. Top left corner remains same. This command requires `ctrlCommit`.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetScale`  scale\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetScale 0.5;// Makes the control 50% smaller\n_control ctrlCommit 0;\n```","commands\\ctrlSetScrollValues.md":"Sets scroll values for current scrollbars in range 0...1 for the following controls:\n{{Columns|2|\n* `CT_CONTROLS_TABLE`\n* `CT_CONTROLS_GROUP`\n* `CT_TREE`\n* `CT_LISTBOX`\n* `CT_COMBO`\n* `CT_XCOMBO`\n* `CT_LISTNBOX`\n* `CT_LISTNBOX_CHECKABLE`\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetScrollValues` [vScrollValue, hScrollValue]\n\n---\n*Example 1:*\n\n```sqf\n_ctrlGrp ctrlSetScrollValues [-1, 0.5];\n```\n\n*Example 2:*\n\n```sqf\n// ControlsGroup\nprivate _disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nprivate _ctrlGrp = _disp ctrlCreate [\"RscControlsGroup\", -1];\nprivate _ctrl = _disp ctrlCreate [\"RscTree\", -1, _ctrlGrp];\n_ctrl tvAdd [[], \"Root\"];\nfor \"_i\" from 1 to 25 do\n{\n\t_ctrl tvAdd [[0], format [\"Tree Item %1\", _i]];\n};\n_ctrl ctrlSetPosition [0,0,0.3,1.2];\n_ctrl ctrlCommit 0;\ntvExpandAll _ctrl;\n_ctrlGrp ctrlSetPosition [0,0,0.2,0.3];\n_ctrlGrp ctrlCommit 0;\n \nuiNamespace setVariable [\"_ctrl\", _ctrlGrp];\nonEachFrame\n{\n\thintSilent str ctrlScrollValues (uiNamespace getVariable [\"_ctrl\", controlNull]);\n};\n[] spawn\n{\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.3, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.3];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [0.7, -1];\n\tsleep 1;\n\tuiNamespace getVariable [\"_ctrl\", controlNull] ctrlSetScrollValues [-1, 0.7];\n};\n```","commands\\ctrlSetShadow.md":"Sets 'shadow' property of the control:\n* 0 - no shadow\n* 1 - shadow\n* 2 - outline\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetShadow` shadow\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetShadow 1;\n```","commands\\ctrlSetStructuredText.md":"Set the `Structured Text` which will be displayed in [[DialogControls-Text#CT_STRUCTURED_TEXT.3D13|structured text control]].\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetStructuredText` structuredText\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetStructuredText parseText \"First line<img image=data\\isniper.paa /><br />Second line\"\n```\n\n*Example 2:*\n\nTo adjust text vertically, add extra line above with blank space (&amp;#160;) and set its size accordingly:\n\n```sqf\nwith uiNamespace do {\n\tbutton = findDisplay 46 ctrlCreate [\"RscShortcutButton\", -1];\n\tbutton ctrlSetPosition [0,0,0.3,0.1];\n\tbutton ctrlCommit 0;\n\tbutton ctrlSetStructuredText parseText \n\t\"<t size='0.5'>&#160;</t><br/><t size='1' align='center'>Button Text&#160;&#160;</t>\";\n};\n```\n\n*Example 3:*\n\nThere is a bug with **valign** that requires adding 1 extra trailing space per line to the displayed text in order to keep it centered horizontally:\n\n```sqf\ndisableSerialization;\nprivate _ctrl = findDisplay 46 ctrlCreate [\"RscStructuredText\", -1];\n_ctrl ctrlSetPosition [0, 0, 0.5, 0.5];\n_ctrl ctrlSetBackgroundColor [0, 0, 0, 1];\n_ctrl ctrlCommit 0;\nprivate _lineHeight = getNumber (configFile >> \"RscStructuredText\" >> \"size\");\nprivate _linesTotal = (ctrlPosition _ctrl select 2) / _lineHeight;\nprivate _trailingSpace = \"\";\nfor \"_i\" from 1 to _linesTotal do { _trailingSpace = _trailingSpace + \" \" };\n_ctrl ctrlSetStructuredText parseText format [\"<t size='%1'><t size='1' align='center' valign='middle'>%2%3</t> </t>\", _linesTotal, \"------ Centered Text ------\", _trailingSpace];\n```","commands\\ctrlSetText.md":"Sets the text of a control of the currently active user dialog or display. This command can be used for static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.\n<br>Read `Arma: GUI Configuration` for more information about user dialogs and controls.\n<br>Use `endl` to insert line breaks.\nSince Arma 3 v2.05.147765 supported control types are:\n* `CT_STATIC`\n* `CT_EDIT`\n* `CT_XKEYDESC`\n* `CT_XBUTTON`\n* `CT_SHORTCUTBUTTON`\n* `CT_STRUCTURED_TEXT`\n* `CT_BUTTON`\n* `CT_ACTIVETEXT`\n\n\n---\n*Syntaxes:*\n\n`ctrlSetText` [idc, text]\n\ncontrol `ctrlSetText` text\n\n---\n*Example 1:*\n\n```sqf\nctrlSetText [100, \"Hello world\"]; // for Dialogs\n```\n\n*Example 2:*\n\n```sqf\n_control ctrlSetText \"Hello world.\"; // for Displays\n```","commands\\ctrlSetTextColor.md":"Sets text color of given control. Color is in format `Color (RGBA)`. As of Arma 3 v1.40 this command can also be used to change fill-color of a `CT_PROGRESS` control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetTextColor` color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetTextColor [1, 0, 0, 1];\n```","commands\\ctrlSetTextColorSecondary.md":"Sets the secondary text color of a text control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetTextColorSecondary` color\n\n---\n*Example 1:*\n\n```sqf\n_ctrlText ctrlSetTextColorSecondary [1, 0.5, 0.1, 0.5];\n```","commands\\ctrlSetTextSecondary.md":"Sets the secondary text of a text control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetTextSecondary` text\n\n---\n*Example 1:*\n\n```sqf\n_ctrlText ctrlSetTextSecondary \"Hello World!\";\n```","commands\\ctrlSetTextSelection.md":"Selects **length}} characters of edit control from the {{hl|start** position and places cursor at the end of selection.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetTextSelection` [start, length]\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetTextSelection [5, 10];\n```\n\n*Example 2:*\n\n```sqf\ndisableSerialization;\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscEditMulti\", -1];\n_ctrl ctrlSetPosition [0,0,0.5,0.3];\n_ctrl ctrlCommit 0;\n_ctrl ctrlSetText \"Hello World\";\n_ctrl ctrlSetTextSelection [6, 5]; // selects World\nctrlSetFocus _ctrl;\n```\n\n*Example 3:*\n\nSelect text from right to left:\n\n```sqf\n_control ctrlSetTextSelection [5, -4];\n```","commands\\ctrlSetTooltip.md":"Sets tooltip text of given control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetTooltip` text\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetTooltip \"tooltip\";\n```\n\n*Example 2:*\n\n```sqf\nfindDisplay 10000 displayCtrl 10001 ctrlSetTooltip \"ThisIsAGoodTip\";\n```\n\n*Example 3:*\n\n```sqf\nwith uiNamespace do \n{\n\tbar = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscProgress\", -1];\n\tbar ctrlSetPosition [0,0,1,0.01];\n\tbar ctrlCommit 0;\n\tbar progressSetPosition 0.75;\n\tbar ctrlSetTooltip \"lalalalalalalala\";\n};\n```","commands\\ctrlSetTooltipColorBox.md":"Sets tooltip border color of given control.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetTooltipColorBox`  color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetTooltipColorBox [1, 0, 0, 1];\n```","commands\\ctrlSetTooltipColorShade.md":"Sets tooltip background color of given control. Color is in format `Color (RGBA)`.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetTooltipColorShade` color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetTooltipColorShade [1, 0, 0, 1];\n```","commands\\ctrlSetTooltipColorText.md":"Sets tooltip text color of given control. Color is in format `Color (RGBA)`.\n\n\n---\n*Syntaxes:*\n\ndisplay `ctrlSetTooltipColorText` color\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetTooltipColorText [1, 0, 0, 1];\n```","commands\\ctrlSetTooltipMaxWidth.md":"Set maximum width of a control's tooltip.\n\n\n---\n*Syntaxes:*\n\nctrl `ctrlSetTooltipMaxWidth` width\n\n---\n*Example 1:*\n\n```sqf\nprivate _previousMaxWidth = _myControl ctrlSetTooltipMaxWidth (SafeZoneW / 2);\n```","commands\\ctrlSetURL.md":"Sets URL property of the given control subject to **allowedHTMLLoadURIs[]** whitelisting in `CfgCommands` config. Supported controls are:\n* **CT_BUTTON**\n* **CT_SHORTCUTBUTTON** \n* **CT_ACTIVETEXT**\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetURL` URL\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetURL \"http://arma3.com/\";\n```","commands\\ctrlSetURLOverlayMode.md":"Sets how to handle opening of URL, default browser ot Steam overlay. Possible values:\n* 0 - default browser\n* 1 - Steam overlay if enabled, otherwise default browser \n* 2 - Steam overlay, shows error message box if disabled (the box has a button to continue with default browser)\n\n\n---\n*Syntaxes:*\n\ncontrol `ctrlSetURLOverlayMode` mode\n\n---\n*Example 1:*\n\n```sqf\n_control ctrlSetURLOverlayMode 1;\n```","commands\\ctrlShadow.md":"Returns 'shadow' property of the control (see `ctrlSetShadow`).\n\n\n---\n*Syntaxes:*\n\n`ctrlShadow` control\n\n---\n*Example 1:*\n\n```sqf\n_shadow = ctrlShadow _control;\n```","commands\\ctrlShow.md":"Shows or hides a control. Read `Arma: GUI Configuration` for more information about user dialogs and controls.\n\n\n---\n*Syntaxes:*\n\n`ctrlShow` [idc, show]\n\ncontrolName `ctrlShow` show\n\n---\n*Example 1:*\n\n```sqf\nctrlShow [100, false];\n```\n\n*Example 2:*\n\n```sqf\n_control ctrlShow false;\n```","commands\\ctrlShown.md":"Returns whether given control is shown.\n\n\n---\n*Syntaxes:*\n\n`ctrlShown` controlName\n\n---\n*Example 1:*\n\n```sqf\n_bool = ctrlShown _ctrl;\n```","commands\\ctrlStyle.md":"Returns the provided control's style. See *(Reference HashLink \"Arma: GUI Configuration#Control Styles\")*.\n\n\n---\n*Syntaxes:*\n\n`ctrlStyle` control\n\n---\n*Example 1:*\n\n```sqf\nprivate _ctrlStyle = ctrlStyle _myControl;\n\nprivate _bitFlags = _ctrlStyle call BIS_fnc_bitflagsToArray;\nif (2 in _bitFlags) then\n{\n\thint \"This control has centered text!\";\n};\n```","commands\\ctrlText.md":"Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path. Does not work on HTML control and returns empty string \"\". Since Arma 3 v2.05.147765 supported control types are:\n* `CT_STATIC`\n* `CT_EDIT`\n* `CT_XKEYDESC`\n* `CT_XBUTTON`\n* `CT_SHORTCUTBUTTON`\n* `CT_STRUCTURED_TEXT`\n* `CT_BUTTON`\n* `CT_ACTIVETEXT`\n\n\n---\n*Syntaxes:*\n\n`ctrlText`  idc\n\n`ctrlText`  controlName\n\n---\n*Example 1:*\n\n```sqf\n_text = ctrlText 100;\n```\n\n*Example 2:*\n\n```sqf\n_text = ctrlText _control;\n```","commands\\ctrlTextColor.md":"Returns control's text color in `Color (RGBA)` format (see `ctrlSetTextColor`).\n\n\n---\n*Syntaxes:*\n\n`ctrlTextColor` control\n\n---\n*Example 1:*\n\n```sqf\nctrlTextColor _control;\n```","commands\\ctrlTextHeight.md":"Returns the control text height. Supported control `types` are:\n* `CT_STATIC`\n* `CT_STRUCTURED_TEXT`\n* `CT_EDIT` \nSince Arma 3 v2.05.147765 control types added:\n* `CT_XKEYDESC`\n* `CT_XBUTTON`\n* `CT_SHORTCUTBUTTON`\n* `CT_BUTTON`\n* `CT_ACTIVETEXT`\n\n\n---\n*Syntaxes:*\n\n`ctrlTextHeight`  control\n\n---\n*Example 1:*\n\n```sqf\n_h = ctrlTextHeight _ctrl;\n```","commands\\ctrlTextSecondary.md":"Returns the secondary text of a text control.\n\n\n---\n*Syntaxes:*\n\n`ctrlTextSecondary` control\n\n---\n*Example 1:*\n\n```sqf\n_secondaryText = ctrlTextSecondary _ctrlText;\n```","commands\\ctrlTextSelection.md":"Returns edit control text selection in format [start, length, selectedText].\n\n\n---\n*Syntaxes:*\n\n`ctrlTextSelection` control\n\n---\n*Example 1:*\n\nSelection is made from left to right:\n\n```sqf\nctrlTextSelection _control; //[0, 11, \"Hello World\"];\n```\n\n*Example 2:*\n\nSelection is made from right to left:\n\n```sqf\nctrlTextSelection _control; //[11, -11, \"Hello World\"];\n```\n\n*Example 3:*\n\nFind cursor position:\n\n```sqf\nctrlTextSelection _control params [\"_start\", \"_length\"];\nprivate _cursorPos = _start + _length;\n```","commands\\ctrlTextWidth.md":"Returns the width of the control text including left and right margins (0.008 each). Supported control `types` are:\n{{Columns|2|\n* `CT_STATIC` 0\n* `CT_EDIT` 2\n* `CT_STRUCTURED_TEXT` 13\n* {{GVI|arma3|2.06\n\n\n---\n*Syntaxes:*\n\n`ctrlTextWidth` control\n\n---\n*Example 1:*\n\n```sqf\nprivate _w = ctrlTextWidth _ctrl;\n```","commands\\ctrlTooltip.md":"Returns the tooltip property of a button control. Getter for `ctrlSetTooltip`.\n\n\n---\n*Syntaxes:*\n\n`ctrlTooltip` control\n\n---\n*Example 1:*\n\n```sqf\nctrlTooltip _control;\n```","commands\\ctrlType.md":"Returns number representing the type of control, which is also defined by `type` property in config. For more information see `Arma: GUI Configuration`\n\n\n---\n*Syntaxes:*\n\n`ctrlType` control\n\n---\n*Example 1:*\n\n```sqf\n_type = ctrlType _rscEdit; // 2\n```","commands\\ctrlURL.md":"Returns the URL property of a button control. Getter for `ctrlSetURL`.\n\n\n---\n*Syntaxes:*\n\n`ctrlURL` control\n\n---\n*Example 1:*\n\n```sqf\nprivate _ctrlUrl = ctrlURL _control; // e.g. \"http://arma3.com/\"\n```","commands\\ctrlURLOverlayMode.md":"Returns the URL overlay mode 0, 1, 2 (see `ctrlSetURLOverlayMode`) or -1 if something went wrong.\n\n\n---\n*Syntaxes:*\n\n`ctrlURLOverlayMode` control\n\n---\n*Example 1:*\n\n```sqf\n_mode = ctrlURLOverlayMode _control; // e.g. 0\n```","commands\\ctrlVisible.md":"Returns if a control of the currently active user dialog is shown or not. Read `Arma: GUI Configuration` for more information about user dialogs and controls.\n\n\n---\n*Syntaxes:*\n\n`ctrlVisible`  idc\n\n---\n*Example 1:*\n\n```sqf\n_bool = ctrlVisible 100;\n```","commands\\ctRowControls.md":"Returns array of controls on the row with the given index.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctRowControls` index\n\n---\n*Example 1:*\n\n```sqf\n_array = _control ctRowControls 0;\n```","commands\\ctRowCount.md":"Returns number of rows (headers not included) in the RscControlsTable.\n\n\n---\n*Syntaxes:*\n\n`ctRowCount` control\n\n---\n*Example 1:*\n\n```sqf\nctRowCount _control;\n```","commands\\ctSetCurSel.md":"Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctSetCurSel` index\n\n---\n*Example 1:*\n\n```sqf\n_control ctSetCurSel 0;\n```","commands\\ctSetData.md":"Associates metadata (string) with the row determined by the index. Returns Nothing.\n\n\n---\n*Syntaxes:*\n\nctrl `ctSetData` [index, data]\n\n---\n*Example 1:*\n\n```sqf\n_control ctSetData [0, \"Test\"];\n```","commands\\ctSetHeaderTemplate.md":"Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctSetHeaderTemplate` config\n\n---\n*Example 1:*\n\n```sqf\n_control ctSetHeaderTemplate _configPath;\n```","commands\\ctSetRowTemplate.md":"Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).\n\n\n---\n*Syntaxes:*\n\ncontrol `ctSetRowTemplate` config\n\n---\n*Example 1:*\n\n```sqf\n_control ctSetRowTemplate _configPath;\n```","commands\\ctSetValue.md":"Associates metadata (number) with the row determined by the index. Returns Nothing.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctSetValue` [index, value]\n\n---\n*Example 1:*\n\n```sqf\n_control ctSetValue [0, 23];\n```","commands\\ctValue.md":"Returns metadata (number) associated with a particular row of RscControlsTable.\n\n\n---\n*Syntaxes:*\n\ncontrol `ctValue` index\n\n---\n*Example 1:*\n\n```sqf\n_number = _control ctValue 0;\n```","commands\\curatorAddons.md":"Returns list of addons allowed to given curator. The addon names are not guaranteed to be all lower case\n\n\n---\n*Syntaxes:*\n\n`curatorAddons` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nprivate _addons = curatorAddons myCurator;\n```","commands\\curatorCamera.md":"Returns curator camera object.\n\n\n---\n*Syntaxes:*\n\n`curatorCamera`\n\n---\n*Example 1:*\n\n```sqf\n_camCurator = curatorCamera;\n```","commands\\curatorCameraArea.md":"Returns all curator camera areas.\n\n\n---\n*Syntaxes:*\n\n`curatorCameraArea` curatorObj\n\n---\n*Example 1:*\n\n```sqf\n_camArea = curatorCameraArea myCurator; // [[8052,[4027.36,4024.89,0],250]]\n```","commands\\curatorCameraAreaCeiling.md":"Returns ceiling height for curator camera.\n\n\n---\n*Syntaxes:*\n\n`curatorCameraAreaCeiling` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nprivate _height = curatorCameraAreaCeiling BIS_curatorUnit;\n```","commands\\curatorCoef.md":"Returns current coeficient setting.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `curatorCoef` action\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule curatorCoef \"Place\";\n```","commands\\curatorEditableObjects.md":"Returns all editable objects which belong to a curator.\n\n\n---\n*Syntaxes:*\n\n`curatorEditableObjects` curatorObj\n\n---\n*Example 1:*\n\n```sqf\n_objects = curatorEditableObjects myCurator;\n```","commands\\curatorEditingArea.md":"Returns all curator editing areas.\n\n\n---\n*Syntaxes:*\n\n`curatorEditingArea` curator\n\n---\n*Example 1:*\n\n```sqf\n_editingAreas = curatorEditingArea myCurator;\n```","commands\\curatorEditingAreaType.md":"Returns type of edit areas assigned to curator (blacklist/whitelist).\n\n\n---\n*Syntaxes:*\n\n`curatorEditingAreaType` curator\n\n---\n*Example 1:*\n\n```sqf\n_isBlacklist = curatorEditingAreaType _curator;\n```","commands\\curatorMouseOver.md":"Returns `Curator Editable Object` under curator mouse pointer.\n\n\n---\n*Syntaxes:*\n\n`curatorMouseOver`\n\n---\n*Example 1:*\n\n```sqf\n_mouseOver = curatorMouseOver; // Possible return value: [\"OBJECT\", 3594ab00# 164218: apc_wheeled_01_cannon_f.p3d]\n```","commands\\curatorPoints.md":"Returns number of points that curator have. Points can be only in range from 0 to 1.\n\n\n---\n*Syntaxes:*\n\n`curatorPoints` curatorObj\n\n---\n*Example 1:*\n\n```sqf\n_points = curatorPoints myCurator;\n```","commands\\curatorRegisteredObjects.md":"Returns array with all objects that has curator registered and their settings.\n\n\n---\n*Syntaxes:*\n\n`curatorRegisteredObjects` curator\n\n---\n*Example 1:*\n\n```sqf\ncuratorRegisteredObjects _curatorModule;\n```","commands\\curatorSelected.md":"Returns list of all curator selected items.\n\n\n---\n*Syntaxes:*\n\n`curatorSelected`\n\n---\n*Example 1:*\n\n```sqf\nselectedItems = curatorSelected;\n```","commands\\curatorWaypointCost.md":"Return current price for placing waypoints (curator specific).\n\n\n---\n*Syntaxes:*\n\n`curatorWaypointCost` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nvar_wpcost = curatorWaypointCost bis_curator;\n```","commands\\current3DENOperation.md":"Returns the currently performed editing operation in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[[current3DENOperation]]\n\n---\n*Example 1:*\n\n```sqf\nif (current3DENOperation == \"Move\") then {hint \"Moving\";};\n```","commands\\currentChannel.md":"Returns currently selected user chat channel on the UI (selected with < and > in MP).\n\nFor Custom Radio, see `radioChannelCreate`.\n\n\n---\n*Syntaxes:*\n\n`currentChannel`\n\n---\n*Example 1:*\n\n```sqf\n_selected = currentChannel; // 3 - for example for the Group\n```","commands\\currentCommand.md":"Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier). Returned value can be one of:\n{{Columns|4|\n* \"WAIT\"\n* \"ATTACK\"\n* \"HIDE\"\n* \"MOVE\"\n* \"HEAL\"\n* \"REPAIR\"\n* \"REFUEL\"\n* \"REARM\"\n* \"SUPPORT\"\n* \"JOIN\"\n* \"GET IN\"\n* \"FIRE\"\n* \"GET OUT\"\n* \"STOP\"\n* \"EXPECT\"\n* \"ACTION\"\n* \"ATTACKFIRE\"\n* \"Suppress\"\n}}\n\n\n---\n*Syntaxes:*\n\n`currentCommand` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_command = currentCommand player;\n```","commands\\currentMagazine.md":"Returns class name of currently loaded vehicle's / unit's magazine.\n\n\n---\n*Syntaxes:*\n\n`currentMagazine` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_magazineClass = currentMagazine player;//Example: \"30Rnd_545x39_AK\"\n```","commands\\currentMagazineDetail.md":"Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.\n\n\n---\n*Syntaxes:*\n\n`currentMagazineDetail` object\n\n---\n*Example 1:*\n\n```sqf\n_currentMagazineDetail = currentMagazineDetail player; // \"6.5mm 30Rnd STANAG Mag(30/30)[id:0]\"\n```\n\n*Example 2:*\n\n```sqf\n_currentMagazineDetail = currentMagazineDetail Mi_48; // \"30mm HE Shells(250/250)[id:21]\n```\n\n*Example 3:*\n\n```sqf\n_cmd = currentMagazineDetail player; // \"9mm 16Rnd Mag(13/16)[id/cr:10000011/0]\"\n_cmd splitString \"([ ]/:)\"; // [\"9mm\",\"16Rnd\",\"Mag\",\"13\",\"16\",\"id\",\"cr\",\"10000011\",\"0\"]\n```","commands\\currentMagazineDetailTurret.md":"Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".\n\n\n---\n*Syntaxes:*\n\nvehicle `currentMagazineDetailTurret` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];\n```","commands\\currentMagazineTurret.md":"Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".\n\n\n---\n*Syntaxes:*\n\nvehicle `currentMagazineTurret` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_magazine = MBT_Kuma currentMagazineTurret [0];\n```","commands\\currentMuzzle.md":"Returns a unit's current weapon muzzle. Does not work on vehicles.\n\n\n---\n*Syntaxes:*\n\n`currentMuzzle` unit\n\n---\n*Example 1:*\n\n```sqf\n_muzzle = currentMuzzle player;\n```\n\n*Example 2:*\n\n```sqf\n_muzzle = currentMuzzle (gunner (vehicle player));\n```","commands\\currentNamespace.md":"Returns current `global namespace` the script runs in. Could be one of the following:\n* `missionNamespace`\n* `uiNamespace`\n* `parsingNamespace`\n* `profileNamespace`\n* `localNamespace` (since Arma 3 v2.00)\n\n\n---\n*Syntaxes:*\n\n`currentNamespace`\n\n---\n*Example 1:*\n\n```sqf\nif (currentNamespace isEqualTo uiNamespace) then {hint \"This is uiNamespace\"};\n```\n\n*Example 2:*\n\nQuick function to get namespace name\n```sqf\n_fn_currentNamespace = {\n\tif (currentNamespace isEqualTo missionNamespace) exitWith {\"missionNamespace\"};\n\tif (currentNamespace isEqualTo parsingNamespace) exitWith {\"parsingNamespace\"};\n\tif (currentNamespace isEqualTo profileNamespace) exitWith {\"profileNamespace\"};\n\tif (currentNamespace isEqualTo uiNamespace) exitWith {\"uiNamespace\"};\n};\n\nwith profileNamespace do {\n\tsystemChat call _fn_currentNamespace;\t// profileNamespace\n};\nsystemChat call _fn_currentNamespace;\t\t// missionNamespace\nwith uiNamespace do {\n\tsystemChat call _fn_currentNamespace;\t// uiNamespace\n};\n```","commands\\currentPilot.md":"Returns the person piloting the vehicle. If co-pilot is piloting, co-pilot is returned. If you need current pilot of a UAV or UGV, see `UAVControl` command.\n\n\n---\n*Syntaxes:*\n\n`currentPilot` vehicle\n\n---\n*Example 1:*\n\n```sqf\nif (currentPilot _vehicle != driver _vehicle) then\n{\n\thint \"The pilot is not piloting!\";\n};\n```","commands\\currentTask.md":"Return current task of given person.\n\n\n---\n*Syntaxes:*\n\n`currentTask` person\n\n---\n*Example 1:*\n\n```sqf\n_currTask = currentTask player;\n```","commands\\currentTasks.md":"Returns array with all ` uncompleted` tasks for the given agent.\n`getVariable` could be used on `Task` to get the following special local variables from the task:\n* **\"_this\"** `Team Member` - the `teamMember` `agent` the task is assigned to\n* **\"_taskType\"** `String` - the name of the task (see `registeredTasks`)\n* **\"_thisCreated\"** `Number` - 1 or 0\n* **\"_thisRunning\"** `Number` - 1 or 0\n* **\"_totalCreated\"** `Number` - total number of tasks\n* **\"_totalRunning\"** `Number` - total number of running tasks\n* **\"_task\"**`Task` - often null\n\n\n---\n*Syntaxes:*\n\n`currentTasks` teamMember\n\n---\n*Example 1:*\n\n```sqf\ncurrentTasks teamMember _agent;\n```","commands\\currentThrowable.md":"Returns currently selected throwable, which will be launched if the user presses \"G\".\n\n\n---\n*Syntaxes:*\n\n`currentThrowable` player\n\n---\n*Example 1:*\n\n```sqf\ncurrentThrowable player; // [\"SmokeShellGreen\", \"SmokeShellGreenMuzzle\", [1.00002e+007, 0]]\n```\n\n*Example 2:*\n\n```sqf\n_ct = currentThrowable player;\t\t\t\t// [\"HandGrenade\", \"HandGrenadeMuzzle\", [1e+007, 0]]\n_id = (_ct select 2 select 0) - 1e+007;\t\t// 18\n```","commands\\currentVisionMode.md":"Returns current vision mode of unit's weapon. Vision mode could be one of:\n* 0 - normal vision\n* 1 - night vision\n* 2 - thermal vision\nAlternative syntaxes additionally return FLIR index (see `setCamUseTI`) of the thermal vision mode (See also [[Arma_3:_Event_Handlers#VisionModeChanged | \"VisionModeChanged\"]] entity event handler)\n\n\n---\n*Syntaxes:*\n\n`currentVisionMode` entity\n\n`currentVisionMode` [entity]\n\nvehicle `currentVisionMode` turretPath\n\nunit `currentVisionMode` weapon\n\n---\n*Example 1:*\n\n```sqf\n_currMode = currentVisionMode gunner _tank;\n```\n\n*Example 2:*\n\n```sqf\nif (currentVisionMode player == 1) then\n{\n\thint \"nightvision active\";\n};\n```","commands\\currentWaypoint.md":"Returns the `index` of the current waypoint contrary to misleading name.\n\nTo determine the validity of the index, compare it to the waypoints count.\n\nIf all waypoints are completed, then the index is 1 greater than the last valid index.\n\nIf there are no waypoints, then the index is 0.\n\nBy default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.\n\n\n---\n*Syntaxes:*\n\n`currentWaypoint`  groupName\n\n---\n*Example 1:*\n\n```sqf\n_index = currentWaypoint group player;\n```","commands\\currentWeapon.md":"Return the name of the currently selected weapon (on the primary turret for vehicles).\n\n\n---\n*Syntaxes:*\n\n`currentWeapon` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_weaponClass = currentWeapon (vehicle player);//Example: \"M16A2GL\"\n```\n\n*Example 2:*\n\n```sqf\n_weaponClass = currentWeapon player;\n```","commands\\currentWeaponMode.md":"Returns current weapon mode of unit's weapon. Result can be: \"Single\", \"Burst\", \"FullAuto\", \"manual\", \"player\"\n\n\n---\n*Syntaxes:*\n\n`currentWeaponMode` gunner\n\n---\n*Example 1:*\n\n```sqf\n_weaponMode = currentWeaponMode player;\n```\n\n*Example 2:*\n\n```sqf\n_weaponMode = currentWeaponMode gunner vehicle player;\n```","commands\\currentWeaponTurret.md":"Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `currentWeaponTurret` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_weapon = MBT_Kuma currentWeaponTurret [0];\n```","commands\\currentZeroing.md":"Returns current zeroing.\n\n\n---\n*Syntaxes:*\n\n`currentZeroing` object\n\nobject `currentZeroing` [weaponClass, muzzleClass]\n\n---\n*Example 1:*\n\n```sqf\nprivate _zeroing = currentZeroing player;\n```\n\n*Example 2:*\n\n```sqf\n(player currentZeroing [\"arifle_MX_GL_F\", \"GL_3GL_F\"]) params [\"_distance\", \"_zeroingIndex\"];\n```","commands\\cursorObject.md":"Returns the object under cursor. This command is quite different from `cursorTarget` as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.\n\n\n---\n*Syntaxes:*\n\n`cursorObject`\n\n---\n*Example 1:*\n\n```sqf\nhint str [getModelInfo cursorObject, typeOf cursorObject];\n```","commands\\cursorTarget.md":"Returns the target pointed at by the player (usually with cross-hairs). The target has to be known to the player to some degree (`knowsAbout` > 0). If target is completely unknown, command returns `objNull`.\n<br><br>A valid target could belong to an enemy or a friendly side. Buildings are normally known to player and so are valid targets. Try `nearTargets` to see what else is considered a target. While friendly targets are usually known to the player, enemy targets can be totally unknown, especially if \"auto-spotting\" (or sometimes called \"auto-reporting\") is switched off. To check if auto-spotting is enabled:**`difficultyEnabled` \"autospot\"**\n<br><br>`cursorTarget` also returns locked target for the duration of the lock even if there is another target under the cursor. As soon as missile is fired, `cursorTarget` switches to current known target under cursor or `objNull`. Targeting (currently \"T\" in Arma 3) works regardless of the state of \"auto-spotting\".\n<br><br>Adding a target to the known list could be done with `reveal` command. When auto-spotting is enabled, zooming on the enemy target with cross-hairs usually reveals the target. As friendly targets are always known, zooming on friendly target could improve `knowsAbout` value.\n<br><br>`Side relations` can also influence target knowledge. For example `east` target is unknown target for `civilian`, but making them friends with `setFriend` instantly improves `civilian` knowledge of the `east`.\n\n\n---\n*Syntaxes:*\n\n`cursorTarget`\n\n---\n*Example 1:*\n\n```sqf\nalive cursorTarget;\n```","commands\\customChat.md":"Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with `radioChannelCreate` command.\n\n\n---\n*Syntaxes:*\n\nunit `customChat` [customChannelID, message]\n\n---\n*Example 1:*\n\n```sqf\n_unit customChat [1, \"Hi, I am a custom chat message\"];\n```\n\n*Example 2:*\n\n```sqf\ndriver vehicle player sideChat \"sideChat\";\ndriver vehicle player globalChat \"globalChat\";\ndriver vehicle player groupChat \"groupChat\";\nvehicle player vehicleChat \"vehicleChat\";\ndriver vehicle player commandChat \"commandChat\";\ndriver vehicle player customChat [1, \"customChat\"];\nsystemChat \"systemChat\";\n```","commands\\customRadio.md":"Sends the message to the custom radio channel. The message is defined in the `description.ext` file or radio protocol.\n\n\n---\n*Syntaxes:*\n\nunit `customRadio` [customChannelID, message]\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne customRadio [1, \"WordEnemy\"];\n```","commands\\customWaypointPosition.md":"Returns player's custom waypoint (LShift + LMB) position or an empty array **[]** if no custom waypoint exists.\n\n\n---\n*Syntaxes:*\n\n`customWaypointPosition`\n\n---\n*Example 1:*\n\n```sqf\nif (customWaypointPosition isNotEqualTo []) then\n{\n\thint format [\"You are %1m away from your custom waypoint.\", round (player distance customWaypointPosition)];\n};\n```","commands\\cutFadeOut.md":"Terminates the effect in the given layer by fading it out according to the given duration. If named layer is used and it doesn't exist, it will be allocated. For title layer see `titleFadeOut`.\n\n\n---\n*Syntaxes:*\n\nlayer `cutFadeOut`  duration\n\nlayerName `cutFadeOut`  duration\n\n---\n*Example 1:*\n\n```sqf\n0 cutFadeOut 2;\n```\n\n*Example 2:*\n\n```sqf\nprivate _layer = \"layer1\" cutFadeOut 2;\n```","commands\\cutObj.md":"Displays an object defined in the global config in **CfgTitles**.\n\n\n---\n*Syntaxes:*\n\n`cutObj` [class, type, speed, showInMap]\n\nlayer `cutObj` [class, type, speed, showInMap]\n\nlayerName `cutObj` [class, type, speed, showInMap]\n\n---\n*Example 1:*\n\n```sqf\ncutObj [\"TVSet\", \"PLAIN\"];\ncutObj [\"TVSet\", \"PLAIN\", 2]\n```\n\n*Example 2:*\n\n```sqf\n2 cutObj [\"Sphere\", \"PLAIN\"];\n```\n\n*Example 3:*\n\n```sqf\nprivate _layer = \"layer1\" cutObj [\"BISLogo\", \"PLAIN\"];\n```","commands\\cutRsc.md":"Display a resource defined in RscTitles of the mission's `Description.ext`, the campaign's description.ext or the global config.\n\n\n---\n*Syntaxes:*\n\n`cutRsc` [class, effect, speed, showInMap]\n\nlayer `cutRsc` [class, effect, speed, showInMap]\n\n---\n*Example 1:*\n\n```sqf\ncutRsc [\"binocular\", \"PLAIN\"];\ncutRsc [\"binocular\", \"PLAIN\", 2];\ncutRsc [\"binocular\", \"PLAIN\", 2, false];\n```\n\n*Example 2:*\n\n```sqf\n2 cutRsc [\"binocular\", \"PLAIN\", 2];\n```\n\n*Example 3:*\n\n```sqf\n_layer = \"layer1\" cutRsc [\"binocular\", \"PLAIN\", 2];\n```\n\n*Example 4:*\n\n```sqf\n// create IGUI display\n// such display can be closed with closeDisplay command or by overwriting the same cut layer with another output.\n// note that \"Unload\" EH for some reason does not work with such display.\n\"someLayer\" cutRsc [\"RscTitleDisplayEmpty\", \"PLAIN\"];\nprivate _display = uiNamespace getVariable \"RscTitleDisplayEmpty\";\n```","commands\\cutText.md":"Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters: <sqf inline>cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];\n```\n\n\n---\n*Syntaxes:*\n\n`cutText` [text, type, speed, showInMap, isStructuredText]\n\nlayer `cutText` [text, type, speed, showInMap, isStructuredText]\n\n---\n*Example 1:*\n\n```sqf\ncutText [\"\", \"BLACK OUT\"];\ncutText [\"Hello World!\", \"PLAIN\", 2];\n```\n\n*Example 2:*\n\n```sqf\n2 cutText [\"Hello World!\", \"PLAIN\", 2]; // returns nothing\n```\n\n*Example 3:*\n\n```sqf\nprivate _layer1 = \"normal\" cutText [\"In The Centre\", \"PLAIN\"];\nprivate _layer2 = \"down\" cutText [\"At The Bottom\", \"PLAIN DOWN\"];\n```\n\n*Example 4:*\n\n```sqf\ncutText [\"<t color='#ff0000' size='5'>RED ALERT!</t><br/>***********\", \"PLAIN\", -1, true, true];\n```","commands\\damage.md":"Return the damage value of an object.\n\n\n---\n*Syntaxes:*\n\n`damage` object\n\n---\n*Example 1:*\n\n<sqs>? damage player > 0.1 : player groupChat \"I'm hurt! Medic!\" // SQS</sqs>\n\n*Example 2:*\n\n```sqf\nif (damage player > 0.1) then\n{\n\tplayer groupChat \"I'm hurt! Medic!\";\n};\n```\n\n*Example 3:*\n\n```sqf\nprivate _health = (1 - damage player) * 100; // health in % from 0 to 100\n```","commands\\date.md":"Return the actual in-mission date and time.\n\n\n---\n*Syntaxes:*\n\n`date`\n\n---\n*Example 1:*\n\n```sqf\n// in Arma 3\ndate params [\"_year\", \"_month\", \"_day\", \"_hours\", \"_minutes\"];\n\n// pre Arma 3\n_now = date;\t// [2014,10,30,2,30] a.k.a Oct. 30th, 2:30am\n_year\t\t= _now select 0;\n_month\t\t= _now select 1;\n_day\t\t= _now select 2;\n_hours\t\t= _now select 3;\n_minutes\t= _now select 4;\n```\n\n*Example 2:*\n\n```sqf\nif (date select 3 >= 19) then\t\t// 7pm\n{\n\thintSilent \"ah, Arma sunset\";\t// ...cue bad guys\n};\n```","commands\\dateToNumber.md":"Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st  23:59:59 = 1. The same day and time in leap year will be different after 28th of February and 23:59 on 31st of December will be 1.00274.<br><br>\nThis is how this command works. The 365 days of the year are presented in range 0...1. So each day will be:\n\n```sqf\n1 / 365 = 0.00273973\n```\nIn a leap year there are 366 days, so the range will increase by 1 day:\n\n```sqf\n1 / 365 * 366 = 1.00274\n```\nIn short, in a normal year the command returns in range 0...1 in a leap year it will return in range 0...1.00274.\n\n\n---\n*Syntaxes:*\n\n`dateToNumber` date\n\n---\n*Example 1:*\n\n```sqf\n_float = dateToNumber [2035,7,6,12,0]; // 0.510959\n```\n\n*Example 2:*\n\n```sqf\ndateToNumber date; // returns float number for the current date\n```\n\n*Example 3:*\n\nCalculate days from 1/1/1970:\n\n```sqf\nfnc_daysFromEpoc = \n{\n\tprivate _year = param [0];\n\tprivate _days = 0;\n\tfor \"_i\" from 1970 to _year - 1 do \n\t{\n\t\t_days = _days + round linearConversion [0, 1, dateToNumber [_i, 12, 31, 23, 59], 0, 365, false];\n\t};\n\t_days + linearConversion [0, 1, dateToNumber _this, 0, 365, false];\n};\n\nhint str (date call fnc_daysFromEpoc);\n```","commands\\dayTime.md":"Returns the current in-game time in hours. For a formatted version of time, see `BIS_fnc_timeToString`.\n\n\n---\n*Syntaxes:*\n\n`dayTime`\n\n---\n*Example 1:*\n\n```sqf\ndayTime; // returns 16.5 given it is 16:30 (4.30pm) in game\n```\n\n*Example 2:*\n\nGet hour, minute, seconds:\n\n```sqf\nprivate _daytime = dayTime; // assuming dayTime returns 1.66046\nprivate _hours = floor _daytime;\t\t\t\t\t\t\t\t\t\t\t//  1\nprivate _minutes = floor ((_daytime - _hours) * 60);\t\t\t\t\t\t// 39\nprivate _seconds = floor ((((_daytime - _hours) * 60) - _minutes) * 60);\t// 37\n```","commands\\deActivateKey.md":"Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the `description.ext` file of the missions.\n\n\n---\n*Syntaxes:*\n\n`deActivateKey` keyname\n\n---\n*Example 1:*\n\n```sqf\ndeActivateKey \"Mission04Key\";\n```","commands\\debriefingText.md":"Returns debriefing text of provided end.\n\n\n---\n*Syntaxes:*\n\n`debriefingText` end\n\n---\n*Example 1:*\n\n```sqf\n_deathText = debriefingText \"endDeath\";\n```","commands\\debugFSM.md":"Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version.\n\n\n---\n*Syntaxes:*\n\nFSMhandle `debugFSM` true\n\n---\n*Example 1:*\n\n-","commands\\debugLog.md":"Dump argument type and value to debugging output.\n\n\n---\n*Syntaxes:*\n\n`debugLog` anything\n\n---\n*Example 1:*\n\n```sqf\ndebugLog player;\n```","commands\\decayGraphValues.md":"Multiplies graph values by the given coefficient. The corresponding lower bound value is used instead if the product is smaller than the bound.\n\n\n---\n*Syntaxes:*\n\n`decayGraphValues` [lowerBoundValues, graphValues, coef]\n\n---\n*Example 1:*\n\n```sqf\ndecayGraphValues [[1,2,3,4,5], [1,4,9,16,25], 0.3]; // returns [1,2,3,4.8,7.5]\n```","commands\\default.md":"Defines a `Switch Type` default case - does `not` need a colon to define its block. See `switch` for more information.\n\n\n---\n*Syntaxes:*\n\n`default` a\n\n---\n*Example 1:*\n\n```sqf\nswitch (_condition) do\n{\n\tcase 1: { hint \"1\" };\n\tcase 2: { hint \"2\" };\n\tdefault { hint \"default\" }; // no colon after default\n};\n```","commands\\deg.md":"Converts given value in radians to degrees. 1 degree equals 0.01745 radians or `pi` / 180.\n\n\n---\n*Syntaxes:*\n\n`deg` value\n\n---\n*Example 1:*\n\n```sqf\n_degrees = deg 1; // Returns 57.2958\n```\n\n*Example 2:*\n\n```sqf\ndeg (2 * pi / 360); // Returns 1\n```","commands\\delete3DENEntities.md":"Delete given `entities` in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[[delete3DENEntities]]  entities\n\n---\n*Example 1:*\n\n```sqf\ndelete3DENEntities (all3DENEntities select 0); // Removes all objects\n```","commands\\deleteAt.md":"Removes array element at the given 0-based index and returns removed element (modifies the original array, just like `resize` or `set`).\n\n\n---\n*Syntaxes:*\n\narray `deleteAt` index\n\nhashMap `deleteAt` key\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,2,3];\n_rem = _arr deleteAt 1;\nhint str [_rem, _arr]; // [2, [1, 3]]\n```\n\n*Example 2:*\n\n```sqf\n_arr = [1,2,3];\n_arr deleteAt (_arr find 0); // non existent item\nhint str _arr; // [1,2,3]\n_arr deleteAt (_arr find 2); // existent item\nhint str _arr; // [1,3]\n```\n\n*Example 3:*\n\n```sqf\n_arr = [1,2,3];\n_arr deleteAt (_arr findIf {(_x % 5) == 0}); // Remove first number that's divisible by 5\nhint str _arr; // [1,2,3]\n_arr deleteAt (_arr findIf {(_x % 2) == 0}); // Remove first number that's divisible by 2\nhint str _arr; // [1,3]\n```","commands\\deleteCenter.md":"In a nutshell, this command removes gaming `Side` (see `createCenter`). If a side has >0 `Group`s it cannot be deleted. Center can only be created for: `east`, `west`, `resistance`, `civilian` and `sideLogic`, therefore only centers from the mentioned sides can be deleted.<br><br>\n`Old description:` Destroys the AI center of the given side.\n\n\n---\n*Syntaxes:*\n\n`deleteCenter` side\n\n---\n*Example 1:*\n\n```sqf\ndeleteCenter east;\n```","commands\\deleteCollection.md":"Delete a collection. As example, used with a soldier, it'll hide the ingame model.\n\n`When targetting Arma 2 1.06 or newer, use `hideObject` instead. This function is a relic from dynamic building destruction development. It is left only for compatibility with scripts created before Arma 2 1.06, and its functionality may be changed or removed in the future.`\n\n\n---\n*Syntaxes:*\n\n`deleteCollection` object\n\n---\n*Example 1:*\n\n```sqf\ndeleteCollection unitName;\n```","commands\\deleteEditorObject.md":"Delete the editor object. Requires all editor object links to be removed prior.\n\n\n---\n*Syntaxes:*\n\nmap `deleteEditorObject` object\n\n---\n*Example 1:*\n\n-","commands\\deleteGroup.md":"Destroys the given group - the group must be empty and `local` to the machine executing this command.\n\n\n---\n*Syntaxes:*\n\n`deleteGroup` group\n\n---\n*Example 1:*\n\n```sqf\ndeleteGroup _group;\n```\n\n*Example 2:*\n\n```sqf\n[_group] remoteExec [\"deleteGroup\", groupOwner _group]; // server only\n```","commands\\deleteGroupWhenEmpty.md":"Marks given group for auto-deletion when group is empty. `true` will mark the group for auto-deletion, however `false` will only unmark the group that was marked previously. Other engine group auto-deletion mechanisms in place are not affected by this.\n\n\n---\n*Syntaxes:*\n\ngroup `deleteGroupWhenEmpty` delete\n\n---\n*Example 1:*\n\n```sqf\n_group deleteGroupWhenEmpty true;\n```","commands\\deleteIdentity.md":"Deletes an identity created with `saveIdentity` from the campaign's progress file.\n\n\n---\n*Syntaxes:*\n\n`deleteIdentity`  identityName\n\n---\n*Example 1:*\n\n```sqf\n_deleted = deleteIdentity \"playerIdentity\";\n```","commands\\deleteLocation.md":"Deletes scripted location.\n\n\n---\n*Syntaxes:*\n\n`deleteLocation` location\n\n---\n*Example 1:*\n\n```sqf\ndeleteLocation myLocation;\n```","commands\\deleteMarker.md":"Destroys the given marker.\n\n\n---\n*Syntaxes:*\n\n`deleteMarker` name\n\n---\n*Example 1:*\n\n```sqf\ndeleteMarker \"Marker1\";\n```","commands\\deleteMarkerLocal.md":"Destroys the given marker.\n\n\n---\n*Syntaxes:*\n\n`deleteMarkerLocal` markerName\n\n---\n*Example 1:*\n\n```sqf\ndeleteMarkerLocal \"Marker1\";\n```","commands\\deleteRange.md":"Removes a range of array elements from the given array. Modifies the original array, just like `resize` or `set`.\n\n\n---\n*Syntaxes:*\n\narray `deleteRange` [from, count]\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,2,3,4,5,6];\n_arr deleteRange [1,4];\nhint str _arr; // [1,6]\n```","commands\\deleteResources.md":"Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive.\n\n\n---\n*Syntaxes:*\n\nteamMember `deleteResources` resources\n\n---\n*Example 1:*\n\n```sqf\nteamMember _agent deleteResources [\"Legs\"];\n```","commands\\deleteSite.md":"Removes the site.\n\n\n---\n*Syntaxes:*\n\n`deleteSite` site\n\n---\n*Example 1:*\n\n-","commands\\deleteStatus.md":"Deletes a status created with `saveStatus` from the campaign's progress file.\n\n\n---\n*Syntaxes:*\n\n`deleteStatus` statusName\n\n---\n*Example 1:*\n\n```sqf\n_deleted = deleteStatus \"playerStatus\";\n```","commands\\deleteTarget.md":"Delete a target.\n\n\n---\n*Syntaxes:*\n\n`deleteTarget` target\n\n---\n*Example 1:*\n\n```sqf\ndeleteTarget target1;\n```","commands\\deleteTeam.md":"Destroy given team.\n\n\n---\n*Syntaxes:*\n\n`deleteTeam` team\n\n---\n*Example 1:*\n\n```sqf\ndeleteTeam _team;\n```","commands\\deleteVehicle.md":"Deletes an object. Only objects inserted in the mission editor and objects created during the game's progress can be deleted by this command. Terrain objects and players cannot be deleted.\n\n\n---\n*Syntaxes:*\n\n`deleteVehicle` object\n\n---\n*Example 1:*\n\n```sqf\ndeleteVehicle _house1;\n```\n\n*Example 2:*\n\nDeleting a vehicle with crew:\n\n```sqf\n// might want to make sure that the car is local\n{ car deleteVehicleCrew _x } forEach crew car;\ndeleteVehicle car;\n```","commands\\deleteVehicleCrew.md":"Deletes a member of or the whole crew of a vehicle. Human players cannot be deleted.\n\n\n---\n*Syntaxes:*\n\nvehicle `deleteVehicleCrew` unit\n\n`deleteVehicleCrew` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_helicopter deleteVehicleCrew driver _helicopter;\n```\n\n*Example 2:*\n\nDelete entire crew:\n\n```sqf\ndeleteVehicleCrew _tank; // since v2.06\n\n{ _helicopter deleteVehicleCrew _x } forEach crew _helicopter; // before v2.06\n```","commands\\deleteWaypoint.md":"Removes the specified waypoint.\n\n\n---\n*Syntaxes:*\n\n`deleteWaypoint` [group, index]\n\n---\n*Example 1:*\n\n```sqf\ndeleteWaypoint [_grp, 2];\n```\n\n*Example 2:*\n\nBecause waypoints get immediately re-indexed when one gets deleted, delete them from last to first:\n\n```sqf\nprivate _group = group _unit;\nfor \"_i\" from count waypoints _group - 1 to 0 step -1 do\n{\n\tdeleteWaypoint [_group, _i];\n};\n```","commands\\detach.md":"Detaches previously attached with `attachTo` object.\n\n\n---\n*Syntaxes:*\n\n`detach` object\n\n---\n*Example 1:*\n\n```sqf\nobj1 attachTo [player];\ndetach obj1;\n```","commands\\detectedMines.md":"Returns an array of all mines detected by a given side\n\n\n---\n*Syntaxes:*\n\n`detectedMines` side\n\n---\n*Example 1:*\n\n```sqf\ndetectedMines west;\n```\n\n*Example 2:*\n\n```sqf\ndetectedMines side player;\n```","commands\\diag_activeMissionFSMs.md":"Returns array with active Mission FSMs. To see number of all scripts currently in the scheduler use `diag_activeScripts`.\n\n\n---\n*Syntaxes:*\n\n`diag_activeMissionFSMs`\n\n---\n*Example 1:*\n\n```sqf\n{systemChat str _x} forEach diag_activeMissionFSMs;\n```","commands\\diag_activeScripts.md":"Returns 4 element array with numbers of currently running scripts in format: [<nowiki/>`spawn`-ed, `execVM`-ed, `exec`-ed, `execFSM`-ed]\n\n\n---\n*Syntaxes:*\n\n`diag_activeScripts`\n\n---\n*Example 1:*\n\n```sqf\nhint str diag_activeScripts; //[0,0,0,1]\n```","commands\\diag_activeSQFScripts.md":"Returns information about active `SQF` scripts. To see number of all scripts currently in the scheduler use `diag_activeScripts`.\n\n\n---\n*Syntaxes:*\n\n`diag_activeSQFScripts`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn { hint str diag_activeSQFScripts; }; // displays [[\"<spawn> hint str diag_activeSQFScripts;\", \"\", true, 1]]\n```\n\n*Example 2:*\n\n```sqf\n[] spawn {\n\thint str diag_activeSQFScripts; // displays [[\"<spawn> hint str diag_activeSQFScripts;\", \"\", true, 2]]\n};\n```\n\n*Example 3:*\n\n```sqf\n[] spawn {\n\tscriptName \"aScript\";\n\thint str diag_activeSQFScripts; // displays [[\"aScript\", \"\", true, 3]]\n};\n```","commands\\diag_activeSQSScripts.md":"Returns array with active SQSs. To see number of all scripts currently in the scheduler use `diag_activeScripts`.\n\n\n---\n*Syntaxes:*\n\n`diag_activeSQSScripts`\n\n---\n*Example 1:*\n\n```sqf\n{systemChat str _x} forEach diag_activeSQSScripts;\n```","commands\\diag_allMissionEventHandlers.md":"Returns an array with all `mission event handlers`.\n\n\n---\n*Syntaxes:*\n\n`diag_allMissionEventHandlers`\n\n---\n*Example 1:*\n\n```sqf\ndiag_allMissionEventHandlers;\n/*\nreturns:\n[\n\t\"Ended\",0,\n\t\"SelectedActionPerformed\",0,\n\t\"SelectedRotorLibActionPerformed\",0,\n\t\"SelectedActionChanged\",0,\n\t\"SelectedRotorLibActionChanged\",0,\n\t\"ControlsShifted\",0,\n\t\"Draw3D\",1,\n\t\"Loaded\",0,\n\t\"HandleDisconnect\",0,\n\t\"EntityRespawned\",0,\n\t\"EntityKilled\",0,\n\t\"MapSingleClick\",0,\n\t\"HCGroupSelectionChanged\",0,\n\t\"CommandModeChanged\",0,\n\t\"PlayerConnected\",0,\n\t\"PlayerDisconnected\",0,\n\t\"TeamSwitch\",0,\n\t\"GroupIconClick\",0,\n\t\"GroupIconOverEnter\",0,\n\t\"GroupIconOverLeave\",0,\n\t\"EachFrame\",0,\n\t\"PreloadStarted\",0,\n\t\"PreloadFinished\",0,\n\t\"Map\",0,\n\t\"PlayerViewChanged\",0,\n\t\"BuildingChanged\",0,\n\t\"MPEnded\",0,\n\t\"HandleAccTime\",0,\n\t\"ExtensionCallback\",0\n]\n*/\n```","commands\\diag_captureFrame.md":"This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and captured data UI dialog appears, similar to `diag_captureSlowFrame`. This can also be executed on a dedicated Server and because a Server has no UI it will behave like `diag_captureFrameToFile`.\n\n\n---\n*Syntaxes:*\n\n`diag_captureFrame` frame\n\n---\n*Example 1:*\n\n```sqf\ndiag_captureFrame 1; // capture the first frame after command execution\n```\n\n*Example 2:*\n\n```sqf\ndiag_captureFrame 24; // capture 24th frame after command execution\n```","commands\\diag_captureFrameToFile.md":"This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and \nwritten to a log file in the same directory as the `.rpt file`.<br>\nThe full Path to the log file is logged to simultaneously.<br>\nThe data in the log file can be copied and pasted into the `diag_captureFrame` UI dialog to get a visualisation later on.\n\n\n---\n*Syntaxes:*\n\n`diag_captureFrameToFile`  frame\n\n---\n*Example 1:*\n\n```sqf\ndiag_captureFrameToFile 1; //capture the first frame after command execution\n```\n\n*Example 2:*\n\n```sqf\ndiag_captureFrameToFile 24; //capture 24th frame after command execution\n```","commands\\diag_captureSlowFrame.md":"Opens \"capture frame\" dialog if current frame exceeds set threshold in seconds. One can indicate to either capture duration of a specific profiling selection or the total duration of the frame. The selection names can be obtained by expanding the profiling tree. Clicking on a tree item will highlight the item on the graph and vice versa. The GUI also provides method of copying of the displayed data to clipboard. Some of the selections:\n\n\n---\n*Syntaxes:*\n\n`diag_captureSlowFrame` [section, threshold]\n\n---\n*Example 1:*\n\n```sqf\ndiag_captureSlowFrame ['total',0.003];\n```\n\n*Example 2:*\n\n```sqf\ndiag_captureSlowFrame ['memAl', 0.0001];\n```","commands\\diag_codePerformance.md":"Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed.\nThe command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second.\nEngine alternative to `BIS_fnc_codePerformance`.\n\n\n---\n*Syntaxes:*\n\n`diag_codePerformance` [code, arguments, cycles]\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = diag_codePerformance [{ private _a = 123; }, 0, 10000];\n```","commands\\diag_deltaTime.md":"Returns the duration of the previous frame in seconds\n\n\n---\n*Syntaxes:*\n\n`diag_deltaTime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _frameTime = diag_deltaTime;\n```\n\n*Example 2:*\n\n```sqf\nprivate _fps = 1 / diag_deltaTime;\n```","commands\\diag_drawMode.md":"Activates a debug visualisation.\n\n\n---\n*Syntaxes:*\n\n`diag_drawMode` type\n\n---\n*Example 1:*\n\n```sqf\ndiag_drawMode \"FireGeometry\";\nsleep 5;\ndiag_drawMode \"Normal\";\n```","commands\\diag_dumpCalltraceToLog.md":"Dumps current callstack/calltrace to RPT.\n\n\n---\n*Syntaxes:*\n\n`diag_dumpCalltraceToLog`\n\n---\n*Example 1:*\n\n```sqf\ndiag_dumpCalltraceToLog;\n/* outputs:\nCallstack:\"\n14:17:06 \"    [] L1 ()\"\n14:17:06 \"    [] L25 (A3\\functions_f\\Debug\\fn_debugConsoleExec.sqf)\"\n14:17:06 \"        _this:[{st = 15 / 0;}]\"\n14:17:06 \"    [] L0 ()\"\n14:17:06 \"    [] L25 (A3\\functions_f\\Debug\\fn_debugConsoleExec.sqf)\"\n14:17:06 \"        _x:any\"\n14:17:06 \"    [] L1 ()\"\n14:17:06 \"        _this:[]\"\n14:17:06 \"CALLSTACK END;;;\n*/\n```","commands\\diag_dumpScriptAssembly.md":"Dump script assembly.\n\n\n---\n*Syntaxes:*\n\n`diag_dumpScriptAssembly`  code\n\n---\n*Example 1:*\n\n```sqf\ndiag_dumpScriptAssembly BIS_fnc_taskCreate;\n```","commands\\diag_dumpTerrainSynth.md":"Returns [[Arma 3: CfgWorlds Config Reference#class OutsideTerrain|OutsideTerrain]]'s current world's values.\n\n\n---\n*Syntaxes:*\n\n`diag_dumpTerrainSynth`\n\n---\n*Example 1:*\n\n```sqf\nprivate _terrainSynth = diag_dumpTerrainSynth;\n```","commands\\diag_dynamicSimulationEnd.md":"Ends dynamic simulation data gathering and writes collected data into given file. The file is saved in the Arma 3 installation folder.\n<code>// Example output.\nEnabled time (in % of collection time)       Subject name\n  1.$                                          O Bravo 1-5\n  1.$                                          O Bravo 1-6\n  1.$                                          extraction_bike (B_Quadbike_01_F) - [3151,9662,59]\n  .....                                          ..................................\n  -1.$                                         O Bravo 1-4\n  -1.$                                         target_1 (O_SAM_System_04_F) - [3571,9878,70]\n  -1.$                                         O Alpha 3-4\nCollection took 0.0s</code>\n\n\n---\n*Syntaxes:*\n\n`diag_dynamicSimulationEnd` file\n\n---\n*Example 1:*\n\n```sqf\ndiag_dynamicSimulationEnd \"dynSimDebugData\"; // Creates a file called \"dynSimDebugData_runtimelog.txt\"\n```","commands\\diag_dynamicSimulationStart.md":"Starts gathering of [[Arma 3: Dynamic Simulation]] diagnostic data.\n\n\n---\n*Syntaxes:*\n\n`{{PAGENAMEE}}`\n\n---\n*Example 1:*\n\n```sqf\ndiag_dynamicSimulationStart;\n```","commands\\diag_enable.md":"Toggles various diagnostics.\n\n\n---\n*Syntaxes:*\n\nmode `diag_enable`  state\n\n---\n*Example 1:*\n\n```sqf\n\"All\" diag_enable true;\n```","commands\\diag_enabled.md":"Checks whether specific diagnostic mode is activated.\n\n\n---\n*Syntaxes:*\n\n`diag_enabled`  mode\n\n---\n*Example 1:*\n\n```sqf\n\"Animation\" diag_enable true;\ndiag_enabled \"Animation\"; // returns true\n```","commands\\diag_exportConfig.md":"Exports given `config` into file of given path.\n\n\n---\n*Syntaxes:*\n\n`diag_exportConfig` [path, config]\n\n---\n*Example 1:*\n\nexport an `All-in-One config`:\n\n```sqf\ndiag_exportConfig [\"O:/config.cpp\", configFile];\n```","commands\\diag_exportTerrainSVG.md":"|right]]\nLike the old [[Arma 3: Cheats#TOPOGRAPHY|TOPOGRAPHY]] cheat code, exports terrain, but in modern SVG format instead of the proprietary EMF format.\n\n\n---\n*Syntaxes:*\n\n`diag_exportTerrainSVG` [filePath, drawLocationNames, drawGrid, drawCountlines, drawTreeObjects, drawMountainHeightpoints, simpleRoads]\n\n---\n*Example 1:*\n\n```sqf\ndiag_exportTerrainSVG [\"C:\\Users\\USERNAME\\Desktop\\Stratis_Map.svg\", true, true, true, true, true, false]; // replace USERNAME with your username!\n```","commands\\diag_fps.md":"Returns average framerate calculated over last 16 frames.\n\n\n---\n*Syntaxes:*\n\n`diag_fps`\n\n---\n*Example 1:*\n\n```sqf\ndiag_log diag_fps;\n```","commands\\diag_fpsMin.md":"Returns minimal framerate. Calculated from the longest frame over last 16 frames.\n\n\n---\n*Syntaxes:*\n\n`diag_fpsMin`\n\n---\n*Example 1:*\n\n```sqf\n_minfps = diag_fpsMin;\n```","commands\\diag_frameNo.md":"Returns number of frame currently displayed.\n\n\n---\n*Syntaxes:*\n\n`diag_frameNo`\n\n---\n*Example 1:*\n\n```sqf\n_currFrameNo = diag_frameNo;\n```","commands\\diag_getTerrainGrid.md":"Returns terrain cell size (size of each grid cell in the Heightmap).\n\n\n---\n*Syntaxes:*\n\n`diag_getTerrainGrid`\n\n---\n*Example 1:*\n\n```sqf\nprivate _terrainGrid = diag_getTerrainGrid;\n```","commands\\diag_getTerrainHeight.md":"Returns terrain height at the specified location.\n\n\n---\n*Syntaxes:*\n\n`diag_getTerrainHeight` positionWorld\n\n---\n*Example 1:*\n\n```sqf\nprivate _h = diag_getTerrainHeight position player;\n```","commands\\diag_getTerrainSegmentOffset.md":"Returns the terrain segment. It is basically the same as:\n\n```sqf\n_worldPos params [\"_x\", \"_y\"];\n[floor (_x / diag_getTerrainGrid), floor (_y / diag_getTerrainGrid)];\n```\n\n\n---\n*Syntaxes:*\n\n`diag_getTerrainSegmentOffset`  PositionWorld\n\n---\n*Example 1:*\n\n```sqf\nprivate _segmentOffset = diag_getTerrainSegmentOffset getPosWorld player;\n```","commands\\diag_lightNewLoad.md":"Allows loading of lighting config during the gameplay (effectively changing the current scene lighting).\nFilename path can be either absolute or relative. The file must contain only the class LightingNew, which should contain lighting configuration.\n\n\n---\n*Syntaxes:*\n\n`diag_lightNewLoad` path\n\n---\n*Example 1:*\n\n```sqf\ndiag_lightNewLoad \"o:\\lighting.txt\";\n```","commands\\diag_list.md":"Returns an array of all diagnostic modes available in the game.\n\n\n---\n*Syntaxes:*\n\n`diag_list`  mode\n\n---\n*Example 1:*\n\n```sqf\ndiag_list \"toggle\";\n```\n\n*Example 2:*\n\n```sqf\ndiag_list \"drawMode\";\n```","commands\\diag_localized.md":"Returns array with all `localize`d keys from the given ` stringtable` or the array of all stringtables names if empty string **\"\"}} is given. Common stringtables are: *(Reference hl \"\"Global\"\")*, *(Reference hl \"\"Mission\"\")*, {{hl|\"Campaign\"**.\n\n\n---\n*Syntaxes:*\n\n`diag_localized` stringtable\n\n---\n*Example 1:*\n\n```sqf\nprivate _randomKey = selectRandom diag_localized \"Global\";\nhint format [\"Key: %1\\nValue: %2\", _randomKey, localize _randomKey];\n```\n\n*Example 2:*\n\n```sqf\nprivate _allTables = diag_localized \"\";\n```\n\n*Example 3:*\n\n```sqf\ndiag_localized \"Global\" select 0; // \"$STR_A3_SHOWCASE_SLINGLOADING_15_AMMODROPPED_PIL_0\"\n```","commands\\diag_log.md":"Dumps the argument's value to the `report file`. Each call creates a new line in the file.\n\n\n---\n*Syntaxes:*\n\n`diag_log`  output\n\n---\n*Example 1:*\n\n```sqf\ndiag_log time;\n```\n\n*Example 2:*\n\n```sqf\ndiag_log format [\"%1, %2\", player, time];\n```\n\n*Example 3:*\n\n```sqf\n_array = [1, \"foo\", player, \"bar\"];\n{\n\tdiag_log _x;\n} forEach _array ; // creates 4 entries on 4 lines\n```\n\n*Example 4:*\n\n```sqf\n_array = [1, \"foo\", player, \"bar\"];\ndiag_log _array; // Creates one entry of e.g. [1,\"foo\",B Alpha 1-1:1 (Player Name),\"bar\"]\n```","commands\\diag_mergeConfigFile.md":"Updates config without restarting. Attributes and classes can not be deleted unless **`delete`}} is used. Changes to the config are applied to all new entities, a mission restart is not necessarily required. Spawning the vehicle again or switching weapons works too. Since {{GVI|arma3|1.70** CfgAmmo should be mergeable as well.\n\n\n---\n*Syntaxes:*\n\n`diag_mergeConfigFile`  [path, userdir]\n\n---\n*Example 1:*\n\n```sqf\ndiag_mergeConfigFile [\"O:\\Arma3\\A3\\Stuff_F\\config.cpp\"]\n```","commands\\diag_recordTurretLimits.md":"Start recording tool for creating turret aiming limits.\n\n\n---\n*Syntaxes:*\n\n`diag_recordTurretLimits` section\n\n---\n*Example 1:*\n\n```sqf\ndiag_recordTurretLimits true;\n```","commands\\diag_resetShapes.md":"Reload models on-the-fly without the need of restarting the game.\nChanges applied by `diag_resetShapes` are applied to all new entities so restart of mission is not necessarily  required - spawning vehicle again or changing back forth weapon should usually do the trick.\nIt works only with **[[Arma 3: Startup Parameters#Developer Options|-filePatching]]** in combination with local data. Command will reload `only` models present in local data.\n\n\n---\n*Syntaxes:*\n\n`diag_resetShapes`\n\n---\n*Example 1:*\n\n```sqf\ndiag_resetShapes;\n```","commands\\diag_scope.md":"Returns script scope depth. When script is directly executed by the engine or a new script is added to the scheduler, the scope depth is 0.\nThe examples of such execution are event handlers, `spawn`, etc. `isNil` `Code` will also create a parent scope.\nAny use of `call` and such will stack execution creating child scopes and increasing scope depth.\n\n\n---\n*Syntaxes:*\n\n`diag_scope`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn\n{ \n\tsystemChat str diag_scope; // 0\n\tcall \n\t{ \n\t\tcall\n\t\t{ \n\t\t\tsystemChat str diag_scope; // 2\n\t\t\tisNil \n\t\t\t{ \n\t\t\t\tsystemChat str diag_scope; // 0\n\t\t\t\tcall \n\t\t\t\t{\n\t\t\t\t\tsystemChat str diag_scope; // 1\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n```","commands\\diag_setLightNew.md":"Overrides currently used scene lighting. The operand is config that is placed as a string (not file).\nThe changes may not be applied immediately, but can be forced by the call of `simulWeatherSync`.\n\n\n---\n*Syntaxes:*\n\n`diag_setLightNew` config\n\n---\n*Example 1:*\n\n```sqf\ndiag_setLightNew \"sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... \";\n```","commands\\diag_setTerrainHeight.md":"Changes the terrain height of the cell in which given position lies. This command is only available with [[Arma 3: Diagnostics Exe]].\n\n\n---\n*Syntaxes:*\n\nposition `diag_setTerrainHeight` height\n\n---\n*Example 1:*\n\n```sqf\nprivate _fnc_flattenTerrain =\n{\n\tparams [\"_start\", \"_a\", \"_b\", \"_h\"];\n\n\tfor \"_xStep\" from 0 to _a do\n\t{\n\t\tfor \"_yStep\" from 0 to _b do\n\t\t{\n\t\t\t_start vectorAdd [_xStep, _yStep, 0] diag_setTerrainHeight _h;\n\t\t};\n\t};\n};\n\nprivate _desiredTerrainHeight = 150;\n[getPosWorld player, 50, 50, _desiredTerrainHeight] spawn _fnc_flattenTerrain;\n```","commands\\diag_stacktrace.md":"Returns an array containing the function name, line number, scope name and all local variables in form of a hashmap.\n\n\n---\n*Syntaxes:*\n\n`diag_stacktrace`\n\n---\n*Example 1:*\n\n```sqf\nprivate _testvar = 1;\nprivate _testother = 2;\ncall \n{\n\t_testvar = 3;\n\tif (_testvar == 3) then \n\t{\n\t\t_myVariable = 4;\n\t\thint str diag_stacktrace;\n\t};\n};\n/*\n[\n\t[\"\", 3, \"\", `\"_this\", [`, [\"_testother\", 2], [\"_testvar\", 3]]],\n\t[\"\", 6, \"\", []],\n\t[\"\", 8, \"\", [[\"_myvariable\", 4]]]\n]\n*/\n```","commands\\diag_tickTime.md":"Real time in seconds spent from the start of the game. On Windows the command uses [https://docs.microsoft.com/en-us/windows/win32/api/timeapi/nf-timeapi-timegettime timeGetTime].\n\n\n---\n*Syntaxes:*\n\n`diag_tickTime`\n\n---\n*Example 1:*\n\n```sqf\n// Measure execution time of a script\n_start = diag_tickTime;\n// code\n_stop = diag_tickTime;\ndiag_log format [\"%1\",_stop - _start];\n```","commands\\diag_toggle.md":"Toggles various diagnostics.\n\n\n---\n*Syntaxes:*\n\n`diag_toggle` mode\n\n---\n*Example 1:*\n\n```sqf\ndiag_toggle \"Animation\"; // enable\ndiag_toggle \"Animation\"; // disable\n```","commands\\dialog.md":"Tests whether any user dialog is open.\n\n\n---\n*Syntaxes:*\n\n`dialog`\n\n---\n*Example 1:*\n\n```sqf\nif (!dialog) then { createDialog \"Dialog1\"; };\n```","commands\\diaryRecordNull.md":"A non-existent `Diary Record`. To compare non-existent objects use `isNull` or `isEqualTo`:\n* {{hl\n\n\n---\n*Syntaxes:*\n\n`diaryRecordNull`\n\n---\n*Example 1:*\n\n```sqf\nisNull diaryRecordNull; // true\n```\n\n*Example 2:*\n\n```sqf\nisNull (objNull createDiaryRecord [\"Diary\", [\"Title\", \"Text\"]]); // true - objNull cannot take diary records\n```\n\n*Example 3:*\n\n```sqf\nstr diaryRecordNull; // \"No diary record\"\n```\n\n*Example 4:*\n\n```sqf\nprivate _diaryRecord = diaryRecordNull;\nif (damage player > 0.5) then\n{\n\t_diaryRecord = player createDiaryRecord [\"Diary\", [\"Heal yourself\", \"Ask a medic\"]];\n};\nif (not isNull _diaryRecord) then { hint \"Diary record added.\"; };\n```","commands\\diarySubjectExists.md":"Checks whether given subject is present in the `Diary` of given player.\n\n\n---\n*Syntaxes:*\n\nplayer `diarySubjectExists`  name\n\n---\n*Example 1:*\n\n```sqf\n_exists = player diarySubjectExists \"subjectName\";\n```","commands\\didJIP.md":"Checks if the current client Joined In Progress.\n\n\n---\n*Syntaxes:*\n\n`didJIP`\n\n---\n*Example 1:*\n\n```sqf\nclientDidJIP = didJIP;\n```","commands\\didJIPOwner.md":"Checks if the current `owner` of supplied `Object` Joined In Progress. Returns `false` on clients.\n\n\n---\n*Syntaxes:*\n\n`didJIPOwner`  object\n\n---\n*Example 1:*\n\n```sqf\n_ownerDidJip = didJIPOwner tank;\n```","commands\\difficulty.md":"Returns high-level selected difficulty mode.   \n\nReturned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)\n\n\n---\n*Syntaxes:*\n\n`difficulty`\n\n---\n*Example 1:*\n\n```sqf\nvalue = difficulty;\n```\n\n*Example 2:*\n\nThe command returns the index of selected difficulty as they appear in `CfgDifficulties`\n[[Image:Difficulty.jpg|400px|Note: \"Insane\" is a modded difficulty]]\n\n```sqf\nhint str difficulty; //Result: 4\n```","commands\\difficultyEnabled.md":"Checks specific difficulty settings of the current user. Difficulty flag names can be found in the `ArmA profile` file under class Difficulties/xxx/Flags (xxx being regular or veteran).\n\n\n---\n*Syntaxes:*\n\n`difficultyEnabled`  flagName\n\n---\n*Example 1:*\n\n```sqf\nhint str (difficultyEnabled \"armor\");\n```\n\n*Example 2:*\n\nList current difficulty settings:\n\n```sqf\ncall {\n\tprivate [\"_diff\", \"_cfg\", \"_flags\", \"_res\"];\n\t_diff = [];\n\t_cfg = configFile >> \"CfgDifficulties\";\n\t{\n\t\t_flags = _cfg >> configName _x >> \"Flags\";\n\t\tfor \"_i\" from 0 to count _flags - 1 do {\n\t\t\t_diff pushBack configName (_flags select _i);\n\t\t};\n\t} forEach (\"true\" configClasses _cfg);\n\t_diff = _diff arrayIntersect _diff;\n\t_diff sort true;\n\t_res = text \"\";\n\t{\n\t\t_res = composeText [_res, parseText format [\n\t\t\t\"<t align='left'>%1 - %2</t>\", \n\t\t\t_x, \n\t\t\t[0, 1] select difficultyEnabled _x\n\t\t], lineBreak];\n\t} forEach _diff;\n\thint _res;\n};\n```","commands\\difficultyEnabledRTD.md":"Returns `true` if Advanced Flight Model is enabled.\nForcing of rotorlib simulation could be done with mission param `forceRotorLibSimulation`.\n\n\n---\n*Syntaxes:*\n\n`difficultyEnabledRTD`\n\n---\n*Example 1:*\n\n```sqf\n_rtdOn = difficultyEnabledRTD;\n```","commands\\difficultyOption.md":"Checks specific difficulty settings of the current user. Difficulty flag names can be found in the **CfgDifficultyPresets** config class or in \n`ArmA profile` file under class **DifficultyPresets/xxx/Options** (xxx being Recruit, Regular or Veteran). This command replaces `difficultyEnabled` as many options have multiple values and former command only provided `Boolean` return.\n\n\n---\n*Syntaxes:*\n\n`difficultyOption` optionName\n\n---\n*Example 1:*\n\n```sqf\nhint str (difficultyOption \"friendlyTags\");\n```\n\n*Example 2:*\n\nRemember last `cameraView` per vehicle:\n\n```sqf\nplayer addEventHandler [\"GetOutMan\", {\n\tparams [\"_unit\", \"\", \"_vehicle\"];\n\t_unit setVariable [_vehicle call BIS_fnc_netId, cameraView];\n}];\nplayer addEventHandler [\"GetInMan\", {\n\tif (difficultyOption \"thirdPersonView\" == 2) then {\n\t\tparams [\"_unit\", \"\", \"_vehicle\"];\n\t\t_unit switchCamera (_unit getVariable [_vehicle call BIS_fnc_netId, \"INTERNAL\"]);\n\t};\n}];\n```","commands\\direction.md":"Returns the direction an object or a location is facing (differs from `getDir` in that this also works with locations).\n\n\n---\n*Syntaxes:*\n\n`direction` object\n\n---\n*Example 1:*\n\n```sqf\nplayer setDir 90;\n_d = direction player;//returns 90\n```","commands\\directionStabilizationEnabled.md":"Get state of direction stabilization. This command returns `true` if the current optic mode of the selected turret has direction stabilization configured in config (**directionStabilized**) and if it is also not disabled by `enableDirectionStabilization`.<br>\nThis command can not be used to determine if the current optic of the turret has **directionStabilized** enabled in config.\n\n\n---\n*Syntaxes:*\n\nvehicle `directionStabilizationEnabled` turretPath\n\n---\n*Example 1:*\n\n```sqf\nuav directionStabilizationEnabled [0];\n```","commands\\directSay.md":"Sends given audio message to the direct channel. Command operates just like xxxxRadio commands, but the sound is played over direct channel and is independent of `fadeSound`. The message is defined in CfgRadio in the `description.ext` file or config radio protocol or a kbAddTopic. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\nunit `directSay` radioName\n\n---\n*Example 1:*\n\n```sqf\nplayer directSay configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```","commands\\disableAI.md":"Disables parts of the AI behaviour to get a better control over the actions of a unit. If the unit changes locality, this command might need to be executed again at the new locality to maintain effect.\n\n\n---\n*Syntaxes:*\n\nunit `disableAI` feature\n\n---\n*Example 1:*\n\n```sqf\nMyUnit disableAI \"AUTOTARGET\";\n```","commands\\disableBrakes.md":"Disables autobrake, which is engaged when vehicle is stationary and stops wheels from rotating freely when vehicle is pushed.\n\n\n---\n*Syntaxes:*\n\ntransport `disableBrakes` disable\n\n---\n*Example 1:*\n\n```sqf\nmyCar disableBrakes true;\n```","commands\\disableCollisionWith.md":"Disable collision between provided objects. The collision is always disabled for both objects in the arguments.\n\n\n---\n*Syntaxes:*\n\nvehicle1 `disableCollisionWith` vehicle2\n\n---\n*Example 1:*\n\n```sqf\nplayer disableCollisionWith myWall;\n```\n\n*Example 2:*\n\n```sqf\n[_veh1, _veh2] remoteExecCall [\"disableCollisionWith\", 0, _veh1];\n```\n\n*Example 3:*\n\n```sqf\n// this command stores a reference to the other object on both arguments:\n_obj1 disableCollisionWith _obj2;\t// _obj1 has a reference to _obj2, disabling collision with it\n\t\t\t\t\t\t\t\t\t// _obj2 has a reference to _obj1, disabling collision with it\n\n// only one reference is required to disable collision, allowing more than one disabled collision\n_obj1 disableCollisionWith _obj3;\t// _obj1 has a reference to _obj3, disabling collision with it\n\t\t\t\t\t\t\t\t\t// _obj2 has a reference to _obj1, disabling collision with it\n\t\t\t\t\t\t\t\t\t// _obj3 has a reference to _obj1, disabling collision with it\n\t\t\t\t\t\t\t\t\t// factually, _obj1 has collisions disabled with _obj2 and _obj3\n\n// note that _obj1 collision can be changed without using the command on it directly\n_obj2 disableCollisionWith _obj3;\t// _obj1 has no more reference to _obj3 and can collide with it\n\t\t\t\t\t\t\t\t\t// _obj2 has a reference to _obj3, disabling collision with it\n\t\t\t\t\t\t\t\t\t// _obj3 has a reference to _obj2, disabling collision with it\n```","commands\\disableConversation.md":"In theory disables the ability to talk to other people. In actuality, if `true` is given, the command increases unit's `kbTell` `IsSpeaking` status by 1, thus stopping unit from having a conversation. If `false` is given, the command decreases unit's `kbTell` `IsSpeaking` status by 1. The unit \"is speaking\" if `IsSpeaking > 0`.\n\n\n---\n*Syntaxes:*\n\nunitName `disableConversation`  disable\n\n---\n*Example 1:*\n\n```sqf\nplayer disableConversation true;\n```\n\n*Example 2:*\n\n```sqf\nsoldier1 disableConversation false;\n```","commands\\disableDebriefingStats.md":"Disable debriefing score table.\n\n\n---\n*Syntaxes:*\n\n`disableDebriefingStats`\n\n---\n*Example 1:*\n\n```sqf\ndisableDebriefingStats;\n```","commands\\disableMapIndicators.md":"Command allows suppressing visualization of FRIENDLY, ENEMY, MINES and/or PING map indicators from difficulty setting EXTENDED MAP CONTENT.\n\n\n---\n*Syntaxes:*\n\n`disableMapIndicators`  [disableFriendly, disableEnemy, disableMines, disablePing]\n\n---\n*Example 1:*\n\nDisable visualization of friendly and enemy units:\n\n```sqf\ndisableMapIndicators [true, true, false, false];\n```","commands\\disableNVGEquipment.md":"Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use `disableTIEquipment`.\n\n\n---\n*Syntaxes:*\n\nvehicle `disableNVGEquipment` state\n\n---\n*Example 1:*\n\n```sqf\nmyTank disableNVGEquipment true;\n```","commands\\disableRemoteSensors.md":"This command will halt raycasting calculations (on the local machine only) for all groups which don't contain `any` local entities. Units, that are not in a group with at least one local member, will not check visibility of other units. This will cause, that remote units will not have updated knowsAbout and it will save some CPU time. If a group contains a single local entity then calculations will still be performed for the entire group.\n<br><br>\nThese raycasts are used to determine what other entities an entity can see, and they take a lot of CPU time. This is of course a bit of a trick, because rather than a true optimization, it disables part of the simulation. However, there are certainly types of scenarios where these raycasts are not needed. An example is a fully Player-versus-Player scenario, where the visibility between every combination of player entity is not needed. So why not disable this by default? There are cases where you do require these raycasts, for example in stealth scenarios. Without them, commands like `knowsAbout`, `nearTargets` and `targetKnowledge` will only function for local units! The commands themselves are local, can be used on servers and clients, and the state is reset when the scenario ends. So, carefully consider whether your scenario can benefit from this method.\n\n\n---\n*Syntaxes:*\n\n`disableRemoteSensors` state\n\n---\n*Example 1:*\n\n```sqf\ndisableRemoteSensors true;\n```","commands\\disableSerialization.md":"Disable saving of script containing this command. After this, the script can work with data types which do not support serialization (UI types). See `Namespace serialization` for more information.\n\n\n---\n*Syntaxes:*\n\n`disableSerialization`\n\n---\n*Example 1:*\n\n```sqf\ndisableSerialization;\nprivate _display = findDisplay 46;\n```","commands\\disableTIEquipment.md":"Disables TI (Thermal Imaging) equipment for given vehicle.\n\n\n---\n*Syntaxes:*\n\nvehicle `disableTIEquipment` state\n\n---\n*Example 1:*\n\n```sqf\nvehicle player disableTIEquipment true;\n```\n\n*Example 2:*\n\n```sqf\n_tank disableTIEquipment true;\n```","commands\\disableUAVConnectability.md":"Disables unit's AV terminal(s) connecting to UAV.\n\n\n---\n*Syntaxes:*\n\nobject `disableUAVConnectability` [uav, checkAllItems]\n\n---\n*Example 1:*\n\n```sqf\nmyUnit disableUAVConnectability [myUav, true];\n```","commands\\disableUserInput.md":"Disables or enables the keyboard and mouse input. Usually used during cutscenes.\n\n\n---\n*Syntaxes:*\n\n`disableUserInput` state\n\n---\n*Example 1:*\n\n```sqf\ndisableUserInput true;\n// cutscene\ndisableUserInput false;\n```","commands\\displayAddEventHandler.md":"Adds an event handler to the given display. See `User Interface Event Handlers` for the full list of event names.\nIf applicable, see `DIK_KeyCodes` for a list of key code constants, which are relevant to key related user interface events like: `KeyDown` & `KeyUp`.\n\n\n---\n*Syntaxes:*\n\ndisplay `displayAddEventHandler` [eventName, code]\n\n---\n*Example 1:*\n\n```sqf\nmoduleName_keyDownEHId = findDisplay 46 displayAddEventHandler [\"KeyDown\", \"hint str _this;\"];\n```\n\n*Example 2:*\n\n```sqf\nmoduleName_keyDownEHId = findDisplay 46 displayAddEventHandler [\"KeyDown\", { hint str _this }];\n```","commands\\displayChild.md":"Returns child display of the given display.\n\n\n---\n*Syntaxes:*\n\n`displayChild` display\n\n---\n*Example 1:*\n\n```sqf\n_display = displayChild findDisplay 313; // display #46\n```","commands\\displayCtrl.md":"Return child control with specified idc.\n\n\n---\n*Syntaxes:*\n\ndisplay `displayCtrl` idc\n\n`displayCtrl` idc\n\n---\n*Example 1:*\n\n```sqf\n_displayControl = _ParentDisplay displayCtrl 101;\n```\n\n*Example 2:*\n\n```sqf\n_dialogControl = displayCtrl 101;\n```","commands\\displayNull.md":"A non-existing `Display`. To compare non-existent displays use `isNull` or `isEqualTo`:\n\n```sqf\ndisplayNull == displayNull;\t\t// false\nisNull displayNull;\t\t\t\t\t// true\ndisplayNull isEqualTo displayNull;\t// true\n```\n\n\n---\n*Syntaxes:*\n\n`displayNull`\n\n---\n*Example 1:*\n\n```sqf\n!isNull displayNull; // false\n```\n\n*Example 2:*\n\n```sqf\nstr displayNull; // No display\n```","commands\\displayParent.md":"Returns parent display of the given display.\n\n\n---\n*Syntaxes:*\n\n`displayParent` display\n\n---\n*Example 1:*\n\n```sqf\n_display = displayParent findDisplay 49; // Display #46\n```","commands\\displayRemoveAllEventHandlers.md":"Remove all event handlers from the given display.\n\n\n---\n*Syntaxes:*\n\ndisplay `displayRemoveAllEventHandlers` eventName\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 46 displayRemoveAllEventHandlers \"KeyDown\";\n```","commands\\displayRemoveEventHandler.md":"Remove a given event handler from the given display.\n\n\n---\n*Syntaxes:*\n\ndisplay `displayRemoveEventHandler`  [handlerType, id]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 46 displayRemoveEventHandler [\"keyDown\",5];\n```","commands\\displaySetEventHandler.md":"Sets given event handler of given display.\nThe return code of the provided function should indicate whether this event was handled correctly. This implies telling the engine whether it is default code should be executed. \nSee `User Interface Event Handlers` for the full list of handler names.<br>\nIf applicable, see `DIK KeyCodes` for a list of key code constants, which are relevant to key related user interface events like *(Reference HashLink \"onKeyDown\" at User Interface Event Handlers#onKeyDown)* and *(Reference HashLink \"onKeyUp\" at User Interface Event Handlers#onKeyUp)*.\n\n\n---\n*Syntaxes:*\n\ndisplay `displaySetEventHandler` [handlerName, function]\n\n---\n*Example 1:*\n\n```sqf\n_control displaySetEventHandler [\"KeyDown\", \"\"];\n```\n\n*Example 2:*\n\n**init.sqf**:\n\n```sqf\nKeysPressed = compile preprocessFile \"keysPressed.sqf\";\nprivate _display = findDisplay 46;\n_display displaySetEventHandler [\"KeyDown\", \"_this call KeysPressed\"];\n```\n\n**keysPressed.sqf**:\n\n```sqf\nprivate _handled = false;\nswitch (_this select 1) do {\n\t// F key\n\tcase 33: {\n\t\t// code here\n\t\t_handled = true;\n\t};\n};\n_handled;\n```","commands\\dissolveTeam.md":"Dissolves the given team. All members become members of the main team.\n\n\n---\n*Syntaxes:*\n\n`dissolveTeam` teamColor\n\n---\n*Example 1:*\n\n```sqf\ndissolveTeam \"RED\";\n```","commands\\distance.md":"[[Image:distance2D.jpg|400px|right]]\nReturns a distance in meters between `Object`s, `Position`s or `Location`s.\n\n\n---\n*Syntaxes:*\n\nparam1 `distance` param2\n\nlocation1 `distance` location2\n\n---\n*Example 1:*\n\n```sqf\n_meters = player distance _object;\n```\n\n*Example 2:*\n\n```sqf\n_meters = player distance [1,2,3];\n```\n\n*Example 3:*\n\n```sqf\n_meters = [1,2,3] distance [4,5,6];\n```\n\n*Example 4:*\n\n```sqf\n_meters = position player distance nearestLocation [position player, \"hill\"];\n```","commands\\distance2D.md":"Returns a 2D distance (`distance` projected to X,Y plane) in meters between `Object`s and/or `Position`s.\n[[Image:distance2D.jpg|250px|right]]\n\n\n---\n*Syntaxes:*\n\nfrom [[distance2D]] to\n\n---\n*Example 1:*\n\n```sqf\n_meters = player distance2D heli;\n```","commands\\distanceSqr.md":"Computes the [squared distance](https://en.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance) between two objects or positions.\n\n\n---\n*Syntaxes:*\n\nvar1 `distanceSqr` var2\n\n---\n*Example 1:*\n\n```sqf\nplayer distanceSqr (leader player);\n```\n\n*Example 2:*\n\n```sqf\n_distance = sqrt ((x2 - x1) ^ 2 + (y2 - y1) ^ 2 + (z2 - z1) ^ 2);\n_distanceSqr = (x2 - x1) ^ 2 + (y2 - y1) ^ 2 + (z2 - z1) ^ 2;\n_distance = [x1, y1, z1] distance [x2, y2, z2];\n_distanceSqr = [x1, y1, z1] distanceSqr [x2, y2, z2];\n_distance = sqrt ([x1, y1, z1] distanceSqr [x2, y2, z2]);\n_distanceSqr = ([x1, y1, z1] distance [x2, y2, z2]) ^ 2;\n```\n\n<!-- KK, your turn!\nIf normal distance is calculated according to this formula:\n\nsquared distance is calculated according to this formula:  \n-->","commands\\distributionRegion.md":"Returns the numerical index for the distribution region of this copy of [[:Category:ArmA: Armed Assault|{{arma1}}]].\n# USA\n# Rest of the world\n\n\n---\n*Syntaxes:*\n\n`distributionRegion`\n\n---\n*Example 1:*\n\n```sqf\nif (distributionRegion == 1) then { hint \"miles\"; } else { hint \"kilometres\"; };\n```","commands\\do.md":"Executes `code`. Used as part of a construct, such as `while`, `with`, `for` and `switch`. The `code` is always executed in `missionNamespace` unless `do` is used with `with` as an argument.\n\n\n---\n*Syntaxes:*\n\nconstruct `do` code\n\n---\n*Example 1:*\n\n```sqf\nwhile { b > a } do\n{\n\ta = a + 1;\n};\n```\n\n*Example 2:*\n\n```sqf\nwith uiNamespace do\n{\n\tMyUIVar = MyUIVar + 5;\n};\n```\n\n*Example 3:*\n\n```sqf\nfor \"_i\" from 1 to 10 do\n{\n\tsystemChat str _i;\n\tsleep 0.5;\n};\n```\n\n*Example 4:*\n\n```sqf\nswitch (50) do\n{\n\tcase 25: { hint \"25\" };\n\tcase 50: { hint \"50\" }; // hints \"50\"\n\tcase 75: { hint \"75\" };\n\tdefault { hint \"nope\" };\n};\n```","commands\\do3DENAction.md":"Performs given `Eden Editor action`.\n\n\n---\n*Syntaxes:*\n\n[[do3DENAction]]  action\n\n---\n*Example 1:*\n\n```sqf\ndo3DENAction \"MissionSave\";\n```","commands\\doArtilleryFire.md":"Orders an artillery unit to fire a burst on the given position (silently).\n\n\n---\n*Syntaxes:*\n\nunit `doArtilleryFire` [position, type, rounds]\n\n---\n*Example 1:*\n\n```sqf\nMortar doArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];\n```","commands\\doFire.md":"Order the given unit(s) to fire on the given target (without radio messages).\n\nThe target is set with `doTarget` or `commandTarget`.\n\nThe target can be a unit or a vehicle, but not an object.\n\n\n---\n*Syntaxes:*\n\nunitName `doFire` target\n\n---\n*Example 1:*\n\n```sqf\n_ESoldier1 doFire _WSoldier1;\n```","commands\\doFollow.md":"Order the given unit(s) to follow another from his own group as his `formation leader` (without radio messages).<br>\nIt is also used to order the unit to `return to formation` after e.g `doStop` even if it is the leader himself that should return to formation (see [[#Example 2|Example 2]]).\n\n\n---\n*Syntaxes:*\n\nunit `doFollow` unitLead\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 doFollow _soldier2;\n```\n\n*Example 2:*\n\n```sqf\nunits _group doFollow leader _group; // returns all the units to formation\n```","commands\\doFSM.md":"Orders a unit to process command defined by `FSM` file (silently). \n\nUnlike with execFSM where `_this` is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:\n\n; _leader: leader of subgroup with this command \n; _destination: command destination/position\n; _target: command target \n; _units: list of all persons in subgroup\n\n\n---\n*Syntaxes:*\n\nunit `doFSM`  [fsmName, position, target]\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne doFSM [\"move.fsm\", position player, player];\n```\n\n*Example 2:*\n\n```sqf\nunits player doFSM [\"move.fsm\", position player, player];\n```","commands\\doGetOut.md":"Orders one or multiple units to get out from the vehicle (silently). Same as `commandGetOut` with latter being shown via radio chat.\n<br><br>\nNotes:\n* Works for both AI and player entities\n* AI unit gets back in - unless is under player command or combined with other sqf commands (`orderGetIn` false, `allowGetIn` false or `leaveVehicle`)\n* Ignores vehicle's lock state - unlike [[Arma_3_Actions#Eject|action \"Eject\"]] and `moveOut`\n* AI waits for execution until vehicle has stopped/is no longer flying (unclear if any timeout exists for order to be discarded) - unlike [[Arma_3_Actions#Eject|action \"Eject\"]] and `moveOut`\n* Plays the vehicle's position's get out animation (same as [[Arma_3_Actions#Eject|action \"Eject\"]]) - unlike `moveOut`\n* When execute for multiple units, it waits till the action is completed, before the next to take his turn (same as [[Arma_3_Actions#Eject|action \"Eject\"]]) - unlike `moveOut`\n* AI gets back into formation afterwards\n* Works only on alive units - unlike [[Arma_3_Actions#Eject|action \"Eject\"]] (one after another) or `moveOut` (instantly)\n* Does not work on `unconscious` - unless the AI is under player command. Unlike `moveOut` or [[Arma_3_Actions#Eject|action \"Eject\"]] (but one after another))\n\n\n---\n*Syntaxes:*\n\n`doGetOut` units\n\n---\n*Example 1:*\n\n```sqf\ndoGetOut _unitOne;\n```\n\n*Example 2:*\n\n```sqf\ndoGetOut [_unitOne,_unitTwo];\n```","commands\\doMove.md":"Order the given unit(s) to move to the given position (without radio messages). Upon reaching its destination, if it is the group leader it will order the group to form around it's new position. If it is not the leader, it will immediately be ordered to return to formation by the group leader and begin moving back to the group. Use `doStop` to stop units returning to formation. `moveToCompleted` will return true when a unit issued this command reaches its destination.\n\n\n---\n*Syntaxes:*\n\nunit(s) `doMove` position\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 doMove (position _officer);\n```\n\n*Example 2:*\n\n```sqf\nthis doMove (getMarkerPos \"Marker1\");\n```","commands\\doorPhase.md":"Return animation phase of door on vehicle.\n\n\n---\n*Syntaxes:*\n\nobject `doorPhase` door\n\n---\n*Example 1:*\n\n```sqf\n_phase = heli doorPhase \"door_L\";\n```","commands\\doStop.md":"Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation. It will prevent them from moving around with their group (or formation leader), while still being able to turn around and even move to a new position if they see fit. <br><br>The units will still respond to orders from their group leader (like engage, rearm, board a vehicle), but all of their actions will be separate from the group formation. To resume group default behaviour, use `doFollow` command. For example: **`units` _group `doFollow` `leader` _group;**\n\n\n---\n*Syntaxes:*\n\n`doStop` unit(s)\n\n---\n*Example 1:*\n\n```sqf\ndoStop _soldier1;\n```\n\n*Example 2:*\n\n```sqf\ndoStop [_soldier1, _soldier2];\n```\n\n*Example 3:*\n\n```sqf\ndoStop (units player);\n```","commands\\doSuppressiveFire.md":"Orders the given unit or a group of units to suppress the given position or target (without radio messages, see `commandSuppressiveFire` is you need messages). \n* When an `Array` of units is passed as param, only units from the same `Group` as the first unit in array are considered. \n* The unit (units) starts firing at the given target or position random amount of shots (exact formula unknown, but seems to depend on amount of ammo unit has) after which it stops. \n* `currentCommand` shows **\"Suppress\"** and there is no way of stopping unit before it completes random amount of rounds. \n* If position is passed as target param, it stays fixed. \n* If object is passed as target param, it depends on what kind of object. If it is considered a proper target by the unit, it is tracked by the unit dynamically. If it is not, the position gets obtained via `getPosWorld`, which could be different from `PositionASL` of the object, and it is fixed even if the target is able to change position later.\n\n\n---\n*Syntaxes:*\n\nunit `doSuppressiveFire`  target\n\n---\n*Example 1:*\n\n```sqf\n_soldier doSuppressiveFire [1869.508,5760.962,0.000];\n```\n\n*Example 2:*\n\n```sqf\nunits player doSuppressiveFire cursorTarget;\n```","commands\\doTarget.md":"Order the given unit(s) to target the given target (without radio messages).<br>Targeting can be stopped by \n```sqf\n_unit doWatch objNull;\n``` or\n```sqf\n_unit commandWatch objNull;\n```\n\n\n---\n*Syntaxes:*\n\nunit `doTarget` target\n\n---\n*Example 1:*\n\n```sqf\n_ESoldier1 doTarget _WSoldier1;\n```","commands\\doWatch.md":"Order the given unit(s) to watch the given position or target (without radio messages). Use `objNull` as the target to order a unit to stop watching a position/target.\n\n\n---\n*Syntaxes:*\n\nunit(s) `doWatch` position\n\nunit(s) `doWatch`  target\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne doWatch markerPos \"MarkerMoveOne\";\n```\n\nThe unit named \"soldierOne\" will watch the position where the marker \"MarkerMoveOne\" is placed.\n\n*Example 2:*\n\n```sqf\n_soldierOne doWatch _eastSoldier;\n```\n\nThe unit named \"soldierOne\" will watch the unit named \"eastSoldier\".","commands\\drawArrow.md":"Draws a single line arrow on the map. To draw a color filled arrow of custom shape see `BIS_fnc_drawArrow`\n\n\n---\n*Syntaxes:*\n\nmap `drawArrow` [from, to, color]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\t_this select 0 drawArrow [\n\t\tplayer, player getRelPos [100, 0], [1,0,0,1]\n\t];\n}];\n```","commands\\drawEllipse.md":"Draws an ellipse on the map. Just like with marker or trigger area, negative `a` and `b` will result in hexagon.\n\n\n---\n*Syntaxes:*\n\nmap `drawEllipse` [centre, a, b, angle, color, fill]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\t_this select 0 drawEllipse [\n\t\tplayer, 10, 10, 0, [1, 0, 0, 1], \"\"\n\t];\n\t_this select 0 drawEllipse [\n\t\tplayer, -10, -10, 0, [1, 1, 1, 1], \"#(rgb,8,8,3)color(1,0.6,0,1)\"\n\t];\n\t_this select 0 drawEllipse [\n\t\tplayer, -10, -10, 90, [0, 0, 1, 1], \"\"\n\t];\n}];\n```","commands\\drawIcon.md":"Draws an icon on the map. This command needs to be called every frame, preferably using the `onDraw` UI Event Handler. Some useful icons can be found in <sqf inline>configfile >> \"CfgVehicleIcons\"\n```.\n\n\n---\n*Syntaxes:*\n\nmap `drawIcon` [texture, color, position, width, height, angle, text, shadow, textSize, font, align]\n\n---\n*Example 1:*\n\nRed icon with text:\n\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", {\n\t_this select 0 drawIcon [\n\t\t\"iconStaticMG\", // Custom images can also be used: getMissionPath \"\\myFolder\\myIcon.paa\"\n\t\t[1,0,0,1],\n\t\tgetPosASLVisual player,\n\t\t24,\n\t\t24,\n\t\tgetDirVisual player,\n\t\t\"Player Vehicle\",\n\t\t1,\n\t\t0.03,\n\t\t\"TahomaB\",\n\t\t\"right\"\n\t]\n}];\n```\n\n*Example 2:*\n\nGreen text only:\n\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", {\n\t_this select 0 drawIcon [\n\t\t\"#(rgb,1,1,1)color(1,1,1,1)\",\n\t\t[0,1,0,1],\n\t\tplayer,\n\t\t0,\n\t\t0,\n\t\t0,\n\t\tname player\n\t]\n}];\n```","commands\\drawIcon3D.md":"Draws an icon at the given position in the game world. This command has to be executed every frame. Use the [[Arma 3: Mission Event Handlers#Draw3D|Draw3D]] Mission Event Handler (which is executed every frame if the user can see the icon).<br>\nIn order for the results of this command to be visible through a `custom camera`, enable HUD with `cameraEffectEnableHUD`.<br>\n<sqf inline>showHUD false\n``` will hide the icon drawn by this command.<br>\nIn order for arrows to appear, the icon texture should exist. The arrow size is proportionate to the icon size.\n\n\n---\n*Syntaxes:*\n\n[[drawIcon3D]] [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows, offsetX, offsetY]\n\n---\n*Example 1:*\n\nIcon and text:\n\n```sqf\naddMissionEventHandler [\"Draw3D\", {\n\tdrawIcon3D [\"targetIcon.paa\", [1,1,1,1], ASLToAGL getPosASLVisual cursorTarget, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"];\n}];\n```\n\n*Example 2:*\n\nJust text:\n\n```sqf\naddMissionEventHandler [\"Draw3D\", {\n\tdrawIcon3D [\"\", [1,0,0,1], ASLToAGL getPosASLVisual cursorTarget, 0, 0, 0, \"Target\", 1, 0.05, \"PuristaMedium\"];\n}];\n```\n\n*Example 3:*\n\n```sqf\niconPos = player getPos [10, 0] vectorAdd [0,0,2];\naddMissionEventHandler [\"draw3D\", \n{\n\tdrawIcon3D \n\t[\n\t\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\Radar\\radar_ca.paa\",\n\t\t[0,0,1,1],\n\t\ticonPos,\n\t\t5,\n\t\t5,\n\t\tgetDirVisual player,\n\t\t\"COMPASS\",\n\t\t0,\n\t\t0.3,\n\t\t\"PuristaMedium\",\n\t\t\"center\",\n\t\ttrue\n\t];\n}];\n```\n\n*Example 4:*\n\nSince *(Reference GVI \"arma3|2.04\")*\n\n```sqf\npos = player getPos [10, 0] vectorAdd [0,0,2];\naddMissionEventHandler [\"draw3D\", \n{\n\t_k = 10 / (player distance pos);\n\tdrawIcon3D \n\t[\n\t\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\Radar\\radar_ca.paa\", \n\t\t[1,0,0,1], \n\t\tpos,\n\t\t1 * _k, \n\t\t1 * _k, \n\t\t0, \n\t\tname player, \n\t\t0, \n\t\t0.04 * _k, \n\t\t\"RobotoCondensed\",\n\t\t\"right\", \n\t\ttrue, \n\t\t0.005 * _k,  \n\t\t-0.035 * _k\n\t];\n}];\n```","commands\\drawLaser.md":"Draws a laserbeam and a lightpoint at the impact location of the laser.<br>\nThis command has to be executed every frame - see *(Reference HashLink \"Arma 3: Mission Event Handlers#Draw3D\")*.<br>\nLasers drawn with this command are subject to the same limitations as weapon attachment lasers. These limitations are defined in the **CfgIRLaserSettings** config class.\n\n\n---\n*Syntaxes:*\n\n`drawLaser` [position, direction, beamColor, dotColor, dotSize, beamThickness, beamMaxLength, isIR]\n\n---\n*Example 1:*\n\nGive the player a laser eye:\n\n```sqf\naddMissionEventHandler [\"Draw3D\", {\n\tdrawLaser [\n\t\teyePos player vectorAdd [0, 0, 0.1],\n\t\tgetCameraViewDirection player,\n\t\t[1000, 0, 0], // Bright red\n\t\t[],\n\t\t5,\n\t\t20,\n\t\t-1,\n\t\tfalse\n\t];\n}];\n```","commands\\drawLine.md":"Draw a line on the map. Can decrease framerate!\n\n\n---\n*Syntaxes:*\n\nmap `drawLine` [from, to, color]\n\n---\n*Example 1:*\n\n```sqf\n(findDisplay 12 displayCtrl 51) ctrlAddEventHandler [\"Draw\",\"\n\t(_this select 0) drawLine [\n\t\tgetPos player,\n\t\t[0,0,0],\n\t\t[0,0,1,1]\n\t];\n\"];\n```","commands\\drawLine3D.md":"Draws a line of a given colour between two 3D positions in the current frame. To be used mostly in a [[Arma 3: Mission Event Handlers#Draw3D|\"Draw3D\"]] `mission event handler`.\n\n\n---\n*Syntaxes:*\n\n[[drawLine3D]] [start, end, color]\n\n---\n*Example 1:*\n\n```sqf\nonEachFrame {\n\tdrawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]];\n};\n```","commands\\drawLink.md":"The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW.\n\n\n---\n*Syntaxes:*\n\nmap `drawLink` [from,to,param type,line type,color]\n\n---\n*Example 1:*\n\n-","commands\\drawLocation.md":"Used to draw locations in [[2D Editor]].\n\n\n---\n*Syntaxes:*\n\ncontrol `drawLocation` location\n\n---\n*Example 1:*\n\n-","commands\\drawPolygon.md":"Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other **draw*** commands and due to complexity, this command does not support filling of the polygon with color. Use `drawTriangle` command to construct and fill polygon shape as a workaround.\n\n\n---\n*Syntaxes:*\n\nmap `drawPolygon` [polygon, color]\n\n---\n*Example 1:*\n\n```sqf\ntest_polygon = [];\nfor \"_i\" from 1 to 12 do \n{\n\ttest_polygon pushBack (player getPos [10 + random 100, 360 / _i]);\n};\n\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\tparams [\"_control\"];\n\t_control drawPolygon [test_polygon, [0,0,1,1]];\n}];\n```\n\n*Example 2:*\n\nDraw a polygon by adjusting the **_radius}} and {{hl|_numVertices**\n\n```sqf\nvertices = [];\nprivate _numVertices = 2;\nprivate _numVertices = _numVertices max 3;\nprivate _radius = 100;\n\nfor \"_i\" from 1 to _numVertices do\n{\n\tvertices pushBack (player getRelPos [_radius, 360 / _numVertices * _i]);\n};\n\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\",\n{\n\tparams [\"_control\"];\n\t_control drawPolygon [vertices, [0,0,1,1]];\n}];\n```","commands\\drawRectangle.md":"Draws a rectangle on the map.<br> [[Image:drawRectangle.jpg|250px]]\n\n\n---\n*Syntaxes:*\n\nmap `drawRectangle`  [centre, halfWidth, halfHeight, angle, color, fill]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl drawRectangle [\n\tgetPos player,\n\t20,\n\t20,\n\tgetDir player,\n\t[0,0,1,1],\n\t\"\"\n];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl drawRectangle [\n\tplayer,\n\t10,\n\t20,\n\tgetDir player,\n\t[1,1,1,1],\n\t\"#(rgb,8,8,3)color(1,0,0,1)\"\n];\n```","commands\\drawTriangle.md":"[[Image:drawTriangle.jpg|right|250px]]\nDraws one to multiple triangles on the map.\n\n\n---\n*Syntaxes:*\n\nmap `drawTriangle` [vertices, color, fill]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \n{\n\t_this select 0 drawTriangle \n\t[\n\t\t[\n\t\t\t// triangle 1 start\n\t\t\tplayer getRelPos [100, 0],\n\t\t\tplayer getRelPos [100, -135],\n\t\t\tplayer getRelPos [100, 135]\n\t\t\t// triangle 1 end\n\t\t],\n\t\t[1,0,0,0.5],\n\t\t\"#(rgb,1,1,1)color(1,1,1,1)\"\t\t\n\t];\n}];\n```","commands\\driver.md":"Returns the driver of a vehicle.\n\n\n---\n*Syntaxes:*\n\n`driver` vehicle\n\n---\n*Example 1:*\n\n```sqf\n(driver _tank) action [\"getout\", _tank];\n```\n\n*Example 2:*\n\n```sqf\ndriver vehicle player isEqualTo player // check if player is driver of current vehicle\n```","commands\\drop.md":"Creates a particle effect.\nThis command is used to create smoke, fire and similar effects.\nThe particles are single polygons with single textures that always face the player.\nThey can be set to dynamically change their position, size, direction, can be set to different weights and to be more or less dependent on the wind.\n\n\n---\n*Syntaxes:*\n\n`drop` parameters\n\n---\n*Example 1:*\n\n```sqf\ndrop [\"cl_basic\", \"\", \"Billboard\", 1, 1,\n\t[-3.5 * (sin (direction xural)), -3.5 * (cos (direction xural)), 0],\n\t[random 0.1, random 0.1, random 0.5],\n\t1, 0.005, 0.0042, 0.7, [0.3,3],\n\t[[0.5,0.5,0.5,0], [0.7,0.7,0.7,0.5], [0.9,0.9,0.9,0]],\n\t[0,1,0,1,0,1],\n\t0.2, 0.2, \"\", \"\", xural];\n```","commands\\dynamicSimulationDistance.md":"A getter for `setDynamicSimulationDistance`.\n\n\n---\n*Syntaxes:*\n\n`dynamicSimulationDistance`  category\n\n---\n*Example 1:*\n\n```sqf\nhint str dynamicSimulationDistance \"Prop\";\n```","commands\\dynamicSimulationDistanceCoef.md":"A getter for `setDynamicSimulationDistanceCoef`\n\n\n---\n*Syntaxes:*\n\n`dynamicSimulationDistanceCoef` class\n\n---\n*Example 1:*\n\n```sqf\nhint str dynamicSimulationDistanceCoef \"IsMoving\";\n```","commands\\dynamicSimulationEnabled.md":"A getter for `enableDynamicSimulation`.\n\n\n---\n*Syntaxes:*\n\n`dynamicSimulationEnabled` object\n\n---\n*Example 1:*\n\n```sqf\nhint str dynamicSimulationEnabled _myObject;\n```","commands\\dynamicSimulationSystemEnabled.md":"A getter for `enableDynamicSimulationSystem`\n\n\n---\n*Syntaxes:*\n\n`dynamicSimulationSystemEnabled`\n\n---\n*Example 1:*\n\n```sqf\nhint str dynamicSimulationSystemEnabled;\n```","commands\\east.md":"Pre-defined variable for the eastern `side`.\n\n\n---\n*Syntaxes:*\n\n`east`\n\n---\n*Example 1:*\n\n`SQS`:\n<sqs>? side _unit == east : hint \"This is an eastern unit!\"</sqs>\n\n*Example 2:*\n\n`SQF`:\n\n```sqf\nif (side _unit == east) then\n{\n\thint \"This is an eastern unit!\";\n};\n```","commands\\echo.md":"Sends any text into the debugger console or the logfile. This command is only `present in internal version ` not in the retail version. Use `diag_log` instead!\n\n\n---\n*Syntaxes:*\n\n`echo`  text\n\n---\n*Example 1:*\n\n```sqf\necho \"Text in logfile\";\n```","commands\\edit3DENMissionAttributes.md":"Open a window with `scenario attribute` in given section.\n\n\n---\n*Syntaxes:*\n\n[[edit3DENMissionAttributes]]  section\n\n---\n*Example 1:*\n\n```sqf\nedit3DENMissionAttributes \"Multiplayer\";\n```","commands\\editObject.md":"Show the edit object dialog for the given object.\n\n\n---\n*Syntaxes:*\n\nmap `editObject` object\n\n---\n*Example 1:*\n\n-","commands\\editorSetEventHandler.md":"Sets given event handler of given editor.\n\n\n---\n*Syntaxes:*\n\nmap `editorSetEventHandler` [handler name,function]\n\n---\n*Example 1:*\n\n```sqf\n_map editorSetEventHandler [\"SelectObject\",\"\"];\n```","commands\\effectiveCommander.md":"Returns the effective commander of the vehicle. Effective commander is the player whom driver AI will listen to. So if in a tank there is a gunner and a commander and AI driver, if the `effectiveCommander` is gunner, then gunner pressing WASD will give AI orders to move. If gunner jumps out and then enters tank again, the `effectiveCommander` role most likely has changed to commander that remained in tank. Also the assignment seems to work on first come first served basis.\n\n\n---\n*Syntaxes:*\n\n`effectiveCommander` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_commander = effectiveCommander tank;\n```","commands\\elevatePeriscope.md":"Elevates periscope of a vehicle. Vehicles in Arma 3 which are compatible with this tech are Strider, remote laser designators, the robot arm on Eddie, etc.\nPlease note that SDV submarine has a different periscope, which is just an animated selection and could be raised and lowered with `animate` command.\n\n\n---\n*Syntaxes:*\n\nvehicle `elevatePeriscope` [turret, elevation, speed, blockUserInput]\n\n---\n*Example 1:*\n\n```sqf\n_eddie elevatePeriscope [[0], 0.75, 0.1];\n```","commands\\else.md":"Executes `else` code when `if` condition returns `false`.\n\n\n---\n*Syntaxes:*\n\nifCode `else`  elseCode\n\n---\n*Example 1:*\n\n```sqf\nif (a > b) then { c = 0 } else { c = 1 };\n```\n\n*Example 2:*\n\n```sqf\nif (a < b) then {\n\thint \"B is greater than A\";\n} else {\n\thint \"A is greater than B\";\n};\n```","commands\\emptyPositions.md":"Returns the number of given empty positions in the vehicle.\n\n\n---\n*Syntaxes:*\n\nvehicle `emptyPositions` position\n\n---\n*Example 1:*\n\n```sqf\n_freeCargoAndFFVPositions = vehicle player emptyPositions \"Cargo\";\n```\n\n*Example 2:*\n\n```sqf\n_freeCargoOnlyPositions = vehicle player emptyPositions \"CargoNoFFV\";\n```","commands\\enableAI.md":"Enables parts of the AI behavior that was disabled by `disableAI`.\n\n\n---\n*Syntaxes:*\n\nunit `enableAI` skilltype\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne enableAI \"Move\";\n```","commands\\enableAIFeature.md":"Enables/disables given AI feature.\n\n\n---\n*Syntaxes:*\n\nfeature `enableAIFeature`  enable\n\nunit `enableAIFeature`  [feature, enable]\n\n---\n*Example 1:*\n\n```sqf\n\"AwareFormationSoft\" enableAIFeature true;\n```\n\n*Example 2:*\n\n```sqf\nbob enableAIFeature [\"AUTOTARGET\", false];\n```","commands\\enableAimPrecision.md":"Set whether animation's aim precision affects weapon sway.\n\n\n---\n*Syntaxes:*\n\nunit enableAimPrecision enable\n\n---\n*Example 1:*\n\n```sqf\nplayer enableAimPrecision false;\n```","commands\\enableAttack.md":"Set if leader can issue attack commands to the soldiers in his group.\n\n\n---\n*Syntaxes:*\n\ngroup `enableAttack` enable\n\n---\n*Example 1:*\n\n```sqf\n_group1 enableAttack true;\n```","commands\\enableAudioFeature.md":"Enable/disable an audio feature, features are: \"lowpass\", \"building_interior\".\n\n\n---\n*Syntaxes:*\n\n`enableAudioFeature` [feature, enable]\n\n---\n*Example 1:*\n\nprevState = `enableAudioFeature` [\"lowpass\", `true`];","commands\\enableAutoStartUpRTD.md":"Toggle availability of the automated helicopter start-up and shutdown sequences.\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `enableAutoStartUpRTD` enable\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopterRTD enableAutoStartUpRTD true;\n```","commands\\enableAutoTrimRTD.md":"Toggle auto-trim for RTD helicopters.\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `enableAutoTrimRTD` enable\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopterRTD enableAutoTrimRTD true;\n```","commands\\enableCamShake.md":"Allows camera shake effects via `addCamShake`. If set to `false`, then a currently active shake effect will stop immediately.\nBy default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible.\n\n\n---\n*Syntaxes:*\n\n`enableCamShake`  value\n\n---\n*Example 1:*\n\n```sqf\nenableCamShake false;\n```","commands\\enableCaustics.md":"Enable/disable caustics drawing.\n\n\n---\n*Syntaxes:*\n\n`enableCaustics` bool\n\n---\n*Example 1:*\n\n```sqf\nenableCaustics true;\n```","commands\\enableChannel.md":"Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel.\n\n\n---\n*Syntaxes:*\n\nchannelID `enableChannel` enable\n\nchannelID `enableChannel` [chat, VoN]\n\n---\n*Example 1:*\n\n```sqf\n0 enableChannel false; // disable user ability to send voice and text on global channel\n```\n\n*Example 2:*\n\n```sqf\n0 enableChannel [true, false]; // enable user ability to send text but disable voice on global channel\n```","commands\\enableCollisionWith.md":"Cancels the effects of `disableCollisionWith`. The collision is always enabled for both objects in the arguments, i.e. vehicle1 with vehicle2 and vehicle2 with vehicle1\n\n\n---\n*Syntaxes:*\n\nvehicle1 `enableCollisionWith` vehicle2\n\n---\n*Example 1:*\n\n```sqf\n[_veh1, _veh2] remoteExecCall [\"enableCollisionWith\", 0, _veh1];\n```","commands\\enableCopilot.md":"Enables copilot actions, toggles availability of the actions related to copilots, such as taking over controls, suspending controls, etc. This command triggers the **\"ControlsShifted\"** event handler.\n\n\n---\n*Syntaxes:*\n\nvehicle `enableCopilot` enable\n\n---\n*Example 1:*\n\n```sqf\nif (!isCopilotEnabled myHeli) then\n{\n\tmyHeli enableCopilot true;\n};\n```","commands\\enableDebriefingStats.md":"Enable debriefing score table.\n\n\n---\n*Syntaxes:*\n\n`enableDebriefingStats` [left, top, width, height]\n\n---\n*Example 1:*\n\n```sqf\nenableDebriefingStats [0.1, 0.1, 0.8, 0.8];\n```","commands\\enableDiagLegend.md":"Enable or disable the legend for diagnostics. `Internal dev only!`\n\n\n---\n*Syntaxes:*\n\n`enableDiagLegend` enable\n\n---\n*Example 1:*\n\n```sqf\nenableDiagLegend false;\n```","commands\\enableDirectionStabilization.md":"Enables / disables direction stabilization of turrets. This command only has an effect if the current optic mode of the selected turret has **directionStabilized** configured in config.\n\n\n---\n*Syntaxes:*\n\nvehicle `enableDirectionStabilization` [enabled, turretPath]\n\n---\n*Example 1:*\n\n```sqf\nuav enableDirectionStabilization [false, [0]]; // Disable direction stabilization for the first turret\n```\n\n*Example 2:*\n\n```sqf\nuav enableDirectionStabilization [true, [0]];\n```\n\n*Example 3:*\n\n```sqf\nuav enableDirectionStabilization [false]; // Disable direction stabilization for the primary turret\n```","commands\\enableDynamicSimulation.md":"Enables or disables [[Arma 3: Dynamic Simulation]] for given non AI object.\n\n\n---\n*Syntaxes:*\n\nobject `enableDynamicSimulation` enable\n\n---\n*Example 1:*\n\n```sqf\n_myObject enableDynamicSimulation true;\n```","commands\\enableDynamicSimulationSystem.md":"Enables or disables the whole [[Arma 3: Dynamic Simulation]] system\n\n\n---\n*Syntaxes:*\n\n`enableDynamicSimulationSystem` enable\n\n---\n*Example 1:*\n\n```sqf\nenableDynamicSimulationSystem true;\n```","commands\\enableEndDialog.md":"Enables the execution of a custom camera sequence after the players death, coded in `onPlayerKilled.sqs`.\n\n\n---\n*Syntaxes:*\n\n`enableEndDialog`\n\n---\n*Example 1:*\n\n```sqf\nenableEndDialog;\n```","commands\\enableEngineArtillery.md":"Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire.\n\n\n---\n*Syntaxes:*\n\n`enableEngineArtillery` enabled\n\n---\n*Example 1:*\n\n```sqf\nenableEngineArtillery false;\n```","commands\\enableEnvironment.md":"Enable/disable environmental effects: ambient life and/or ambient sound.\n\n\nInfluenced sounds among others are:\n* bird sounds\n* insect sounds\n* waves\n* wind\n* rain\n* sounds produced by air conditioners and similar\n* {{GVI|arma3|2.06\n\n\n---\n*Syntaxes:*\n\n`enableEnvironment` enable\n\n`enableEnvironment` [ambientLife, ambientSound]\n\n---\n*Example 1:*\n\n```sqf\nenableEnvironment false; // identical to enableEnvironment [false, false]\n```\n\n*Example 2:*\n\n```sqf\nenableEnvironment [false, true];\n```","commands\\enableFatigue.md":"Enables/Disables the person's fatigue.\n\n\n---\n*Syntaxes:*\n\nunit `enableFatigue` enable\n\n---\n*Example 1:*\n\n```sqf\nplayer enableFatigue false;\n```\n\n*Example 2:*\n\n```sqf\n{ _x enableFatigue false; } forEach (units group player);\n```","commands\\enableInfoPanelComponent.md":"Controls availability of component to given object info panel.\n\n\n---\n*Syntaxes:*\n\nunit `enableInfoPanelComponent` [panelID, componentClassOrType, enable]\n\n[unit, turretPath] `enableInfoPanelComponent` [panelID, componentClassOrType, enable]\n\n---\n*Example 1:*\n\n```sqf\n// enables slingload assistant on player's vehicle right panel at driver position\n[vehicle player, [-1]] enableInfoPanelComponent [\"VehicleSystemsDisplayManagerComponentRight\", \"SlingLoadDisplay\", true];\n```","commands\\enableIRLasers.md":"Allows the AI to use IR lasers. Units should be in \"Combat\" `behaviour`.\n\n\n---\n*Syntaxes:*\n\nunitOrGroup `enableIRLasers` value\n\n---\n*Example 1:*\n\n```sqf\ngroup player enableIRLasers true;\n```","commands\\enableMimics.md":"Enables/disables mimics on a given unit.\n\n\n---\n*Syntaxes:*\n\nunit `enableMimics` enabled\n\n---\n*Example 1:*\n\n```sqf\ncursorTarget enableMimics false;\n```","commands\\enablePersonTurret.md":"Enables or disables firing from a vehicle cargo position. To get the turret path use `assignedVehicleRole` or `getCargoIndex` command.\n\n\n---\n*Syntaxes:*\n\nvehicle `enablePersonTurret` [turretPath, enable]\n\n---\n*Example 1:*\n\n```sqf\nheli enablePersonTurret [[1], true];\n```","commands\\enableRadio.md":"Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes.\n\n\n---\n*Syntaxes:*\n\n`enableRadio` state\n\n---\n*Example 1:*\n\n```sqf\nenableRadio false;\n```","commands\\enableReload.md":"Enable / disable reload when magazine is empty.\n\n\n---\n*Syntaxes:*\n\nobject `enableReload` enable\n\n---\n*Example 1:*\n\n```sqf\n_vehicle enableReload false;\n```","commands\\enableRopeAttach.md":"Enables or disables the ability to be attached to a rope end for the given entity.\n\n\n---\n*Syntaxes:*\n\nentity `enableRopeAttach` enable\n\n---\n*Example 1:*\n\n```sqf\nvehicle player enableRopeAttach false;\n```","commands\\enableSatNormalOnDetail.md":"Enables/Disables satellite normal map or detail maps.\n\n\n---\n*Syntaxes:*\n\n`enableSatNormalOnDetail` state\n\n---\n*Example 1:*\n\n```sqf\nenableSatNormalOnDetail true;\n```","commands\\enableSaving.md":"Enable / disable saving of the game with an optional autosave.\n\n\n---\n*Syntaxes:*\n\n`enableSaving` enable\n\n`enableSaving` [enable, save]\n\n---\n*Example 1:*\n\n```sqf\nenableSaving false;\t\t// saving disabled, does autosave - same as [false, true]\nenableSaving true;\t\t// saving enabled, does not autosave - same as [true, false]\n\nenableSaving [false, false];\t// saving disabled, does not autosave\nenableSaving [false, true];\t\t// saving disabled, does autosave\nenableSaving [true, false];\t\t// saving enabled, doesn't autosave\nenableSaving [true, true];\t\t// saving enabled, does autosave\n```","commands\\enableSentences.md":"Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.\n\n\n---\n*Syntaxes:*\n\n`enableSentences` enable\n\n---\n*Example 1:*\n\n```sqf\nenableSentences false;\n```","commands\\enableSimulation.md":"Enables / disables simulation for the given entity, e.g its animation and physics; it will still be able to take damage and report enemies.\nThis command will affect entity simulation only `locally`.\nFor a global and JIP enabled alternative, see `enableSimulationGlobal`.\n\n\n---\n*Syntaxes:*\n\nentity `enableSimulation` state\n\n---\n*Example 1:*\n\n```sqf\nplayer enableSimulation false;\n```","commands\\enableSimulationGlobal.md":"Enable or disable simulation for given entity, globally. Has the same effect as `enableSimulation` when used in singleplayer.\n\n\n---\n*Syntaxes:*\n\nentity `enableSimulationGlobal` enable\n\n---\n*Example 1:*\n\n```sqf\n_myObject enableSimulationGlobal false;\n```\n\n*Example 2:*\n\n```sqf\n[_object, false] remoteExec [\"enableSimulationGlobal\", 2];\n```","commands\\enableStamina.md":"Enable/disable stamina system\n\n\n---\n*Syntaxes:*\n\nunit `enableStamina` enabled\n\n---\n*Example 1:*\n\n```sqf\nplayer enableStamina true;\n```","commands\\enableStressDamage.md":"Toggles stress damage in ` Advanced Flight Model`, which otherwise could be manually toggles in game setting: **Options > Game > Helicopter Flight Model > Advanced > Stress Damage**.\n\n\n---\n*Syntaxes:*\n\n`enableStressDamage` state\n\n---\n*Example 1:*\n\n```sqf\nif (difficultyEnabledRTD) then { enableStressDamage true };\n```","commands\\enableTeamSwitch.md":"Enable / disable `Team Switch`. The default setting is enabled.\n\n\n---\n*Syntaxes:*\n\n`enableTeamSwitch` enable\n\n---\n*Example 1:*\n\n```sqf\nenableTeamSwitch true;\n```","commands\\enableTraffic.md":"Enable ambient traffic.\n\n\n---\n*Syntaxes:*\n\n`enableTraffic` enable\n\n---\n*Example 1:*\n\n```sqf\nenableTraffic true;\n```","commands\\enableUAVConnectability.md":"Enables unit's AV terminal(s) connecting to UAV.\n\n\n---\n*Syntaxes:*\n\nobject `enableUAVConnectability` [uav, checkAllItems]\n\n---\n*Example 1:*\n\n```sqf\nunit enableUAVConnectability [uav, true];\n```","commands\\enableUAVWaypoints.md":"Enables/disables the option for player to set waypoints for UAV in AV terminal.\n\n\n---\n*Syntaxes:*\n\nuav `enableUAVWaypoints` enable\n\n---\n*Example 1:*\n\n```sqf\n_uav enableUAVWaypoints false;\nhint str waypointsEnabledUAV _uav; // returns false\n```","commands\\enableVehicleCargo.md":"Enable/disable option to transport other vehicles (if configured) or be transported.\n\n\n---\n*Syntaxes:*\n\nvehicle `enableVehicleCargo` enable\n\n---\n*Example 1:*\n\n```sqf\nvehicle enableVehicleCargo true;\n```","commands\\enableVehicleSensor.md":"Enable/disable given sensor\n\n\n---\n*Syntaxes:*\n\nvehicle `enableVehicleSensor` [componentName, enabled]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player enableVehicleSensor [\"PassiveRadarSensorComponent\", false]; // disables passive radar\n```","commands\\enableWeaponDisassembly.md":"Enables or disables disassembly of static weapons. Could be applied to local `player`, to another unit or to static weapon directly.\n\n\n---\n*Syntaxes:*\n\n`enableWeaponDisassembly` enable\n\nentity `enableWeaponDisassembly`  enable\n\n---\n*Example 1:*\n\n```sqf\nenableWeaponDisassembly false;\n```\n\n*Example 2:*\n\n```sqf\nsoldier1 enableWeaponDisassembly false;\n```\n\n*Example 3:*\n\n```sqf\nmortar1 enableWeaponDisassembly false;\n```","commands\\endl.md":"Creates a string containing a line break, similar to `lineBreak` for `text`. The name is inspired by c++ std::endl (`end` `l`ine).\nThe command returns **\"\\r\\n\"**, which contains control characters rather than printable characters:\n\n```sqf\nhint str count \"\\r\\n\";\t// 4\nhint str count endl;\t// 2\n```\nThe line break works for `diag_log` and `ctrlSetText`.\nIt does not work with the `hint` because `hint` interprets printable \"\\n\" as line break instead.\nAlternatively one can use `toString` command to get other characters.\n\n\n---\n*Syntaxes:*\n\n`endl`\n\n---\n*Example 1:*\n\n```sqf\ndiag_log (\"line1\" + endl + \"line2\");\n```\n\n*Example 2:*\n\n```sqf\n_ctrl = findDisplay 46 ctrlCreate [\"RscTextMulti\", -1];\n_ctrl ctrlSetPosition [0,0,1,1];\n_ctrl ctrlCommit 0;\n_ctrl ctrlSetText format [\"line1%1line2%1line3\", endl];\n```","commands\\endLoadingScreen.md":"Finishes loading screen started by `startLoadingScreen`.\n\n\n---\n*Syntaxes:*\n\n`endLoadingScreen`\n\n---\n*Example 1:*\n\n```sqf\nstartLoadingScreen [\"Loading My Mission\"];\n// code\nprogressLoadingScreen 0.5;\n// code\nendLoadingScreen;\n```\n\n*Example 2:*\n\n```sqf\n// this structure prevents error-prone or lengthy code to miss endLoadingScreen.\nprivate _maxTime = diag_tickTime + 30; // max 30s of loading\n\nstartLoadingScreen [\"Loading\"];\nprivate _handle = [] spawn {\n\t// code that may crash or take too long\n};\n\nwaitUntil { sleep .01; scriptDone _handle || diag_tickTime > _maxTime };\nendLoadingScreen;\n```","commands\\endMission.md":"Finish the mission.\n`Mission saves are deleted`. Use `failMission` if they should not.\n\n\n---\n*Syntaxes:*\n\n`endMission` endType\n\n---\n*Example 1:*\n\n```sqf\nendMission \"END1\";\n```","commands\\engineOn.md":"Activates and deactivates the engine of a vehicle.\n\n\n---\n*Syntaxes:*\n\nvehicle `engineOn`  state\n\n---\n*Example 1:*\n\n```sqf\nif (!isEngineOn _jeep) then { _jeep engineOn true; };\n```\n\n*Example 2:*\n\n```sqf\nwaitUntil { player == driver _jeep; };\nvehicle player engineOn true;\n```","commands\\enginesIsOnRTD.md":"Returns which engines are producing some work.\n\n\n---\n*Syntaxes:*\n\n`enginesIsOnRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_enginesTaru = enginesIsOnRTD _taru; // returns [true, true]\n```","commands\\enginesPowerRTD.md":"Returns power produced by engines in Watts.\n\n\n---\n*Syntaxes:*\n\n`enginesPowerRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_array = enginesPowerRTD vehicle player;\n```","commands\\enginesRpmRTD.md":"Returns all engines RPM.\n\n\n---\n*Syntaxes:*\n\n`enginesRpmRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\nenginesRpmRTD RTD_helicopter params [\"_RPMEngine1\",\"_RPMEngine2\"];\n```","commands\\enginesTorqueRTD.md":"Torque produced by engines in `N·m` (Newton &times; meter).\n\n\n---\n*Syntaxes:*\n\n`enginesTorqueRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_UH80_E1 = (enginesTorqueRTD _UH80) select 0; // engine 1 Torque\n_UH80_E2 = (enginesTorqueRTD _UH80) select 1; // engine 2 Torque\n```","commands\\entities.md":"Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored with the primary syntax.\n\n\n---\n*Syntaxes:*\n\n`entities` type\n\n`entities` [typesInclude, typesExclude, includeCrews, excludeDead]\n\n---\n*Example 1:*\n\n```sqf\n_allcars = entities \"Car\";\n```\n\n*Example 2:*\n\nReturn all alive entities on the map:\n\n```sqf\n_allalive = entities [[], [], true, true];\n```\n\n*Example 3:*\n\nReturn dead and alive entities but logic:\n\n```sqf\n_notlogic = entities [[], [\"Logic\"], true];\n```\n\n*Example 4:*\n\nReturn all alive `west` soldiers on foot:\n\n```sqf\n_footsoldiers = entities [[\"SoldierWB\"], [], false, true];\n```","commands\\environmentEnabled.md":"Returns status of `enableEnvironment` command\n\n\n---\n*Syntaxes:*\n\n`environmentEnabled`\n\n---\n*Example 1:*\n\n```sqf\n_enabled = environmentEnabled;\n```","commands\\environmentVolume.md":"Returns the current environment volume (set by `fadeEnvironment`)\n\n\n---\n*Syntaxes:*\n\n`environmentVolume`\n\n---\n*Example 1:*\n\n```sqf\nhint str environmentVolume;\n```","commands\\estimatedEndServerTime.md":"Estimated end of MP game in seconds converted to `serverTime`.\n\n\n---\n*Syntaxes:*\n\n`estimatedEndServerTime`\n\n---\n*Example 1:*\n\nEstimated minutes left: \n\n```sqf\n_min = (ceil (estimatedEndServerTime - serverTime) / 60);\n```","commands\\estimatedTimeLeft.md":"Sets the estimated time left in the game that is shown in the \"Game in progress\" screen or in the master browser.\n\n\n---\n*Syntaxes:*\n\n`estimatedTimeLeft` seconds\n\n---\n*Example 1:*\n\n```sqf\nestimatedTimeLeft 600; // 10 min\n```\n\n*Example 2:*\n\n`{{ofp}}:` for missions with a hard set limit adjusted via `[[Description.ext#titleParam%, valuesParam%, defValueParam%, textParam%|param1]]`, the following example can be used in the `init.sqs` file:\n<sqs>estimatedTimeLeft param1</sqs>","commands\\evalObjectArgument.md":"Return argument in mission editor of a given object.\n\n\n---\n*Syntaxes:*\n\nmap `evalObjectArgument` [object, argument]\n\n---\n*Example 1:*\n\n```sqf\n// returns string \"[1009.0351, 1319.4928]\"\n(findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"]\n\n// returns array [1009.0351, 1319.4928]\n(findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]\n```","commands\\everyBackpack.md":"Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.\n\n\n---\n*Syntaxes:*\n\n`everyBackpack` box\n\n---\n*Example 1:*\n\n```sqf\neveryBackpack cursorTarget;\n```\n\n*Example 2:*\n\n```sqf\n_vehicleBackpacks = everyBackpack vehicle player;\n```","commands\\everyContainer.md":"Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.\n\n\n---\n*Syntaxes:*\n\n`everyContainer` object\n\n---\n*Example 1:*\n\n```sqf\neveryContainer cursorTarget;\n/*\n\treturns e.g\n\t[\n\t\t[\"V_PlateCarrier1_rgr\",2bc06b00# 163955: dummyweapon.p3d],\n\t\t[\"U_B_CombatUniform_mcam\",2bc07900# 163954: dummyweapon.p3d]\n\t]\n*/\n```","commands\\exec.md":"Execute a script using (the deprecated but still available) `SQS Syntax`. `SQF Syntax` (and `execVM`) is the most recent scripting language.<br>\nThe magic variable `_time` used within the script contains the elapsed time in seconds since the script started.\n\n\n---\n*Syntaxes:*\n\nargument `exec` script\n\n---\n*Example 1:*\n\n<sqs>[player, _jeep] exec \"getin.sqs\";</sqs>","commands\\execEditorScript.md":"Execute an editor script for the specified object.\n\n\n---\n*Syntaxes:*\n\nmap `execEditorScript` [object,script]\n\n---\n*Example 1:*\n\n```sqf\n_map execEditorScript [\"_team_1\",\"create\"];\n```","commands\\execFSM.md":"Execute scripted `FSM` and return the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in **_this** variable inside FSM. Variables set inside FSMs can be read/modified externally, using `setFSMVariable` and `getFSMVariable` commands.<br>\n<br>\nThe return value is the FSM handle; it can be used to determine (via `completedFSM`) when the FSM has finished.\n\n\n---\n*Syntaxes:*\n\narguments `execFSM` fsmFilePath\n\n`execFSM` fsmFilePath\n\n---\n*Example 1:*\n\n```sqf\n_id = player execFSM \"test.fsm\";\n```\n\n*Example 2:*\n\n```sqf\n_handle = [_a, _b, _c] execFSM \"test.fsm\";\n```\n\n*Example 3:*\n\n```sqf\n_handle = execFSM \"test.fsm\";\n```","commands\\execVM.md":"Compiles and adds an `SQF` `script` to the `scheduler` queue and returns script handle (see also *(Reference HashLink \"#Example 4\")*).\nThe script does not execute immediately upon running `execVM` command but with some delay depending on the VM's scripts queue and engine load.\n\n\n---\n*Syntaxes:*\n\narguments `execVM` filename\n\n`execVM` filename\n\n---\n*Example 1:*\n\n```sqf\nexecVM \"test.sqf\";\n```\n\n*Example 2:*\n\n```sqf\n_handle = player execVM \"test.sqf\";\nwaitUntil { scriptDone _handle };\n```\nThe following is also possible in {{arma3}}:\n\n```sqf\nprivate _handle = execVM \"123.sqf\";\nwaitUntil { isNull _handle };\n```\n\n*Example 3:*\n\n```sqf\n[player, 0.75] execVM \"setDamage.sqf\";\n```\nsetDamage.sqf:\n\n```sqf\nparams [\"_unit\", \"_damage\"];\n_unit setDamage _damage;\n```\n\n*Example 4:*\n\n`execVM` equivalence:\n\n```sqf\nprivate _handle = _args execVM \"someFile.sqf\";\n// is practically identical to\nprivate _handle = _args spawn compile preprocessFileLineNumbers \"someFile.sqf\";\n```","commands\\exit.md":"Stops the execution of a `SQS script`.\n\nIt is ignored in `SQF Scripts`.\n\n\n---\n*Syntaxes:*\n\n`exit`\n\n---\n*Example 1:*\n\n`SQS Syntax`:\n<sqs>? not alive player : exit</sqs>","commands\\exitWith.md":"Exits the `current` code scope. Often used for exiting `do`, `for`, `count`, `forEach` or the whole script.\n\n\n---\n*Syntaxes:*\n\nifType `exitWith` code\n\n---\n*Example 1:*\n\n```sqf\nsystemChat \"start\";\nprivate _condition = true;\n\nif (_condition) then\n{\n\tif (true) exitWith\n\t{\n\t\tsystemChat \"exiting if _condition scope\";\n\t};\n\tsystemChat \"never shown\";\n};\n\nsystemChat \"exiting #1 worked\";\n\nif (true) exitWith\n{\n\tsystemChat \"exiting the main scope = leaving the whole script\";\n};\n\nsystemChat \"never shown - the script has already ended\";\n```\n\n*Example 2:*\n\n```sqf\nfor \"_j\" from 1 to 10 do\n{\n\tsystemChat format [\"%1\", _j];\n\n\t// the for loop will cease and code execution will continue after the end of the loop\n\tif (_j == 5) exitWith\n\t{\n\t\tsystemChat \"5 is enough\";\n\t};\n};\nsystemChat \"Complete\";\n```\n\n*Example 3:*\n\nMost loops will also terminate when their scope is exited. To exit and terminate scopes which are called every frame such as `onEachFrame` and `waitUntil` use the following examples:\n\n\n```sqf\nonEachFrame {\n\tif (!alive player) exitWith\n\t{\n\t\tonEachFrame {};\n\t};\n};\n```\n\n\n```sqf\n_time = time + 10;\nwaitUntil \n{\n\tif (time > _time) exitWith { true };\n\tfalse\n};\n```\n\n*Example 4:*\n\n```sqf\nwhile { true } do\n{\n\tif (alive player) then\n\t{\n\t\tif (time > 300) exitWith // [wrong] - it will only leave the \"if alive player\" scope, remaining in the \"while true\" loop forever\n\t\t{\n\t\t\thint \"exiting\";\n\t\t};\n\t};\n};\n```\n\n*Example 5:*\n\n```sqf\nif (_condition) exitWith\n{\n\thint \"reached\";\n};\n// else { hint \"not reached\" }; // [wrong] - using else does not work and makes no sense here\n```\n\n```sqf\nif (_condition) exitWith\n{\n\thint \"reached\";\n};\nhint \"not reached\"; // [correct] - if _condition is met, the scope has already been exited by now\n```","commands\\exp.md":"Exponential function with the base [e](https://en.wikipedia.org/wiki/E_(mathematical_constant)). Equal to **e^x**.\n\n\n---\n*Syntaxes:*\n\n`exp` x\n\n---\n*Example 1:*\n\n```sqf\n_e = exp 1; // Returns e (2.7182...)\n```\n\n*Example 2:*\n\n```sqf\nln exp 1; // Returns 1\n```","commands\\expectedDestination.md":"Return expected destination of unit as an array.\n\n\n---\n*Syntaxes:*\n\n`expectedDestination` person\n\n---\n*Example 1:*\n\n```sqf\n_data = expectedDestination player;\n```","commands\\exportJIPMessages.md":"Export list of JIP to a file. <br>Special: BattlEye's RCON variant of this command is #exportJIPqueue (see also `Multiplayer_Server_Commands`)\n\n\n---\n*Syntaxes:*\n\n`exportJIPMessages` fileName\n\n---\n*Example 1:*\n\n```sqf\nexportJIPMessages \"myFileNameWithoutExtension\";\n```","commands\\exportLandscapeXYZ.md":"Exports landscape as XYZ file.\n\n\n---\n*Syntaxes:*\n\n`exportLandscapeXYZ` filename\n\n---\n*Example 1:*\n\n```sqf\nexportLandscapeXYZ \"myLandscape.txt\";\n```","commands\\eyeDirection.md":"Returns the direction object is watching (eyes, or a vehicle primary observer).\n\n\n---\n*Syntaxes:*\n\n`eyeDirection` unit\n\n---\n*Example 1:*\n\n```sqf\nCan = \"Land_Can_V3_F\" createVehicle position player;\nonEachFrame {\n\tCan setPosASL [\n\t\t(eyePos player select 0) + (eyeDirection player select 0),\n\t\t(eyePos player select 1) + (eyeDirection player select 1),\n\t\t(eyePos player select 2) + (eyeDirection player select 2)\n\t]\n};\n```\n\n*Example 2:*\n\nDraw AI eye direction (green) and weapon direction (red) in 3D:\n\n```sqf\nBob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"];\nBob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"];\nonEachFrame {\n\t_beg = ASLToAGL eyePos Bob;\n\t_endE = (_beg vectorAdd (eyeDirection Bob vectorMultiply 100));\n\tdrawLine3D [ _beg, _endE, [0,1,0,1]];\n\t_endW = (_beg vectorAdd (Bob weaponDirection currentWeapon Bob vectorMultiply 100));\n\tdrawLine3D [_beg, _endW, [1,0,0,1]];\n};\n```","commands\\eyePos.md":"Returns the object's eyes / main turret position.\n\n\n---\n*Syntaxes:*\n\n`eyePos` object\n\n---\n*Example 1:*\n\n```sqf\n_eyesPos = eyePos player;\n```","commands\\face.md":"Returns the face of a person.\n\n\n---\n*Syntaxes:*\n\n`face` person\n\n---\n*Example 1:*\n\n```sqf\nface player;\n```","commands\\faction.md":"Gets unit faction. Factions were introduced in {{arma2}} and are defined under `CfgFactionClasses`.\n\n\n---\n*Syntaxes:*\n\n`faction` unitName\n\n---\n*Example 1:*\n\n```sqf\nprivate _playerFaction = faction player;\n```","commands\\fadeEnvironment.md":"Changes the master environment volume smoothly within the given time and is different from `enableEnvironment` global mute option. The default volume is 1.<br>\nInfluenced sounds among others are:\n{{Columns|2|\n* forest sounds (birds, crickets, ...)\n* waves\n* wind\n* rain\n* object sounds (air conditioners, ...)\n* {{GVI|arma3|2.06\n\n\n---\n*Syntaxes:*\n\ntime `fadeEnvironment` volume\n\n---\n*Example 1:*\n\n```sqf\n5 fadeEnvironment 0.1;\n```","commands\\fadeMusic.md":"Changes the current music volume to the given value smoothly within the given time.\n\n\n---\n*Syntaxes:*\n\ntime `fadeMusic`  volume\n\n---\n*Example 1:*\n\n```sqf\n5 fadeMusic 0; // fade current music volume to 0 in 5 sec\n```","commands\\fadeRadio.md":"Changes the radio volume smoothly within the given time.\n\n\n---\n*Syntaxes:*\n\ntime `fadeRadio`  volume\n\n---\n*Example 1:*\n\n```sqf\n5 fadeRadio 0.1;\n```","commands\\fadeSound.md":"Changes the sound volume smoothly within the given time.\n\n\n---\n*Syntaxes:*\n\ntime `fadeSound`  volume\n\n---\n*Example 1:*\n\n```sqf\n5 fadeSound 0;\n```","commands\\fadeSpeech.md":"Changes the master speech volume smoothly within the given time. The default volume is 1.0. Some of the sounds that play through speech channel are:\n* [[Arma 3: Difficulty Settings| Tactical Ping]] sound\n* `playSound` when `isSpeech` argument is `true`\n* [[say3D]] when `isSpeech` argument is `true`\n\n\n---\n*Syntaxes:*\n\ntime `fadeSpeech`  volume\n\n---\n*Example 1:*\n\n```sqf\n5 fadeSpeech 0.1;\n```","commands\\failMission.md":"Finish the mission. If the server is set to run persistent mission, `failMission` will not end the mission when last player gets kicked to the lobby. Use `endMission` to end the mission.\n\nThe end type can be:\n* \"CONTINUE\" - this is default type, basically an alias to do nothing\n* \"KILLED\"\n* \"LOSER\"\n* \"END1\"\n* \"END2\"\n* \"END3\"\n* \"END4\"\n* \"END5\"\n* \"END6\"\n\n`Mission saves won't be deleted`.<br><br>\n\n\n---\n*Syntaxes:*\n\n`failMission` endtype\n\n---\n*Example 1:*\n\n```sqf\nfailMission \"LOSER\";\n```","commands\\fileExists.md":"Checks if file on given path exists. Uses same path resolve code as `loadFile`.\n\n\n---\n*Syntaxes:*\n\npath\n\n---\n*Example 1:*\n\n```sqf\nfileExists \"\\a3\\mySuperPath\\bestFileEver.paa\"; // returns false\n```\n\n*Example 2:*\n\n```sqf\nprivate _path = \"a3\\functions_f_mp_mark\\revive\\_addaction_revive.inc\";\nif (fileExists _path) then { loadFile _path } else { diag_log format [\"File (%1) does not exist!\", _path] };\n```\n\n*Example 3:*\n\n```sqf\n// Sometimes it might be better to check if a file exists instead of checking if path is empty (\"\")\nprivate _class = \"ModuleObjectiveRaceFinish_F\";\nprivate _picture = getText (configFile >> \"CfgVehicles\" >> _class >> \"editorPreview\");\nif !(fileExists _picture) then { _picture = getText (configFile >> \"CfgVehicles\" >> _class >> \"portrait\") };\nif !(fileExists _picture) then { _picture = getText (configFile >> \"CfgVehicles\" >> _class >> \"icon\") };\nif !(fileExists _picture) then { _picture = getText (configFile >> \"CfgVehicles\" >> _class >> \"picture\") };\nif !(fileExists _picture) then { systemChat \"No valid picture found!\" } else { systemChat _picture };\n```","commands\\fillWeaponsFromPool.md":"Adds magazines from the campaign pool to the given unit, depending on his weapons. Available in campaigns only.\n\n\n---\n*Syntaxes:*\n\n`fillWeaponsFromPool`  unit\n\n---\n*Example 1:*\n\n```sqf\nfillWeaponsFromPool _soldier;\n```","commands\\find.md":"Searches for an array element within array or a ANSI string within a ANSI string.\n\n\n---\n*Syntaxes:*\n\narray `find` element\n\nstring `find` substring\n\nstring `find` [substring, indexStart]\n\n---\n*Example 1:*\n\n```sqf\n[\"Apples\", \"Oranges\", \"Pears\"] find \"Oranges\"; // returns 1\n```\n\n*Example 2:*\n\n```sqf\n[1, [2], [[3]]] find [[3]]; // returns 2 - does not work in OFP\n```\n\n*Example 3:*\n\n```sqf\nif (magazines player find \"Strela\" != -1) then { hint \"You've got Strela!\"; };\n```\n\n*Example 4:*\n\n```sqf\nhint str (\"japa is the man!\" find \"the man!\"); // returns 8\n```\n\n*Example 5:*\n\n```sqf\n\"abc\" find \"\"; // returns 0\n```\n\n*Example 6:*\n\n```sqf\n\"abcdefghijklmnopqrstuvxyz\" find [\"z\", 20];\n```","commands\\findAny.md":"Returns the zero-based index of the first element in array A that also exists in array B. If no common elements exist it returns -1.<br>\nSimilar in functionality as [[find#Syntax 1|find's first syntax]], but the second parameter is an array of elements to find.\n\n\n---\n*Syntaxes:*\n\nsearchIn `findAny` toFind\n\n---\n*Example 1:*\n\n```sqf\n[0,1,2,3,4] findAny [2,4,6,8]; // returns 2\n```\n\n*Example 2:*\n\n```sqf\n[0,1,2,3,4] findAny [8,6,4,2]; // returns 2\n```\n\n*Example 3:*\n\n```sqf\n[0,1,2,3,4] findAny [5,7,9]; // returns -1\n```","commands\\findCover.md":"Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional.\n\n\n---\n*Syntaxes:*\n\nobject `findCover` [position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]\n\n---\n*Example 1:*\n\n```sqf\nunit1 findCover [ASLToATL aimPos unit2, 30];\n```","commands\\findDisplay.md":"Finds a display by its IDD which can either be defined in `missionConfigFile` (`description.ext`) or `configFile` (`config.cpp`)<br>\nIf the specified display cannot be found, `displayNull` is returned.\n\n\n---\n*Syntaxes:*\n\n`findDisplay` idd\n\n---\n*Example 1:*\n\n```sqf\n[] spawn\n{\n\twaitUntil { !isNull findDisplay 46 };\n\thint \"Mission Display is now available!\";\n};\n```\n\n*Example 2:*\n\n```sqf\n_display = findDisplay 1;\n```","commands\\findEditorObject.md":"Return object that matches the provided reference.\n\n\n---\n*Syntaxes:*\n\nmap `findEditorObject` value\n\n---\n*Example 1:*\n\n-","commands\\findEmptyPosition.md":"Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [radius] from the [center] and looks as far away as [radius + maxDistance].\nThis command ignores moving objects present within the search area. The search area can be preloaded with `findEmptyPositionReady` command.\n\n\n---\n*Syntaxes:*\n\ncenter `findEmptyPosition` [radius, maxDistance, vehicleType]\n\n---\n*Example 1:*\n\n```sqf\n_position = (getPosATL player) findEmptyPosition [0,100];\n```\n\n*Example 2:*\n\n```sqf\n_position = _center findEmptyPosition [10,100,\"UH60M_EP1\"];\n```\n\n*Example 3:*\n\nCheck if exact position is empty:\n\n```sqf\n_position = _center findEmptyPosition [0, 0, \"B_Boat_Armed_01_minigun_F\"];\n```","commands\\findEmptyPositionReady.md":"Preloads area to be used with `findEmptyPosition` command and returns `true` when area is ready.\nThe size of the area preloaded is from **center - radius - maxDistance}} to {{hl|center + radius + maxDistance**\n\n\n---\n*Syntaxes:*\n\ncenter `findEmptyPositionReady` [radius, maxDistance]\n\n---\n*Example 1:*\n\nPreload aread within 500m:\n\n```sqf\n_ready = _center findEmptyPositionReady [0, 500];\n```","commands\\findIf.md":"Searches for an element within array for which the code evaluates to true. Returns the zero-based index on success or -1 if not found.<br>\nCode on the right side of the command is evaluated for each element of the array, processed element can be referenced in code as `_x`.\n\n\n---\n*Syntaxes:*\n\narray `findIf` code\n\n---\n*Example 1:*\n\n```sqf\n[unit1, unit2, unit3] findIf {not alive _x}; // return index of the first dead unit)\n```\n\n*Example 2:*\n\n```sqf\n// two ways how to 'wait for all units to be dead':\nwaitUntil { [unit1, unit2, unit3] findIf { alive _x } == -1 };\t// fast, terminates as soon as it finds a living unit\nwaitUntil { { alive _x } count [unit1, unit2, unit3] == 0 };\t// slow, always goes through all array elements\n```","commands\\findNearestEnemy.md":"Finds the nearest enemy to the specified position. Returns a null object if the object's group does not `know about` any enemies. This command will return nearest object that is known to the unit and is considered enemy. An empty vehicle that is part of enemy group assets (see `addVehicle`) can be returned as valid nearest target.\n\n\n---\n*Syntaxes:*\n\nobject `findNearestEnemy` position\n\n---\n*Example 1:*\n\n```sqf\n_myNearestEnemy = (units _myGroup select 0) findNearestEnemy player;\n```\n\n*Example 2:*\n\n```sqf\n_myNearestEnemy = player findNearestEnemy player;\n```","commands\\finishMissionInit.md":"Finish world initialization before mission is launched.\n\n\n---\n*Syntaxes:*\n\n`finishMissionInit`\n\n---\n*Example 1:*\n\n`finishMissionInit`","commands\\finite.md":"Returns `true` if the provided number is finite (not infinite and a valid number). \n{{ Feature | Informative | \n* Maximum finite `Number` : 3.40282e+38\n* Minimum finite `Number` : -3.40282e+38 }}\n\n\n---\n*Syntaxes:*\n\n`finite` number\n\n---\n*Example 1:*\n\n```sqf\nfinite 123; // returns true\n```\n\n*Example 2:*\n\n```sqf\nfinite log -1; // returns false\n```\n\n*Example 3:*\n\n```sqf\nif (not finite log -1) then { hint \"Infinite\" };\n```","commands\\fire.md":"Forces a unit to fire the given weapon.\n\n\n---\n*Syntaxes:*\n\nunit `fire` muzzle\n\nunit `fire` [muzzle, mode, magazine]\n\n---\n*Example 1:*\n\n```sqf\n_soldier fire \"M16\";\n```\n\n*Example 2:*\n\n```sqf\n_soldier fire \"SmokeShellMuzzle\";\n```\n\n*Example 3:*\n\n```sqf\n_soldier fire [\"SmokeShellMuzzle\", \"SmokeShellMuzzle\", \"SmokeShellRed\"];\n```\n\n*Example 4:*\n\n```sqf\nplayer playActionNow \"PutDown\";\nplayer selectWeapon \"DemoChargeMuzzle\";\nplayer fire [\"DemoChargeMuzzle\", \"DemoChargeMuzzle\", \"DemoCharge_Remote_Mag\"];\nplayer setWeaponReloadingTime [player, \"DemoChargeMuzzle\", 0];\n```","commands\\fireAtTarget.md":"Remotely forces a unit to fire the given weapon. See also `BIS_fnc_fire`.\n\n\n---\n*Syntaxes:*\n\nsourceVehicle `fireAtTarget` [targetVehicle, weaponMuzzleName]\n\n---\n*Example 1:*\n\n```sqf\n_handle = this fireAtTarget [groundtarget1,\"HellfireLauncher\"];\n```\n\n*Example 2:*\n\n```sqf\n_handle = Igla_AA_pod_TK_EP1 fireAtTarget [_helicopter, currentWeapon Igla_AA_pod_TK_EP1];\n```\n\n*Example 3:*\n\n```sqf\n_handle = Igla_AA_pod_TK_EP1 fireAtTarget [helicopter];\n```","commands\\firstBackpack.md":"Returns the first stored backpack.\n\n\n---\n*Syntaxes:*\n\n`firstBackpack` box\n\n---\n*Example 1:*\n\n```sqf\nmyVariable = firstBackpack myBox;\n```","commands\\flag.md":"Returns the original flag pole of the flag the unit is carrying.\n\n\n---\n*Syntaxes:*\n\n`flag` unit\n\n---\n*Example 1:*\n\n```sqf\n_flag = flag _soldier;\n```","commands\\flagAnimationPhase.md":"Returns flag position on the flag pole.\n\n\n---\n*Syntaxes:*\n\n`flagAnimationPhase`  flag\n\n---\n*Example 1:*\n\n```sqf\nflagAnimationPhase _flag1;\n```","commands\\flagOwner.md":"Returns the global owner of a flag. A getter for `setFlagOwner`. Note that owner of a flag is `Object` rather than `Number`, as how it is usually with other `owner` commands\n\n\n---\n*Syntaxes:*\n\n`flagOwner`  flag\n\n---\n*Example 1:*\n\n```sqf\n_person = flagOwner _flagOne;\n```","commands\\flagSide.md":"Returns `Side` of the `local` instance of the flag. A getter for `setFlagSide`.\n\n\n---\n*Syntaxes:*\n\n`flagSide` flag\n\n---\n*Example 1:*\n\n```sqf\n_flagSide =  flagSide flag;\n```","commands\\flagTexture.md":"Returns texture of the `local` instance of the flag. A getter for `setFlagTexture`. It will not return flag textures applied using `forceFlagTexture`, use `getForcedFlagTexture` for that.\n\n\n---\n*Syntaxes:*\n\n`flagTexture` flagCarrier\n\n---\n*Example 1:*\n\n```sqf\n_flagTexture = flagTexture _flag1;\n```","commands\\flatten.md":"Flattens an array.\n\n\n---\n*Syntaxes:*\n\n`flatten` array\n\n---\n*Example 1:*\n\n```sqf\nflatten [1, [2], [[3]], [[[4]]]]; // returns [1, 2, 3, 4]\n```\n\n*Example 2:*\n\n```sqf\nflatten getUnitLoadout player;\n```","commands\\fleeing.md":"Checks if a unit is fleeing.\n<br><br>\nNotes:\n* Fleeing only affects AI led groups.\n* Only the group as a whole can flee (or not).\n* The courage of the AI group is based on the group's leader [[Arma_3_AI_Skill#Sub-Skills|courage subskill]].\n* Each group has a max strength (summed \"armor\" of all infantry units - plus armor when inside vehicles).\n* If the group losses by injury/damage or death/destruction are higher than the max strength, multiplied by leader's courage or `allowFleeing` level , then the group will start fleeing.\n* As result primarily the AI flees to a nearby \"supply point\" (some friendly units - preferably with medic or engineer, or a vehicle with repair/ammo/fuel cargo). Alternatively it will try to find a safe position within a 600m radius from the initial waypoint (danger, distance, amount of cover positions are taken into account).\n* After the fleeing has been finished the group's initial strength is reset.\n* Fleeing units in `combatMode` red, will be set to yellow when fleeing to avoid engaging enemies while doing so.\n* While fleeing, the group leader will be set to green, to avoid giving engage or fire orders, unless in `combatMode` blue already. Also `speedMode` is set to full.\n* When reaching their flee point/destination, they will change to `combatMode` yellow and `speedMode` normal.\n* With `allowFleeing` one can make unit's flee earlier (or essentially never flee). Apply it, overrides the courage subskill influence.\n\n\n---\n*Syntaxes:*\n\n`fleeing`  unit\n\n---\n*Example 1:*\n\n```sqf\nif (fleeing soldier_1) then {player sideChat \"We have won!\"} else {player sideChat \"Keep fighting!\"};\n```","commands\\floor.md":"Returns the next `lowest` integer in relation to the provided number.\n\n\n---\n*Syntaxes:*\n\n`floor` num\n\n---\n*Example 1:*\n\n```sqf\nfloor 5.1;\t\t// result is  5\nfloor 5.999;\t// result is  5\nfloor -2.01;\t// result is -3\nfloor -2.99;\t// result is -3\n```","commands\\flyInHeight.md":"Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters.\n\n\n---\n*Syntaxes:*\n\naircraft `flyInHeight` altitude\n\n---\n*Example 1:*\n\n```sqf\n_helicopter flyInHeight 40;\n```","commands\\flyInHeightASL.md":"Sets the minimal `ASL` height. Final height is **`flyInHeight` `max` `flyInHeightASL`** - the higher altitude has priority.\n\n\n---\n*Syntaxes:*\n\naircraft `flyInHeightASL` [standardAltitude, combatAltitude, stealthAltitude]\n\n---\n*Example 1:*\n\n```sqf\ncobraOne flyInHeightASL [200, 100, 400];\n```","commands\\focusedCtrl.md":"Returns display's focused control.\n\n\n---\n*Syntaxes:*\n\n`focusedCtrl` display\n\n---\n*Example 1:*\n\n```sqf\nprivate _focusedCtrl = focusedCtrl findDisplay 12;\n```\n\n*Example 2:*\n\n```sqf\nprivate _isFocused = focusedCtrl _display == _ctrl;\n```\n\n*Example 3:*\n\n```sqf\nprivate _isFocused = focusedCtrl (ctrlParent _ctrl) == _ctrl;\n```","commands\\fog.md":"A getter for `setFog`. Returns the current value of the fog in range 0..1.\n\n\n---\n*Syntaxes:*\n\n`fog`\n\n---\n*Example 1:*\n\n```sqf\n_foglevel = fog;\n```","commands\\fogForecast.md":"Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog.\n\n\n---\n*Syntaxes:*\n\n`fogForecast`\n\n---\n*Example 1:*\n\n```sqf\n_level = fogForecast;\n```","commands\\fogParams.md":"A getter for `setFog` (Alt Syntax). Returns extended params for the fog\n\n\n---\n*Syntaxes:*\n\n`fogParams`\n\n---\n*Example 1:*\n\n```sqf\nprivate _fog = fogParams;\n```","commands\\for.md":"This operator creates a `For Type` which is used in the for-constructs.\n\n\n---\n*Syntaxes:*\n\n`for` arguments\n\n`for` [init, condition, codeToExecute]\n\n---\n*Example 1:*\n\n```sqf\n// will output 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 (the to value being inclusive)\nfor \"_i\" from 1 to 10 do { systemChat str _i; };\n```\n\n*Example 2:*\n\n```sqf\n// will output 9, 7, 5, 3, 1\nfor \"_i\" from 9 to 1 step -2 do { systemChat str _i; };\n```\n\n*Example 3:*\n\n```sqf\n// will output 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\nfor [{ _i = 0 }, { _i < 10 }, { _i = _i + 1 }] do { systemChat str _i };\n```\n\n*Example 4:*\n\n```sqf\n// BAD CODE\n_i = 100;\nfor [{ _i = 0 }, { _i < 5 }, { _i = _i + 1 }] do { /* code */ };\nhint str _i; // 5\n\n// GOOD CODE (private keyword is recommended)\n_i = 100;\nfor [{ private _i = 0 }, { _i < 5 }, { _i = _i + 1 }] do { /* code */ };\nhint str _i; // 100\n\n// BEST CODE (primary syntax, fastest)\n_i = 100;\nfor \"_i\" from 0 to 4 do { /* code */ };\nhint str _i; // 100\n```","commands\\forceAddUniform.md":"Create a new uniform and hard link it into slot (without any restrictions).\n\n\n---\n*Syntaxes:*\n\nunit `forceAddUniform` type\n\n---\n*Example 1:*\n\n```sqf\n_unit forceAddUniform \"U_B_CombatUniform_mcam\";\n```","commands\\forceAtPositionRTD.md":"Adds force generator to world.\n\n\n---\n*Syntaxes:*\n\n`forceAtPositionRTD` position\n\n---\n*Example 1:*\n\n```sqf\nforceAtPositionRTD;\n```","commands\\forceCadetDifficulty.md":"Forces **showCadetHints}} and *(Reference hl \"showCadetWP\")* global Cadet [[Arma 3: Difficulty Settings|{{arma3** difficulty]], returns previous settings.\n\n\n---\n*Syntaxes:*\n\n`forceCadetDifficulty` [showCadetHints, showCadetWP]\n\n---\n*Example 1:*\n\n```sqf\nprivate _previousSettings = forceCadetDifficulty [true, false];\n```\n\n*Example 2:*\n\n```sqf\nprivate _fnc_forceCadetDifficulty = \n{\n\tparams [\"_OKButtonPressed\"];\n\tif (_OKButtonPressed) then\n\t{\n\t\tforceCadetDifficulty (switch (toLowerANSI configName ((configFile >> \"CfgDifficultyPresets\") select difficulty)) do\n\t\t{\n\t\t\tcase \"recruit\";\n\t\t\tcase \"regular\":\n\t\t\t{\n\t\t\t\t// showCadetHints = 1;\n\t\t\t\t// showCadetWP = 1;\n\t\t\t\t[true, true]\n\t\t\t};\n\t\t\tcase \"veteran\":\n\t\t\t{\n\t\t\t\t// showCadetHints = 0;\n\t\t\t\t// showCadetWP = 1;\n\t\t\t\t[false, true]\n\t\t\t};\n\t\t\tdefault\n\t\t\t{\n\t\t\t\t// showCadetHints = 0;\n\t\t\t\t// showCadetWP = 0;\n\t\t\t\t[false, false]\n\t\t\t};\n\t\t});\n\t};\n};\n[true] call _fnc_forceCadetDifficulty;\n[missionNamespace, \"OnGameOptionsExited\", _fnc_forceCadetDifficulty] call BIS_fnc_addScriptedEventHandler;\n```","commands\\forcedMap.md":"Returns if map was forced by using `forceMap` command or `openMap` command with force option\n\n\n---\n*Syntaxes:*\n\n`forcedMap`\n\n---\n*Example 1:*\n\n```sqf\n_forceMapForced = forcedMap select 0;\n_openMapForced = forcedMap select 1;\n```","commands\\forceEnd.md":"Forces mission ending (set with `endMission`) even if a camera effect or any another condition delays the endMission (mostly in `{{ofp}}`).\n\n\n---\n*Syntaxes:*\n\n`forceEnd`\n\n---\n*Example 1:*\n\n```sqf\nforceEnd;// in an ending trigger to ensure no camera is delaying mission ending\n```","commands\\forceFlagTexture.md":"Forces a flag texture onto a flag carrier (unit, vehicle or flag pole).\nNo flag holder is required. If **\"\"** is used as texture, the texture is removed.\nThis will override regularly owned flags.\nThis type of flag texture cannot be retrieved using `flagTexture`, but `getForcedFlagTexture`.\n\n\n---\n*Syntaxes:*\n\nobject `forceFlagTexture` texture\n\n---\n*Example 1:*\n\n```sqf\nplayer forceFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";\n```","commands\\forceFollowRoad.md":"Forces the vehicle to stay on road.\n\n\n---\n*Syntaxes:*\n\nvehicle `forceFollowRoad` state\n\n---\n*Example 1:*\n\n```sqf\ncar forceFollowRoad true;\n```","commands\\forceGeneratorRTD.md":"Adds force generator to world.\n\n\n---\n*Syntaxes:*\n\n`forceGeneratorRTD` index\n\n---\n*Example 1:*\n\n```sqf\nforceGeneratorRTD 2;\n```","commands\\forceMap.md":"Opens non-interactive main map in background that overrides user screen. To force open interactive map use `openMap` command.\n\n\n---\n*Syntaxes:*\n\n`forceMap` show\n\n---\n*Example 1:*\n\n```sqf\nforceMap true;\n```","commands\\forceRespawn.md":"Forces the unit to respawn. The effect is as if the player pressed the RESPAWN button in the game pause menu; the unit is killed but there is no \"X was killed\" message and no score adjustment.\n\n\n---\n*Syntaxes:*\n\n`forceRespawn` unit\n\n---\n*Example 1:*\n\n```sqf\nforceRespawn player;\n```","commands\\forceSpeed.md":"Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed). Use negative value to return to default behaviour.\n\n\n---\n*Syntaxes:*\n\nobject `forceSpeed` speed\n\n---\n*Example 1:*\n\n```sqf\n_helicopter forceSpeed 150;\n```","commands\\forceUnicode.md":"<div style=\"float: right\">\nList of the commands that work with `forceUnicode`:\n{{Columns|2|\n* `copyFromClipboard`\n* `copyToClipboard`\n* `count`\n* `find`\n* `in`\n* `insert`\n* `reverse`\n* `select`\n* `splitString`\n* `trim`\n* `regexFind`\n* `regexMatch`\n* `regexReplace`\n}}\n</div>\nSets the Unicode flag which forces some of the string manipulation commands to switch to Unicode. The Unicode flag is always set right after `forceUnicode` command execution, but is reset depending on the command mode: \n* 1 - the Unicode flag is reset right after any of the supported commands executed or the end of script, whichever comes earlier.\n* 0 - the Unicode flag is reset at the end of the script. \nWhen the flag is set it will also affect all scopes within the script including child scopes (see also: `diag_scope`). There are many other string manipulation commands like `ctrlSetText`, `getTextWidth`, etc. that support Unicode by design so no additional forcing is needed.\n\n\n---\n*Syntaxes:*\n\n`forceUnicode` mode\n\n---\n*Example 1:*\n\n```sqf\ncopyToClipboard \"д\"; // copies \"Ð´\" to clipboard\n\nforceUnicode 1;\ncopyToClipboard \"д\"; // copies \"д\" to clipboard\n```\n\n*Example 2:*\n\n```sqf\nprivate _string = \"привет\";\t\t\t// a string that uses Unicode characters\nsystemChat str count _string;\t\t// 12 - the character count is wrong without forceUnicode\n\ncall {\n\tsystemChat str count _string;\t// 12 - identical result\n\tforceUnicode 0;\n\tsystemChat str count _string;\t// 6 - correct result\n};\n\nsystemChat str count _string;\t\t// 6 - outer scope is affected by forceUnicode as well, because the command mode is 0\n\nforceUnicode -1; // cancelled\n\ncall {\n\tsystemChat str count _string;\t// 12 - wrong count\n\tforceUnicode 1;\n\tsystemChat str count _string;\t// 6 - correct result, but Unicode it reset after this operation, because command mode is 1\n};\n\nsystemChat str count _string;\t\t// 12 - outer scope is not affected as it was reset right after count\n```","commands\\forceWalk.md":"Forces unit to walk even if run or sprint is selected.\n\n\n---\n*Syntaxes:*\n\nunit `forceWalk` value\n\n---\n*Example 1:*\n\n```sqf\nplayer forceWalk true;\n```","commands\\forceWeaponFire.md":"The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. Works on `player`. See also: `BIS_fnc_fire`\n\n\n---\n*Syntaxes:*\n\nunit `forceWeaponFire` [muzzle, firemode]\n\n---\n*Example 1:*\n\n```sqf\n_unit forceWeaponFire [\"arifle_MX_F\", \"Single\"];\n_unit forceWeaponFire [\"hgun_ACPC2_F\", \"hgun_ACPC2_F\"];\n_unit forceWeaponFire [\"HandGrenadeMuzzle\",\"HandGrenadeMuzzle\"];\n_unit forceWeaponFire [\"MiniGrenadeMuzzle\",\"MiniGrenadeMuzzle\"];\n_unit forceWeaponFire [\"HandGrenade_Stone\",\"HandGrenade_Stone\"];\n_unit forceWeaponFire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\"];\n_unit forceWeaponFire [\"ChemlightGreenMuzzle\",\"ChemlightGreenMuzzle\"];\n_unit forceWeaponFire [\"IRGrenade\",\"IRGrenade\"];\n_unit forceWeaponFire [\"Laserdesignator\",\"Laserdesignator\"];\n```\n\n*Example 2:*\n\n```sqf\ngunner blackfoot forceWeaponFire [\"gatling_20mm\", \"close\"];\n```","commands\\forceWeatherChange.md":"Will force-apply previously set settings. This might cause lag.\n\n\n---\n*Syntaxes:*\n\n`forceWeatherChange`\n\n---\n*Example 1:*\n\n```sqf\n0 setOvercast 1;\n0 setRain 1;\nforceWeatherChange; Force immediate change overriding smooth transition\n```","commands\\forEach.md":"Executes the given command(s) on every item of an `Array` or a `HashMap`.\n\n\n---\n*Syntaxes:*\n\ncode `forEach` array\n\ncode `forEach` hashMap\n\n---\n*Example 1:*\n\n```sqf\n// SQF\n{ _x setDamage 1 } forEach units player;\n```\n<sqs>\n; SQS\n\"_x setDammage 1\" forEach units player\n</sqs>\n\n*Example 2:*\n\nThis command can also easily be used to execute a single command multiple times without respect to the array items - see also `for`\n\n```sqf\n{ player addMagazine \"30Rnd_556x45_Stanag\" } forEach [1, 2, 3, 4];\n// equivalent to\nfor \"_i\" from 1 to 4 do { player addMagazine \"30Rnd_556x45_Stanag\" };\n```\n\n*Example 3:*\n\nYou can also use multiple commands in the same block:\n\n```sqf\n{\n\t_x setCaptive true;\n\tremoveAllWeapons _x;\n\tdoStop _x;\n} forEach units group this;\n```\n\n*Example 4:*\n\nTo get the index of a `forEach` loop, use `_forEachIndex`:\n\n```sqf\n{ systemChat str _forEachIndex; } forEach [\"a\", \"b\", \"c\"]; // will return: \"0\", \"1\", \"2\" in systemChat messages\n```\n\n*Example 5:*\n\nIterating a `HashMap`'s `_forEachIndex`:\n\n```sqf\n// shows \"0, k1, v1\", \"1, k2, v2\" in systemChat messages\n{\n\tsystemChat format [\"%1, %2, %3\", _forEachIndex, _x, _y];\n} forEach createHashMapFromArray [\n\t[\"k1\", \"v1\"],\n\t[\"k2\", \"v2\"]\n];\n```\n\n*Example 6:*\n\n`findIf` equivalent for `HashMap`:\n\n```sqf\nprivate _resultKey = {\n\tif (_y isEqualTo \"wantedValue\") exitWith { _x };\n\t\"\"\n} forEach _hashmap;\n```\n\n*Example 7:*\n\nArray is edited by reference:\n\n```sqf\n_arr1 = [1,2,3];\n_arr2 = [6,7,8];\n_arr3 = [0];\n{ _x set [1, \"changed\"] } forEach [_arr1, _arr2, _arr3];\n// _arr1 = [1, \"changed\", 3]\n// _arr2 = [6, \"changed\", 8]\n// _arr3 = [0, \"changed\"]\n```\n\n*Example 8:*\n\n```sqf\n{\n\tprivate _verticalValue = _x; // needed, otherwise _horizontalValues' _x made this one inaccessible\n\t{\n\t\t[_x, _verticalValue] call TAG_fnc_doSomething;\n\t} forEach _horizontalValues;\n} forEach _verticalValues;\n```","commands\\forEachMember.md":"Executes the given command recursively for both teams and agents that are members of the given team. For teams only use `forEachMemberTeam`. For agents only use `forEachMemberAgent`.\n\n\n---\n*Syntaxes:*\n\ncommand `forEachMember` team\n\n---\n*Example 1:*\n\n```sqf\n(example);\n```","commands\\forEachMemberAgent.md":"Executes the given command recursively for each agent that is a member of the given team. For just teams use `forEachMemberTeam`. For both teams and agents use `forEachMember`.\n\n\n---\n*Syntaxes:*\n\ncommand `forEachMemberAgent` team\n\n---\n*Example 1:*\n\n```sqf\n(example);\n```","commands\\forEachMemberTeam.md":"Executes the given command recursively for each team that is a member of the given team. For just agents use `forEachMemberAgent`. For both teams and agents use `forEachMember`.\n\n\n---\n*Syntaxes:*\n\ncommand `forEachMemberTeam` team\n\n---\n*Example 1:*\n\n```sqf\n(example);\n```","commands\\forgetTarget.md":"Resets the info a group has about a target, forcing `knowsAbout` value to 0.\n\n\n---\n*Syntaxes:*\n\ngroup `forgetTarget` target\n\n---\n*Example 1:*\n\n```sqf\nsoldier1 forgetTarget soldier2;\n```\n\n*Example 2:*\n\nGive enemyBob some amnesia:\n\n```sqf\nonEachFrame { enemyBob forgetTarget player };\n```","commands\\format.md":"Composes a string containing other variables or other variable types. Converts any variable type to a string. If you want to convert a string back to a number, use `parseNumber`.\n\n\n---\n*Syntaxes:*\n\n`format` [formatString, var1, var2, ...]\n\n---\n*Example 1:*\n\n```sqf\nformat [\"Player:%1, player's side:%2\", player, side player]; // returns \"Player:WEST 1-1-A:1 (Username), player's side:WEST\"\n```\n\n*Example 2:*\n\n```sqf\nplayer addEventHandler [\"HandleDamage\", {\n\thint format [\"You just sustained %1%2 damage!\", ceil ((_this select 2) * 100), \"%\"];\n}]; // Shows \"You just sustained 20% damage!\"\n```","commands\\formation.md":"Returns the current formation of a group.\n\n\n---\n*Syntaxes:*\n\n`formation`  target\n\n---\n*Example 1:*\n\n```sqf\nif (formation group player == \"wedge\") then { hint \"this is the default formation\" };\n```","commands\\formationDirection.md":"Return the direction in degrees of the 'unit' watching in formation.\n\n\n---\n*Syntaxes:*\n\n`formationDirection` unitName\n\n---\n*Example 1:*\n\n```sqf\n_degrees = formationDirection _unit;\n```","commands\\formationLeader.md":"Return leader of the formation.\n\n\n---\n*Syntaxes:*\n\n`formationLeader` unitName\n\n---\n*Example 1:*\n\n```sqf\nif (formationLeader player != leader player) then\n{\n\thint \"Formation leader is not the group leader.\";\n};\n```","commands\\formationMembers.md":"Return list of units (drivers) in the formation.\n\n\n---\n*Syntaxes:*\n\n`formationMembers` person\n\n---\n*Example 1:*\n\n```sqf\n_drivers = formationMembers _person;\n```","commands\\formationPosition.md":"Return position of unit in the formation.\n\n\n---\n*Syntaxes:*\n\n`formationPosition` unit\n\n---\n*Example 1:*\n\n```sqf\n_pos = formationPosition _unit;\n```\n\n*Example 2:*\n\n```sqf\n// Reposition entire group to a new position (ground level)\nprivate _group = group player;\nprivate _leader = leader _group;\n\n// Set the leader to the spawn position\n_leader setPosATL markerPos \"spawn_position\";\n\n// Reposition all units of the group except the leader\n{\n\tprivate _formationPos = formationPosition _x;\n\t_formationPos set [2, 0];\n\t_x setPosATL _formationPos;\n} forEach (units _group - [_leader]);\n```","commands\\formationTask.md":"Return the current task of the unit in the formation.\n\n\n---\n*Syntaxes:*\n\n`formationTask` unit\n\n---\n*Example 1:*\n\n```sqf\n_currentTask = formationTask _unit;\n```","commands\\formatText.md":"Creates a `Structured Text` similar to `format` command.\n\n\n---\n*Syntaxes:*\n\n`formatText` [format, argument1, argument2, ...]\n\n---\n*Example 1:*\n\n```sqf\nhint formatText [\"Image: %1\", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"];\n```\n\n*Example 2:*\n\n```sqf\nhint formatText [\"%1%2%3\", \"line1\", \"<br/>\", \"line2\"];\t\t// result displayed in one line\nhint formatText [\"%1%2%3\", \"line1\", lineBreak, \"line2\"];\t// result displayed in two lines\n```","commands\\formLeader.md":"Returns the formation leader of a given unit.\nThis is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit.\n\n\n---\n*Syntaxes:*\n\n`formLeader` unitName\n\n---\n*Example 1:*\n\n```sqf\nif (formLeader player != leader player) then\n{\n\thint \"The formation leader is different to the group leader!\";\n};\n```","commands\\freeExtension.md":"Unloads given extension loaded previously with `callExtension` so that extension developer could rapidly tweak developed extension without restarting the game.\n\n\n---\n*Syntaxes:*\n\n`freeExtension` extension\n\n---\n*Example 1:*\n\n```sqf\nfreeExtension \"myExt\";\n```","commands\\freeLook.md":"Returns if freelook is active on the current machine's controlled character.\n\n\n---\n*Syntaxes:*\n\n`freeLook`\n\n---\n*Example 1:*\n\n```sqf\nif freeLook then\n{\n\tsystemChat \"Quit looking around, soldier!\";\n};\n```","commands\\from.md":"Continue sequence of `for` construct. It sets the start value of the index variable.\n\n\n---\n*Syntaxes:*\n\nfor `from` b\n\n---\n*Example 1:*\n\n```sqf\nfor \"_i\" from 10 to 20 do\n{\n\thint str _i; // will hint from 10 to 20, spaced by 1 second\n\tsleep 1;\n};\n```","commands\\fromEditor.md":"Return if given team was inserted directly from mission editor.\n\n\n---\n*Syntaxes:*\n\n`fromEditor` teamMember\n\n---\n*Example 1:*\n\n```sqf\n_fromEditor = fromEditor _member;\n```","commands\\fuel.md":"Checks how much fuel is left in the gas tank of a vehicle.\n\n\n---\n*Syntaxes:*\n\n`fuel` vehicle\n\n---\n*Example 1:*\n\n```sqf\nif (fuel vehicle player == 0) then {hint \"The vehicle is out of fuel!\"};\n```","commands\\fullCrew.md":"Returns an array with all crew inside given vehicle, with or without empty seats.\n\n\n---\n*Syntaxes:*\n\n`fullCrew` vehicle\n\n`fullCrew` [vehicle, type, includeEmpty]\n\n---\n*Example 1:*\n\n```sqf\n_list = fullCrew vehicle player;\n```\n\n*Example 2:*\n\n```sqf\n_list = fullCrew [vehicle player, \"turret\"];\n```\n\n*Example 3:*\n\n```sqf\nprivate _actionCompatibleCargoIndexes = fullCrew [heli, \"cargo\", true];\n/*\n\treturns for example (on an armed WY-55 Hellcat):\n\t[\n\t\t[objNull, \"cargo\" ,2, [], false],\n\t\t[objNull, \"cargo\", 3, [], false],\n\t\t[objNull, \"cargo\", 4, [], false],\n\t\t[objNull, \"cargo\", 5, [], false]\n\t]\n\tusing the element's index is compatible with action cargo commands - see below\n*/\n\n// the following commands will put the player in the same seat:\nplayer moveInCargo [heli, 2];\nplayer action [\"GetInCargo\", heli, 0];\n```","commands\\gearIDCAmmoCount.md":"Returns ammo count of assigned magazine.\n\n\n---\n*Syntaxes:*\n\n`gearIDCAmmoCount` idc\n\n---\n*Example 1:*\n\n```sqf\nammo = gearIDCAmmoCount _control;\n```","commands\\gearSlotAmmoCount.md":"Returns ammo count of assigned magazine.\n\n\n---\n*Syntaxes:*\n\n`gearSlotAmmoCount` control\n\n---\n*Example 1:*\n\n```sqf\nammo = gearSlotAmmoCount _control;\n```","commands\\gearSlotData.md":"Returns gear slot item name.\n\n\n---\n*Syntaxes:*\n\n`gearSlotData` control\n\n---\n*Example 1:*\n\n```sqf\ngearSlotData _myControl;\n```\n\n*Example 2:*\n\nOpen any ammobox and click by any gear slots:\n\n```sqf\nprivate \"_dspl\";\ndisableSerialization;\n\nwaitUntil {\n\t_dspl = findDisplay 106;\n\t! isNull _dspl;\n};\n\nuiNamespace setVariable [\"/VDMJ/RscDisplayGear/SlotDataEH\", {\n\t_self = _this select 0;\n\t_weaponName = gearSlotData _self;\n\t_conf = configFile >> _confSection >> _weaponName;\n\t_name = getText (_conf >> \"displayName\");\n\t_desc = getText (_conf >> \"Library\" >> \"libTextDesc\");\n\t_image = getText (_conf >> \"picture\");\n\thint parseText format [\n\t\t'<t size=\"1.3\" align=\"center\" shadow=\"true\" shadowColor=\"#000000\">%1</t><br><img image=\"%2\" size=\"6\" align=\"center\" /><br>%3<br>%4',\n\t\t_name, _image, _desc\n\t];\n}];\n\nfor \"_i\" from 107 to 145 do {\n\t_dspl displayCtrl _i ctrlAddEventHandler [\"ButtonClick\",\n\t\tformat [\n\t\t\t\"_confSection = '%1'; _this call (uiNamespace getVariable '/VDMJ/RscDisplayGear/SlotDataEH');\",\n\t\t\tif (_i >= 109 && _i <= 129) then { \"CfgMagazines\" } else { \"CfgWeapons\" }\n\t\t]\n\t];\n};\n```","commands\\gestureState.md":"Returns the name of a unit's current gesture. Seems to be forced to lower case in {{arma3}}.\n\n\n---\n*Syntaxes:*\n\n`gestureState` unitName\n\n---\n*Example 1:*\n\n```sqf\nprivate _state = gestureState player;\n```","commands\\get.md":"Retrieves a value out of a `HashMap` after looking it up by its key.\n\n\n---\n*Syntaxes:*\n\nhashMap `get` key\n\n---\n*Example 1:*\n\n```sqf\nprivate _myValue = _myHashMap get \"a\";\n```","commands\\get3DENActionState.md":"Returns state of given `Eden Editor action`.\n\n\n---\n*Syntaxes:*\n\n[[get3DENActionState]]  action\n\n---\n*Example 1:*\n\n```sqf\nif (get3DENActionState \"ToggleMap\" == 1) then {systemChat \"Editor map is open!\"};\n```","commands\\get3DENAttribute.md":"Returns the value of the given entity's `attribute` in `Eden Editor`.<br><br>\nAn attribute is identified by its **property}} ({{hl|data** when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see `Setting Attributes`.\n\n\n---\n*Syntaxes:*\n\nentity [[get3DENAttribute]] attribute\n\n---\n*Example 1:*\n\n```sqf\n// returns variable name of the object under cursor\nsystemChat str ((get3DENMouseOver select 1) get3DENAttribute \"name\");\n```","commands\\get3DENCamera.md":"Returns the camera `Object` used by the `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[[get3DENCamera]]\n\n---\n*Example 1:*\n\n```sqf\n// set exact yaw, pitch, and roll\n_y = 45; _p = -80; _r = 0;\nget3DENCamera setVectorDirAndUp [\n\t[ sin _y * cos _p,cos _y * cos _p,sin _p],\n\t[ [sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D\n];\n```\n\n*Example 2:*\n\n```sqf\n//Look at player\n_a = positionCameraToWorld [0,0,0] vectorFromTo (getPosATL player);\n_y = asin(_a select 0);\n_b = [_a,_y] call BIS_fnc_rotateVector2D;\n_z = _b select 2;\n_p = asin(_z / sqrt((_b select 1)^2 + _z^2));\nget3DENCamera setVectorDirAndUp [\n\t_a,\n\t[ [0,-sin _p,cos _p],-_y] call BIS_fnc_rotateVector2D\n];\n```","commands\\get3DENConnections.md":"Returns all `connections` currently present on an entity.\n\n\n---\n*Syntaxes:*\n\n[[get3DENConnections]]  entity\n\n---\n*Example 1:*\n\n```sqf\nget3DENConnections _trigger; // Can return [[\"WaypointActivation\",[B Alpha 4-5,0]]]\n```","commands\\get3DENEntity.md":"Returns `Eden Entity` based on its `Eden ID`.\n\n\n---\n*Syntaxes:*\n\n[[get3DENEntity]]  ID\n\n---\n*Example 1:*\n\n```sqf\nmyEntity = get3DENEntity 1;\n```","commands\\get3DENEntityID.md":"Returns unique index of an `Eden Entity`. This number remains the same even after saving and loading the scenario.\n\n\n---\n*Syntaxes:*\n\n[[get3DENEntityID]] entity\n\n---\n*Example 1:*\n\n```sqf\nmyID = get3DENEntityID player;\n```","commands\\get3DENGrid.md":"Returns the grid increment for the given transformation type.\n\n\n---\n*Syntaxes:*\n\n[[get3DENGrid]]  type\n\n---\n*Example 1:*\n\n```sqf\n_currentIncrement = get3DENGrid \"t\";\n```","commands\\get3DENIconsVisible.md":"Gets visibility state of `Eden Editor` icons.\n\n\n---\n*Syntaxes:*\n\n[[get3DENIconsVisible]]\n\n---\n*Example 1:*\n\n```sqf\nif (get3DENIconsVisible select 0) then {hint \"Icons are visible in the map.\";};\n```","commands\\get3DENLayerEntities.md":"Return all entities and sub-layer in `Eden Entity` layer. In order to get all layer entities during a scenario use `getMissionLayerEntities`.\n\n\n---\n*Syntaxes:*\n\n[[get3DENLayerEntities]] layerID\n\n---\n*Example 1:*\n\n```sqf\n_myLayer = -1 add3DENLayer \"CTRG\";\nplayer set3DENLayer _myLayer;\n_entities = get3DENLayerEntities _myLayer;\n```","commands\\get3DENLinesVisible.md":"Get visibility state of `Eden Editor` lines.\n\n\n---\n*Syntaxes:*\n\n[[get3DENLinesVisible]]\n\n---\n*Example 1:*\n\n```sqf\nif (get3DENLinesVisible select 0) then { hint \"Lines are visible in the map.\"; };\n```","commands\\get3DENMissionAttribute.md":"Return value of `scenario attribute`. For a list of all available mission attributes see `Mission Attributes`.\n\n\n---\n*Syntaxes:*\n\nsection [[get3DENMissionAttribute]] class\n\n---\n*Example 1:*\n\n```sqf\nsystemChat str (\"Multiplayer\" get3DENMissionAttribute \"respawn\");\n```","commands\\get3DENMouseOver.md":"Returns the `Eden Entity` the mouse is hovering over in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n[[get3DENMouseOver]]\n\n---\n*Example 1:*\n\n```sqf\nsystemChat str get3DENMouseOver; // returns e.g [\"Object\", B Alpha 1-1:1]\n```","commands\\get3DENSelected.md":"Returns an array of all selected `Eden Editor Entities` of the given type.<br>\nIf a wrong type is provided, **`], [], [], [], [], [`** is returned and an error message is shown.\n\n\n---\n*Syntaxes:*\n\n[[get3DENSelected]] type\n\n---\n*Example 1:*\n\n```sqf\nget3DENSelected \"\";\n\n/*\n[\n\t[B Alpha 2-1:1],\t\t\t\t// objects\n\t[B Alpha 2-1],\t\t\t\t\t// groups\n\t[164494: <no shape>],\t\t\t// triggers\n\t[<No center> Charlie 1-2:4],\t// logic\n\t[[B Alpha 2-1,0]],\t\t\t\t// waypoints\n\t[\"Hotel_Whiskey\"]\t\t\t\t// markers\n]\n*/\n```\n\n*Example 2:*\n\n```sqf\nget3DENSelected \"object\"; // [B Alpha 2-1:1]\n```","commands\\getAimingCoef.md":"Get current aiming coefficient (higher ~ less precise, default is 1)\n\n\n---\n*Syntaxes:*\n\n`getAimingCoef` unit\n\n---\n*Example 1:*\n\n_coef = `getAimingCoef` `player`","commands\\getAllEnv3DSoundControllers.md":"Returns an array containing the names and values of environmental 2D sound controllers, variables that can be used in simple expressions when configuring sounds.\n\n\n---\n*Syntaxes:*\n\n[[getAllEnv3DSoundControllers]] object\n\n---\n*Example 1:*\n\n```sqf\ngetAllEnv3DSoundControllers _thatTreeOverThere;\n/*\n\treturns e.g\n\t[\n\t\t[\"rain\",0],\n\t\t[\"night\",0],\n\t\t[\"wind\",0.161588],\n\t\t...\n\t]\n*/\n```","commands\\getAllEnvSoundControllers.md":"Returns an array containing the names and values of environmental 2D sound controllers, variables that can be used in simple expressions when configuring sounds.\n\n\n---\n*Syntaxes:*\n\n`getAllEnvSoundControllers` position\n\n---\n*Example 1:*\n\n```sqf\ngetAllEnvSoundControllers position player;\n/*\n\treturns e.g\n\t[\n\t\t[\"rain\",0],\n\t\t[\"night\",0],\n\t\t[\"windy\",0.161588],\n\t\t...\n\t]\n*/\n```","commands\\getAllHitPointsDamage.md":"Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in `setHitIndex` and `getHitIndex`. Levels of damage are:\n* 0: no damage\n* 1: full damage\n\n\n---\n*Syntaxes:*\n\n`getAllHitPointsDamage` entity\n\n---\n*Example 1:*\n\n```sqf\ngetAllHitPointsDamage player;\n//[\n//[\"hitface\",\"hitneck\",\"hithead\",\"hitpelvis\",\"hitabdomen\",\"hitdiaphragm\",\"hitchest\",\"hitbody\",\"hitarms\",\"hithands\",\"hitlegs\",\"incapacitated\"],\n//[\"face_hub\",\"neck\",\"head\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\",\"body\",\"arms\",\"hands\",\"legs\",\"body\"],\n//[0,0,0,0,0,0,0,0,0,0,0,0]\n//]\n```\n\n*Example 2:*\n\n```sqf\ngetAllHitPointsDamage (vehicle player);\n//[\n  //[\"hithull\",\"hitengine\",\"hitengine2\",\"hitavionics\",\"hitfuel\",\"hitfuel2\",\"hitglass1\",\"hitlaileron\",\"hitraileron\",\"hitlcrudder\",\"hitrrudder\",\"hitlcelevator\",\"hitrelevator\",\"#gear_f_lights\"],\n  //[\"hithull\",\"hitengine\",\"hitengine2\",\"hitavionics\",\"hitfuel\",\"hitfuel2\",\"hitglass1\",\"hitlaileron\",\"hitraileron\",\"hitlcrudder\",\"hitrrudder\",\"hitlcelevator\",\"hitrelevator\",\" \"],\n  //[0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n//]\n```","commands\\getAllOwnedMines.md":"Gets all mine objects this unit has ownership over.\n\n\n---\n*Syntaxes:*\n\n`getAllOwnedMines` unit\n\n---\n*Example 1:*\n\n```sqf\n_mines = getAllOwnedMines player;\n```","commands\\getAllPylonsInfo.md":"Return an array with the vehicle's all pylons info.\n\n\n---\n*Syntaxes:*\n\n`getAllPylonsInfo` vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetAllPylonsInfo vehicle player;\n/*\n\tExecuted on an Mi-48 Kajman:\n\t[\n\t\t[1,\"PylonLeft1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000646\"],\n\t\t[2,\"PylonLeft2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000648\"],\n\t\t[3,\"PylonRight2\",[0],\"PylonRack_19Rnd_Rocket_Skyfire\",19,\"0:10000649\"],\n\t\t[4,\"PylonRight1\",[0],\"PylonRack_4Rnd_LG_scalpel\",4,\"0:10000650\"]\n\t]\n*/\n```","commands\\getAllSoundControllers.md":"Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.\n\n\n---\n*Syntaxes:*\n\n`getAllSoundControllers` vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetAllSoundControllers vehicle player;\n/*\n\treturns e.g\n\t[\n\t\t[\"rpm\",0],\n\t\t[\"randomizer\",0.874332],\n\t\t[\"speed\",0],\n\t\t[\"thrust\",0],\n\t\t...\n\t]\n*/\n```","commands\\getAllUnitTraits.md":"Returns unit traits, native or set by `setUnitTrait`.\n\n\n---\n*Syntaxes:*\n\n`getAllUnitTraits` unit\n\n---\n*Example 1:*\n\n```sqf\n/* can return:\n[\n\t[\"Medic\", false],\n\t[\"Engineer\", false],\n\t[\"ExplosiveSpecialist\", false],\n\t[\"UavHacker\", false],\n\t[\"CamouflageCoef\", 1],\n\t[\"AudibleCoef\", 1],\n\t[\"LoadCoef\", 1],\n\t[\"test\", \"custom\"]\n]\n*/\nprivate _playerTraits = getAllUnitTraits player;\n```\n\n*Example 2:*\n\n```sqf\nprivate _unitTraits = getAllUnitTraits _unit;\nprivate _indexes = [_unitTraits, \"Medic\"] call BIS_fnc_findNestedElement;\nprivate _unitCanHeal = _unitTraits select (_indexes select 0) select 1;\n```","commands\\getAmmoCargo.md":"Returns the amount (1 is full) of ammo resources in the cargo space of a rearm vehicle.\n\n\n---\n*Syntaxes:*\n\n`getAmmoCargo` vehicle\n\n---\n*Example 1:*\n\n```sqf\nvalue = getAmmoCargo myVehicleName;\n```","commands\\getAnimAimPrecision.md":"Returns aim precision for current animation\n\n\n---\n*Syntaxes:*\n\n`getAnimAimPrecision` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _aimPrecision = getAnimAimPrecision player;\n```","commands\\getAnimSpeedCoef.md":"Get coefficient for animation speed.\n\n\n---\n*Syntaxes:*\n\n`getAnimSpeedCoef` unit\n\n---\n*Example 1:*\n\n```sqf\nif (getAnimSpeedCoef player > 1) then { hint \"Speedy Gonzales!\" };\n```","commands\\getArray.md":"Extract array from config entry.\n\n\n---\n*Syntaxes:*\n\n`getArray` config\n\n---\n*Example 1:*\n\n```sqf\n_array = getArray (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"threat\");\n```","commands\\getArtilleryAmmo.md":"Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.\n\n\n---\n*Syntaxes:*\n\n`getArtilleryAmmo` artilleryList\n\n---\n*Example 1:*\n\n```sqf\nif (\"8Rnd_82mm_Mo_Flare_white\" in getArtilleryAmmo [\n\t_mortar1,\n\t_mortar2,\n\t_mortar3, \n\t_mortar4\n]) then\n{\n\thint \"Sir, we have white flares, Sir!\";\n};\n```","commands\\getArtilleryComputerSettings.md":"Returns settings from artillery computer currently opened by player.\n\n\n---\n*Syntaxes:*\n\n`getArtilleryComputerSettings`\n\n---\n*Example 1:*\n\n```sqf\nhint str getArtilleryComputerSettings; //[\"Semi (medium)\",\"HE Mortar Shells\",0]\n```","commands\\getArtilleryETA.md":"Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.\n\n\n---\n*Syntaxes:*\n\nunit `getArtilleryETA`  [targetPosition, magazineType]\n\n---\n*Example 1:*\n\n```sqf\n_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];\n```\n\n*Example 2:*\n\n```sqf\n_mortar getArtilleryETA [position _target, currentMagazine _mortar];\n```","commands\\getAssetDLCInfo.md":"Returns DLC information about given object or model.\n\n\n---\n*Syntaxes:*\n\n`getAssetDLCInfo` asset\n\n`getAssetDLCInfo` [class, config]\n\n---\n*Example 1:*\n\n```sqf\ngetAssetDLCInfo player;\n```\n\n*Example 2:*\n\n```sqf\ngetAssetDLCInfo \"a3\\Weapons_F_Enoch\\Rifles\\MSBS\\MSBS65_F\";\n```\n\n*Example 3:*\n\n```sqf\ngetAssetDLCInfo [\"C_Van_01_transport_F\"];\n```\n\n*Example 4:*\n\n```sqf\ngetAssetDLCInfo [\"arifle_AK12_F\", configFile >> \"CfgWeapons\"];\n```","commands\\getAssignedCuratorLogic.md":"Returns curator logic to which given player has access.\n\n\n---\n*Syntaxes:*\n\n`getAssignedCuratorLogic` player\n\n---\n*Example 1:*\n\n```sqf\n(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead, true];\n```","commands\\getAssignedCuratorUnit.md":"Returns unit assigned to curator logic.\n\n\n---\n*Syntaxes:*\n\n`getAssignedCuratorUnit` curatorObj\n\n---\n*Example 1:*\n\n```sqf\n_curatorUnit = getAssignedCuratorUnit (allCurators select 0);\n_curatorUnit joinAs [createGroup civilian, 0];\n```","commands\\getAttackTarget.md":"Returns the target given unit is engaging.\n\n\n---\n*Syntaxes:*\n\n`getAttackTarget` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _unitsTarget = getAttackTarget _unit;\n```","commands\\getAudioOptionVolumes.md":"Returns profile audio volumes. Arma 2.10 added UI channel\n\n\n---\n*Syntaxes:*\n\n`getAudioOptionVolumes`\n\n---\n*Example 1:*\n\n```sqf\ngetAudioOptionVolumes params [\"_effects\", \"_music\", \"_radio\", \"_von\", \"_UI\"];\n```","commands\\getBackpackCargo.md":"Returns all backpack types and count from the cargo space.\n\n\n---\n*Syntaxes:*\n\n`getBackpackCargo` object\n\n---\n*Example 1:*\n\n```sqf\n_content = getBackpackCargo carName;\n```\n\n*Example 2:*\n\n```sqf\n_content = getBackpackCargo ammoBoxName;\n```","commands\\getBleedingRemaining.md":"Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use `setBleedingRemaining` to set different remaining time.\n\n\n---\n*Syntaxes:*\n\n`getBleedingRemaining` unit\n\n---\n*Example 1:*\n\n```sqf\n_bleedingRemaining = getBleedingRemaining _unit;\n```","commands\\getBurningValue.md":"Returns how much the unit is exposed to fire damage.\n\n\n---\n*Syntaxes:*\n\n`getBurningValue` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _fireDamage = getBurningValue player;\n```","commands\\getCalculatePlayerVisibilityByFriendly.md":"Returns `true` if visibility of `player` by friendly units is calculated.\n\n\n---\n*Syntaxes:*\n\n`getCalculatePlayerVisibilityByFriendly`\n\n---\n*Example 1:*\n\n```sqf\nif (!getCalculatePlayerVisibilityByFriendly) then\n{\n\tcalculatePlayerVisibilityByFriendly true;\n};\n```","commands\\getCameraViewDirection.md":"Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from **`eyePos` unit}}, for human player the origin should be taken from player camera position {{hl|`positionCameraToWorld` [0,0,0]**\n\n\n---\n*Syntaxes:*\n\n`getCameraViewDirection` unit\n\n---\n*Example 1:*\n\nDraw AI eye direction (green), weapon direction (red) and camera direction (blue) in 3D:\n\n```sqf\nBob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"];\nBob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"];\nonEachFrame {\n\t_beg = ASLToAGL eyePos Bob;\n\t_endE = (_beg vectorAdd (eyeDirection Bob vectorMultiply 100));\n\tdrawLine3D [ _beg, _endE, [0,1,0,1]];\n\t_endW = (_beg vectorAdd (Bob weaponDirection currentWeapon Bob vectorMultiply 100));\n\tdrawLine3D [_beg, _endW, [1,0,0,1]];\n\t_endV = (_beg vectorAdd (getCameraViewDirection Bob vectorMultiply 100));\n\tdrawLine3D [_beg, _endV, [0,0,1,1]];\n};\n```","commands\\getCargoIndex.md":"Returns index of the unit in cargo. -1 if not in cargo.\n\n\n---\n*Syntaxes:*\n\nvehicle `getCargoIndex` unit\n\n---\n*Example 1:*\n\n```sqf\nplayer moveInCargo heli;\nhint str (heli getCargoIndex player);\n```","commands\\getCenterOfMass.md":"Returns center of mass of an object.\n\n\n---\n*Syntaxes:*\n\n`getCenterOfMass` object\n\n---\n*Example 1:*\n\n```sqf\n_com = getCenterOfMass _myCar;\n```","commands\\getClientState.md":"Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n\n---\n*Syntaxes:*\n\n`getClientState`\n\n---\n*Example 1:*\n\n```sqf\n_state = getClientState;\n```\n\n*Example 2:*\n\n```sqf\nif (getClientState == \"BRIEFING READ\") then { hint \"Let the show begin!\" };\n```","commands\\getClientStateNumber.md":"Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n\n---\n*Syntaxes:*\n\n`getClientStateNumber`\n\n---\n*Example 1:*\n\n```sqf\n_state = getClientStateNumber;\n```\n\n*Example 2:*\n\n```sqf\n_inGame = getClientStateNumber > 8;\n```","commands\\getCompatiblePylonMagazines.md":"Get array of compatible pylon magazines\n\n\n---\n*Syntaxes:*\n\nvehicle `getCompatiblePylonMagazines` pylon\n\n---\n*Example 1:*\n\n```sqf\n// returns array of arrays containing all compatible magazines\nvehicle player getCompatiblePylonMagazines 0;\n```\n\n*Example 2:*\n\n```sqf\n// returns array of compatible magazines for the 3rd pylon if it exists; otherwise returns array of arrays (see above)\njet1 getCompatiblePylonMagazines 3;\n```\n\n*Example 3:*\n\n```sqf\n// returns array of compatible magazines for \"pylon1\" class, defined in\n// configFile >> \"CfgVehicles\" >> \"B_Plane_CAS_01_dynamicLoadout_F\" >> \"Components\" >> \"TransportPylonsComponent\" >> \"Pylons\"\n\"B_Plane_CAS_01_dynamicLoadout_F\" getCompatiblePylonMagazines \"pylon1\";\n```","commands\\getConnectedUAV.md":"Returns UAV/UGV vehicle if person has connection to some UAV. To return the AI unit which player controls, see `getConnectedUAVUnit`.\n\n\n---\n*Syntaxes:*\n\n`getConnectedUAV` person\n\n---\n*Example 1:*\n\n```sqf\ngetConnectedUAV player;\n```","commands\\getConnectedUAVUnit.md":"Returns UAV/UGV AI unit, which player is controlling. To return UAV vehicle, see `getConnectedUAV`\n\n\n---\n*Syntaxes:*\n\n`getConnectedUAVUnit` person\n\n---\n*Example 1:*\n\n```sqf\nprivate _playersDrone = getConnectedUAVUnit player;\n```","commands\\getContainerMaxLoad.md":"Returns max load value of given uniform, vest or backpack container. For other types of containers, use `maxLoad` command\n\n\n---\n*Syntaxes:*\n\n`getContainerMaxLoad` containerClass\n\n---\n*Example 1:*\n\n```sqf\n_maxLoadUniform = getContainerMaxLoad uniform player;\n_maxLoadVest = getContainerMaxLoad vest player;\n_maxLoadBackpack = getContainerMaxLoad backpack player;\n```","commands\\getCorpse.md":"Returns the corpse associated with given weaponholder. When unit is killed and had a weapon, the weapon is placed inside \"WeaponHolderSimulated\" and dropped together with the unit. This command returns the dead body associated with this weaponholder.\n\n\n---\n*Syntaxes:*\n\n`getCorpse` weaponholder\n\n---\n*Example 1:*\n\n```sqf\nsystemChat str getCorpse cursorObject;\n```","commands\\getCruiseControl.md":"Returns cruise control settings set with `setCruiseControl` command.\n\n\n---\n*Syntaxes:*\n\n`getCruiseControl` vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetCruiseControl vehicle player params [\"_speedLimit\", \"_cruiseControlActive\"];\n```","commands\\getCursorObjectParams.md":"Returns object and named selections under cursor and distance to object's surface (to the point cursor points at). If object surface is further away than 50 meters, selections are always an empty array and distance is 1e10 (10^10).\n\n\n---\n*Syntaxes:*\n\n`getCursorObjectParams`\n\n---\n*Example 1:*\n\n```sqf\nhint str getCursorObjectParams;\n```","commands\\getCustomAimCoef.md":"Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.\n\n\n---\n*Syntaxes:*\n\n`getCustomAimCoef` unit\n\n---\n*Example 1:*\n\n_coef = `getCustomAimCoef` player","commands\\getCustomSoundController.md":"Returns current value set to the controller (see `setCustomSoundController`).\n\n\n---\n*Syntaxes:*\n\n`getCustomSoundController`  [vehicle, controller]\n\n---\n*Example 1:*\n\n```sqf\ngetCustomSoundController [vehicle player, \"CustomSoundController1\"];\n```\n\n*Example 2:*\n\n```sqf\nprivate _allCustomSoundControllers = [];\nfor \"_i\" from 1 to (getCustomSoundControllerCount vehicle player) do\n{\n\t_allCustomSoundControllers pushBack getCustomSoundController [vehicle player, format [\"CustomSoundController%1\", _i]];\n};\n```","commands\\getCustomSoundControllerCount.md":"Returns current number of custom sound controllers supported by the engine for the given vehicle (currently 32)\n\n\n---\n*Syntaxes:*\n\n`getCustomSoundControllerCount` vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetCustomSoundControllerCount vehicle player;\n```","commands\\getDammage.md":"Returns the object damage in the range from 0 to 1.\n\n\n---\n*Syntaxes:*\n\n`getDammage` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _damage = getDammage player;\n```","commands\\getDebriefingText.md":"A getter for `setDebriefingText`.\n\n\n---\n*Syntaxes:*\n\n`getDebriefingText` end\n\n---\n*Example 1:*\n\n```sqf\nprivate _debriefingTextDeath = getDebriefingText \"endDeath\";\n```","commands\\getDescription.md":"Returns the string representation of unit as an four slots array.\n\n\n---\n*Syntaxes:*\n\n`getDescription` unit\n\n---\n*Example 1:*\n\n```sqf\ngetDescription player; // (UAV Operator)\n// returns [\"B_soldier_UAV_F\", \"Combat Fatigues (MTP)\", \"Carrier Special Rig (Green)\", \"B_UAV_01_backpack_F\"]\n```\n\n*Example 2:*\n\n```sqf\ngetDescription objNull; // returns [\"ERROR\", \"ERROR\", \"ERROR\", \"ERROR\"]\n```","commands\\getDir.md":"Returns the object heading in the range 0..360.\n\n\n---\n*Syntaxes:*\n\n`getDir` object\n\npos1 `getDir` pos2\n\n---\n*Example 1:*\n\n```sqf\n_azimuth = getDir player;\n```\n\n*Example 2:*\n\n```sqf\n_azimuth = player getDir tank;\n```","commands\\getDirVisual.md":"Returns object's heading in the range from 0 to 360 in render time scope.\n\n\n---\n*Syntaxes:*\n\n`getDirVisual` object\n\npos1 `getDirVisual` pos2\n\n---\n*Example 1:*\n\n```sqf\n_dir = getDirVisual player;\n```\n\n*Example 2:*\n\n```sqf\n_azimuth = player getDirVisual tank;\n```","commands\\getDiverState.md":"Returns `true` when object is in diver state - e.g when the unit would put diving `goggles` on.\n\n\n---\n*Syntaxes:*\n\n`getDiverState` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _gogglesOn = getDiverState player;\n```","commands\\getDLCAssetsUsage.md":"Returns an array of the DLC usage times.\n\n\n---\n*Syntaxes:*\n\n`getDLCAssetsUsage`\n\n---\n*Example 1:*\n\n```sqf\n_dlcAssetsUsageInfo = getDLCAssetsUsage;\n```","commands\\getDLCAssetsUsageByName.md":"Returns an array with the session and global time the asset has been used.\n\n\n---\n*Syntaxes:*\n\n`getDLCAssetsUsageByName` assetName\n\n---\n*Example 1:*\n\n```sqf\n_dlcAssetUsage = getDLCAssetsUsageByName \"C_IDAP_Heli_Transport_02_F\";\n```","commands\\getDLCs.md":"Returns array of app IDs of DLCs.\n\n\n---\n*Syntaxes:*\n\n`getDLCs` filter\n\n---\n*Example 1:*\n\n```sqf\n_ownedDLCs = getDLCs 1;\n```\n\n*Example 2:*\n\n```sqf\n_hasKarts = (288520 in (getDLCs 1));\n```","commands\\getDLCUsageTime.md":"Returns total time the assets of the given DLC have been used. See [[:Category:Arma 3 DLCs & Expansions|Arma 3 DLCs & Expansions]] for a list of DLCs and ids.\n\n\n---\n*Syntaxes:*\n\n`getDLCUsageTime` appId\n\n---\n*Example 1:*\n\n```sqf\nprivate _kartsUsage = getDLCUsageTime 288520;\n```","commands\\getEditorCamera.md":"Fetches a reference to the mission editor camera.\n\n\n---\n*Syntaxes:*\n\n`getEditorCamera` map\n\n---\n*Example 1:*\n\n-","commands\\getEditorMode.md":"Returns the current mode of the editor.\n\n\n---\n*Syntaxes:*\n\n`getEditorMode` map\n\n---\n*Example 1:*\n\n-","commands\\getEditorObjectScope.md":"Returns the editor object scope of the specified editor object.\n\n\n---\n*Syntaxes:*\n\nmap `getEditorObjectScope` object\n\n---\n*Example 1:*\n\n-","commands\\getElevationOffset.md":"Returns the map elevation offset from [map]/config.cpp.\n\nReturns 0 if there is no elevationOffset defined in the config of the current world.\n\n\n---\n*Syntaxes:*\n\n`getElevationOffset`\n\n---\n*Example 1:*\n\n```sqf\n_offset = getElevationOffset;\n```","commands\\getEngineTargetRPMRTD.md":"Returns RPM of all engines.\n\n\n---\n*Syntaxes:*\n\n`getEngineTargetRPMRTD` helicopter\n\n---\n*Example 1:*\n\n```sqf\nprivate _rpm = getEngineTargetRPMRTD _helicopter;\n```","commands\\getEnv3DSoundController.md":"Returns value of the specified 3D controller, see [[getAllEnv3DSoundControllers]].\n\n\n---\n*Syntaxes:*\n\nobject [[getEnv3DSoundController]] controller\n\n---\n*Example 1:*\n\n```sqf\n_thatTreeOverThere getEnv3DSoundController \"rainDrops\"; // returns 1\n```","commands\\getEnvSoundController.md":"Returns value of the specified controller, see `getAllEnvSoundControllers`\n\n\n---\n*Syntaxes:*\n\nposition `getEnvSoundController` controller\n\n---\n*Example 1:*\n\n```sqf\nposition player getEnvSoundController \"trees\"; //0.3333\n```","commands\\getEventHandlerInfo.md":"Queries given event handler's information.\n\n\n---\n*Syntaxes:*\n\noper `getEventHandlerInfo` [type, id]\n\n`getEventHandlerInfo` [type, id]\n\n---\n*Example 1:*\n\n```sqf\nprivate _info = player getEventHandlerInfo [\"MPKilled\", 1];\t\t// object EH\n```\n\n*Example 2:*\n\n```sqf\nprivate _info = getEventHandlerInfo [\"EachFrame\", 0];\t\t\t\t// mission EH\n```\n\n*Example 3:*\n\n```sqf\nprivate _info = _bullet getEventHandlerInfo [\"Deflected\", 0];\t\t// projectile EH\n```\n\n*Example 4:*\n\n```sqf\nprivate _info = _group getEventHandlerInfo [\"EnemyDetected\", 1];\t// group EH\n```\n\n*Example 5:*\n\n```sqf\nprivate _info = _control getEventHandlerInfo [\"ButtonClick\", 1];\t// control (UI) EH\n```","commands\\getFatigue.md":"Returns fatigue of given unit.\n\n\n---\n*Syntaxes:*\n\n`getFatigue` unit\n\n---\n*Example 1:*\n\n```sqf\nvalue = getFatigue player;\n```\n\n*Example 2:*\n\n```sqf\nif (getFatigue player < 0.5) then { player sideChat \"I'm good to go!\" };\n```","commands\\getFieldManualStartPage.md":"Returns array of the starting topic and hint the given field manual should display.\n\n\n---\n*Syntaxes:*\n\n`getFieldManualStartPage` display\n\n---\n*Example 1:*\n\n```sqf\ngetFieldManualStartPage (findDisplay 46); // returns [\"\", \"\"]\n```","commands\\getForcedFlagTexture.md":"A getter for `forceFlagTexture`. Forced texture is different from your normal flag texture, which can be retrieved with `flagTexture`\n\n\n---\n*Syntaxes:*\n\n`getForcedFlagTexture` object\n\n---\n*Example 1:*\n\n```sqf\ngetForcedFlagTexture player;\n```","commands\\getFriend.md":"Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it is friendly. See also `Side relations`.\n\n\n---\n*Syntaxes:*\n\nside1 `getFriend` side2\n\n---\n*Example 1:*\n\n```sqf\nvalue = west getFriend east;\n```\n\n*Example 2:*\n\n```sqf\n_isEnemy = side _killer getFriend side _victim < 0.6;\n```","commands\\getFSMVariable.md":"Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the `execFSM` command.\n\n\n---\n*Syntaxes:*\n\nFSMhandle `getFSMVariable` name\n\nFSMhandle `getFSMVariable` [name, defaultValue]\n\n---\n*Example 1:*\n\n```sqf\n_handle getFSMVariable \"_foo\";\n```\n\n*Example 2:*\n\n```sqf\n_handle getFSMVariable [\"_foo\", 123];\n```","commands\\getFuelCargo.md":"Returns the fuel amount (1 is full) in the cargo space of a refueling vehicle.\n\n\n---\n*Syntaxes:*\n\n`getFuelCargo` vehicle\n\n---\n*Example 1:*\n\n```sqf\nvalue = getFuelCargo myVehicleName;\n```","commands\\getGraphValues.md":"Generate graph y - coordinates of all input values within specific x and y range.\n\n\n---\n*Syntaxes:*\n\n`getGraphValues` <nowiki>[[graphMinX, graphMaxX, graphMinY, graphMaxY, valueCount, randomOffset], x1, y1, x2, y2, ... xn, yn]</nowiki>\n\n---\n*Example 1:*\n\n```sqf\nprivate _minX = 0;\nprivate _maxX = 10;\nprivate _minY = 0;\nprivate _maxY = 100;\nprivate _count = 11;\nprivate _random = 0;\n\ngetGraphValues [\n\t[_minX, _maxX, _minY, _maxY, _count, _random],\n\t0, 5,\n\t1, 10,\n\t2, 100,\n\t3, 50,\n\t4, 30,\n\t5, 100,\n\t6, 10,\n\t7, 50,\n\t8, 75,\n\t9, 100,\n\t10, 100\n];\n/*\n\treturns [[0.05, 0.1, 1, 0.5, 0.3, 1, 0.1, 0.5, 0.75, 1, 1], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]\n\tsupposedly [array of 1-based Y values, array of X values]\n*/\n```","commands\\getGroupIcon.md":"Get group icon properties.\n\n\n---\n*Syntaxes:*\n\ngroup `getGroupIcon`  id\n\n---\n*Example 1:*\n\n```sqf\n_grpIconId = _group getVariable \"BIS_MARTA_ICON_TYPE\";\n_grpIcon = _group getGroupIcon _grpIconId;\n```","commands\\getGroupIconParams.md":"Returns group icons params used for command bar drawing such as color, text, scale, visibility, waypoint visibility, waypoint color.\n\n\n---\n*Syntaxes:*\n\n`getGroupIconParams` group\n\n---\n*Example 1:*\n\n```sqf\n_iconParams = getGroupIconParams group player;\n```\n\n*Example 2:*\n\n```sqf\ngetGroupIconParams group player params [\"_color\", \"_text\", \"_scale\", \"_visibility\", \"_WPVisibility\", \"_WPColor\"];\n```","commands\\getGroupIcons.md":"Returns all group icons. [id,icon,[offsetx,offsety],[..],..]\n\n\n---\n*Syntaxes:*\n\n`getGroupIcons` group\n\n---\n*Example 1:*\n\n```sqf\n(example);\n```","commands\\getHideFrom.md":"Returns the `Position` where object believes the enemy to be. If there is no direct line of sight between the object and the enemy, this position is extrapolated based on the last known position and speed of the enemy. A returned position of [0,0,0] implies that object does not knowAbout enemy. If enemy is null it is some position in front of the object or enemy position.\n\n\n---\n*Syntaxes:*\n\nobject `getHideFrom` enemy\n\n---\n*Example 1:*\n\n```sqf\n_pos = player getHideFrom _enemy;\n```","commands\\getHit.md":"Returns selection damage. Same as `getHitPointDamage`, only the argument is selection part instead of hit point.\n\n\n---\n*Syntaxes:*\n\nvehicle `getHit` selection\n\n---\n*Example 1:*\n\n```sqf\nplayer getHit \"head\";\n```\n\n*Example 2:*\n\n```sqf\n_car getHit \"motor\";\n```","commands\\getHitIndex.md":"Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with `getAllHitPointsDamage` command.\n* 0: no damage\n* 1: full damage\n\n\n---\n*Syntaxes:*\n\nvehicle `getHitIndex` hitPartIndex\n\n---\n*Example 1:*\n\n```sqf\nvehicle player getHitIndex 3;\n```","commands\\getHitPointDamage.md":"Return current level of damage in range 0..1 for a specific Hit Point (specified by its config class).\nIf you need to get damage of a selection instead of hit point, use `getHit`.\n\n\n---\n*Syntaxes:*\n\nvehicle `getHitPointDamage` hitPointName\n\n---\n*Example 1:*\n\n```sqf\nvehicle player getHitPointDamage \"hitEngine\";\n```","commands\\getItemCargo.md":"Returns all items names and count from ammo box (or any general weapon holder container).\n\n\n---\n*Syntaxes:*\n\n`getItemCargo` box\n\n---\n*Example 1:*\n\n```sqf\nhint str getItemCargo cursorTarget;\n```","commands\\getLighting.md":"Gets general environment's light settings.\n\n\n---\n*Syntaxes:*\n\n`getLighting`\n\n---\n*Example 1:*\n\n```sqf\ngetLighting; // returns [[0.646753,0.781818,1],28526.2,[-0.0167152,0.211598,-0.977214],0]\n```\n\n*Example 2:*\n\n```sqf\ngetLighting params [\"_ambientLightColour\", \"_ambientLightBrightness\", \"_lightDirection\", \"_starsVisibility\"];\n```","commands\\getLightingAt.md":"Gets provided object's lighting information.\n\n\n---\n*Syntaxes:*\n\n`getLightingAt` obj\n\n---\n*Example 1:*\n\n```sqf\ngetLightingAt player; // returns [[1,1,1], 0.5, [0,0,0], 0]\n```\n\n*Example 2:*\n\n```sqf\ngetLightingAt player params [\"_ambientLightColour\", \"_ambientLightBrightness\", \"_dynamicLightColour\", \"_dynamicLightBrightness\"];\n```","commands\\getLoadedModsInfo.md":"Returns information about all loaded modifications.\n\n\n---\n*Syntaxes:*\n\n`getLoadedModsInfo`\n\n---\n*Example 1:*\n\n```sqf\nprivate _loadedMods = getLoadedModsInfo;\n/*\n\t[\n\t\t[\"dummy\",\"dummy\",false,false,\"NOT FOUND\",\"\",\"\",\"0\"],\n\t\t[\"CUP Units DEV Version r710 (r710-r710 UNITSSVN) (12|Jun|2020)\",\"@[DEV] CUP Units\",false,false,\"GAME DIR\",\"f3fb8a4c62443ac799c7c0e00f645b1f32cf1376\",\"c96577b4\",0],\n\t\t[\"CUP Weapons DEV Version r1486 (r1481-r1486 WEAPONSSVN) (12|Jun|2020)\",\"@[DEV] CUP Weapons\",false,false,\"GAME DIR\",\"6dbd7c052ce2ae68803e10f6a3653d0b046881d8\",\"bb1c4965\",0],\n\t\t[\"Community Base Addons v3.15.1\",\"@CBA_A3\",false,false,\"GAME DIR\",\"33eef5c0ed583d1222319460b184090513193287\",\"131bbb64\",0],\n\t\t[\"Arma 3 Contact (Platform)\",\"enoch\",true,true,\"GAME DIR\",\"4298e892077aec33be6b68730a974400a3c3a636\",\"43e900ae\",\"1021790\"],\n\t\t[\"Arma 3 Tanks\",\"tank\",true,true,\"GAME DIR\",\"c47d45d7ce1261e0a0d1c4ed9517611eae6ebf9f\",\"1aec74ec\",\"798390\"],\n\t\t[\"Arma 3 Tac-Ops\",\"tacops\",true,true,\"GAME DIR\",\"808cc67221feadc288c856395cac28b908966eee\",\"441362c6\",\"744950\"],\n\t\t[\"Arma 3 Laws of War\",\"orange\",true,true,\"GAME DIR\",\"aa86785568206ae1e7becaa09eb673ee645d971f\",\"4729aa84\",\"571710\"],\n\t\t[\"Arma 3 Malden\",\"argo\",true,true,\"GAME DIR\",\"db6d4d06a3ad28207da665e8c34bbd8adf191019\",\"61001811\",\"639600\"],\n\t\t[\"Arma 3 Jets\",\"jets\",true,true,\"GAME DIR\",\"8e8e1f9275e37cc90c0f2a8a6901dd2a3e81a29a\",\"fc8366ee\",\"601670\"],\n\t\t[\"Arma 3 Apex\",\"expansion\",true,true,\"GAME DIR\",\"48f32952612dbb6ca972790c17c9920797073233\",\"fc4aed7f\",\"395180\"],\n\t\t[\"Arma 3 Marksmen\",\"mark\",true,true,\"GAME DIR\",\"85c7f2284f8b0271bfafecd96c49230ce0515861\",\"534e5baa\",\"332350\"],\n\t\t[\"Arma 3 Helicopters\",\"heli\",true,true,\"GAME DIR\",\"dae29688657dbc9057f9eb83179a3ad21d3a689d\",\"e7165098\",\"304380\"],\n\t\t[\"Arma 3 Karts\",\"kart\",true,true,\"GAME DIR\",\"eae9e0b218e7a8e8e906477ee1a5e8e3d5298f18\",\"8240ae3f\",\"288520\"],\n\t\t[\"Arma 3 Zeus\",\"curator\",true,true,\"GAME DIR\",\"2310c5c95a558253c7286d93f5a2a810fbf9b620\",\"8af0db5d\",\"275700\"],\n\t\t[\"Arma 3\",\"A3\",true,true,\"NOT FOUND\",\"\",\"\",\"0\"]\n\t]\n*/\n```\n\n*Example 2:*\n\n```sqf\nprivate _modInfo = getLoadedModsInfo select 0;\n_modInfo params [\"_modname\", \"_modDir\", \"_isDefault\", \"_isOfficial\", \"_origin\", \"_hash\", \"_hashShort\", \"_itemID\"];\n```","commands\\getMagazineCargo.md":"Returns all magazines types and count from the cargo space\n\n\n---\n*Syntaxes:*\n\n`getMagazineCargo` object\n\n---\n*Example 1:*\n\n```sqf\n_content = getMagazineCargo carName;\n```\n\n*Example 2:*\n\n```sqf\n_content = getMagazineCargo ammoBoxName;\n```\n\n*Example 3:*\n\n```sqf\nhint str getMagazineCargo unitBackpack cursorTarget;\n```","commands\\getMarkerColor.md":"Returns marker color for given marker.\n\n\n---\n*Syntaxes:*\n\n`getMarkerColor` markerName\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerColor \"ColorBlack\";\n_color = getMarkerColor \"MarkerOne\"; // returns \"ColorBlack\"\n```","commands\\getMarkerPos.md":"Returns marker position.\n\n\n---\n*Syntaxes:*\n\n`getMarkerPos` markerName\n\n`getMarkerPos` [markerName, preserveElevation]\n\n---\n*Example 1:*\n\n```sqf\n_mPos1 = getMarkerPos \"markerOne\";\n```\n\n*Example 2:*\n\n```sqf\n_mPos2 = getMarkerPos [\"markerTwo\", true];\n```","commands\\getMarkerSize.md":"Returns the size of the given marker. A getter for `setMarkerSize` and an alias of `markerSize`.\n\n\n---\n*Syntaxes:*\n\n`getMarkerSize` markerName\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerSize [100,200];\n_size = getMarkerSize \"MarkerOne\"; //returns [100,200]\n```","commands\\getMarkerType.md":"Gets type of marker. See `CfgMarkers` for a list of standard markers.\n\n\n---\n*Syntaxes:*\n\n`getMarkerType`  markerName\n\n---\n*Example 1:*\n\n```sqf\nif (getMarkerType \"Marker1\" == \"\") then { hint \"Marker1 is not an icon!\" };\n```","commands\\getMass.md":"Returns mass of a PhysX object.\n\n\n---\n*Syntaxes:*\n\n`getMass` object\n\n---\n*Example 1:*\n\n```sqf\n_mass = getMass _myCar;\n```","commands\\getMissionConfig.md":"Returns `Config` entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:\n# External ``Description.ext`` file\n# `Eden Editor` scenario attribute\nSo if attribute exists in both places, attribute from `description.ext` is used. Previously, scenario attributes were extracted from `Description.ext` using `missionConfigFile`. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.\n\n\n---\n*Syntaxes:*\n\n`getMissionConfig` attribute\n\n---\n*Example 1:*\n\n```sqf\n_header = getMissionConfig \"Header\";\n```\nReturns scenario header config. Replaces the previous approach which would scan only the external `Description.ext` file, but ignore the value set in the Eden Editor:\n\n```sqf\n_header = missionConfigFile >> \"Header\"; // Old approach\n```","commands\\getMissionConfigValue.md":"Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is `nil`. If the attribute defined in multiple places, the command checks them in the following order:\n# External ``Description.ext`` file\n# `Eden Editor` scenario attribute\nSo if attribute exists in both places, attribute from `description.ext` is used. Previously, scenario attributes were extracted from `Description.ext` using `missionConfigFile`. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.<br><br>\n\n\n---\n*Syntaxes:*\n\n`getMissionConfigValue` attribute\n\n`getMissionConfigValue`  [attribute, defaultValue]\n\n---\n*Example 1:*\n\n```sqf\n_respawnDelay = getMissionConfigValue [\"respawnDelay\",0];\n```\nReturns respawn delay value. Replaces the previous approach which would scan only the external `Description.ext file`, but ignore the value set in the Eden Editor:\n\n```sqf\n_respawnDelay = getNumber (missionConfigFile >> \"respawnDelay\"); // Old approach\n```","commands\\getMissionDLCs.md":"Returns list of DLCs that are used in the mission.\n\n\n---\n*Syntaxes:*\n\n`getMissionDLCs`\n\n---\n*Example 1:*\n\n```sqf\n_usedDLCs = getMissionDLCs; // returns e.g [\"Orange\",\"Enoch\",\"Expansion\",\"Heli\",\"Contact\",\"Mark\",\"Argo\",\"Jets\"]\n```","commands\\getMissionLayerEntities.md":"Returns all entities within the specific `Eden Editor layer` and its sub-layers.\nTo be used when the scenario is running, not in the editor workspace.\nUseful to disable/enable whole parts of the scenario if layers are used during mission design.\n\n\n---\n*Syntaxes:*\n\n`getMissionLayerEntities` layerName\n\n---\n*Example 1:*\n\n```sqf\nprivate _base = getMissionLayerEntities \"Base\";\n```\n\n*Example 2:*\n\ndelete all objects within that layer after the player is over 800m away from _someObject:\n\n```sqf\nwaitUntil { sleep 1; (player distance _someObject) > 800 };\nprivate _simpleObjects = (getMissionLayerEntities \"Simple Objects\") select 0;\n{\n\tdeleteVehicle _x;\n} forEach _simpleObjects;\n```\n\n*Example 3:*\n\n```sqf\nprivate _layer1337Entities = getMissionLayerEntities 1337;\n```","commands\\getMissionLayers.md":"Returns a list of all layers created in `Eden Editor`. Designed to be used during a scenario. Default layers (BLUFOR, OPFOR...) are not returned.\n\n\n---\n*Syntaxes:*\n\n`getMissionLayers`\n\n---\n*Example 1:*\n\n```sqf\ngetMissionLayers; // [\"Electronics\",\"Camp Endurance\",\"UGV Workstation\",\"Comments\",\"Extraction Air\",\"Comments\",\"Extraction Ground\",\"Extraction\",\"test\"]\n```","commands\\getMissionPath.md":"Returns mission root plus the filename in a form of filepath to be used with commands requiring absolute path such as [[playSound3D]], [[drawIcon3D]], `createSimpleObject`, etc.\nAny leading \"\\\" in the filename will be stripped as the mission root includes one already.\n\n\n---\n*Syntaxes:*\n\n`getMissionPath` filename\n\n---\n*Example 1:*\n\n```sqf\n// returns e.g \"C:\\Users\\Username\\Documents\\Arma 3\\missions\\MissionName.Altis\\icons\\myIcon.paa\"\nprivate _path = getMissionPath \"icons\\myIcon.paa\";\nprivate _path = getMissionPath \"\\icons\\myIcon.paa\"; // leading \\ is also fine\n```\n\n*Example 2:*\n\n```sqf\n// returns e.g \"C:\\Users\\Username\\Documents\\Arma 3\\missions\\MissionName.Altis\\\" with the trailing \\\nprivate _root = getMissionPath \"\";\n```","commands\\getModelInfo.md":"Returns object's model info. Model path is suitable for use with `createSimpleObject` command. Since Arma 3 v2.08.148608 the command also returns placing point of the model in model coordinates. Placing point is always in format [0,0,z].\n\n\n---\n*Syntaxes:*\n\n`getModelInfo` object\n\n---\n*Example 1:*\n\n```sqf\n_modelInfo = getModelInfo player; // [\"b_soldier_03.p3d\", \"a3\\characters_f\\blufor\\b_soldier_03.p3d\", true, [0,0,0]]\n```\n\n*Example 2:*\n\n```sqf\n_modelInfo = getModelInfo cursorObject;\n```\n\n*Example 3:*\n\nGet Z ASL using placing point:\n\n```sqf\n_zASL = (heli modelToWorldWorld (getModelInfo heli select 3)) select 2;\n```","commands\\getMousePosition.md":"Returns mouse position in UI coordinates.\n\n\n---\n*Syntaxes:*\n\n`getMousePosition`\n\n---\n*Example 1:*\n\n```sqf\ngetMousePosition params [\"_mouseX\", \"_mouseY\"];\n```","commands\\getMusicPlayedTime.md":"Returns elapsed time in seconds for currently playing music track.\n\n\n---\n*Syntaxes:*\n\n`getMusicPlayedTime`\n\n---\n*Example 1:*\n\n```sqf\nplayMusic [\"LeadTrack06_F_Tank\", 0];\nonEachFrame {hintSilent str getMusicPlayedTime};\n```","commands\\getNumber.md":"Extract number from config entry.\n\n\n---\n*Syntaxes:*\n\n`getNumber` config\n\n---\n*Example 1:*\n\n```sqf\n_value = getNumber (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"maxSpeed\");\n```","commands\\getObjectArgument.md":"Return name of object argument in mission editor.\n\n\n---\n*Syntaxes:*\n\nmap `getObjectArgument` [object, argument]\n\n---\n*Example 1:*\n\n```sqf\n// returns string \"[1009.0351, 1319.4928]\"\n(findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"]\n\n// returns array [1009.0351, 1319.4928]\n(findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]\n```","commands\\getObjectChildren.md":"Return a list of all the children of the specified object.\n\n\n---\n*Syntaxes:*\n\nmap `getObjectChildren` object\n\n---\n*Example 1:*\n\n-","commands\\getObjectDLC.md":"Returns appID of the DLC the object belongs to or `nil` if object is vanilla.\n\n\n---\n*Syntaxes:*\n\n`getObjectDLC` obj\n\n---\n*Example 1:*\n\n```sqf\n_appID = getObjectDLC cursorTarget;\nif (!isNil \"_appID\") then {\n\thint format [\"This object belongs to DLC with id: %1\", _appID];\n} else {\n\thint \"This object is vanilla\";\n};\n```\n\n*Example 2:*\n\n```sqf\n_akm = createSimpleObject [\"A3\\Weapons_F_Exp\\Rifles\\AKM\\AKM_F.p3d\",getPosASL player];\ngetObjectDLC _akm;\t// 395180\n```","commands\\getObjectFOV.md":"Returns Field of View of the given object in `rad`ians. Static objects return default value, which is 1.\nFOV of `objNull` is 0.\nObject FOV is indirectly connected with optics magnification or player view zoom, the narrower the angle the greater the zoom.\n\n\n---\n*Syntaxes:*\n\n`getObjectFOV` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _objFOV = getObjectFOV player;\n```\n\n*Example 2:*\n\n```sqf\nprivate _objFOVinDegrees = deg getObjectFOV cursorObject;\n```\n\n*Example 3:*\n\nPerceived distance to an object:\n\n```sqf\nprivate _vdist = (player distance _obj) * (getObjectFOV player / 0.75);\n```","commands\\getObjectID.md":"Returns Visitor ID of the given object. Visitor IDs of static map objects can change if map is in development and updated with new static objects.\n\n\n---\n*Syntaxes:*\n\n`getObjectID` object\n\n---\n*Example 1:*\n\n```sqf\ngetObjectID _tree;\n```","commands\\getObjectMaterials.md":"Gets all custom materials associated with the object.\n\n\n---\n*Syntaxes:*\n\n`getObjectMaterials` obj\n\n---\n*Example 1:*\n\n```sqf\n_materials = getObjectMaterials car;\n```","commands\\getObjectProxy.md":"Return the proxy object associated with the given editor object.\n\n\n---\n*Syntaxes:*\n\nmap `getObjectProxy` object\n\n---\n*Example 1:*\n\n```sqf\n(findDisplay 128 displayCtrl 51) getObjectProxy \"_unit_1\"\n// returns the object 'B 1-1-A:1 (Sean Johnson)'\n```","commands\\getObjectScale.md":"Returns the render scale of the object relative to the original model.\n\n\n---\n*Syntaxes:*\n\n`getObjectScale` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _objectScale = getObjectScale _object;\n\nif (_objectScale != 1) exitWith { hint \"all good\" };\nif (_objectScale > 1) then\n{\n\thint \"it's bigger!\";\n}\nelse\n{\n\thint \"it's smaller...\";\n};\n```","commands\\getObjectTextures.md":"Gets all custom textures (hiddenSelectionsTextures) associated with the object.\n\n\n---\n*Syntaxes:*\n\n`getObjectTextures` obj\n\n---\n*Example 1:*\n\n```sqf\n_textures = getObjectTextures player;\n```","commands\\getObjectType.md":"Returns object type as a number:\n* 1 - Primary - Normal object placed in Visitor, part of landscape\n* 2 - Network - Road placed in Visitor, part of landscape\n* 4 - Temporary - Temporary object (like tracks)\n* 8 - TypeVehicle - Some entity added by game\n* 16 - TypeTempVehicle - Temporary entity\n* 32 - LandDecal - Land decal\n\n\n---\n*Syntaxes:*\n\n`getObjectType` object\n\n---\n*Example 1:*\n\n```sqf\n_objType = getObjectType player;\n```\n\n*Example 2:*\n\n```sqf\n_objType = getObjectType cursorObject;\n```","commands\\getObjectViewDistance.md":"Gets the values of rendering distances of objects and shadows.\n\n\n---\n*Syntaxes:*\n\n`getObjectViewDistance`\n\n---\n*Example 1:*\n\n```sqf\n_arr = getObjectViewDistance;\n```","commands\\getOpticsMode.md":"Returns the class name of the current optic mode of the current weapon.\n\n\n---\n*Syntaxes:*\n\nunit `getOpticsMode` slot\n\n---\n*Example 1:*\n\n```sqf\nplayer getOpticsMode 0; // get current weapon's optic mode\nplayer getOpticsMode 1; // get primary weapon's optic mode\nplayer getOpticsMode 2; // get launcher's optic mode\nplayer getOpticsMode 3; // get handgun's optic mode\n```","commands\\getOrDefault.md":"Retrieves a value out of a `HashMap` after looking it up by its key. When the HashMap doesn't contain the key, the default value is returned\n\n\n---\n*Syntaxes:*\n\nhashMap `getOrDefault` [key, defaultValue, setDefault]\n\n---\n*Example 1:*\n\n```sqf\nprivate _myValue = _myHashMap getOrDefault [\"a\", \"Not Found!\"];\n```\n\n*Example 2:*\n\n```sqf\nprivate _myValue = _hashMap getOrDefault [\"a\", \"Not Found!\", true]; // will add default value to the hash map if it does not exist\n```\n\n*Example 3:*\n\n```sqf\nprivate _array = _hashmap getOrDefault [_key, [], true]; // a new array will be created if it doesn't exist\n_array pushBack _item; // _item will be added to the array (the one in the hashmap is updated by reference)\n```","commands\\getOrDefaultCall.md":"Retrieves a value from the `HashMap` for the given 'key', executes given 'code' if key was not found and returns result. Additionally sets key to the code result value if 'set' is true.\n\n\n---\n*Syntaxes:*\n\nhashMap `getOrDefaultCall` [key, code, set]\n\n---\n*Example 1:*\n\n```sqf\n_hashmap getOrDefaultCall [123, { systemChat \"The key 123 does not exist and will be created and assigned 345\"; 345 }, true]\n```","commands\\getOxygenRemaining.md":"Returns amount of remaining oxygen.\n\n\n---\n*Syntaxes:*\n\n`getOxygenRemaining` unit\n\n---\n*Example 1:*\n\n```sqf\n_oxygen = getOxygenRemaining player;\n```","commands\\getPersonUsedDLCs.md":"Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.\n\n\n---\n*Syntaxes:*\n\n`getPersonUsedDLCs` unit\n\n---\n*Example 1:*\n\n```sqf\n_objects = getPersonUsedDLCs player;\n```","commands\\getPilotCameraDirection.md":"Returns model space vector of the object airplane or helicopter [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]] .\n\n\n---\n*Syntaxes:*\n\n`getPilotCameraDirection` object\n\n---\n*Example 1:*\n\n```sqf\n_pilotCamVector = getPilotCameraDirection vehicle player;\n```","commands\\getPilotCameraPosition.md":"Returns model space coordinates of the object airplane or helicopter [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]].\n\n\n---\n*Syntaxes:*\n\n`getPilotCameraPosition` object\n\n---\n*Example 1:*\n\n```sqf\n_pilotCamPos = getPilotCameraPosition vehicle player;\n```","commands\\getPilotCameraRotation.md":"Returns rotation (relative to the centered camera position) of the object airplane or helicopter [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]] .\n\n\n---\n*Syntaxes:*\n\n`getPilotCameraRotation` object\n\n---\n*Example 1:*\n\n```sqf\n_pilotCamRot = getPilotCameraRotation vehicle player;\n```","commands\\getPilotCameraTarget.md":"Returns the target of the object airplane or helicopter [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]] tracking.\n\n\n---\n*Syntaxes:*\n\n`getPilotCameraTarget` object\n\n---\n*Example 1:*\n\n```sqf\ngetPilotCameraTarget params [\"_pilotCamTracking\", \"_pilotCamTargetPos\", \"_pilotCamTarget\"];\n```","commands\\getPiPViewDistance.md":"Get the set PiP (Picture-in-Picture) view distance (that can be set by `setPiPViewDistance`).\n\n\n---\n*Syntaxes:*\n\n`getPiPViewDistance`\n\n---\n*Example 1:*\n\n```sqf\nprivate _pipViewDistance = getPiPViewDistance;\n```\n\n*Example 2:*\n\n```sqf\nprivate _pipViewDistanceRatio = getPiPViewDistance / viewDistance;\n```","commands\\getPlateNumber.md":"Get the license plates from any vehicle which has plates configured.\n\n\n---\n*Syntaxes:*\n\n`getPlateNumber` vehicle\n\n---\n*Example 1:*\n\n```sqf\nif (getPlateNumber vehicle player != \"H4X0RZ\") then { hint \"u no 1337 bro\" };\n```","commands\\getPlayerChannel.md":"Returns channel number for given player, `provided that player is speaking`, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:\n* It does not work on dedicated server, the return is always -1, only client can detect other client talking.\n* Prior to Arma 3 v2.01.146856 did not detect when someone talked on direct chat at all anywhere. \n* The client on which command is executed has to able to receive transmission before the transmission channel can be detected. For example if a player is not in the same group as a speaker and the speaker speaks on Group Channel, the player cannot hear the speaker and therefore cannot detect what channel the speaker is on.\nIn short, this command mimics the speaking icon from the UI. Correspondence between channel and number:\n\n\n---\n*Syntaxes:*\n\n`getPlayerChannel` player\n\n---\n*Example 1:*\n\n```sqf\nprivate _channelID = getPlayerChannel player;\n```","commands\\getPlayerID.md":"Returns user DirectPlay ID, which can be used with `getUserInfo`, and is found in `allMapMarkers` results and in some [[Arma 3: Mission Event Handlers|mission event handlers]] such as [[Arma 3: Mission Event Handlers#PlayerConnected|PlayerConnected]].\n\n\n---\n*Syntaxes:*\n\n`getPlayerID` unit\n\n---\n*Example 1:*\n\n```sqf\ngetPlayerID player;\n```","commands\\getPlayerScores.md":"* In MP: Returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score).\n* In SP: Empty array []\n\n\n---\n*Syntaxes:*\n\n`getPlayerScores` unitName\n\n---\n*Example 1:*\n\n```sqf\ngetPlayerScores BIS_player1;\n```","commands\\getPlayerUID.md":"Return a UniqueID of the given unit (player).\n\n\n---\n*Syntaxes:*\n\n`getPlayerUID` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _uid = getPlayerUID player;\n```","commands\\getPlayerVoNVolume.md":"Gets provided player's Voice over Network (VoN) volume.\n\n\n---\n*Syntaxes:*\n\n`getPlayerVoNVolume` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _volume = getPlayerVoNVolume (units player select 1);\n```","commands\\getPos.md":"Returns object or location position. If the argument is an object, the return value is in format `PositionAGLS`.<br>\nThe alternative syntax gets the position given distance and heading away from provided object or position - the command equivalent of `BIS_fnc_relPos`.\n\n\n---\n*Syntaxes:*\n\n`getPos` object\n\n`getPos` location\n\norigin `getPos` [distance, heading]\n\n---\n*Example 1:*\n\n```sqf\nhintSilent str getPos player;\n```\n\n*Example 2:*\n\n`getPos` vs. other methods (over sea). Pay attention to Z values:\n\n```sqf\ngetPos ship;\t\t\t\t// [2412.01, 6036.33, -0.839965]\ngetPosATL ship;\t\t\t\t// [2412.01, 6036.33, 19.4266]\ngetPosASL ship;\t\t\t\t// [2412.01, 6036.33, -0.920066]\ngetPosASLW ship;\t\t\t// [2412.01, 6036.33, -0.865981]\nvisiblePosition ship;\t\t// [2412.02, 6036.33, -0.837952]\nvisiblePositionASL ship;\t// [2412.02, 6036.33, -0.91798]\nposition ship;\t\t\t\t// [2412.01, 6036.33, -0.839965]\n```\n\n*Example 3:*\n\n`getPos` vs. other methods (over land, on top of a 100m high building). Pay attention to Z values:\n\n```sqf\ngetPos car;\t\t\t\t\t// [2508.64, 5681.47, 0.0609589]\ngetPosATL car;\t\t\t\t// [2508.64, 5681.47, 100.0356369]\ngetPosASL car;\t\t\t\t// [2508.64, 5681.47, 171.718]\ngetPosASLW car;\t\t\t\t// [2508.64, 5681.47, 171.718]\nvisiblePosition car;\t\t// [2508.64, 5681.47, 0.0609512]\nvisiblePositionASL car;\t\t// [2508.64, 5681.47, 171.718]\nposition car;\t\t\t\t// [2508.64, 5681.47, 0.0609589]\n```\n\n*Example 4:*\n\nFind position 100 metres and 45 degrees from player position:\n\n```sqf\nplayer getPos [100, 45];\n```\n\n*Example 5:*\n\nDetermine if a free-falling unit is close enough to the surface (including buildings, aircraft carriers etc) below to deploy the parachute:\n\n```sqf\nwaitUntil { sleep 1; getPos player select 2 < 200 };\nhint \"Deploying a parachute might be a good idea\";\n```","commands\\getPosASL.md":"Returns the object position height above sea level.\n\n\n---\n*Syntaxes:*\n\n`getPosASL` object\n\n---\n*Example 1:*\n\n```sqf\n_AslPos = getPosASL player;\n```\n\n*Example 2:*\n\n```sqf\nhint format [\"position above sea level: %1\", (getPosASL player) select 2];\n```","commands\\getPosASLVisual.md":"Returns an object's rendered `ASL position` (z value above sea level) in render time scope.\n\n\n---\n*Syntaxes:*\n\n`getPosASLVisual` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _playerRenderedPosASL = getPosASLVisual player;\n```","commands\\getPosASLW.md":"Returns the object position height above water surface (waves and pond objects included).\n\n\n---\n*Syntaxes:*\n\n`getPosASLW` obj\n\n---\n*Example 1:*\n\n```sqf\n_pos = getPosASLW _diver;\n```","commands\\getPosATL.md":"Returns the position of an object relative to the terrain.\n\n\n---\n*Syntaxes:*\n\n`getPosATL` object\n\n---\n*Example 1:*\n\n```sqf\n_objPosition = getPosATL player;\n```","commands\\getPosATLVisual.md":"Returns an object's rendered `ATL position` (z value above ground) in render time scope.\n\n\n---\n*Syntaxes:*\n\n`getPosATLVisual` object\n\n---\n*Example 1:*\n\n```sqf\n_playerRenderedPosATL = getPosATLVisual player;\n```","commands\\getPosVisual.md":"Returns an object's `AGLS position` in render time scope. Alias of `visiblePosition`.\n\n\n---\n*Syntaxes:*\n\n`getPosVisual` object\n\n---\n*Example 1:*\n\n```sqf\n_playerRenderedPos = getPosVisual player;\n```","commands\\getPosWorld.md":"Returns the provided object's model centre position ([0,0,0]) in `PositionASL`, rather than the transformed `boundingCenter` or [[Oxygen_2_-_Manual#LandContact|LandContact]] vertices.\n\n\n---\n*Syntaxes:*\n\n`getPosWorld` object\n\n---\n*Example 1:*\n\n```sqf\n_obj setPosWorld getPosWorld _obj;\n```\n\n*Example 2:*\n\n```sqf\nATLToASL (_groundObj modelToWorld [0,0,0]) isEqualTo getPosWorld _groundObj; // true\n```\n\n*Example 3:*\n\nWave height under a boat:\n\n```sqf\nprivate _h = ((boat modelToWorld [0,0,0]) vectorDiff getPosWorld boat) select 2;\n```","commands\\getPosWorldVisual.md":"Returns the provided object's, model centre position in render version in format `PositionASL`, rather than transformed `boundingCenter` or [[Oxygen_2_-_Manual#LandContact|LandContact]] vertices.\n\n\n---\n*Syntaxes:*\n\n`getPosWorldVisual` object\n\n---\n*Example 1:*\n\n```sqf\n_obj setPosWorld getPosWorldVisual _obj;\n```\n\n*Example 2:*\n\n```sqf\n_groundObj modelToWorldVisualWorld [0,0,0] isEqualTo getPosWorldVisual _groundObj; // true\n```\n\n*Example 3:*\n\n```sqf\nprivate _waveHeight = ((boat modelToWorldVisual [0,0,0]) vectorDiff getPosWorldVisual boat) select 2;\n```","commands\\getPylonMagazines.md":"Return array of magazines on pylons.\n\n\n---\n*Syntaxes:*\n\n`getPylonMagazines`  vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetPylonMagazines vehicle player;\n```","commands\\getRelDir.md":"Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of `BIS_fnc_relativeDirTo`.\nTaking the current `direction` of the object into account.\n\n\n---\n*Syntaxes:*\n\nobject `getRelDir` position\n\n---\n*Example 1:*\n\n```sqf\n_reldir = player getRelDir tank;\n```","commands\\getRelPos.md":"Returns position that is given distance and relative direction away from original object.\n\n\n---\n*Syntaxes:*\n\nobject `getRelPos`  [distance, direction]\n\n---\n*Example 1:*\n\nFind position 100 metres away at player's 3 o'clock:\n\n```sqf\n_relpos = player getRelPos [100, 90];\n```","commands\\getRemoteSensorsDisabled.md":"Get status of disabled raycasts for remote entities. See `disableRemoteSensors` for detailed description.\n\n\n---\n*Syntaxes:*\n\n`getRemoteSensorsDisabled`\n\n---\n*Example 1:*\n\n```sqf\n_status = getRemoteSensorsDisabled;\n```","commands\\getRepairCargo.md":"Returns the amount (1 is full) of repair resources in the cargo space of a repair vehicle.\n\n\n---\n*Syntaxes:*\n\n`getRepairCargo` vehicle\n\n---\n*Example 1:*\n\n```sqf\nvalue = getRepairCargo vehicleName;\n```","commands\\getResolution.md":"Returns an array containing all information about current client screen resolution.\n\n\n---\n*Syntaxes:*\n\n`getResolution`\n\n---\n*Example 1:*\n\n```sqf\nprivate _res = getResolution;\n```\nExample result with a single 16:9 monitor:\n\n```sqf\n[\n\t1920,\t\t// width\n\t1080,\t\t// height\n\t792,\t\t// 2D viewport width\n\t594,\t\t// 2D viewport height\n\t1.77778,\t// aspect ratio\n\t0.55,\t\t// UI scale\n\t0.75,\t\t// fovTop\n\t1.33333,\t// fovLeft\n\tfalse\t\t// tripleHead\n]\n```\nExample result with a triple 16:9 monitor setup:\n\n```sqf\n[\n\t5760,\t\t// width\n\t1080,\t\t// height\n\t792,\t\t// 2D viewport width\n\t594,\t\t// 2D viewport height\n\t5.33333,\t// aspect ratio\n\t0.55\t\t// UI scale\n]\n```\nExample result on a dedicated server:\n\n```sqf\n[\n\t160,\t\t// width\n\t120,\t\t// height\n\t136,\t\t// 2D viewport width\n\t102,\t\t// 2D viewport height\n\t1.33333,\t// aspect ratio\n\t0.85\t\t// UI scale\n]\n```","commands\\getRoadInfo.md":"Returns road piece information.\n\n\n---\n*Syntaxes:*\n\n`getRoadInfo` road\n\n---\n*Example 1:*\n\n```sqf\nprivate _info = getRoadInfo _road;\n_info params [\"_mapType\", \"_width\", \"_isPedestrian\", \"_texture\", \"_textureEnd\", \"_material\", \"_begPos\", \"_endPos\", \"_isBridge\"];\nprivate _roadDirection = _begPos getDir _endPos;\n```","commands\\getRotorBrakeRTD.md":"Returns if rotor break is on.\n\n\n---\n*Syntaxes:*\n\n`getRotorBrakeRTD` helicopter\n\n---\n*Example 1:*\n\n```sqf\n_isOn = getRotorBrakeRTD _heli;\n```","commands\\getSensorTargets.md":"Returns vehicle sensors' potential targets.\n\n\n---\n*Syntaxes:*\n\n`getSensorTargets` vehicle\n\n---\n*Example 1:*\n\n```sqf\nprivate _radarTargets = getSensorTargets vehicle player;\n/*\n\treturns e.g\n\t[\n\t\t[O Alpha 1-3:1, \"air\", \"unknown\", [\"ir\", \"activeradar\", \"visual\"]],\n\t\t[17750112040# 163957: apc_tracked_01_aa_f.p3d, \"ground\", \"unknown\", [\"datalink\"]]\n\t]\n*/\n```","commands\\getSensorThreats.md":"Returns vehicle sensors' threats.\n\n\n---\n*Syntaxes:*\n\n`getSensorThreats` vehicle\n\n---\n*Example 1:*\n\n```sqf\nprivate _dangers = getSensorThreats vehicle player;\n/*\n\treturns e.g\n\t[\n\t\t[164230: titan_missile_atl_fly.p3d, \"missile\", \"visual\"],\n\t\t[164233: titan_missile_atl_fly.p3d, \"threatmissile\", \"radar\"]\n\t]\n*/\n```","commands\\getShadowDistance.md":"Gets the shadows rendering distance.\n\n\n---\n*Syntaxes:*\n\n`getShadowDistance`\n\n---\n*Example 1:*\n\n```sqf\n_value = getShadowDistance;\n```","commands\\getShotParents.md":"Returns shot information for the given projectile. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.\n\n\n---\n*Syntaxes:*\n\n`getShotParents` projectile\n\n---\n*Example 1:*\n\n```sqf\n_shotParents = getShotParents myProjectile;\n```\n\n*Example 2:*\n\n```sqf\nbatmobile addEventHandler [\"Fired\", {systemChat str getShotParents (_this select 6)}];\n```","commands\\getSlingLoad.md":"Return object which is sling loaded by vehicle\n\n\n---\n*Syntaxes:*\n\n`getSlingLoad` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_cargo = getSlingLoad heli1;\n```","commands\\getSoundController.md":"Returns value of the given sound controller.\n\n\n---\n*Syntaxes:*\n\nvehicle `getSoundController` controller\n\n---\n*Example 1:*\n\n```sqf\nvehicle player getSoundController \"rpm\"; //600\n```","commands\\getSoundControllerResult.md":"Returns the calculated value of `simple expression` defined in config. Config could be any config entry, even ` mission config` entry. It is more important that the vehicle is a transport and not any object. If the expression contains sound controllers, the controller values will be taken from the given vehicle.\n\n\n---\n*Syntaxes:*\n\nvehicle `getSoundControllerResult` config\n\n---\n*Example 1:*\n\n```sqf\n_result = (vehicle player) getSoundControllerResult (configFile >> \"cfgVehicles\" >> typeOf (vehicle player) >> \"sounds\" >> \"idle_ext\" >> \"volume\");\n```\n\n*Example 2:*\n\n```sqf\n// mission config entry to reverse rain strength:\n// myExpression = \"rain factor [1,0]\";\n_result = \"PaperCar\" createVehicleLocal position player getSoundControllerResult (missionConfigFile >> \"myExpression\");\n```","commands\\getSpeed.md":"Get the speed for the given speed mode.\n\nSpeedMode can be:\n*\"AUTO\"\n*\"SLOW\"\n*\"NORMAL\"\n*\"FAST\"\n\n\n---\n*Syntaxes:*\n\nobject `getSpeed` speedMode\n\n---\n*Example 1:*\n\n```sqf\n_spd = player getSpeed \"FAST\";\n```","commands\\getStamina.md":"Get current stamina (~ seconds until depletion)\n\n\n---\n*Syntaxes:*\n\n`getStamina` unit\n\n---\n*Example 1:*\n\n```sqf\ngetStamina player;\n```","commands\\getStatValue.md":"Returns value of the given stat.<br>\nA list of possible StatNames can be found here: [[Arma 3: Stat Names]]\n\n\n---\n*Syntaxes:*\n\n`getStatValue` name\n\n---\n*Example 1:*\n\n```sqf\ngetStatValue \"ExpWarlockDown\"; // Checks if the \"Warlock Down\" Achivement was already aquired\n```","commands\\getSteamFriendsServers.md":"Returns servers information of Steam friends currently playing the game.\n\n\n---\n*Syntaxes:*\n\n`getSteamFriendsServers`\n\n---\n*Example 1:*\n\n```sqf\ngetSteamFriendsServers; // returns e.g [[\"127.42.33.8:2302\", \"MyFriend\"], [\"127.84.66.16:4604\", \"My Best Friend\"]]\n```","commands\\getSubtitleOptions.md":"Returns subtitles settings.\n\n\n---\n*Syntaxes:*\n\n`getSubtitleOptions`\n\n---\n*Example 1:*\n\n```sqf\nprivate _subtitleSettings = getSubtitleOptions;\n```","commands\\getSuppression.md":"Gets the suppression value for the given unit. Returns varying `Number` between 0 and 1, or -1 if suppression is disabled (**`disableAI` \"SUPPRESSION\"**) or the suppression value is not available. Suppression is not calculated for player entities and is always 0, unless it is set with `setSuppression`. In this case the return value is the set value. Before Arma 3 v1.92 this command could return `nil`.<br><br>\n\n\n---\n*Syntaxes:*\n\n`getSuppression` unit\n\n---\n*Example 1:*\n\n```sqf\ngetSuppression AI_unit_1;\n```","commands\\getTerrainGrid.md":"A getter for `setTerrainGrid`, returns the current terrain grid.\n\n\n---\n*Syntaxes:*\n\n`getTerrainGrid`\n\n---\n*Example 1:*\n\n```sqf\n_terrainGrid = getTerrainGrid;\n```\n\n*Example 2:*\n\n```sqf\nif (getTerrainGrid < 50) then\n{\n   hint \"Grass is enabled\";\n};\n```","commands\\getTerrainHeight.md":"Returns terrain height at the specified location.\n\n\n---\n*Syntaxes:*\n\n`getTerrainHeight` positionWorld\n\n---\n*Example 1:*\n\n```sqf\nprivate _gridCellHeight = getTerrainHeight getPosWorld player;\n```","commands\\getTerrainHeightASL.md":"Returns the terrain height above the sea for the given position.\n\n\n---\n*Syntaxes:*\n\n`getTerrainHeightASL` position\n\n---\n*Example 1:*\n\n```sqf\n_height = getTerrainHeightASL (getPosATL player);\n```\n\n*Example 2:*\n\n```sqf\n_height = getTerrainHeightASL [5213,3245];\n```\n\n*Example 3:*\n\n```sqf\n_seaDepth = abs (getTerrainHeightASL getPosATL player); // sea depth at player's position\n```","commands\\getTerrainInfo.md":"Returns the terrain heightmap information, as well as sea level offset (due to tides, if available).\n\n\n---\n*Syntaxes:*\n\n`getTerrainInfo`\n\n---\n*Example 1:*\n\n```sqf\nprivate _terrainInfo = getTerrainInfo; // Stratis: [32,256,4,2048,0]; Altis: [30,1024,7.5,4096,0] \n```\n\n*Example 2:*\n\n```sqf\n // Draws a 20x20 terrain grid when clicking on the map\n// Each triangle of the terrain is formed by a diagonal that starts from the top-left corner of the cell and ends and the bottom-right corner.\n// The green lines show the cell diagonals \nonMapSingleClick {\n\tgetTerrainInfo params [\"\", \"\", \"_cellsize\", \"_resolution\"];\n\tgridLines = [];\n\t_pos apply {floor (_x / _cellsize)} params [\"_x0\", \"_y0\"];\n\tfor \"_x\" from ((_x0 - 10) max 0) to ((_x0 + 10) min _resolution) do {\n\t\tfor \"_y\" from ((_y0 - 10) max 0) to ((_y0 + 10) min _resolution) do {\n\t\t\tprivate _p1 = [_x, _y] vectorMultiply _cellsize;\t  //bottom-left corner\n\t\t\tprivate _p2 = [_x, _y + 1] vectorMultiply _cellsize;  //top-left corner\n\t\t\tprivate _p3 = [_x + 1, _y] vectorMultiply _cellsize;  //bottom-right corner\n\t\t\t// Positions are AGL, and Z value of 0 is already at the terrain surface (except on water surface). \n\t\t\t// Just move them up a few centimeters so they're visible.\n\t\t\t_p1 set [2, 0.1];\n\t\t\t_p2 set [2, 0.1];\n\t\t\t_p3 set [2, 0.1];\n\t\t\t\n\t\t\tgridLines pushBack [_p1, _p2, [1,0,0,1]];\n\t\t\tgridLines pushBack [_p1, _p3, [1,0,0,1]];\n\t\t\tgridLines pushBack [_p2, _p3, [0,1,0,1]];\n\t\t};\n\t\n\t};\n\t\n\tonEachFrame {\n\t\n\t\t{\n\t\t\tdrawLine3d _x;\n\t\t} forEach gridLines;\n\t\n\t}\n};\n```","commands\\getText.md":"Extracts `localize`d text from config entry, if entry is subject to `localization`, otherwise returns text value.\nTo obtain the translation key itself, see `getTextRaw`.\n\n\n---\n*Syntaxes:*\n\n`getText` config\n\n---\n*Example 1:*\n\n```sqf\n_text = getText (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"icon\"); // \"Get in %1 as Driver\"\n```","commands\\getTextRaw.md":"Returns raw text from config entry. If entry is subject to ` localization`, the translation key is returned. To obtain the ` localized` text, see `getText`.\n\n\n---\n*Syntaxes:*\n\n`getTextRaw` config\n\n---\n*Example 1:*\n\n```sqf\nprivate _text = getTextRaw (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); // \"$STR_ACTION_GETIN_DRIVER\"\n_key = _text select [1]; // \"STR_ACTION_GETIN_DRIVER\"\n_localized = localize _key; // \"Get in %1 as Driver\"\n_localized == getText (configFile >> \"CfgVehicles\" >> \"Thing\" >> \"displayName\"); // true\n```","commands\\getTextureInfo.md":"Return texture information - resolution in pixels and average colour. Multiply the pixel values by `pixelW` and `pixelH` to get screen coordinates.\n\n\n---\n*Syntaxes:*\n\n`getTextureInfo` texture\n\n---\n*Example 1:*\n\n```sqf\ngetTextureInfo \"a3\\characters_f\\blufor\\data\\clothing1_co.paa\"; // [2048, 2048, [0.458824, 0.427451, 0.34902, 1]]\n```","commands\\getTextWidth.md":"Returns estimated width of the text based on `font type` and size. Similar to `ctrlTextWidth` but does not require a control and can be used to estimate text width for any control including buttons. Result does not include left and right margins (hardcoded at 0.008 each).\n\n\n---\n*Syntaxes:*\n\ntext `getTextWidth` [font, size]\n\n---\n*Example 1:*\n\n```sqf\n_textWidth = \"Hello World\" getTextWidth [\"PuristaMedium\", 0.03];\n```\n\n*Example 2:*\n\n```sqf\n_textWidthInclMargins = (\"Hello World\" getTextWidth [\"PuristaMedium\", 0.03]) + 0.016;\n```\n\n*Example 3:*\n\n```sqf\n#define MARGINS 0.0016\nprivate _ctrl = findDisplay 46 ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetText \"TestString\";\n_ctrl ctrlSetFont \"PuristaMedium\";\n_ctrl ctrlSetFontHeight 0.04;\nctrlTextWidth _ctrl == (\"TestString\" getTextWidth [\"PuristaMedium\", 0.04]) + MARGINS; // true\n```","commands\\getTIParameters.md":"Returns all Thermal Imaging parameters.\n\n\n---\n*Syntaxes:*\n\n`getTIParameters`\n\n---\n*Example 1:*\n\n```sqf\nif (getTIParameters get \"OutputRangeStart\" == 0.1) then { hint \"default Start\" };\n```","commands\\getTotalDLCUsageTime.md":"Returns total DLC usage time in this game session\n\n\n---\n*Syntaxes:*\n\n`getTotalDLCUsageTime`\n\n---\n*Example 1:*\n\n```sqf\n_dlcTime = getTotalDLCUsageTime;\n```","commands\\getTrimOffsetRTD.md":"Returns controls trim offset.\n\n\n---\n*Syntaxes:*\n\n`getTrimOffsetRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_array = getTrimOffsetRTD vehicle player;\n```","commands\\getTurretOpticsMode.md":"Get the current optics mode of the optics in the turret occupied by the specified unit. The alternative syntax allows a vehicle and turret path to be specified without needing a unit.\n\n\n---\n*Syntaxes:*\n\n`getTurretOpticsMode` obj\n\nobj `getTurretOpticsMode` turretPath\n\n---\n*Example 1:*\n\n```sqf\ngetTurretOpticsMode player;\n```\n\n*Example 2:*\n\n```sqf\nmyTank getTurretOpticsMode [-1];\n```\n\n*Example 3:*\n\n```sqf\nmyAircraft getTurretOpticsMode [0, 0];\n```","commands\\getUnitFreefallInfo.md":"Returns a unit's freefall information.\n\n\n---\n*Syntaxes:*\n\n`getUnitFreefallInfo` unit\n\n---\n*Example 1:*\n\n```sqf\ngetUnitFreefallInfo player;\n```","commands\\getUnitLoadout.md":"Returns a ``Unit Loadout Array`` with all assigned items, weapons, containers and their stored items. When `String` for class name is supplied, the command will search **CfgVehicles** for the given class in order to extract the loadout from config. If `Config` is given, it will search given config (including ` mission config`) for the loadout information.\n\n\n---\n*Syntaxes:*\n\n`getUnitLoadout` unit\n\n`getUnitLoadout` [unit, fullMagazines]\n\n`getUnitLoadout` name\n\n`getUnitLoadout` config\n\n---\n*Example 1:*\n\n```sqf\ngetUnitLoadout player;\n```\n\n*Example 2:*\n\n```sqf\ngetUnitLoadout [player, true];\n```\n\n*Example 3:*\n\n```sqf\ngetUnitLoadout \"B_Soldier_F\";\n```\n\n*Example 4:*\n\n```sqf\ngetUnitLoadout (configFile >> \"CfgVehicles\" >> \"B_Soldier_F\");\n```\n\n*Example 5:*\n\n```sqf\ngetUnitLoadout (missionConfigFile >> \"MyLoadout\");\n```","commands\\getUnitTrait.md":"Gets the current value of a trait of the given unit.\n\n\n---\n*Syntaxes:*\n\nunit `getUnitTrait` skillName\n\n---\n*Example 1:*\n\n```sqf\nplayer getUnitTrait \"Medic\";\n```","commands\\getUserInfo.md":"Returns extended information about given server user.\n\n\n---\n*Syntaxes:*\n\n`getUserInfo` playerID\n\n---\n*Example 1:*\n\n```sqf\nprivate _randomUserInfo = getUserInfo selectRandom allUsers;\n```\n\n*Example 2:*\n\n```sqf\n_userInfo params [\"_playerID\", \"_ownerId\", \"_playerUID\", \"_profileName\", \"_displayName\", \"_steamName\", \"_clientState\", \"_isHC\", \"_adminState\", \"_networkInfo\", \"_unit\"];\n_networkInfo params [\"_avgPing\", \"_avgBandwidth\", \"_desync\"];\n```\n\n*Example 3:*\n\n```sqf\nprivate _myInfo = getUserInfo getPlayerID player; // this particular example only works if player is server host\n```","commands\\getUserMFDText.md":"Returns array of user text variables used in MFD.\n\n\n---\n*Syntaxes:*\n\n`getUserMFDText` vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetUserMFDText _vehicle;\n```","commands\\getUserMFDValue.md":"Returns array of user text variables used in MFD.\n\n\n---\n*Syntaxes:*\n\n`getUserMFDValue` vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetUserMFDValue vehicle player; // user0 in MFD will return 1\n```","commands\\getVariable.md":"Returns the value of variable in the variable space assigned to various data types.\nAll available data types combinations:\n\n\n---\n*Syntaxes:*\n\nvarspace `getVariable` name\n\nvarspace `getVariable` [name, defaultValue]\n\n---\n*Example 1:*\n\n```sqf\nprivate _variable = myTruck getVariable \"myVariable\"; // returns nil if \"myVariable\" is not set\n```\n\n*Example 2:*\n\n```sqf\nprivate _variable = myTruck getVariable [\"myVariable\", 50]; // returns 50 if \"myVariable\" is not set\n```\n\n*Example 3:*\n\n```sqf\nfor \"_i\" from 0 to 5 do\n{\n\t_car = missionNamespace getVariable (\"car\" + str _i);\n\t_car setDamage 0;\n}; // Set damage of car0..car5 to 0\n```\n\n*Example 4:*\n\n```sqf\nmyMissionVar = 2015;\nmissionNamespace getVariable \"myMissionVar\"; // returns 2015\n```\n\n*Example 5:*\n\nGet current value of a variable and if it is undefined, define it and get the defined value:\n\n```sqf\nprivate _var = missionNamespace getVariable \"varName\";\nif (isNil \"_var\") then\n{\n\tmissionNamespace setVariable [\"varName\", 123];\n\t_var = 123;\n};\n// _var here will contain current value of the variable varName\n```","commands\\getVehicleCargo.md":"Get a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.\n\n\n---\n*Syntaxes:*\n\n`getVehicleCargo` storingVehicle\n\n---\n*Example 1:*\n\n```sqf\n_vehicleCargo = getVehicleCargo blackfish; // returns [] if empty\n```\n\n*Example 2:*\n\n```sqf\n_vehicleCargo = getVehicleCargo blackfish; // returns [quad_3, quad_1, quad_2] as they were loaded in this order\n```","commands\\getVehicleTIPars.md":"Returns TI parameters of a vehicle.\n\n\n---\n*Syntaxes:*\n\n`getVehicleTIPars` vehicle\n\n---\n*Example 1:*\n\n```sqf\ngetVehicleTIPars _veh;\n```","commands\\getWeaponCargo.md":"Returns all weapons types and count from the cargo space\n\n\n---\n*Syntaxes:*\n\n`getWeaponCargo` object\n\n---\n*Example 1:*\n\n```sqf\n_content = getWeaponCargo carName;\n```\n\n*Example 2:*\n\n```sqf\n_content = getWeaponCargo ammoBoxName;\n```","commands\\getWeaponSway.md":"Returns current size of weapon sway of a given unit, in `radians`.\n\n\n---\n*Syntaxes:*\n\n`getWeaponSway` unit\n\n---\n*Example 1:*\n\n```sqf\n_sway = getWeaponSway player;\n```","commands\\getWingsOrientationRTD.md":"Returns orientation of horizontal stabilizers.\n\n\n---\n*Syntaxes:*\n\n`getWingsOrientationRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_orientation = getWingsOrientationRTD myHelicopter;\n```","commands\\getWingsPositionRTD.md":"Returns position of stabilizers.\n\n\n---\n*Syntaxes:*\n\n`getWingsPositionRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_position = getWingsPositionRTD myHelicopter;\n```","commands\\getWPPos.md":"Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor.\n\n\n---\n*Syntaxes:*\n\n`getWPPos` [groupOrUnit, index]\n\n---\n*Example 1:*\n\n```sqf\n[_group1, 1] setWPPos [200,600,0];\n_pos = getWPPos [_group1, 1]; // returns [200, 600, 0]\n```","commands\\glanceAt.md":"Control what the unit(s) is/are glancing at (target or `Position`). If target is used, it will get revealed fully.\n\nHow frequently the unit(s) is/are glancing there depends on behaviour.\n\n\n---\n*Syntaxes:*\n\nunit(s) `glanceAt` position\n\n---\n*Example 1:*\n\n```sqf\n_someSoldier glanceAt _otherSoldier;\n```\n\n*Example 2:*\n\n```sqf\n[_someSoldier, _otherSoldier] glanceAt markerPos \"markerOne\";\n```","commands\\globalChat.md":"Types text to the global radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\nunitName `globalChat` chatText\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne globalChat \"Show this text\";\n```\n\n*Example 2:*\n\n```sqf\ndriver vehicle player sideChat \"sideChat\";\ndriver vehicle player globalChat \"globalChat\";\ndriver vehicle player groupChat \"groupChat\";\nvehicle player vehicleChat \"vehicleChat\";\ndriver vehicle player commandChat \"commandChat\";\ndriver vehicle player customChat [1, \"customChat\"];\nsystemChat \"systemChat\";\n```","commands\\globalRadio.md":"Sends the audio message to the global radio channel. The message is defined in CfgRadio in the `description.ext` file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\nunit `globalRadio` radioName\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne globalRadio \"messageOne\";\n```\n\n*Example 2:*\n\n```sqf\nplayer globalRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```","commands\\goggles.md":"Returns name of currently used goggles (for NVGoggles use `hmd`).\n\n\n---\n*Syntaxes:*\n\n`goggles` unit\n\n---\n*Example 1:*\n\n```sqf\n_goggles = goggles assaultDiver; //G_Diving\n```\n\n*Example 2:*\n\n```sqf\n_goggles = goggles reconTeamLeader; //G_Shades_Black\n```","commands\\goto.md":"Break script flow and go to given label (defined by `#` - `NOT` to be confused with `SQF`'s `hash sign`!)\n\n\n---\n*Syntaxes:*\n\n`goto` label\n\n---\n*Example 1:*\n\n<sqs>\ngoto \"myLabel\"\nplayer setDamage 1\n\n#myLabel\nhint \"you successfully avoided death!\"\n</sqs>","commands\\group.md":"Returns the group a unit is assigned to.\n\n\n---\n*Syntaxes:*\n\n`group` object\n\n---\n*Example 1:*\n\n```sqf\n_playerGrp = group player;\n```","commands\\groupChat.md":"Types text to the group radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\nunitName `groupChat` chatText\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne groupChat \"Show this text\";\n```\n\n*Example 2:*\n\n```sqf\ndriver vehicle player sideChat \"sideChat\";\ndriver vehicle player globalChat \"globalChat\";\ndriver vehicle player groupChat \"groupChat\";\nvehicle player vehicleChat \"vehicleChat\";\ndriver vehicle player commandChat \"commandChat\";\ndriver vehicle player customChat [1, \"customChat\"];\nsystemChat \"systemChat\";\n```","commands\\groupFromNetId.md":"Get group with given unique ID. For objects use `objectFromNetId`. As this command is MP only, you can use `BIS_fnc_groupFromNetId`, which extends the use to SP as well.\n\n\n---\n*Syntaxes:*\n\n`groupFromNetId` id\n\n---\n*Example 1:*\n\n```sqf\n_group = groupFromNetId \"4:45\";\n```","commands\\groupIconSelectable.md":"Returns whether or not group icons raise `onGroupIconClick`, `onGroupIconOverEnter` and `onGroupIconOverLeave` events.\n\n\n---\n*Syntaxes:*\n\n`groupIconSelectable`\n\n---\n*Example 1:*\n\n```sqf\nhint str groupIconSelectable;\n```","commands\\groupIconsVisible.md":"Returns array with group icons visibility. A getter for `setGroupIconsVisible`\n\n\n---\n*Syntaxes:*\n\n`groupIconsVisible`\n\n---\n*Example 1:*\n\n```sqf\nhint str groupIconsVisible;\n```","commands\\groupId.md":"Returns group name.\n\n\n---\n*Syntaxes:*\n\n`groupId`  group\n\n---\n*Example 1:*\n\n```sqf\n_name = groupId (group player);\n```","commands\\groupOwner.md":"Returns the ` machine network ID` of the client to which the group is local. This command only works when called from the server. When called from a client, it always returns 0.\n\n\n---\n*Syntaxes:*\n\n`groupOwner` group\n\n---\n*Example 1:*\n\n```sqf\n_clientID = groupOwner _someGroup;\n```","commands\\groupRadio.md":"Sends the audio message to the group radio channel. The message is defined in CfgRadio in the `description.ext` file or config radio protocol.\n\n\n---\n*Syntaxes:*\n\nunit `groupRadio`  radioName\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne groupRadio \"messageOne\";\n```\n\n*Example 2:*\n\n```sqf\nplayer groupRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```","commands\\groupSelectedUnits.md":"Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see `hcSelected`.\n\n\n---\n*Syntaxes:*\n\n`groupSelectedUnits` unit\n\n---\n*Example 1:*\n\n```sqf\n_selectedUnits = groupSelectedUnits player;\n```","commands\\groupSelectUnit.md":"Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing *(Reference Controls \"F1\")*, *(Reference Controls \"F2\")*, *(Reference Controls \"F3\")* etc to highlight units in his squad, after which the unit command menu is shown.\nIf leader is AI, player will get usual communication menu to interact with the leader.\n\n\n---\n*Syntaxes:*\n\nplayer `groupSelectUnit` [unit, select]\n\n---\n*Example 1:*\n\nAfter leaving menu, deselect all units (command menu is not opened → no selection)\n\n```sqf\n{\n\tplayer groupSelectUnit [_x, false];\n} forEach (groupSelectedUnits player);\n```\n\n*Example 2:*\n\nSelect all units when player is the leader:\n\n```sqf\n{\n\tplayer groupSelectUnit [_x, true];\n} forEach units player;\n```\n\n*Example 3:*\n\nOpen communication with group leader:\n\n```sqf\nplayer groupSelectUnit [leader player, true];\n```","commands\\grpNull.md":"A non-existing `Group`. To compare non-existent groups use `isNull` or `isEqualTo`:\n\n```sqf\ngrpNull == grpNull;\t\t\t// false\nisNull grpNull;\t\t\t\t// true\ngrpNull isEqualTo grpNull;\t// true\n```\n\n\n---\n*Syntaxes:*\n\n`grpNull`\n\n---\n*Example 1:*\n\n```sqf\n!isNull grpNull; // false\n```\n\n*Example 2:*\n\n```sqf\nstr grpNull; // <NULL-group>\n```","commands\\gunner.md":"Returns the gunner of a vehicle.\n\n\n---\n*Syntaxes:*\n\n`gunner`  vehicle\n\n---\n*Example 1:*\n\n```sqf\ngunner _tank action [\"getout\", _tank];\n```","commands\\gusts.md":"Return the current gusts value. Scale is 0 to 1.\n\n\n---\n*Syntaxes:*\n\n`gusts`\n\n---\n*Example 1:*\n\n```sqf\n_gustsValue = gusts;\n```","commands\\halt.md":"This command was meant to break the script into debugger, however currently `it does not do anything` except displaying and logging the following error: **Error Debugger breakpoint hit**.\n\n\n---\n*Syntaxes:*\n\n`halt`\n\n---\n*Example 1:*\n\n```sqf\nif (_displayAnError) then {halt};\n```","commands\\handgunItems.md":"Returns array with all items assigned to the `handgunWeapon` except magazines. Use `handgunMagazine` command for the latter. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`handgunItems` unit\n\n---\n*Example 1:*\n\n```sqf\nhandgunItems player;\n/*\n[\n\t\"muzzle_snds_L\",\t// silencer\n\t\"\",\t\t\t\t\t// laser\n\t\"\",\t\t\t\t\t// optics\n\t\"\"\t\t\t\t\t// bipod\n]\n*/\n```","commands\\handgunMagazine.md":"Collects all loaded `magazines` from all `handgunWeapon` muzzles and returns them in `Array`, otherwise it returns []. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`handgunMagazine` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str handgunMagazine player; // [\"16Rnd_9x21_Mag\"]\n```\n\n*Example 2:*\n\n```sqf\n_array = handgunMagazine player;\nif (count _array > 0) then {\n\thint (\"Handgun is loaded with \" + (_array select 0) + \"!\");\n} else {\n\tif (handgunWeapon player != \"\") then {\n\t\thint \"Handgun is not loaded!\";\n\t} else {\n\t\thint \"Player doesn't have a handgun!\";\n\t};\n};\n```","commands\\handgunWeapon.md":"Returns the name of a unit's handgun (an empty string if there is none).\n\n\n---\n*Syntaxes:*\n\n`handgunWeapon` unit\n\n---\n*Example 1:*\n\n```sqf\nhint handgunWeapon player; //\"hgun_P07_F\"\n```","commands\\handsHit.md":"Checks if a soldier's hands are hit, which results in inaccurate aiming.\n\n\n---\n*Syntaxes:*\n\n`handsHit` unitName\n\n---\n*Example 1:*\n\n<sqs>? (handsHit player == 1) : player globalChat \"Ouch! Don't shoot at my hands dammit!\"</sqs>","commands\\hashValue.md":"Processes provided `value`<nowiki/>'s hash, and encodes it using [https://en.wikipedia.org/wiki/Base64 Base64]. The hash algorithm is [https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function FNV-1A 64bit].\n\n\n---\n*Syntaxes:*\n\n`hashValue` value\n\n---\n*Example 1:*\n\n```sqf\nprivate _valueHash = hashValue \"Hello There\";\n```\n\n*Example 2:*\n\n```sqf\nprivate _isCorrectPW = hashValue _enteredPassword == \"eWkXUUqiinE\";\n```","commands\\hasInterface.md":"Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client.\n\n\n---\n*Syntaxes:*\n\n`hasInterface`\n\n---\n*Example 1:*\n\n```sqf\n_isHC = !(hasInterface || isDedicated);\n```\n\n*Example 2:*\n\n```sqf\n_isHC = !hasInterface && !isDedicated;\n```","commands\\hasPilotCamera.md":"Returns true if the object airplane or helicopter has a [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]].\n\n\n---\n*Syntaxes:*\n\n`hasPilotCamera` object\n\n---\n*Example 1:*\n\n```sqf\nhasPilotCamera vehicle player;\n```","commands\\hasWeapon.md":"Checks if a unit has the given weapon in hands or on back/in holster. Weapons inside unit containers such as vest and backpack are not counted.\n\n\n---\n*Syntaxes:*\n\nunitName `hasWeapon` weaponName\n\n---\n*Example 1:*\n\n```sqf\nif !(player hasWeapon \"arifle_MX_ACO_pointer_F\") then { player addWeapon \"arifle_MX_ACO_pointer_F\" };\n```","commands\\hcAllGroups.md":"Returns selected groups in `high command`.\n\n\n---\n*Syntaxes:*\n\n`hcAllGroups` unit\n\n---\n*Example 1:*\n\n```sqf\nhcAllGroups player;\n```","commands\\hcGroupParams.md":"Returns parameters describing group in `high command` bar. Return value is array in format [groupName, teamName] or [] if error. Possible values for team name:\n* **\"teammain\"** (default)\n* **\"teamred\"**\n* **\"teamgreen\"**\n* **\"teamblue\"**\n* **\"teamyellow\"**\n\n\n---\n*Syntaxes:*\n\nunit `hcGroupParams` group\n\n---\n*Example 1:*\n\n```sqf\nplayer hcGroupParams someGroup;\n```","commands\\hcLeader.md":"Returns group's `high command` commander.\n\n\n---\n*Syntaxes:*\n\n`hcLeader` group\n\n---\n*Example 1:*\n\n```sqf\n_leader = hcLeader groupName;\n```","commands\\hcRemoveAllGroups.md":"Remove all groups from unit's `high command` bar.\n\n\n---\n*Syntaxes:*\n\n`hcRemoveAllGroups` unit\n\n---\n*Example 1:*\n\n```sqf\nhcRemoveAllGroups player;\n```","commands\\hcRemoveGroup.md":"Removes group from unit's `high command` bar.\n\n\n---\n*Syntaxes:*\n\nunit `hcRemoveGroup` group\n\n---\n*Example 1:*\n\n```sqf\nplayer hcRemoveGroup BIS_group;\n```","commands\\hcSelected.md":"Returns selected groups in `high command`.\n\n\n---\n*Syntaxes:*\n\n`hcSelected` unit\n\n---\n*Example 1:*\n\n```sqf\narray = hcSelected unit;\n```","commands\\hcSelectGroup.md":"Select given group in `high command` bar.\n\n\n---\n*Syntaxes:*\n\nunit `hcSelectGroup` array\n\n---\n*Example 1:*\n\n```sqf\nplayer hcSelectGroup [group_1,group_2];\n```","commands\\hcSetGroup.md":"Add group to unit's `high command` bar.\n\n\n---\n*Syntaxes:*\n\nunit `hcSetGroup` [group, groupName, team]\n\n---\n*Example 1:*\n\n```sqf\nunit hcSetGroup [group, \"HQ\", \"teamred\"];\n```\n\n*Example 2:*\n\n```sqf\nplayer hcSetGroup [group];\n```\n\n*Example 3:*\n\n```sqf\nif (player != hcLeader _group) then\n{\n\thcLeader _group hcRemoveGroup _group;\n\tplayer hcSetGroup [_group];\n};\n```","commands\\hcShowBar.md":"Shows or hides `high command` bar. There must be some groups under HC command to show HC bar.\n\n\n---\n*Syntaxes:*\n\n`hcShowBar` bool\n\n---\n*Example 1:*\n\n```sqf\nhcShowBar true;\n```\n\n*Example 2:*\n\n```sqf\nhcShowBar false;\n```","commands\\hcShownBar.md":"Return whether the `High Command` bar is shown/active.\n\n\n---\n*Syntaxes:*\n\n`hcShownBar`\n\n---\n*Example 1:*\n\n```sqf\nif (hcShownBar) then { hint \"HC bar is active\"; };\n```","commands\\headgear.md":"Returns headgear of unit.\n\n\n---\n*Syntaxes:*\n\n`headgear` unit\n\n---\n*Example 1:*\n\n```sqf\nhint headgear player; //H_HelmetB\n```","commands\\hideBody.md":"Hides dead body of the given unit. After a short delay, the body slowly sinks into the ground. After awhile, when group of the unit becomes `grpNull`, the body gets deleted and becomes `objNull`. If applied to alive unit, nothing happens until unit dies, then the unit's body gets hidden. If a dead unit is human player, the body is hidden but not deleted until player respawns.\n\n\n---\n*Syntaxes:*\n\n`hideBody` unit\n\n---\n*Example 1:*\n\n```sqf\nhideBody player1;\n```","commands\\hideObject.md":"Hide entity. Can be used on soldiers and vehicles, also on static objects.\n\n\n---\n*Syntaxes:*\n\n`hideObject` object\n\nobject `hideObject` hidden\n\n---\n*Example 1:*\n\n```sqf\nhideObject unitName;\n```\n\n*Example 2:*\n\n```sqf\nobjectName hideObject true;\n```","commands\\hideObjectGlobal.md":"This command is designed for MP. Hides object on all connected clients as well as JIP. Can be used on static objects. In singleplayer this command behaves just like `hideObject`.\n\n\n---\n*Syntaxes:*\n\n`hideObjectGlobal` object\n\nobject `hideObjectGlobal`  hidden\n\n---\n*Example 1:*\n\n```sqf\nhideObjectGlobal myObject; // hides myObject\nhideObjectGlobal nearestBuilding [2500, 2500, 0];\n```\n\n*Example 2:*\n\n```sqf\nmyObject hideObjectGlobal true;\t// hides myObject\nmyObject hideObjectGlobal false;\t// shows myObject\n```\n\n*Example 3:*\n\n```sqf\n[myObject, true] remoteExec [\"hideObjectGlobal\", 2]; // remote-executes hideObjectGlobal from a client to the server\n```","commands\\hideSelection.md":"Hides or shows the ` simple object`'s provided selection.\n\n\n---\n*Syntaxes:*\n\nobject `hideSelection` [selection, hidden]\n\n---\n*Example 1:*\n\n```sqf\n_simpleObject hideSelection [\"some_selection\", true];\n```","commands\\hierarchyObjectsCount.md":"The number of objects in hierarchy.\n\n\n---\n*Syntaxes:*\n\n`hierarchyObjectsCount`\n\n---\n*Example 1:*\n\n```sqf\n_number = hierarchyObjectsCount;\n```","commands\\hint.md":"Outputs a hint message to the right of the screen (left of the screen in {{ofp}}) with a sound (except in {{arma1}}). Use `hintSilent` for soundless hint. To split message in multiple lines either use `Structured Text` or **\\n** (in lower case).\n\n\n---\n*Syntaxes:*\n\n`hint` message\n\n---\n*Example 1:*\n\n```sqf\n// outputs the following:\n// Press W to move forward.\n// Press S to move backwards.\nhint \"Press W to move forward.\\nPress S to move backwards.\"\n```\n\n*Example 2:*\n\n```sqf\nhint format [\"Hello, %1!\", name player];\n```\n\n*Example 3:*\n\n```sqf\nhint str count allPlayers;\nsleep 10;\nhintSilent \"\"; // hides the previous hint display\n```\n\n*Example 4:*\n\n```sqf\nhint parseText \"<t size='2.0'>Large text</t>\"; // displays text twice as large as the default one\n```","commands\\hintC.md":"Displays a very basic message dialog in the center of the screen. Player control is taken away until \"Continue\" is pressed. The message dialog can be dragged around on the screen. After \"Continue\" has been pressed, the content of the `hintC` is repeated in a normal `hint`.\n\n\n---\n*Syntaxes:*\n\n`hintC` message\n\ntitle `hintC` message\n\n---\n*Example 1:*\n\n```sqf\nhintC \"Press W to move forward\";\n```\n\n*Example 2:*\n\nSame as the above in {{arma3}} but without second `hint` displayed:<br>[[Image:HintC.jpg|400px|right]]\n\n```sqf\nhintC \"Press W to move forward\";\nhintC_EH = findDisplay 57 displayAddEventHandler [\"Unload\", {\n\t_this spawn {\n\t\t_this select 0 displayRemoveEventHandler [\"Unload\", hintC_EH];\n\t\thintSilent \"\";\n\t};\n}];\n```\n\n*Example 3:*\n\n```sqf\n\"Instructions\" hintC [\n\t\"Press W to move forward.\",\n\t\"Press S to move backwards.\",\n\t\"Use the mouse to turn right or left.\",\n\t\"Press V for weapon sights.\"\n];\n```\n\n*Example 4:*\n\nSame as the above in {{arma3}} but without second `hint` displayed:<br>[[Image:HintC_array.jpg|400px|right]]\n\n```sqf\n\"Instructions\" hintC [\n\t\"Press W to move forward.\",\n\t\"Press S to move backwards.\",\n\t\"Use the mouse to turn right or left.\",\n\t\"Press V for weapon sights.\"\n];\nhintC_EH = findDisplay 72 displayAddEventHandler [\"Unload\", {\n\t_this spawn {\n\t\t_this select 0 displayRemoveEventHandler [\"Unload\", hintC_EH];\n\t\thintSilent \"\";\n\t};\n}];\n```\n\n*Example 5:*\n\n```sqf\nprivate _separator = parseText \"<br/>------------------------<br/>\";\nprivate _image = \"\\ca\\ui\\textures\\aus_flag.paa\";\nprivate _message = composeText [image _image, \"Heading Text\", _separator, \"Content\"];\n\"\" hintC _message;\n```","commands\\hintCadet.md":"Shows a text hint only when in `cadetMode`.\n\nThe text can contain several lines. \\n is used to indicate the end of a line.\n\n\n---\n*Syntaxes:*\n\n`hintCadet` text\n\n---\n*Example 1:*\n\n```sqf\nhintCadet \"Press W to move forward\";\n```","commands\\hintSilent.md":"Same as `hint`, but without a sound.\n\n\n---\n*Syntaxes:*\n\n`hintSilent` text\n\n---\n*Example 1:*\n\n```sqf\nhintSilent format [\"Hello, %1!\", name player];\n```\n\n*Example 2:*\n\n```sqf\nhint \"Hello there!\";\nsleep 5;\nhintSilent \"\"; // removes message\n```","commands\\hmd.md":"Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.\n\n\n---\n*Syntaxes:*\n\n`hmd` unit\n\n---\n*Example 1:*\n\n```sqf\n_nvgs = hmd player; //NVGoggles\n```","commands\\hostMission.md":"Host the multiplayer mission defined in the config class and opens the lobby with the scenario loaded. Must be called in UI action from a dialog.\n\n\n---\n*Syntaxes:*\n\n`hostMission` [configEntry, activeDisplay]\n\n---\n*Example 1:*\n\n```sqf\nhostMission [configFile >> \"CfgMissions\" >> \"MPMissions\" >> _scenarioClassName, _currentlyActiveDisplay];\n```\n\n*Example 2:*\n\nLaunch host mission dialog from a client on dedicated server in {{arma3}}:\n\n```sqf\nhostMission [\n\tconfigFile >> \"CfgMissions\" >> \"MPmissions\" >> \"MP_COOP_m01\",\n\tfindDisplay 46\n];\n```","commands\\htmlLoad.md":"Load `HTML` from file or URI using given control. File path is relative to current mission dir or an absolute path (with drive letter etc.).\nThe command is subject to restrictions, imposed by `CfgCommands` class.\n{{Feature|arma3|Since {{GVI|arma3|2.10\n\n\n---\n*Syntaxes:*\n\ncontrol `htmlLoad` filename\n\n---\n*Example 1:*\n\n```sqf\n_control htmlLoad \"briefing.html\";\n```\n\n*Example 2:*\n\n```sqf\n_control htmlLoad \"http://www.bistudio.com/newsfeed/arma3_news.php?build=main&language=English\";\n```\n\n*Example 3:*\n\nDisplay news item:\n\n```sqf\n[] spawn {\n\tdisableSerialization;\n\tprivate _html = findDisplay 46 createDisplay \"RscCredits\" ctrlCreate [\"RscHTML\", -1];\n\t_html ctrlSetBackgroundColor [0,0,0,0.8];\n\t_html ctrlSetPosition [safeZoneX, safeZoneY, safeZoneW, safeZoneH];\n\t_html ctrlCommit 0;\n\t_html htmlLoad \"http://www.bistudio.com/newsfeed/arma3_news.php?build=main&language=English\";\n};\n```","commands\\HUDMovementLevels.md":"Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]\n\n\n---\n*Syntaxes:*\n\n`HUDMovementLevels`\n\n---\n*Example 1:*\n\n```sqf\nHUDMovementLevels; // returns e.g [0,0,0,0,0,0,[0,0,0]]\n```","commands\\humidity.md":"Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.\n\n\n---\n*Syntaxes:*\n\n`humidity`\n\n---\n*Example 1:*\n\n```sqf\ncurrentHumidity = humidity;\n```\n\n*Example 2:*\n\n```sqf\nskipTime -24;\n86400 setOvercast 1;\nskipTime 24;\n[] spawn {\n\t10 setRain 1;\n\tsleep 10;\n\t10 setRain 0;\n};\nonEachFrame {\n\thintSilent str [round (rain * 10) / 10, round (humidity * 10) / 10];\n};\n```","commands\\if.md":"This operator creates a `If Type` which is used in the if-construct as described `here`.\n\n\n---\n*Syntaxes:*\n\n`if`  condition\n\n---\n*Example 1:*\n\n```sqf\n_retVal = if (1 > 0) then { \"It's true\" } else { \"It's false\" };\nhint str _retVal;\n```\n\n*Example 2:*\n\n```sqf\n_val = if (true) then [{ \"true\" }, { \"false\" }];\nhint _val;\n```","commands\\image.md":"Creates a structured text containing the given image. Use `setAttributes` to set additional ` attributes` on the image.\n\n\n---\n*Syntaxes:*\n\n`image` filename\n\n---\n*Example 1:*\n\n```sqf\nhint composeText [\"Image: \", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"];\n```\n\n*Example 2:*\n\n```sqf\nhint str (composeText [\"Image: \", image \"\\a3\\Data_f\\Flags\\flag_Altis_co.paa\"] == parseText \"Image: <img image='\\a3\\Data_f\\Flags\\flag_Altis_co.paa'/>\"); // true\n```","commands\\importAllGroups.md":"Imports all groups into the RTE.\n\n\n---\n*Syntaxes:*\n\n`importAllGroups` map\n\n---\n*Example 1:*\n\n-","commands\\importance.md":"Returns a location's importance value.\n\n\n---\n*Syntaxes:*\n\n`importance` location\n\n---\n*Example 1:*\n\n```sqf\n_locationImportance = importance myLocation;\n```","commands\\in.md":"Checks whether value is in array, unit is in vehicle, position is inside location or ANSI string is part of other ANSI string. If Unicode support is desired, see `forceUnicode`.\n\n\n---\n*Syntaxes:*\n\nvalue `in` array\n\nunit `in` vehicle\n\nposition `in` location\n\nneedle `in` haystack\n\nkey `in` hashMap\n\n---\n*Example 1:*\n\n```sqf\n1 in [0, 1, 2]; // true\n```\n\n*Example 2:*\n\n```sqf\nprivate _myArray = [\"Aaa\", \"AAa\", \"AAA\"];\n\n\"aaa\" in _myArray; // false\n\"AAa\" in _myArray; // true\n\n// Case-insensitive alternatives:\n_myArray findIf { _x == \"aaa\"; } != -1; // true\n\n({\n\tif (_x == \"aaa\") exitWith { _forEachIndex };\n\t-1\n} forEach _myArray) != -1; // true, less performant but valid before the introduction of the findIf command\n\n{ if (_x == \"aaa\") exitWith { 1 } } count _myArray > 0; // true\n\n{ _x == \"aaa\"; } count _myArray > 0; // true, worst performance, only option available in OFP\n```\n\n*Example 3:*\n\n```sqf\n[1,2,3] in [[1,2,3], [4,5,6]]; // true - Arma 3 only\n```\n\n*Example 4:*\n\n```sqf\nprivate _isInCar = player in Car;\n```\n\n*Example 5:*\n\n```sqf\nprivate _isInside = [1000,2000,0] in MyLocation;\n```\n\n*Example 6:*\n\n```sqf\nprivate _isInString = \"foo\" in \"foobar\"; // true\n_isInString = \"Foo\" in \"foobar\"; // false\n```\n\n*Example 7:*\n\n```sqf\nprivate _onFoot = _unit in _unit;\n```\nOther options:\n\n```sqf\nprivate _onFoot = vehicle _unit == _unit;\n```\n\n```sqf\nprivate _onFoot = isNull objectParent _unit;\n```","commands\\inArea.md":"Checks whether given position or object is inside given area. Use `inAreaArray` to check multiple positions/objects within area.\n\n\n---\n*Syntaxes:*\n\nposition `inArea` area\n\nposition `inArea` [center, a, b, angle, isRectangle, c]\n\n---\n*Example 1:*\n\n```sqf\n_playerIsInside = player inArea _myTrigger;\n```\n\n*Example 2:*\n\n```sqf\n_positionIsInside = _myPosition inArea [[100, 100, 0], 20, 30, 45, false];\n```","commands\\inAreaArray.md":"Returns given list of `Object`s and/or `Position`s that are in the given area, area defined by a trigger, marker, location or array.\n\n\n---\n*Syntaxes:*\n\npositions `inAreaArray` area\n\npositions `inAreaArray`  [center, a, b, angle, isRectangle, c]\n\n---\n*Example 1:*\n\n```sqf\nvehicles inAreaArray myTrigger;\n```\n\n*Example 2:*\n\n```sqf\nallUnits inAreaArray \"myMarker\";\n```\n\n*Example 3:*\n\n```sqf\nallPlayers inAreaArray myLocation;\n```\n\n*Example 4:*\n\n```sqf\nallDead inAreaArray [[100, 100, 0], 20, 30, 45, false, 10];\n```","commands\\incapacitatedState.md":"Returns the incapacitated sub-state of the given unit, when the `lifeState` of the unit is \"INCAPACITATED\". Could be one of:\n* \"UNCONSCIOUS\"\n* \"MOVING\"\n* \"SHOOTING\"\n\n\n---\n*Syntaxes:*\n\n`incapacitatedState` person\n\n---\n*Example 1:*\n\n```sqf\n_result = incapacitatedState player;\n```","commands\\independent.md":"Pre-defined variable for the independent `side`.\n\n\n---\n*Syntaxes:*\n\n`independent`\n\n---\n*Example 1:*\n\n```sqf\nif (side _unit == independent) then\n{\n\thint \"This is a independent unit!\";\n};\n```","commands\\inflame.md":"Sets the state of a fireplace.\n\n\n---\n*Syntaxes:*\n\nfireplace `inflame`  burn\n\n---\n*Example 1:*\n\n```sqf\n_fireplaceOne inflame true;\n```","commands\\inflamed.md":"Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use `isBurning` command.\n\n\n---\n*Syntaxes:*\n\n`inflamed` fireplace\n\n---\n*Example 1:*\n\n```sqf\n_inflamed = inflamed _fireplaceOne;\n```","commands\\infoPanel.md":"Returns information about what is currently displayed on given player's info panel.<br>\nReturns [\"EmptyDisplay\",\"EmptyDisplayComponent\"] when no panel is open.\n\n\n---\n*Syntaxes:*\n\n`infoPanel` infoPanelId\n\n---\n*Example 1:*\n\n```sqf\ninfoPanel \"left\" params [\"_componentClass\", \"_componentType\"];\n```","commands\\infoPanelComponentEnabled.md":"Controls availability of component to given object info panel.\n\n\n---\n*Syntaxes:*\n\nunit `infoPanelComponentEnabled` [panelID, componentClassOrType]\n\n[unit, turretPath] `infoPanelComponentEnabled` [panelID, componentClassOrType]\n\n---\n*Example 1:*\n\n```sqf\n// returns true if specific component \"SensorDisplay\" is enabled on player vehicle's left panel\n_state = [vehicle player, [-1]] infoPanelComponentEnabled [\"VehicleSystemsDisplayManagerComponentLeft\", \"SensorDisplay\"];\n```\n\n*Example 2:*\n\n```sqf\n// returns true if all \"SensorsDisplayComponent\" components are enabled on player vehicle's left panel, otherwise returns false\n_state = [vehicle player, [-1]] infoPanelComponentEnabled [\"VehicleSystemsDisplayManagerComponentLeft\", \"SensorsDisplayComponent\"];\n```","commands\\infoPanelComponents.md":"Returns array of all components available to given object info panel.\n\n\n---\n*Syntaxes:*\n\nunit `infoPanelComponents` panelID\n\n[unit, turretPath] `infoPanelComponents` panelID\n\n---\n*Example 1:*\n\n```sqf\n// returns array of all components configured for _helicopter pilot seat\nprivate _componentsData = [_helicopter, [-1]] infoPanelComponents \"left\";\n```","commands\\infoPanels.md":"Returns array all info panels configured for given object or object and turret path.\n\n\n---\n*Syntaxes:*\n\n`infoPanels` unit\n\n`infoPanels` [unit, turretPath]\n\n---\n*Example 1:*\n\n```sqf\ninfoPanels [vehicle player, [0]];\n```","commands\\inGameUISetEventHandler.md":"Sets given event handler of in-game UI. If EH function returns `true`, performed action is overridden. Event handlers available are:\n* \"PrevAction\" - mouse scroll up\n* \"Action\" - action key press\n* \"NextAction\" - mouse scroll down\nIn order to remove a previously added event handler, set it again with an empty `code` string **\"\"**.\n\n\n---\n*Syntaxes:*\n\n`inGameUISetEventHandler` [handlerName, code]\n\n---\n*Example 1:*\n\n```sqf\ninGameUISetEventHandler [\"Action\", \"hint 'Lights, Camera, Action!'; true\"];\nsleep 10;\ninGameUISetEventHandler [\"Action\", \"\"]; // removes the \"Action\" EH\n```\n\n*Example 2:*\n\n```sqf\ninGameUISetEventHandler [\"PrevAction\", \"hint str _this; false\"];\ninGameUISetEventHandler [\"NextAction\", \"hint str _this; false\"];\ninGameUISetEventHandler [\"Action\", \"hint str _this; false\"];\n```\n\n*Example 3:*\n\nDeny any weapon disassembly:\n\n```sqf\ninGameUISetEventHandler [\"Action\", \"\n\tif (_this select 3 == 'DisAssemble') then {\n\t\thint 'You are not allowed to do this';\n\t\ttrue\n\t}\n\"];\n```\n\n*Example 4:*\n\nDetect explosive/mine placement:\n\n```sqf\nprivate _onMagazineUse = '\n\tparams [\"_target\", \"\", \"\", \"_action\", \"\", \"\", \"\", \"\", \"\", \"\", \"_event\"];\n\tif (_action == \"UseMagazine\") then {\n\t\tif (_event == \"Action\") then {\n\t\t\t_target spawn {\n\t\t\t\twaitUntil {!(all_magazines isEqualTo magazines _this)};\n\t\t\t\t{\n\t\t\t\t\t0 = all_magazines deleteAt (all_magazines find _x);\n\t\t\t\t} count magazines _this;\n\t\t\t\thint format [\"Magazine Used: %1\", all_magazines select 0];\n\t\t\t};\n\t\t} else {\n\t\t\tall_magazines = magazines _target;\n\t\t};\n\t};\n\tfalse\n';\ninGameUISetEventHandler [\"PrevAction\", _onMagazineUse];\ninGameUISetEventHandler [\"NextAction\", _onMagazineUse];\ninGameUISetEventHandler [\"Action\", _onMagazineUse];\n```","commands\\inheritsFrom.md":"Returns base entry of config entry.\n\n\n---\n*Syntaxes:*\n\n`inheritsFrom` config\n\n---\n*Example 1:*\n\n```sqf\n_base = inheritsFrom (configFile >> \"CfgVehicles\" >> \"Car\");\n``` Result is `Config` entry for class \"LandVehicle\"\n\n*Example 2:*\n\nPrint parent tree of given config class:\n\n```sqf\nfnc_printParents =\n{\n\tdisableSerialization;\n\tif (!isClass _this) exitWith {hint \"Argument is not a config Class\"};\n\t\n\tprivate _parents = [];\n\t\n\twhile {!isNull _this} do\n\t{\n\t\t_parents pushBack configName _this;\n\t\t_this = inheritsFrom _this;\n\t};\n\t\n\treverse _parents;\n\t\n\tprivate _tv = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscTree\", -1];\n\t_tv ctrlSetPosition [0,0,1,1];\n\t_tv ctrlSetBackgroundColor [0,0,0,0.5];\n\t_tv ctrlCommit 0;\n\t\n\tprivate _path = [];\n\t{\n\t\t_tv tvAdd [_path, _x];\n\t\t_path pushBack 0;\n\t} \n\tforEach _parents;\n\t\n\ttvExpandAll _tv;\n};\n\n// Example:\n(configFile >> \"CfgVehicles\" >> typeOf player) call fnc_printParents;\n```\n[[Image:inheritsFrom.jpg|left|300px]]","commands\\initAmbientLife.md":"Initialises the ambient life on `local` client from **CfgWorlds >> worldName >> AmbientA3**. Has no effect on dedicated server or headless client.\n\n\n---\n*Syntaxes:*\n\n`initAmbientLife`\n\n---\n*Example 1:*\n\n```sqf\ninitAmbientLife;\n```","commands\\inPolygon.md":"Checks whether position is inside given polygon\n\n\n---\n*Syntaxes:*\n\nposition `inPolygon` polygon\n\n---\n*Example 1:*\n\n```sqf\n_isInside = [100,100,0] inPolygon [[0,0,0],[1000,1000,0],[1000,0,0]];\n```","commands\\inputAction.md":"Return the state of input devices mapped to given input action.\n<br>\nFor Arma 3 inputActions and its bindings see: `{{PAGENAME}}/actions`.\n<br>\nFor earlier Arma editions  see `:Category:Key Actions`.\n\n\n---\n*Syntaxes:*\n\n`inputAction` name\n\n---\n*Example 1:*\n\n```sqf\ninputAction \"leanLeft\";\n``` Returns 1 if the button mapped to \"leanLeft\" is pressed currently else 0.\n\n*Example 2:*\n\n```sqf\n[] spawn {\n\twaitUntil {inputAction \"reloadMagazine\" > 0};\n\thint \"Reload Key Pressed\";\n};\n```","commands\\inputController.md":"Returns the state of controller inputs. The controller is a standard XBOX controller which is selected with Windows XBOX controller scheme. The input can be:\n{{Columns|4|\n* XBOX_A 0\n* XBOX_B 1\n* XBOX_X 2\n* XBOX_Y 3\n* XBOX_Up 4\n* XBOX_Down 5\n* XBOX_Left 6\n* XBOX_Right 7\n* XBOX_Start 8\n* XBOX_Back 9\n* XBOX_LeftBumper 10\n* XBOX_RightBumper 11\n* XBOX_LeftTrigger 12\n* XBOX_RightTrigger 13\n* XBOX_LeftThumb 14\n* XBOX_RightThumb 15\n* XBOX_LeftThumbXRight 16\n* XBOX_LeftThumbYUp 17\n* XBOX_RightThumbXRight 18\n* XBOX_RightThumbYUp 19\n* XBOX_LeftThumbXLeft 20\n* XBOX_LeftThumbYDown 21\n* XBOX_RightThumbXLeft 22\n* XBOX_RightThumbYDown 23\n\n\n---\n*Syntaxes:*\n\n`inputController` input\n\n---\n*Example 1:*\n\nState of the fire trigger:\n\n```sqf\nonEachFrame { hintSilent str inputController 13 };\n```","commands\\inputMouse.md":"Returns the state of mouse button action, alone or in combination with key presses. For more information on codes and combos see [[Arma_3:_Modded_Keybinding]] and `DIK_KeyCodes` but here are some examples of how codes could be hand constructed:\n\n* KEYBOARD_COMBO 16777216 (0x1000000)\n* DEVICE_MOUSE 65536 (0x10000)\n* HOLD_OFFSET 0\n* CLICK_OFFSET 128 (0x80)\n* DOUBLE_CLICK_OFFSET 256 (0x100)\n* SPECIAL_COMBINATIONS 1114112 (0x110000)\n<pre>\nClick + Hold: BUTTON + DEVICE_MOUSE + HOLD_OFFSET = BUTTON + 65536 + 0\nClick: BUTTON + DEVICE_MOUSE + CLICK_OFFSET = BUTTON + 65536 + 128 \nDouble Click: BUTTON + DEVICE_MOUSE + DOUBLE_CLICK_OFFSET = BUTTON + 65536 + 256\n\nRMB Click + Hold:  1 + 65536 + 0 = 65537\nRMB Click: 1 + 65536 + 128 = 65665\nRMB Double Click: 1 + 65536 + 256 = 65793\n\nCombo + Click + Hold: DIK * KEYBOARD_COMBO + SPECIAL_COMBINATIONS + BUTTON + HOLD_OFFSET = DIK * 16777216 + 1114112 + BUTTON + 0\nCombo + Click: DIK * KEYBOARD_COMBO + SPECIAL_COMBINATIONS + BUTTON + CLICK_OFFSET = DIK * 16777216 + 1114112 + BUTTON + 128\nCombo + Double Click: DIK * KEYBOARD_COMBO + SPECIAL_COMBINATIONS + BUTTON + DOUBLE_CLICK_OFFSET = DIK * 16777216 + 1114112 + BUTTON + 256\n\nLShift + RMB Click + Hold: 42 * 16777216 + 1114112 + 1 + 0 = 705757185\nLShift + RMB Click: 42 * 16777216 + 1114112 + 1 + 128 = 705757313\nLShift + RMB Double Click: 42 * 16777216 + 1114112 + 1 + 256 = 705757441\n</pre>\n\n\n---\n*Syntaxes:*\n\n`inputMouse` button\n\n`inputMouse` combocode\n\n---\n*Example 1:*\n\nState of the RMB:\n\n```sqf\nonEachFrame { hintSilent str inputMouse 1 };\n```\n\n*Example 2:*\n\nDetect LCtrl + 2xRMB:\n\n```sqf\nonEachFrame { hintSilent str inputMouse \"487653633\" };\n```","commands\\inRangeOfArtillery.md":"Returns true if all given units are able to fire at given position with given magazineType.\n\n\n---\n*Syntaxes:*\n\npos `inRangeOfArtillery` [units, magazineType]\n\n---\n*Example 1:*\n\n```sqf\n_isInRange = getMarkerPos \"myTarget\" inRangeOfArtillery [[myArty], \"32Rnd_155mm_Mo_shells\"];\n```","commands\\insert.md":"Inserts multiple values into `Array`/`String`/`HashMap`.<br>\nThe `String` variant also supports `forceUnicode`.\n\n\n---\n*Syntaxes:*\n\narray `insert` [index, valuesToInsert, onlyIfUnique]\n\nstring `insert` [index, substring]\n\nhashMap `insert` [<nowiki/>[key1, value1], [key2, value2], ...]\n\nhashMap `insert`  [splitArray, [keysAndValues]]\n\n---\n*Example 1:*\n\n```sqf\n\"Test\" insert [0, \"Radio\"]; // returns \"RadioTest\"\n```","commands\\insertEditorObject.md":"Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.\n\n\n---\n*Syntaxes:*\n\nmap `insertEditorObject` [type,value,[name1,value1,...],subtype class]\n\n---\n*Example 1:*\n\n-","commands\\intersect.md":"Finds named selections in object which are in specified LOD, intersected by given section of a line. Return value is in the form of [selection, distance]. Multiple returned arrays are nested within a single array. No intersection returns []. `lodName` could be one of the following: \n* \"FIRE\"\n* \"VIEW\"\n* \"GEOM\"\n* \"IFIRE\" - (\"I\" stands for Indirect, almost the same as FIRE)\n* {{GVI|arma3|2.02\n\n\n---\n*Syntaxes:*\n\n[object, lodName] `intersect` [begPos, endPos]\n\n---\n*Example 1:*\n\n```sqf\n[_tank, \"VIEW\"] intersect [[1500, 1500, 2], [1550, 1500, 2]];\n```\n\n*Example 2:*\n\n```sqf\nsphere = \"Sign_Sphere10cm_F\" createVehicle [0,0,0];\nonEachFrame {\n\t_begPos = positionCameraToWorld [0,0,0];\n\t_begPosASL = AGLToASL _begPos;\n\t_endPos = positionCameraToWorld [0,0,1000];\n\t_endPosASL = AGLToASL _endPos;\n\t_ins = lineIntersectsSurfaces [_begPosASL, _endPosASL, player, objNull, true, 1, \"FIRE\", \"NONE\"];\n\tif (_ins isEqualTo []) exitWith {sphere setPosASL [0,0,0]};\n\t_ins select 0 params [\"_pos\", \"_norm\", \"_obj\", \"_parent\"];\n\tif !(getModelInfo _parent select 2) exitWith {sphere setPosASL [0,0,0]};\n\t_ins2 = [_parent, \"FIRE\"] intersect [_begPos, _endPos];\n\tif (_ins2 isEqualTo []) exitWith {sphere setPosASL [0,0,0]};\n\t_ins2 select 0 params [\"_name\", \"_dist\"];\n\t_posASL = _begPosASL vectorAdd ((_begPosASL vectorFromTo _endPosASL) vectorMultiply _dist);\n\tdrawIcon3D [\"\", [1,1,1,1], ASLToAGL _posASL, 0, 0, 0, _name, 1, 0.03, \"PuristaMedium\"];\n\tsphere setPosASL _posASL;\n};\n```","commands\\is3DEN.md":"Returns `true` if the `Eden Editor` is currently being used.\n\n\n---\n*Syntaxes:*\n\n[[is3DEN]]\n\n---\n*Example 1:*\n\n```sqf\nif is3DEN then {systemChat \"Welcome to Eden Editor!\"};\n```","commands\\is3DENMultiplayer.md":"Returns `true` if the `Eden Editor` is in multiplayer mode.\n\n\n---\n*Syntaxes:*\n\n[[is3DENMultiplayer]]\n\n---\n*Example 1:*\n\n```sqf\nif is3DENMultiplayer then {systemChat \"You are hosting a test server!\"};\n```","commands\\is3DENPreview.md":"Returns `true` if the `Eden Editor` is currently in mission preview mode, single player or multiplayer. (see also [[is3DEN]], [[is3DENMultiplayer]])\n\n\n---\n*Syntaxes:*\n\n[[is3DENPreview]]\n\n---\n*Example 1:*\n\n```sqf\nif is3DENPreview then { systemChat \"Welcome to Eden Editor Preview!\" };\n```","commands\\isAbleToBreathe.md":"If unit is diving and doesn't have a re-breather, it returns `false`. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns `true`.\n\n\n---\n*Syntaxes:*\n\n`isAbleToBreathe`  unit\n\n---\n*Example 1:*\n\n```sqf\n_canBreath = isAbleToBreathe player;\n```","commands\\isActionMenuVisible.md":"Returns `true` if scroll menu is visible.\n\n\n---\n*Syntaxes:*\n\n`isActionMenuVisible`\n\n---\n*Example 1:*\n\n```sqf\nif (isActionMenuVisible) then { hint \"Scroll menu is opened\" };\n```","commands\\isAgent.md":"Check if team member is an agent.\n\n\n---\n*Syntaxes:*\n\n`isAgent` teamMember\n\n---\n*Example 1:*\n\n```sqf\nisAgent teamMember _unit;\n```","commands\\isAimPrecisionEnabled.md":"Returns true if procedural aiming precision affects weapon sway.\n\n\n---\n*Syntaxes:*\n\n`isAimPrecisionEnabled` unit\n\n---\n*Example 1:*\n\n```sqf\n_isAffected = isAimPrecisionEnabled player;\n```","commands\\isAllowedCrewInImmobile.md":"Whether or not units can be in a vehicle with broken tracks/wheels.\n\n\n---\n*Syntaxes:*\n\n`isAllowedCrewInImmobile` vehicle\n\n---\n*Example 1:*\n\n```sqf\nif !(isAllowedCrewInImmobile _tank) then\n{\n\t_tank allowCrewInImmobile true;\n};\n```","commands\\isArray.md":"Check if config entry represents array.\n\n\n---\n*Syntaxes:*\n\n`isArray` config\n\n---\n*Example 1:*\n\n```sqf\n_ok = isArray (configFile >> \"CfgVehicles\") // returns false\n```","commands\\isAutoHoverOn.md":"Return `true` if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover)\n\n\n---\n*Syntaxes:*\n\n`isAutoHoverOn` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_isOn = isAutoHoverOn vehicle player;\n```","commands\\isAutonomous.md":"Returns whether the UAV is in autonomous mode or not.\n\n\n---\n*Syntaxes:*\n\n`isAutonomous` uav\n\n---\n*Example 1:*\n\n```sqf\nprivate _isAutonomous = isAutonomous uav;\n```","commands\\isAutoStartUpEnabledRTD.md":"Returns state of automatic start up action.\n\n\n---\n*Syntaxes:*\n\n`isAutoStartUpEnabledRTD` helicopter\n\n---\n*Example 1:*\n\n```sqf\n_state = isAutoStartUpEnabledRTD _myHelicopter;\n```","commands\\isAutotest.md":"Returns true if game was started with autotest parameter\n\n\n---\n*Syntaxes:*\n\n`isAutotest`\n\n---\n*Example 1:*\n\n```sqf\n_bool = isAutotest;\n```","commands\\isAutoTrimOnRTD.md":"Returns state of auto trim functionality.\n\n\n---\n*Syntaxes:*\n\n`isAutoTrimOnRTD` helicopter\n\n---\n*Example 1:*\n\n```sqf\n_state = isAutoTrimOnRTD _myHelicopter;\n```","commands\\isAwake.md":"Returns resting state of a PhysX (EPE) object. Some EPE objects are deliberately put to sleep by the engine to save resources. This command returns `true` when object is simulating and `false` when it is put to sleep. With units of type **Man** the behaviour is slightly different. As units never get put to sleep, the command outputs ragdoll state of a unit instead. There are 6 states for the output of the command:\n* EPE object is simulaing - `true`\n* EPE object is put to sleep - `false`\n* Unit is `alive`, ragdoll is active - `false`\n* Unit is `alive`, ragdoll is NOT active - `true`\n* *(Reference GVI \"arma3|2.10\")* Unit is NOT `alive`, ragdoll is active - `true`\n* *(Reference GVI \"arma3|2.10\")* Unit is NOT `alive`, ragdoll is NOT active - `false`\nIt may look counter-intuitive but there is a simple formula to return ragdoll state of a unit (since *(Reference GVI \"arma3|2.10\")*):\n\n```sqf\nprivate _unitIsInRagdoll = alive _unit != isAwake _unit;\n```\n\n\n---\n*Syntaxes:*\n\n`isAwake` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _isAwake = isAwake _object;\n```","commands\\isBleeding.md":"Returns whether the unit is bleeding.\n\n\n---\n*Syntaxes:*\n\n`isBleeding`  unit\n\n---\n*Example 1:*\n\n```sqf\nif (isBleeding player) then { player groupChat \"I'm bleeding!!\"; };\n```","commands\\isBurning.md":"Returns whether the unit is burning.\nThis returns true only if unit is damaged by nearby fire, it does `not` check whether a fireplace is burning, use `inflamed` command for that.\n\n\n---\n*Syntaxes:*\n\n`isBurning` unit\n\n---\n*Example 1:*\n\n```sqf\nif (isBurning player) then { player groupChat \"I'm burning!!\"; };\n```","commands\\isClass.md":"Check if config entry represents config class.\n\n\n---\n*Syntaxes:*\n\n`isClass` config\n\n---\n*Example 1:*\n\n```sqf\n_ok = isClass (configFile >> \"CfgVehicles\");\n``` Result is `true`.","commands\\isCollisionLightOn.md":"Returns `true` if vehicle collision lights are on otherwise `false`.\n\n\n---\n*Syntaxes:*\n\n`isCollisionLightOn` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_collisionLightOn = isCollisionLightOn heli;\n```","commands\\isCopilotEnabled.md":"Returns true if copilots actions are enabled.\n\n\n---\n*Syntaxes:*\n\n`isCopilotEnabled` vehicle\n\n---\n*Example 1:*\n\n```sqf\nif (!isCopilotEnabled myHeli) then {\n\tmyHeli enableCopilot true;\n};\n```","commands\\isDamageAllowed.md":"A getter for `allowDamage` command. The command indicates if damage is allowed at current `local`ity, hence local effect of the command.\nFor complete solution for being able to tell whether or not an object can be damaged at current locality see *(Reference HashLink \"#Example 1\")*.\n\n\n---\n*Syntaxes:*\n\n`isDamageAllowed` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _canBeDamaged = local _obj && isDamageAllowed _obj;\n```","commands\\isDedicated.md":"Returns `true` if the machine executing the command is a dedicated multiplayer server. Returns `false` in single player.\n\n\n---\n*Syntaxes:*\n\n`isDedicated`\n\n---\n*Example 1:*\n\n```sqf\nif (isDedicated) then {diag_log \"Dedicated Server on the run !\";};\n```","commands\\isDLCAvailable.md":"Returns true if the DLC (CDLC included) is marked as available on Steam.\nOfficial and Creator DLC appIds can be found on [[:Category:Arma 3: DLCs & Expansions|Arma 3: DLCs & Expansions]] and [[:Category:Arma 3: CDLCs|Arma 3: CDLCs]] pages.\n\n\n---\n*Syntaxes:*\n\n`isDLCAvailable` appId\n\n---\n*Example 1:*\n\n```sqf\nprivate _karts = 288520;\nisDLCAvailable _karts; // returns true\n```","commands\\isEngineOn.md":"Returns `true` if engine is on, `false` if it is off.\n\n\n---\n*Syntaxes:*\n\n`isEngineOn` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_carEngineIsOn = isEngineOn _carOne;\n```","commands\\isEqualRef.md":"Compares two values by reference, returns `true` if equal.\n\n\n---\n*Syntaxes:*\n\nval1 `isEqualRef` val2\n\n---\n*Example 1:*\n\n```sqf\n_arr1 = [1,[2,[3]]];\n_arr2 = _arr1;\n_arr1 isEqualTo _arr2;\t// true\n_arr1 isEqualRef _arr2;\t// true\n\n_arr2 = +_arr1;\t\t\t// array copy\n_arr1 isEqualTo _arr2;\t// true\n_arr1 isEqualRef _arr2;\t// false\n```","commands\\isEqualTo.md":"Performs strict comparison between var1 and var2 and returns `true` if equal, otherwise `false`. Strict means that it would check that both arguments are of the same data type and then compare the values.<br><br>\nSome differences between `isEqualTo` and `==`:\n* It performs case sensitive comparison on `String`s\n* It doesn't throw error when comparing different types, i.e. (\"eleven\" `isEqualTo` 11)\n* It can compare `Array`s, `Script`s and `Boolean`s (`alive` `player` `isEqualTo` `true`)\n* It can compare non-existent game objects (`grpNull` `isEqualTo` `grpNull`)\n* It can compare `Namespace`s (`As of Arma 3 v1.47`)\n* It is slightly faster than `==`, especially when comparing `String`s\n\n\n---\n*Syntaxes:*\n\nval1 `isEqualTo` val2\n\n---\n*Example 1:*\n\n```sqf\n_arr1 = [1,[2,[3]]];\n_arr2 = [1,[2,[3]]];\nif (_arr1 isEqualTo _arr2) then {hint \"Arrays match!\"}\n```\n\n*Example 2:*\n\n```sqf\nif (a isEqualTo b) then {hint \"a is equal to b\"};\nif !(a isEqualTo b) then {hint \"a is not equal to b\"};\n```","commands\\isEqualType.md":"Compares two values' types. A much faster alternative to <sqf inline>typeName a == typeName b\n```.\n\n\n---\n*Syntaxes:*\n\nval1 `isEqualType` val2\n\n---\n*Example 1:*\n\n```sqf\nprivate _var = [1,2,3];\n_var isEqualType 0; // false\n_var isEqualType []; // true\n```","commands\\isEqualTypeAll.md":"Compares types of all elements of an array to the type of a single value. Since Arma 3 v2.09.149634 no additional check is needed to make sure the first argument is an `Array`.\n\n\n---\n*Syntaxes:*\n\narr `isEqualTypeAll` val\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,2,3,4,5,6,7,8,9,0];\n_arr isEqualTypeAll \"\"; // false\n_arr isEqualTypeAll 0;\t// true\n```\n\n*Example 2:*\n\n```sqf\n[] isEqualTypeAll \"\";\t// false\n[\"\"] isEqualTypeAll \"\";\t// true\n```","commands\\isEqualTypeAny.md":"Compares type of given value to every type in the given array and if match is found, `true` is returned.\n\n\n---\n*Syntaxes:*\n\nval `isEqualTypeAny` types\n\n---\n*Example 1:*\n\n```sqf\n_var = [1, 2, 3];\n_var isEqualTypeAny [0, \"\", objNull]; //false\n_var isEqualTypeAny [0, \"\", objNull, []]; //true\n```","commands\\isEqualTypeArray.md":"Compares types of all elements of one array to types of all elements of another array. Since Arma 3 v2.09.149634 no additional check is needed to make sure the first argument is an `Array`.\n\n\n---\n*Syntaxes:*\n\narr1 `isEqualTypeArray` arr2\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,true,\"three\"];\n_arr isEqualTypeArray [0,objNull,\"\"]; // false\n_arr isEqualTypeArray [0,false,\"\"]; // true\n```\n\n*Example 2:*\n\n```sqf\n_arr = [1,2];\n_arr isEqualTypeArray [0]; // false\n_arr isEqualTypeArray [0,0]; // true\n_arr isEqualTypeArray [0,0,0]; // false\n```","commands\\isEqualTypeParams.md":"Compares types of all elements of input array to types of all elements of template array. Similar to `isEqualTypeArray` however this command is designed for fast validation of functions params, so there are differences:\n* Input can be anything but will be expected to be an `Array`, otherwise `false` is returned\n* Input array can be longer but not shorter than template array, will return `false` if shorter\n* `nil` could be used in template type array as a wild card to allow any type match\n\n\n---\n*Syntaxes:*\n\ninput `isEqualTypeParams`  template\n\n---\n*Example 1:*\n\n```sqf\n// These all return true\n[1,2,player,\"10\"] isEqualTypeParams [0,0,objNull,\"\"];\n[1,2,player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"];\n[1,2,getPos player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"];\n```\n\n*Example 2:*\n\n```sqf\n// These all return false\n123 isEqualTypeParams [0,0,objNull,\"\"];\n[] isEqualTypeParams [0,0,objNull,\"\"];\n[1,2,player] isEqualTypeParams [0,0,objNull,\"\"];\n```","commands\\isFilePatchingEnabled.md":"Returns `true` if file patching is enabled otherwise `false`\n\n\n---\n*Syntaxes:*\n\n`isFilePatchingEnabled`\n\n---\n*Example 1:*\n\n```sqf\n_state = isFilePatchingEnabled;\n```","commands\\isFinal.md":"Checks if `code` or a variable was compiled final with `compileFinal`.\n\n\n---\n*Syntaxes:*\n\n`isFinal` variable\n\n`isFinal` code\n\n---\n*Example 1:*\n\n```sqf\nmyCode = compileFinal \"a = a + 1\";\nif (isFinal \"myCode\") then { systemChat \"Code is compiled final.\" };\n```\n\n*Example 2:*\n\n```sqf\nif (isFinal BIS_fnc_arsenal) then {chint \"You can't edit this function!\" };\n```\n\n*Example 3:*\n\nAvoid overwrite .rpt warnings:\n\n```sqf\nif (!isFinal fnc_myCode) then { fnc_myCode = compileFinal str_myCode };\n```","commands\\isFlashlightOn.md":"Returns true if there is a linked and enabled flashlight on a given weapon.\n\n\n---\n*Syntaxes:*\n\nunit `isFlashlightOn`  weapon\n\n---\n*Example 1:*\n\n```sqf\nplayer isFlashlightOn (currentWeapon player);\n```","commands\\isFlatEmpty.md":"Checks given position against given filter params. Filter includes checks for:\n* If there are any objects closer than given distance from given position (in 2D)\n* If the area around position is flat enough to match given gradient\n* If the given position is over water or land\n* If the given position is over shore line\nThe gradient seems to correlate with general hill steepness: 0.1 (10%) ~6°, 0.5 (50%) ~27°, 1.0 (100%) ~45°, etc.\n\n\n---\n*Syntaxes:*\n\nposition `isFlatEmpty` [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]\n\n---\n*Example 1:*\n\nCheck if player position is over land:\n\n```sqf\n_overLand = !(position player isFlatEmpty [-1, -1, -1, -1, 0, false] isEqualTo []);\n```\n\n*Example 2:*\n\nCheck if player position is over shore line:\n\n```sqf\n_overShore = !(position player isFlatEmpty  [-1, -1, -1, -1, 0, true] isEqualTo []);\n```\n\n*Example 3:*\n\nCheck if player position is over water:\n\n```sqf\n_overWater = !(position player isFlatEmpty  [-1, -1, -1, -1, 2, false] isEqualTo []);\n```\n\n*Example 4:*\n\nCheck if no object is closer than 5m to player position:\n\n```sqf\n_isEmpty = !(position player isFlatEmpty  [5, -1, -1, -1, -1, false, player] isEqualTo []);\n```\n\n*Example 5:*\n\nCheck if area 10m around player position is relatively flat:\n\n```sqf\n_isFlat = !(position player isFlatEmpty  [-1, -1, 0.3, 10, -1] isEqualTo []);\n```\n\n*Example 6:*\n\nCheck if area 15m around player position is very flat and empty:\n\n```sqf\n_isFlatEmpty = !(position player isFlatEmpty  [15, -1, 0.1, 15, -1, false, player] isEqualTo []);\n```","commands\\isForcedWalk.md":"Returns `true` if player is forced to walk with `forceWalk`.\n\n\n---\n*Syntaxes:*\n\n`isForcedWalk` unitName\n\n---\n*Example 1:*\n\n```sqf\n_bool = isForcedWalk player;\n```","commands\\isFormationLeader.md":"Returns true if the specified unit is subgroup leader.\n\n\n---\n*Syntaxes:*\n\n`isFormationLeader` unit\n\n---\n*Example 1:*\n\n```sqf\n_isLeader = isFormationLeader player;\n```","commands\\isGameFocused.md":"Returns the state of game focus changed by pressing *(Reference Controls \"TAB\" at ALT)* or similar action.\n\n\n---\n*Syntaxes:*\n\n`isGameFocused`\n\n---\n*Example 1:*\n\n```sqf\nif (!isGameFocused) then { endMission \"End\" };\n```","commands\\isGamePaused.md":"Returns the state of game simulation. Simulation can get paused by pressing *(Reference Controls \"Tab\" at Alt)* or a system dialog opening (e.g. *(Reference Controls \"Esc\")* menu).\nSimulation will not get paused if **-noPause** [[Arma 3: Startup Parameters|startup parameter]] is used.\n\n\n---\n*Syntaxes:*\n\n`isGamePaused`\n\n---\n*Example 1:*\n\n```sqf\nonEachFrame \n{\n\tif (isGamePaused) exitWith {};\n\t// ...do stuff\n};\n```","commands\\isGroupDeletedWhenEmpty.md":"Checks if the given group marked for auto-deletion when empty. See `deleteGroupWhenEmpty`.\n\n\n---\n*Syntaxes:*\n\n`isGroupDeletedWhenEmpty` group\n\n---\n*Example 1:*\n\n```sqf\n_isMarked = isGroupDeletedWhenEmpty _group;\n```","commands\\isHidden.md":"Returns whether a person is hidden (reached the hiding position).\n\n\n---\n*Syntaxes:*\n\n`isHidden` person\n\n---\n*Example 1:*\n\n```sqf\n_bobIsHidden = isHidden bob;\n```","commands\\isInRemainsCollector.md":"Checks if unit or vehicle is queued for disposal after death.\n\n\n---\n*Syntaxes:*\n\n`isInRemainsCollector` remain\n\n---\n*Example 1:*\n\n```sqf\nif (isInRemainsCollector unit1) then {hint \"unit1 is queued for disposal\"};\n```","commands\\isInstructorFigureEnabled.md":"Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).\n\n\n---\n*Syntaxes:*\n\n`isInstructorFigureEnabled`\n\n---\n*Example 1:*\n\n```sqf\nhint str isInstructorFigureEnabled;\n```","commands\\isIRLaserOn.md":"Returns `true` if there is a linked and enabled IR on the given weapon.\n\n\n---\n*Syntaxes:*\n\nunit `isIRLaserOn` weapon\n\n---\n*Example 1:*\n\n```sqf\nplayer isIRLaserOn currentWeapon player;\n```","commands\\isKeyActive.md":"Checks whether the given key is active in the current user profile.\n\nSee keys, keysLimit and doneKeys in the `description.ext` file of the missions.\n\n\n---\n*Syntaxes:*\n\n`isKeyActive` keyName\n\n---\n*Example 1:*\n\n```sqf\n_active = isKeyActive \"Mission04Key\";\n```","commands\\isKindOf.md":"Checks whether the given object or type is (a subtype) of the given type.<br>\nWhile *(Reference HashLink \"#Syntax 1\")* and *(Reference HashLink \"#Syntax 2\")* only support `CfgVehicles`, {{GVI|arma2|1.00\n\n\n---\n*Syntaxes:*\n\nobject `isKindOf` typeName\n\ntypeName1 `isKindOf` typeName2\n\ntypeName1 `isKindOf` [typeName2, targetConfig]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player isKindOf \"Tank\";\n```\n\n*Example 2:*\n\n```sqf\n\"BMP2\" isKindOf \"Tank\";\n```\n\n*Example 3:*\n\n```sqf\ncurrentWeapon player isKindOf [\"Rifle\", configFile >> \"CfgWeapons\"];\n```","commands\\isLaserOn.md":"Returns true if the vehicle has its laser turned on. Not to be confused with `isIRLaserOn` which is for units. Main syntax is for primary gunner turret.\n\n\n---\n*Syntaxes:*\n\n`isLaserOn` entity\n\nvehicle `isLaserOn` turret\n\n---\n*Example 1:*\n\n```sqf\nif (isLaserOn _vehicle) then { hint \"target ready\" };\n```","commands\\isLightOn.md":"Returns `true` if vehicle headlights are on otherwise `false`.\n\n\n---\n*Syntaxes:*\n\n`isLightOn` vehicle\n\n`isLightOn` [vehicle, turret]\n\n---\n*Example 1:*\n\n```sqf\n_headlightsOn = isLightOn vehicle player;\n```\n\n*Example 2:*\n\n```sqf\n_pilotLightOn = isLightOn heli;\n```\n\n*Example 3:*\n\n```sqf\n_searchLightOn = isLightOn [heli, [0]];\n```","commands\\isLocalized.md":"Checks whether given `stringName` is `localize`d.\n\n\n---\n*Syntaxes:*\n\n`isLocalized`  stringName\n\n---\n*Example 1:*\n\n```sqf\nif (isLocalized \"STR_USRACT_ADJUST\") then \n{\n\thint localize \"STR_USRACT_ADJUST\";\n} \nelse \n{\n\thint \"STR_USRACT_ADJUST\";\n\tdiag_log \"ToDo: STR_USRACT_ADJUST is not localized\";\n};\n```\n\n*Example 2:*\n\n```sqf\nisLocalized \"$STR_USRACT_ADJUST\"; // Since Arma v2.04\n```","commands\\isManualFire.md":"Returns `true` if manual fire is on. Manual fire could either be selected in vehicle action menu (if available) or with `action` \"ManualFire\" and \"ManualFireCancel\". Always returns `false` for a soldier.\n\n\n---\n*Syntaxes:*\n\n`isManualFire` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n_bool = isManualFire vehicle player;\n```","commands\\isMarkedForCollection.md":"Checks whether the object is marked for weapons collection.\n\n\n---\n*Syntaxes:*\n\n`isMarkedForCollection`  object\n\n---\n*Example 1:*\n\n```sqf\n_marked = isMarkedForCollection _truck;\n```","commands\\isMissionProfileNamespaceLoaded.md":"The `missionProfileNamespace` variables are loaded at the start of a mission, before 'init.sqf' is executed. If the file with saved variables for current mission exists in user profile and is loaded, the command returns `true`. It also will return `true` after the first execution of `saveMissionProfileNamespace` command, which also creates the file.\n\n\n---\n*Syntaxes:*\n\n`isMissionProfileNamespaceLoaded`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isLoaded = isMissionProfileNamespaceLoaded;\n```","commands\\isMultiplayer.md":"Return true if multiPlayer.\n\n\n---\n*Syntaxes:*\n\n`isMultiplayer`\n\n---\n*Example 1:*\n\n```sqf\nif (isMultiplayer) then\n{\n\t// ...block\n}\n```","commands\\isMultiplayerSolo.md":"Returns `true` when playing a game in `solo multiplayer` (for example Apex coop campaign PLAY SOLO option).\n\n\n---\n*Syntaxes:*\n\n`isMultiplayerSolo`\n\n---\n*Example 1:*\n\n```sqf\n_state = isMultiplayerSolo;\n```","commands\\isNil.md":"Tests whether a variable is `nil` or undefined from its `identifier`, or whether the given expression evaluates to `nil` or `Nothing`.\n\n\n---\n*Syntaxes:*\n\n`isNil` variableName\n\n`isNil` code\n\n---\n*Example 1:*\n\n```sqf\nif (isNil \"TAG_globalVariable\") then { TAG_globalVariable = 0 };\nif (isNil \"_localVariable\") then { hint \"_localVariable is nil\" };\n```\n\n*Example 2:*\n\n```sqf\nisNil { player getVariable \"someVar\" };\n```\n\n*Example 3:*\n\n```sqf\n_myArray = [0, 1];\nisNil { _myArray select 0 }; // returns false\nisNil { _myArray select 1 }; // returns false\nisNil { _myArray select 2 }; // returns true\nisNil { _myArray select 3 }; // throws a script error. only length+1 select is allowed\n```\n\n*Example 4:*\n\nThis trick forces executing something in `Unscheduled Environment`:\n\n```sqf\n0 spawn {\n\tsystemChat str canSuspend;\t\t// chat shows true\n\tisNil { hint str canSuspend };\t// hint shows false\n};\n```\n\n*Example 5:*\n\n{{ofp}} `String` comparison workaround<br>\n`SQS Syntax`:\n<sqs>\n_nil = format [\"%1\", _undefinedVariable]\n? (format [\"%1\", variableToTest] == _nil) : hint \"variableToTest is nil\"\n</sqs>\n\n`SQF Syntax`:\n\n```sqf\n_nil = format [\"%1\", _undefinedVariable];\nif (format [\"%1\", variableToTest] == _nil) then { hint \"variableToTest is nil\" };\n```","commands\\isNotEqualRef.md":"Compares two values by reference, returns `true` if not equal.\n\n\n---\n*Syntaxes:*\n\nval1 `isNotEqualRef` val2\n\n---\n*Example 1:*\n\n```sqf\n_arr1 = [1,[2,[3]]];\n_arr2 = _arr1;\n_arr1 isEqualTo _arr2;\t// true\n_arr1 isNotEqualRef _arr2;\t// false\n\n_arr2 = +_arr1;\t\t\t// array copy\n_arr1 isEqualTo _arr2;\t// true\n_arr1 isNotEqualRef _arr2;\t// true\n```","commands\\isNotEqualTo.md":"Performs strict comparison between var1 and var2 and returns `false` if equal, otherwise true.\n\n\n---\n*Syntaxes:*\n\nval1 `isNotEqualTo` val2\n\n---\n*Example 1:*\n\n```sqf\nprivate _true = 0 isNotEqualTo 1;\n```","commands\\isNull.md":"Checks whether the tested item is null.<br>\nWhich null type the item has to be equal to depends on the type of game entity tested:\n\n\n---\n*Syntaxes:*\n\n`isNull` entity\n\n---\n*Example 1:*\n\n```sqf\nif (isNull obj) then\n{\n\thint \"obj variable is defined but obj is null\";\n};\n```\n\n*Example 2:*\n\n`Diary Record` support before *(Reference GVI \"arma3|2.00\")*:\n\n```sqf\nprivate _nullRecord = objNull createDiaryRecord []; // wrong parameters = failure to create a record = null value\nprivate _createdRecord = player createDiaryRecord [\"Diary\", [\"title\", \"description\"]];\nif (_createdRecord isEqualTo _nullRecord) then { hint \"Failed\" };\n```\n\n`Team Member` support before *(Reference GVI \"arma3|2.10\")*:\n\n```sqf\nprivate _isNull = _teamMember isEqualTo teamMemberNull;\n```","commands\\isNumber.md":"Check if config entry represents number.\n\n\n---\n*Syntaxes:*\n\n`isNumber` config\n\n---\n*Example 1:*\n\n```sqf\n_ok = isNumber (configFile >> \"CfgVehicles\");\n```\n\nResult is false","commands\\isObjectHidden.md":"Checks visibility of a given object on the local machine.\n\n\n---\n*Syntaxes:*\n\n`isObjectHidden` object\n\n---\n*Example 1:*\n\n```sqf\n_bobIsHidden = isObjectHidden bob;\n```","commands\\isObjectRTD.md":"Returns true if RTD model is loaded.\n\n\n---\n*Syntaxes:*\n\n`isObjectRTD` helicopter\n\n---\n*Example 1:*\n\n```sqf\n_heliRTD = isObjectRTD vehicle player;\n```","commands\\isOnRoad.md":"Checks if given position is inside road segment. Same as `roadAt`, only return is boolean instead of road object.\n\n\n---\n*Syntaxes:*\n\n`isOnRoad` position\n\n---\n*Example 1:*\n\n```sqf\n_objOnRoad = isOnRoad player;\n```\n\n*Example 2:*\n\n```sqf\n_posOnRoad = isOnRoad ASLToAGL getPosASL player;\n```","commands\\isPiPEnabled.md":"Returns whether Picture-In-Picture video option (Render to Texture) is enabled or not.\n\n\n---\n*Syntaxes:*\n\n`isPiPEnabled`\n\n---\n*Example 1:*\n\n```sqf\nprivate _PiPState = isPiPEnabled;\n```","commands\\isPlayer.md":"Checks if given person is a `player`. Returns `true` for headless clients as well.\n\n\n---\n*Syntaxes:*\n\n`isPlayer` unit\n\n`isPlayer` [person]\n\n---\n*Example 1:*\n\n```sqf\nif (isPlayer _Soldier1) then\n{\n\t_soldier1 setDamage 1;\n};\n```\n\n*Example 2:*\n\n```sqf\n_playerCount = { isPlayer _x } count playableUnits;\n```\n\n*Example 3:*\n\n```sqf\nprivate _wasPlayer = isPlayer [_deadBody]; // returns true if _deadBody's identity still exists and was controlled by a player\n```","commands\\isRealTime.md":"Returns true if the mission editor is operating in real time mode.\n\n\n---\n*Syntaxes:*\n\n`isRealTime` map\n\n---\n*Example 1:*\n\n```sqf\n_isRealTime = isRealTime _map;\n```","commands\\isRemoteExecuted.md":"Returns `true` if the code context is being remote executed by `remoteExec` or `remoteExecCall`. In SP always returns `false`. See also `isRemoteExecutedJIP`\n\n\n---\n*Syntaxes:*\n\n`isRemoteExecuted`\n\n---\n*Example 1:*\n\n```sqf\nprivate _remoteExecuted = isRemoteExecuted;\n```","commands\\isRemoteExecutedJIP.md":"Returns `true` if the code context is being remote executed from the JIP queue by `remoteExec` or `remoteExecCall` (when JIP param was set). It is a subset of `isRemoteExecuted`:\n* Normal remote execution: \n** `isRemoteExecuted` - `true`\n** `isRemoteExecutedJIP` - `false`\n* Remote execution from JIP queue:\n** `isRemoteExecuted` - `true`\n** `isRemoteExecutedJIP` - `true`\nIn SP always returns `false`.\n\n\n---\n*Syntaxes:*\n\n`isRemoteExecutedJIP`\n\n---\n*Example 1:*\n\n```sqf\n_remoteExecutedJIP = isRemoteExecutedJIP;\n```","commands\\isSaving.md":"Returns the status of autosave request, made when `saveGame` command is executed. When request is made, the command immediately returns `true`. The engine then handles the saving and when it is done, the command returns `false`.\n\n\n---\n*Syntaxes:*\n\n`isSaving`\n\n---\n*Example 1:*\n\n```sqf\n[] spawn\n{\n\tsaveGame;\n\twaitUntil { !isSaving };\n\tsystemChat \"Game Saving Is Done!\";\n};\n```","commands\\isSensorTargetConfirmed.md":"Returns if given unit is confirmed target for given side.\n\n\n---\n*Syntaxes:*\n\nunit `isSensorTargetConfirmed` side\n\n---\n*Example 1:*\n\n```sqf\nprivate _enemyConfirmed = _possibleEnemy isSensorTargetConfirmed opfor;\n```","commands\\isServer.md":"Returns `true` if the machine executing the command is the server in a multiplayer game or is running single player. It will return `true` for both dedicated and player-hosted server. See also `Multiplayer Scripting/machines`.\n\n\n---\n*Syntaxes:*\n\n`isServer`\n\n---\n*Example 1:*\n\n```sqf\nif (!isServer) exitWith {};\n```","commands\\isShowing3DIcons.md":"Returns true if the editor is set to draw 3D icons.\n\n\n---\n*Syntaxes:*\n\n[[isShowing3DIcons]] map\n\n---\n*Example 1:*\n\n-","commands\\isSimpleObject.md":"Returns `true` if given object is `simple object`\n\n\n---\n*Syntaxes:*\n\n`isSimpleObject` object\n\n---\n*Example 1:*\n\n```sqf\n_isSimple = isSimpleObject _obj1;\n```","commands\\isSprintAllowed.md":"Returns true if player is allowed to sprint\n\n\n---\n*Syntaxes:*\n\n`isSprintAllowed` unit\n\n---\n*Example 1:*\n\n```sqf\nif (not isSprintAllowed player) then { hint \"no running in the corridors!\" };\n```","commands\\isStaminaEnabled.md":"Check if stamina depletion is enabled.\n\n\n---\n*Syntaxes:*\n\n`isStaminaEnabled`  unit\n\n---\n*Example 1:*\n\n```sqf\nif (isStaminaEnabled player) then { hint \"You can get exhausted.\" };\n```","commands\\isSteamMission.md":"Returns true if the current mission is a Steam Workshop mission.\n\n\n---\n*Syntaxes:*\n\n`isSteamMission`\n\n---\n*Example 1:*\n\n```sqf\nif (isSteamMission) then\n{\n\thint \"Thank you for subscribing to my mission on Steam!\";\n}\nelse\n{\n\thint \"Thank you for downloading my mission off the Internet!\";\n};\n```","commands\\isSteamOverlayEnabled.md":"Returns `true` if Steam overlay is enabled, otherwise `false`.\n\n\n---\n*Syntaxes:*\n\n`isSteamOverlayEnabled`\n\n---\n*Example 1:*\n\n```sqf\n_overlayEnabled = isSteamOverlayEnabled;\n```","commands\\isStreamFriendlyUIEnabled.md":"Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).\n\n\n---\n*Syntaxes:*\n\n`isStreamFriendlyUIEnabled`\n\n---\n*Example 1:*\n\n```sqf\nhint str isStreamFriendlyUIEnabled;\n```","commands\\isStressDamageEnabled.md":"Returns `true` if stress damage is enabled in the game settings. A getter for `enableStressDamage`.\n\n\n---\n*Syntaxes:*\n\n`isStressDamageEnabled`\n\n---\n*Example 1:*\n\n```sqf\n_settingEnabled = isStressDamageEnabled;\n```","commands\\isText.md":"Checks if config entry represents a text value.\n\n\n---\n*Syntaxes:*\n\n`isText`  config\n\n---\n*Example 1:*\n\n```sqf\n_isText = isText (configFile >> \"CfgVehicles\") // false\n```\n\n*Example 2:*\n\n```sqf\n_isText = isText (configFile >> \"CfgVehicles\" >> \"B_MRAP_01_F\" >> \"displayName\") // true\n```","commands\\isTouchingGround.md":"Returns true if object is touching the ground.\n\n\n---\n*Syntaxes:*\n\n`isTouchingGround` object\n\n---\n*Example 1:*\n\n```sqf\nif (isTouchingGround player) then {hint \"Terraferma!\";};\n```","commands\\isTurnedOut.md":"Returns `true` if given unit is turned out, otherwise `false`. The output changes to `true` after unit finished turning out, however will change to `false` almost immediately after unit is ordered to turn in.\n\n\n---\n*Syntaxes:*\n\n`isTurnedOut` unit\n\n---\n*Example 1:*\n\n```sqf\n_commanderOut = isTurnedOut (tank turretUnit [0,0]);\n```","commands\\isTutHintsEnabled.md":"Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).\n\n\n---\n*Syntaxes:*\n\n`isTutHintsEnabled`\n\n---\n*Example 1:*\n\n```sqf\nhint str isTutHintsEnabled;\n```","commands\\isUAVConnectable.md":"Returns true if UAV is connectable by AV terminal(s).\n\n\n---\n*Syntaxes:*\n\nobject `isUAVConnectable` [uav, checkAllItems]\n\n---\n*Example 1:*\n\n```sqf\nprivate _canConnect = myUnit isUAVConnectable [myUav, true];\n```","commands\\isUAVConnected.md":"Returns true if UAV is connected to some terminal.\n\n\n---\n*Syntaxes:*\n\n`isUAVConnected` uav\n\n---\n*Example 1:*\n\n```sqf\n_isConnected = isUAVConnected cursorTarget;\n```","commands\\isUIContext.md":"Returns `true` if the script originated from some UI control event, for example from \"onButtonDown\" EH. Exists within parent scope and immediate child scopes.\n\n\n---\n*Syntaxes:*\n\n`isUIContext`\n\n---\n*Example 1:*\n\n```sqf\nif (isUIContext) then { hint \"UI control event\" };\n```\n\n*Example 2:*\n\n```sqf\n_button ctrlSetEventHandler [\"ButtonDown\", \"call { diag_log isUIContext }\"]; // outputs true\n```\n\n*Example 3:*\n\n```sqf\n_button ctrlSetEventHandler [\"ButtonDown\", \"0 spawn { diag_log isUIContext }\"]; // outputs false\n```","commands\\isUniformAllowed.md":"Check whether given uniform can be dressed by target soldier.\n\n\n---\n*Syntaxes:*\n\nunit `isUniformAllowed` type\n\n---\n*Example 1:*\n\n```sqf\n_canUse = _unit isUniformAllowed \"U_B_CombatUniform_mcam\";\n```","commands\\isVehicleCargo.md":"Despite a misleading name, returns the vehicle that is transporting given vehicle in cargo. If the given vehicle is not in vehicle cargo, `objNull` is returned.\n\n\n---\n*Syntaxes:*\n\n`isVehicleCargo` cargo\n\n---\n*Example 1:*\n\nBlackfish with given variable name blackfish, with a vehicle inside called quad\n\n```sqf\n_transportingVehicle = isVehicleCargo quad; //returns blackfish\n```\n\n*Example 2:*\n\nVehicle called quad that is not being transported as cargo\n\n```sqf\n_transportingVehicle = isVehicleCargo quad; //returns objNull\n```","commands\\isVehicleRadarOn.md":"Returns true if vehicle has active sensors on.\n\n\n---\n*Syntaxes:*\n\n`isVehicleRadarOn` vehicle\n\n---\n*Example 1:*\n\n```sqf\nisVehicleRadarOn vehicle player; // returns true if radar is turned on\n```","commands\\isVehicleSensorEnabled.md":"Returns class name (to identify list based on component name) and info if given sensor is enabled.\n\n\n---\n*Syntaxes:*\n\nvehicle `isVehicleSensorEnabled` componentName\n\n---\n*Example 1:*\n\n```sqf\nvehicle player isVehicleSensorEnabled \"PassiveRadarSensorComponent\"; // `\"PassiveRadarSensorComponent\", true`\n```","commands\\isWalking.md":"Returns `true` if walk is `toggled` (default W+S in {{arma3}}).\n\n\n---\n*Syntaxes:*\n\n`isWalking` unitName\n\n---\n*Example 1:*\n\n```sqf\n_bool = isWalking player;\n```","commands\\isWeaponDeployed.md":"Returns true if weapon is currently deployed.\n\n\n---\n*Syntaxes:*\n\n`isWeaponDeployed` unit\n\n`isWeaponDeployed` [unit, onGround]\n\n---\n*Example 1:*\n\n```sqf\n_dep = isWeaponDeployed player;\n```\n\n*Example 2:*\n\n```sqf\n_depOnObj = isWeaponDeployed [player, false];\n```","commands\\isWeaponRested.md":"Returns true if weapon is currently rested.\n\n\n---\n*Syntaxes:*\n\n`isWeaponRested` unit\n\n---\n*Example 1:*\n\n```sqf\n_rest = isWeaponRested player;\n```","commands\\itemCargo.md":"Get array with items from ammo box (or any general weapon holder container).\n\n\n---\n*Syntaxes:*\n\n`itemCargo` object\n\n---\n*Example 1:*\n\n```sqf\nhint str itemCargo vestContainer player;\n```","commands\\items.md":"Returns an array of names of all unit's stored items, including `weapons` but excluding `magazines` (see `itemsWithMagazines`) and `assignedItems`.\n\n\n---\n*Syntaxes:*\n\n`items` unit\n\n---\n*Example 1:*\n\n```sqf\n_itemsPlayer = items player;\n```\n\n*Example 2:*\n\n```sqf\nplayer sideChat format [\"%1\", items player];\n```","commands\\itemsWithMagazines.md":"Returns combined array including all unit's stored `items` and all unit's stored `magazines` and all unit's `stored` `weapons`. Loaded magazines such as `currentMagazine`, `primaryWeaponMagazine`, `secondaryWeaponMagazine`, `handgunMagazine`, `binocularMagazine` as well as `assignedItems` are excluded.\n\n\n---\n*Syntaxes:*\n\n`itemsWithMagazines` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _res1 = itemsWithMagazines player;\n// ... is essentially the same as ...\nprivate _res2 = items player + magazines player;\n```\nExample result:\n\n```sqf\n[\n\t\"FirstAidKit\",\t\t\t//item\n\t\"30Rnd_65x39_caseless_mag\",\t//magazine\n\t\"16Rnd_9x21_Mag\",\t\t//magazine\n\t\"Chemlight_green\",\t\t//magazine\n\t\"HandGrenade\",\t\t\t//magazine\n\t\"ToolKit\",\t\t\t\t//item\n\t\"MineDetector\"\t\t\t//item\n]\n```","commands\\join.md":"Join all units in the array to given group. \n\nTo have a group member leave a group, join him with the `grpNull` group (e.g. **[guy1] `join` `grpNull`**), but `beware`, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.\n\n\n---\n*Syntaxes:*\n\nunitArray `join` group\n\n---\n*Example 1:*\n\n```sqf\n[_unitOne, _unitTwo] join player;\n```\n\n*Example 2:*\n\n```sqf\n[_unitOne, _unitTwo] join (group player);\n```","commands\\joinAs.md":"Joins the unit to the given group, if position id is available, this one is used.\n\n\n---\n*Syntaxes:*\n\nunit `joinAs` [group, id]\n\n---\n*Example 1:*\n\n```sqf\nplayer joinAs [_group, 4];\n```\n\n*Example 2:*\n\nTo get the position id:\n\n```sqf\ngetUnitPositionId = {\n\tprivate [\"_vvn\", \"_str\"];\n\t_vvn = vehicleVarName _this;\n\t_this setVehicleVarName \"\";\n\t_str = str _this;\n\t_this setVehicleVarName _vvn;\n\tparseNumber (_str select [(_str find \":\") + 1])\n};\nplayer joinAs [createGroup west, 5];\n_id = player call getUnitPositionId;\nhint str _id; // 5\n```","commands\\joinAsSilent.md":"Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.\n\n\n---\n*Syntaxes:*\n\nunit `joinAsSilent` [group, id]\n\n---\n*Example 1:*\n\n```sqf\nplayer joinAsSilent [_group, 4];\n```\n\n*Example 2:*\n\nTo get the position id:\n\n```sqf\ngetUnitPositionId = {\n\tprivate [\"_vvn\", \"_str\"];\n\t_vvn = vehicleVarName _this;\n\t_this setVehicleVarName \"\";\n\t_str = str _this;\n\t_this setVehicleVarName _vvn;\n\tparseNumber (_str select [(_str find \":\") + 1])\n};\nplayer joinAsSilent [createGroup west, 5];\n_id = player call getUnitPositionId;\nhint str _id; // 5\n```","commands\\joinSilent.md":"Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the `grpNull` group (e.g. **[guy1] `joinSilent` `grpNull`**), but `beware`, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.\n\n\n---\n*Syntaxes:*\n\nunitArray `joinSilent` group\n\n---\n*Example 1:*\n\n```sqf\n[_unitOne, _unitTwo] joinSilent (group player);\n```\n\n*Example 2:*\n\n```sqf\n[_unitOne, _unitTwo] joinSilent player;\n```","commands\\joinString.md":"Joins `array` into `String` with provided `separator`. Array can be of mixed types, all elements will be converted to `String` prior to joining, but the fastest operation is on the array of `Strings`.\n\n\n---\n*Syntaxes:*\n\narray `joinString` separator\n\n---\n*Example 1:*\n\n```sqf\n_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"]\n_str joinString \" \"; // \"This is a sample string\"\n```\n\n*Example 2:*\n\n```sqf\n[\"This\",\"is\",\"sparta\"] joinString \" ~ \"; // \"This ~ is ~ sparta\"\n```\n\n*Example 3:*\n\n```sqf\n[\"1\",2,text \"3\"] joinString \"\"; // \"123\"\n```\n\n*Example 4:*\n\n```sqf\n\"Japa is the best!\" splitString \"\" joinString \" \"; // \"J a p a   i s   t h e   b e s t !\"\n```\n\n*Example 5:*\n\nRemove all \\r\\n from file:\n\n```sqf\nloadFile \"somefile.txt\" splitString toString [13,10] joinString \" \"\n```","commands\\kbAddDatabase.md":"Register knowledge base database to given person. See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbAddDatabase` fileName\n\n---\n*Example 1:*\n\n```sqf\n_hasBeenAdded = _unit kbAddDatabase \"chat.txt\";\n```","commands\\kbAddDatabaseTargets.md":"Register target list knowledge base database to given person. See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbAddDatabaseTargets` fileName\n\n---\n*Example 1:*\n\n```sqf\n_hasBeenAdded = _unit kbAddDatabaseTargets \"chat.txt\";\n```","commands\\kbAddTopic.md":"Register conversation topic to given person. See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbAddTopic` [topicName, conversationFile, fsmFile, eventHandler]\n\n---\n*Example 1:*\n\n```sqf\nplayer kbAddTopic [\"myTest\", \"myTest.bikb\", \"myTest.fsm\", compile preprocessFileLineNumbers \"myTest.sqf\"];\n```\n\n*Example 2:*\n\n```sqf\nplayer kbAddTopic [\"itsGettingWarm\", \"weatherTalk.bikb\"];\n```","commands\\kbHasTopic.md":"Check if conversation topic was registered to given person. See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbHasTopic` topicName\n\n---\n*Example 1:*\n\n```sqf\n_obiHasTopic = player kbHasTopic \"helloThereGeneralK\";\n```\n\n*Example 2:*\n\n```sqf\nif (player kbHasTopic \"dontShoot\") then { player kbRemoveTopic \"dontShoot\"; };\n```","commands\\kbReact.md":"Pass a non-verbal communication to the receiver. This command does `as if` the sentence was said and triggers the reaction scripts (AI FSM or player's conversation EH). See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbReact` [receiver, topicName, sentenceID(, argumentArray1, argumentArray2, …)]\n\n---\n*Example 1:*\n\n```sqf\n// will trigger AS IF unit1 said the sentence (via kbTell)\n// unit2's FSM will react accordingly.\nunit1 kbReact [unit2, \"topicName\", \"speech1\"];\n```","commands\\kbRemoveTopic.md":"Unregister conversation topic from given person. See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbRemoveTopic` topicName\n\n---\n*Example 1:*\n\n```sqf\n_unit1 kbRemoveTopic \"howsTheWeather\";\n```","commands\\kbTell.md":"Make the person tell to the receiver the sentence. See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbTell` [receiver, topicName, sentenceClass, argumentArray1, argumentArray2, (…), forceRadio]\n\n---\n*Example 1:*\n\n```sqf\nplayer kbTell [BIS_HQ, \"myTopic\", \"playerSentence1\"];\n```\n\n*Example 2:*\n\n```sqf\nplayer kbTell [\n\tBIS_HQ,\t\t\t\t\t\t\t\t\t\t// to\n\t\"Airstrike\",\t\t\t\t\t\t\t\t// topic\n\t\"AirstrikeRequest\",\t\t\t\t\t\t\t// sentence\n\t[\"Team\", {}, \"Anvil\", [\"Anvil\"]],\t\t\t// argument 1\n\t[\"Location\", {}, \"Strelka\", [\"Strelka\"]],\t// argument 2\n\ttrue];\t\t\t\t\t\t\t\t\t\t// use radio\n```\nin given .bikb:\n```cpp\nclass AirstrikeRequest \n{\n\ttext = \"%team requesting close air support at grid %location \";\n\tspeech[] = { %Team, RequestingCloseAirSupportAtGrid, %Location };\n\tclass Arguments \n\t{\n\t\tclass Team\t\t{ type = \"simple\"; };\n\t\tclass Location\t{ type = \"simple\"; };\n\t};\n};\n```\n\n*Example 3:*\n\n```sqf\nplayer kbTell [\n\tBIS_HQ,\t\t\t\t\t\t\t\t\t\t// to\n\t\"Airstrike\",\t\t\t\t\t\t\t\t// topic\n\t\"AirstrikeRequest\",\t\t\t\t\t\t\t// sentence\n\t[\"argumentName\", argumentValue],\t\t\t// argument 1\n\ttrue];\t\t\t\t\t\t\t\t\t\t// use radio\n```","commands\\kbWasSaid.md":"Check if given item was said by person to someone. See `Conversations` for more details.\n\n\n---\n*Syntaxes:*\n\nperson `kbWasSaid` [receiver, topic, sentenceID, maxAge]\n\n---\n*Example 1:*\n\n```sqf\nplayer kbWasSaid [otherUnit, \"myTopic\", \"mySentenceID\", 3];\n```","commands\\keyImage.md":"Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code.\n\n\n---\n*Syntaxes:*\n\n`keyImage`  dikCode\n\n---\n*Example 1:*\n\n```sqf\n_image = keyImage 28; // result is \"Enter\"\n```\n\n*Example 2:*\n\nFrom Arma 3 v2.08:\n\n```sqf\n_image = keyImage \"-1660944350\"; // result is \"Right Ctrl+G\"\n```","commands\\keyName.md":"Returns the name of a button with extra quotation marks (on the keyboard, mouse or joystick) with the given code.\n\n\n---\n*Syntaxes:*\n\n`keyName`  dikCode\n\n---\n*Example 1:*\n\n```sqf\n_name = keyName 28; // result is \"\"\"Enter\"\"\"\n```\n\n*Example 2:*\n\nFrom Arma 3 v2.08:\n\n```sqf\n_name = keyName \"-1660944350\"; // result is \"\"\"Right Ctrl+G\"\"\"\n```","commands\\keys.md":"Retrieves a list of all keys in a `HashMap`.\n\n\n---\n*Syntaxes:*\n\n`keys` hashMap\n\n---\n*Example 1:*\n\n```sqf\nkeys _myHashMap;\n```","commands\\knowsAbout.md":"Checks if a group or a side knows about target.\n* Enemy knowledge is instantly shared among the group units\n* Units in the same group always perfectly know about each others\n* AI knowledge cannot check beyond current `viewDistance` and it resets to zero as soon as the target's distance is over it<br>Note: neither fog nor daylight affect this behaviour\n* Losing sight of a target for more than 120 seconds resets its `knowsAbout` to zero as well\n* `Magic number` is the value that must be reached for a unit to shoot at an enemy (used by \"Detected by\" triggers as well):\n:\n\n\n---\n*Syntaxes:*\n\nwho `knowsAbout` target\n\n---\n*Example 1:*\n\n```sqf\n_knowledge = player knowsAbout _target;\n```\n\n*Example 2:*\n\n```sqf\n_knowledge = (group player) knowsAbout _target;\n```\n\n*Example 3:*\n\n```sqf\n_knowledge = (side player) knowsAbout _target;\n```","commands\\land.md":"Forces a helicopter landing.\n\n\n---\n*Syntaxes:*\n\nhelicopter `land` mode\n\n---\n*Example 1:*\n\n```sqf\n_cobraOne land \"LAND\";\n```","commands\\landAt.md":"Order an AI airplane to land at a given airport. `ID` is the number to identify which map airport you want the airplane to land at. See `Arma: Airport IDs` for more information.\n\n\n---\n*Syntaxes:*\n\nplane `landAt` ID\n\nplane `landAt` airportObject\n\n---\n*Example 1:*\n\n```sqf\n_plane1 landAt 1;\n```\n\n*Example 2:*\n\n```sqf\n_dynamicAirport1 = \"DynamicAirport_01_F\" createVehicle position player;\n_plane1 landAt _dynamicAirport1;\n```","commands\\landResult.md":"Return the result of helicopter landing position searching (performed, after land command).\n\n\n---\n*Syntaxes:*\n\n`landResult` helicopter\n\n---\n*Example 1:*\n\n```sqf\n_result = landResult BIS_heli;\n```","commands\\language.md":"Returns current game language.\n\n\n---\n*Syntaxes:*\n\n`language`\n\n---\n*Example 1:*\n\n```sqf\n_myLanguage = language; // will return \"English\" if game language is set to English\n```","commands\\laserTarget.md":"Returns the laser target object created by given unit (vehicle or soldier) when using a laser targeting device. The main syntax targets the primary gunner turret.\n\n\n---\n*Syntaxes:*\n\n`laserTarget` entity\n\nvehicle `laserTarget` turret\n\n---\n*Example 1:*\n\n```sqf\nprivate _target = laserTarget gunner heli;\n```\n\n*Example 2:*\n\n```sqf\nprivate _designatedPos = getPosATL laserTarget player;\n```","commands\\lbAdd.md":"Adds an item with the given text to the `CT_LISTBOX` or `CT_COMBO` or `CT_TOOLBOX`.\n\n\n---\n*Syntaxes:*\n\n`lbAdd` [idc, text]\n\ncontrol `lbAdd` text\n\n---\n*Example 1:*\n\n```sqf\n_index = lbAdd [101, \"First item\"];\n```\n\n*Example 2:*\n\n```sqf\n_index = _control lbAdd \"First item\";\n```","commands\\lbClear.md":"Clear all items from a `CT_LISTBOX` or `CT_COMBO` control.\n\n\n---\n*Syntaxes:*\n\n`lbClear` idc\n\n`lbClear` control\n\n---\n*Example 1:*\n\n```sqf\nlbClear 101;\n```\n\n*Example 2:*\n\n```sqf\nlbClear _ctrl;\n```","commands\\lbColor.md":"Returns the text color of the item with the given index of the `CT_LISTBOX` or `CT_COMBO` with IDC of the topmost user `dialog`.\n\n\n---\n*Syntaxes:*\n\n`lbColor`  [idc, index]\n\ncontrol `lbColor`  index\n\n---\n*Example 1:*\n\n```sqf\n_colour = lbColor [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_color = _control lbColor 0;\n```","commands\\lbColorRight.md":"Returns the text color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user `dialog`.\n\n\n---\n*Syntaxes:*\n\n`lbColorRight` [idc, index]\n\ncontrol `lbColorRight`  index\n\n---\n*Example 1:*\n\n```sqf\n_colour = lbColorRight [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_color = _control lbColorRight 0;\n```","commands\\lbCurSel.md":"Returns the index of the selected item of the `CT_LISTBOX`, `CT_LISTNBOX`, `CT_COMBO` or `CT_TOOLBOX`. For `CT_LISTBOX` with multi selection enabled use `lbSelection`.\n\n\n---\n*Syntaxes:*\n\n`lbCurSel`  idc\n\n`lbCurSel`  control\n\n---\n*Example 1:*\n\n```sqf\n_index = lbCurSel 101;\n```\n\n*Example 2:*\n\n```sqf\nlbCurSel _ctrl;\n```","commands\\lbData.md":"Returns the data set in given index of the `CT_LISTBOX` or `CT_COMBO`.\n\n\n---\n*Syntaxes:*\n\n`lbData`  [idc, index]\n\ncontrol `lbData`  index\n\n---\n*Example 1:*\n\n```sqf\n_data = lbData [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_data = _control lbData 0;\n```","commands\\lbDelete.md":"Removes the item with the given index from the `CT_LISTBOX`, `CT_COMBO` or `CT_TOOLBOX`.\n\n\n---\n*Syntaxes:*\n\n`lbDelete`  [idc, index]\n\ncontrol `lbDelete`  index\n\n---\n*Example 1:*\n\n```sqf\nlbDelete [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_control lbDelete 0;\n```","commands\\lbIsSelected.md":"Checks whether or not given row of the given listbox is selected.\n\n\n---\n*Syntaxes:*\n\ncontrol `lbIsSelected` index\n\n---\n*Example 1:*\n\n```sqf\n_selected = _control lbIsSelected 0;\n```","commands\\lbPicture.md":"Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user `dialog`.\n\n\n---\n*Syntaxes:*\n\n`lbPicture` [idc, index]\n\ncontrol `lbPicture` index\n\n---\n*Example 1:*\n\n```sqf\n_picture = lbPicture [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_picture = _control lbPicture 0;\n```","commands\\lbPictureRight.md":"Returns the right picture name of the item with the given index of the listbox or combobox with id idc of the topmost user `dialog`.\n\n\n---\n*Syntaxes:*\n\n`lbPictureRight` [idc, index]\n\ncontrol `lbPictureRight` index\n\n---\n*Example 1:*\n\n```sqf\n_picture = lbPictureRight [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_picture = _control lbPictureRight 0;\n```","commands\\lbSelection.md":"Returns `Array` of selected rows indices in the given listbox. If listbox is of style LB_MULTI (multi-selection) the array will contain multiple elements, otherwise only a single element. For single selection listbox one can also use `lbCurSel`. See also `lbIsSelected`, `lbSetSelected`\n\n\n---\n*Syntaxes:*\n\n`lbSelection` control\n\n---\n*Example 1:*\n\n```sqf\n_indices = lbSelection _control;\n```","commands\\lbSetColor.md":"Sets the color of the item (left) with the given index of the listbox or combobox with id idc of the topmost user `Dialog` to color.\n\n\n---\n*Syntaxes:*\n\n`lbSetColor` [idc, index, color]\n\ncontrol `lbSetColor` [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetColor [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetColor [0, [0, 1, 0, 0.5]];\n```","commands\\lbSetColorRight.md":"Sets the color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user `dialog` to color.\n\n\n---\n*Syntaxes:*\n\n`lbSetColorRight`  [idc, index, color]\n\ncontrol `lbSetColorRight`  [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetColorRight [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetColorRight [0, [0, 1, 0, 0.5]];\n```","commands\\lbSetCurSel.md":"Selects the item with the given index in the listbox, listnbox, combobox, xcombobox, xlistbox<br>\n\n\n---\n*Syntaxes:*\n\n`lbSetCurSel` [idc, index]\n\ncontrol `lbSetCurSel`  index\n\n---\n*Example 1:*\n\n```sqf\nlbSetCurSel [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetCurSel 0;\n```","commands\\lbSetData.md":"Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user `dialog` to the given data.\n\n\n---\n*Syntaxes:*\n\n`lbSetData` [idc, index, data]\n\ncontrol `lbSetData` [index, data]\n\n---\n*Example 1:*\n\n```sqf\nlbSetData [101, 1, \"#1\"];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetData [1, \"#1\"];\n```","commands\\lbSetPicture.md":"Sets the left picture in the row with given index of `CT_LISTBOX` or `CT_COMBO`. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).<br>\n\n\n---\n*Syntaxes:*\n\n`lbSetPicture` [idc, index, path]\n\ncontrol `lbSetPicture`  [index, path]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPicture [101, 0, \"iskoda.paa\"];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetPicture [0, \"iskoda.paa\"];\n```\n\n*Example 3:*\n\n```sqf\nprivate _path = _ctrlTV tvAdd [[], \"Some Entry\"];\n[_ctrlTV, _path] spawn {\n\t(_this select 0) tvSetPictureRight [[_this select 1], \"someImage.paa\"];\n};\n```","commands\\lbSetPictureColor.md":"Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format `Color (RGBA)`. Color which consists from only zeros means disable this override.\n\n\n---\n*Syntaxes:*\n\n`lbSetPictureColor` [idc, index, color]\n\ncontrol `lbSetPictureColor`  [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPictureColor [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lbSetPictureColor [0, [1, 1, 1, 1]];\n```","commands\\lbSetPictureColorDisabled.md":"Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format `Color (RGBA)`. Color which consists from only zeros means disable this override.\n\n\n---\n*Syntaxes:*\n\n`lbSetPictureColorDisabled` [idc, index, color]\n\ncontrol `lbSetPictureColorDisabled`  [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPictureColorDisabled [101, 0, [1, 1, 1, 0.25]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lbSetPictureColorDisabled [0, [1, 1, 1, 0.25]];\n```","commands\\lbSetPictureColorSelected.md":"Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format `Color (RGBA)`. Color which consists from only zeros means disable this override.\n\n\n---\n*Syntaxes:*\n\n`lbSetPictureColorSelected` [idc, index, color]\n\ncontrol `lbSetPictureColorSelected` [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lbSetPictureColorSelected [0, [1, 1, 1, 1]];\n```","commands\\lbSetPictureRight.md":"Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user `dialog`. Name is the picture name.\nThe picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).<br>\nIn {{arma3}} it might be necessary to set the color of the picture as well with `lbSetPictureRightColor` as default [0,0,0,0] color makes the picture invisible.\n\n\n---\n*Syntaxes:*\n\n`lbSetPictureRight` [idc, index, name]\n\ncontrol `lbSetPictureRight` [index, name]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPictureRight [101, 0, \"iskoda\"];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetPictureRight [0, \"iskoda\"];\n```","commands\\lbSetPictureRightColor.md":"Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color.\nColor which consists from only zeros means disable this override.\n\n\n---\n*Syntaxes:*\n\n`lbSetPictureRightColor` [idc, index, color]\n\ncontrol `lbSetPictureRightColor` [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPictureRightColor [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lbSetPictureRightColor [0, [1, 1, 1, 1]];\n```","commands\\lbSetPictureRightColorDisabled.md":"Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color.\nColor which consists from only zeros means disable this override.\n\n\n---\n*Syntaxes:*\n\n`lbSetPictureRightColorDisabled` [idc, index, color]\n\ncontrol `lbSetPictureRightColorDisabled`  [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPictureRightColorDisabled [101, 0, [1, 1, 1, 0.25]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lbSetPictureRightColorDisabled [0, [1, 1, 1, 0.25]];\n```","commands\\lbSetPictureRightColorSelected.md":"Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color.\nColor which consists from only zeros means disable this override.\n\n\n---\n*Syntaxes:*\n\n`lbSetPictureRightColorSelected` [idc, index, color]\n\ncontrol `lbSetPictureRightColorSelected` [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetPictureRightColorSelected [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lbSetPictureRightColorSelected [0, [1, 1, 1, 1]];\n```","commands\\lbSetSelectColor.md":"Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user `dialog` to color.\n\n\n---\n*Syntaxes:*\n\n`lbSetSelectColor`  [idc, index, color]\n\ncontrol `lbSetSelectColor` [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetSelectColor [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetSelectColor [0, [0, 1, 0, 0.5]];\n```","commands\\lbSetSelectColorRight.md":"Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user `dialog` to color.\n\n\n---\n*Syntaxes:*\n\n`lbSetSelectColorRight` [idc, index, color]\n\ncontrol `lbSetSelectColorRight` [index, color]\n\n---\n*Example 1:*\n\n```sqf\nlbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetSelectColorRight [0, [0, 1, 0, 0.5]];\n```","commands\\lbSetSelected.md":"Sets the selection state of the given row of the given listbox of style LB_MULTI.\nThe command has to be called for every row which is needed to be selected in multi-selection listbox. Use negative index -1 to select/deselect all rows (since *(Reference GVI \"arma3|2.12\")*).\nFor single selection listbox use `lbSetCurSel` instead.\n\n\n---\n*Syntaxes:*\n\ncontrol `lbSetSelected` [index, selected, forceEH]\n\n---\n*Example 1:*\n\n```sqf\n_control lbSetSelected [0, true];\n```","commands\\lbSetText.md":"Sets the text on the left side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\n\n---\n*Syntaxes:*\n\n`lbSetText` [idc, index, name]\n\ncontrol `lbSetText` [index, name]\n\n---\n*Example 1:*\n\n```sqf\nlbSetText [101, 0, \"iskoda\"];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetText [0, \"iskoda\"];\n```","commands\\lbSetTextRight.md":"Sets the text on the right side of the item with the given row index of the listbox or combobox with id idc of the topmost user dialog.\n\n\n---\n*Syntaxes:*\n\ncontrol `lbSetTextRight` [row, name]\n\n---\n*Example 1:*\n\n```sqf\n_control lbSetTextRight [0, \"iskoda\"];\n```","commands\\lbSetTooltip.md":"Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.\n\n\n---\n*Syntaxes:*\n\n`lbSetTooltip` [idc, index, tooltip]\n\ncontrol `lbSetTooltip` [index, tooltip]\n\n---\n*Example 1:*\n\n```sqf\nlbSetTooltip [101, 1, \"tooltip\"];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetTooltip [0, \"another tooltip\"];\n```","commands\\lbSetValue.md":"Sets the additional value in the row with the given index of a `CT_LISTBOX` or `CT_COMBO` control.\n\n\n---\n*Syntaxes:*\n\n`lbSetValue`  [idc, index, value]\n\ncontrol `lbSetValue`  [index, value]\n\n---\n*Example 1:*\n\n```sqf\nlbSetValue [101, 0, 1];\n```\n\n*Example 2:*\n\n```sqf\n_control lbSetValue [0, 1];\n```","commands\\lbSize.md":"Returns the number of items in a `CT_LISTBOX` or `CT_COMBO` control. For `CT_TOOLBOX` size see `lnbSize`.\n\n\n---\n*Syntaxes:*\n\n`lbSize`  idc\n\n`lbSize`  control\n\n---\n*Example 1:*\n\n```sqf\n_size = lbSize 101;\n```\n\n*Example 2:*\n\n```sqf\n_size = lbSize _control;\n```","commands\\lbSort.md":"Sorts listbox entries alphabetically ascending by their `lbText`.\n\n\n---\n*Syntaxes:*\n\n`lbSort` control\n\n`lbSort` [control, sortOrder]\n\n`lbSort` idc\n\n`lbSort` [idc, sortOrder]\n\n---\n*Example 1:*\n\n```sqf\nlbSort _myControl;\n```\n\n*Example 2:*\n\n```sqf\nlbSort [_myControl, \"DESC\"];\n```\n\n*Example 3:*\n\n```sqf\nlbSort 101;\n```\n\n*Example 4:*\n\n```sqf\nlbSort [101, \"DESC\"];\n```","commands\\lbSortBy.md":"Sorts given ListBox by either `lbText`, `lbValue` or `lbData` in normal or reversed order, using case-sensitive or case-insensitive comparison. This command supports UNICODE characters.\nWhen sorting by **\"VALUE\"**, the rows with the same `lbValue` will additionally be sorted by `lbText` in the order specified by `reversedOrder` flag, text specified by `useTextRight` flag and case-sensitivity specified by `caseSensitive` flag.\n\n\n---\n*Syntaxes:*\n\ncontrolOrIDC `lbSortBy` [sortByType, reversedOrder, caseSensitive, useTextRight, unicodeOff]\n\n---\n*Example 1:*\n\n```sqf\nwith uiNamespace do\n{\n\tprivate _lb = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscListBox\", -1];\n\t_lb ctrlSetPosition [0,0,1,1];\n\t_lb ctrlCommit 0;\n\tlbClear _lb;\n\t{\n\t\t_lb lbAdd (_x select 0);\n\t\t_lb lbSetValue [_forEachIndex, _x select 1];\n\t}\n\tforEach [[\"В\",1], [\"Я\",0], [\"Б\",1], [\"Ю\",0], [\"А\",1]];\n\t_lb lbSortBy [\"VALUE\", false, false];\n};\n```","commands\\lbSortByValue.md":"Sorts the ListBox entries by `lbValue`. The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value. In {{arma3}} use `lbSortBy` to avoid this problem.\n\n\n---\n*Syntaxes:*\n\n`lbSortByValue`  control\n\n`lbSortByValue`  idc\n\n---\n*Example 1:*\n\n```sqf\nlbSortByValue _control;\n```\n\n*Example 2:*\n\n```sqf\nlbSortByValue 101;\n```","commands\\lbText.md":"Returns the shown text of the item with the given index of the `CT_LISTBOX` or `CT_COMBO`.\n\n\n---\n*Syntaxes:*\n\n`lbText` [idc, index]\n\ncontrol `lbText` index\n\n---\n*Example 1:*\n\n```sqf\n_text = lbText [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_text = _control lbText 0;\n```","commands\\lbTextRight.md":"Returns the shown right text in the item with the given index of the listbox or combobox with id idc of the topmost user `dialog`.\n\n\n---\n*Syntaxes:*\n\n`lbTextRight` [idc, index]\n\ncontrol `lbTextRight` index\n\n---\n*Example 1:*\n\n```sqf\n_text = lbTextRight [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_text = _control lbTextRight 0;\n```","commands\\lbTooltip.md":"Returns tooltip for ListBox, ComboBox and Toolbox\n\n\n---\n*Syntaxes:*\n\n`lbTooltip` [idc, index]\n\ncontrol `lbTooltip` index\n\n---\n*Example 1:*\n\n```sqf\nlbTooltip [1, 1];\n```","commands\\lbValue.md":"Returns the additional integer value of the item with the given index of the `CT_LISTBOX` or `CT_COMBO`.\n\n\n---\n*Syntaxes:*\n\n`lbValue`  [idc, index]\n\ncontrol `lbValue`  index\n\n---\n*Example 1:*\n\n```sqf\n_value = lbValue [101, 0];\n```\n\n*Example 2:*\n\n```sqf\n_value = _control lbValue 0;\n```","commands\\leader.md":"Returns the group leader for the given `unit` or `group`. For dead units, `objNull` is returned.\n\n\n---\n*Syntaxes:*\n\n`leader`  unitOrGroup\n\n---\n*Example 1:*\n\n```sqf\nleader group player == leader player;\n```\n\n*Example 2:*\n\n```sqf\nleader group vehicle player;\n```\n\n*Example 3:*\n\n```sqf\nleader player;\n```","commands\\leaderboardDeInit.md":"Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.\n\n\n---\n*Syntaxes:*\n\n`leaderboardDeInit` boardName\n\n---\n*Example 1:*\n\n```sqf\nleaderboardDeInit \"TT01\";\n```","commands\\leaderboardGetRows.md":"Returns values for the given leaderboard; this can be called after the one of the row request function has been called and successfully finished!\n\n\n---\n*Syntaxes:*\n\n`leaderboardGetRows` boardName\n\n---\n*Example 1:*\n\n```sqf\nleaderboardGetRows \"TT01\";\n```","commands\\leaderboardInit.md":"Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.\n\n\n---\n*Syntaxes:*\n\n`leaderboardInit` boardName\n\n---\n*Example 1:*\n\n```sqf\nleaderboardInit \"TT01\";\n```","commands\\leaderboardRequestRowsFriends.md":"Requests given leaderboard to download friends rows from the given leaderboard\n\n\n---\n*Syntaxes:*\n\n`leaderboardRequestRowsFriends`  boardName\n\n---\n*Example 1:*\n\n```sqf\nleaderboardRequestRowsFriends \"TT01\";\n```","commands\\leaderboardRequestRowsGlobal.md":"Requests given leaderboard to download values from global table.\n\n\n---\n*Syntaxes:*\n\n`leaderboardRequestRowsGlobal` [leaderboard, offset, rows]\n\n---\n*Example 1:*\n\n```sqf\n_isGettingValues = leaderboardRequestRowsGlobal [\"TT01\", 0, 10];\n```","commands\\leaderboardRequestRowsGlobalAroundUser.md":"Requests given leaderboard to download values around the user position in the table.\n\n\n---\n*Syntaxes:*\n\n`leaderboardRequestRowsGlobalAroundUser` [leaderboard, offset, rows]\n\n---\n*Example 1:*\n\n```sqf\n_isGettingValues = leaderboardRequestRowsGlobalAroundUser [\"TT01\", -5, 10];\n```","commands\\leaderboardsRequestUploadScore.md":"Starts async. operation to upload score to board with given name, value always overwrite the current value in the board.\nThe details array is optional. The board has to be initialized before the call.\n\n\n---\n*Syntaxes:*\n\n`leaderboardsRequestUploadScore` [boardName, score, [details]]\n\n---\n*Example 1:*\n\n```sqf\nleaderboardsRequestUploadScore [\"TT01\", 1234, [5,6,7,8]];\n```","commands\\leaderboardsRequestUploadScoreKeepBest.md":"Starts async. operation to upload score to board with given name, value is only stored to board if it is better than one already in the board. The details array is optional. The board has to be initialized before the call.\n\n\n---\n*Syntaxes:*\n\n`leaderboardsRequestUploadScoreKeepBest`  [boardName, score, details]\n\n---\n*Example 1:*\n\n```sqf\nleaderboardsRequestUploadScoreKeepBest [\"TT01\", 1234, [5,6,7,8]];\n```","commands\\leaderboardState.md":"Returns the state of the board with the given name.\n\n\n---\n*Syntaxes:*\n\n`leaderboardState` boardname\n\n---\n*Example 1:*\n\n```sqf\nleaderboardState \"TT01\";\n```","commands\\leaveVehicle.md":"Ceases the using of the vehicle by a group and unassigns vehicle from the group.\nIf the argument is a single unit, the vehicle will be unassigned from unit's group.\nAfter vehicle is unassigned from the group, each individual crew member then unassigned from the vehicle.<br>\n<br>\nIn short the command could be hypothetically presented as:<br>\n\n```sqf\nleaveVehicle = un-addVehicle + unassignVehicle forEach crew\n```\n\nHowever, to make it more reliable, it is best to move unit out of the vehicle manually with `moveOut` and force unassign the vehicle with `unassignVehicle`.\n\n\n---\n*Syntaxes:*\n\ngroup `leaveVehicle` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_unit leaveVehicle _vehicle;\n```\n\n*Example 2:*\n\n```sqf\n_grp leaveVehicle _vehicle;\n```","commands\\libraryCredits.md":"Returns the credits for the libraries used by the game.\n\n\n---\n*Syntaxes:*\n\n`libraryCredits`\n\n---\n*Example 1:*\n\n```sqf\nhint str libraryCredits; // as of Arma 2 OA 1.62.95208\n\n/*\n[\n\t[\n\t\t\"Botan\",\n\t\t\"1999-2012 Jack Lloyd, 2001 Peter J Jones, 2004-2007 Justin Karneges, 2004 Vaclav Ovsik, 2005 Matthew Gregan, 2005-2006 Matt Johnston, 2006 Luca Piccarreta, 2007 Yves Jerschow, 2007-2008 FlexSecure GmbH, 2007-2008 Technische Universitat Darmstadt, 2007-2008 Falko Strenzke, 2007-2008 Martin Doering, 2007 Manuel Hartl, 2007 Christoph Ludwig, 2007 Patrick Sona, 2010 Olivier de Gaalon\"\n\t],\n\t[\n\t\t\"rapidjson\",\n\t\t\"2011 Milo Yip\"\n\t],\n\t[\n\t\t\"libcurl\",\n\t\t\"Copyright (c) 1996 - 2012, Daniel Stenberg\"\n\t],\n\t[\n\t\t\"GameSpy\",\n\t\t\"2009 GameSpy Industries, Inc.\"\n\t],\n\t[\n\t\t\"Theora\",\n\t\t\"2002-2009 by the Xiph.Org Foundation http://www.xiph.org/\"\n\t],\n\t[\n\t\t\"OggVorbis\",\n\t\t\"1994-2002 by the Xiph.Org Foundation http://www.xiph.org/\"\n\t],\n\t[\n\t\t\"Intel JPEG Library\",\n\t\t\"1998 Intel Corporation\"\n\t],\n\t[\n\t\t\"Matrix Template Library\",\n\t\t\"2001-2005 The Trustees of Indiana University\"\n\t],\n\t[\n\t\t\"Matrix Template Library\",\n\t\t\"1998-2001 University of Notre Dame\"\n\t],\n\t[\n\t\t\"Speex\",\n\t\t\"2002-2006 Jean-Marc Valin\"\n\t],\n\t[\n\t\t\"LZO Professional\",\n\t\t\"1996-2011 Markus Franz Xaver Johannes Oberhumer\"\n\t],\n\t[\n\t\t\"NVIDIA FXAA by TIMOTHY LOTTES\",\n\t\t\"2010, 2011 NVIDIA CORPORATION\"\n\t],\n\t[\n\t\t\"Jimenez's MLAA\",\n\t\t\"2012 2011 by Jorge Jimenez, Belen Masia, Jose I. Echevarria, Fernando Navarro and Diego Gutierrez\"\n\t]\n]\n*/\n```","commands\\libraryDisclaimers.md":"Returns the library disclaimers.\n\n\n---\n*Syntaxes:*\n\n`libraryDisclaimers`\n\n---\n*Example 1:*\n\n```sqf\nhint str libraryDisclaimers;\n/*\n\treturns, in Arma 2:OA 1.62.95208:\n\t[\"THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"]\n*/\n```","commands\\lifeState.md":"Returns the life state of the given unit.\n\n\n---\n*Syntaxes:*\n\n`lifeState` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _lifeState = lifeState player;\n```","commands\\lightAttachObject.md":"Attach light to given object at given position on object.\n\n\n---\n*Syntaxes:*\n\nlight `lightAttachObject` [object, position]\n\n---\n*Example 1:*\n\n```sqf\nmyLight lightAttachObject [myVehicle, [-0.5,-0.25,1]];\n```","commands\\lightDetachObject.md":"Detach light from object.\n\n\n---\n*Syntaxes:*\n\n`lightDetachObject` light\n\n---\n*Example 1:*\n\n```sqf\nlightDetachObject _light;\n```","commands\\lightIsOn.md":"Check if lampost is on (shining).\n\n\n---\n*Syntaxes:*\n\n`lightIsOn` lamppost\n\n---\n*Example 1:*\n\n```sqf\nif (lightIsOn nearestObject [player, \"StreetLamp\"] == \"ON\") then { hint \"nightime\"; };\n```\n\n*Example 2:*\n\n```sqf\n_it = lightIsOn object 159582;\n```\n\n*Example 3:*\n\n```sqf\nif (count allMissionObjects \"StreetLamp\" == 0) then {\n\thint \"Objects compatible with 'lightIsOn' are not found.\";\n} else {\n\thint \"'lightIsOn' compatible objects are found!\";\n};\n```","commands\\lightnings.md":"Return the current lightnings value.\n\n\n---\n*Syntaxes:*\n\n`lightnings`\n\n---\n*Example 1:*\n\nGet the current `lightnings` value:\n```sqf\n_lightningsVal = lightnings;\n```","commands\\limitSpeed.md":"Limit the speed of an AI-driven vehicle or AI person to given value. It has continuous effect and AI will not break through the speed limitation until one is contacted, engaged or regrouped.\n\n\n---\n*Syntaxes:*\n\nobjectName `limitSpeed` speed\n\n---\n*Example 1:*\n\n```sqf\nleader player limitSpeed 5;\t\t// set to walking speed\nsleep 30;\nleader player limitSpeed -1;\t// remove the limit\n```\n\n*Example 2:*\n\n```sqf\naddMissionEventHandler [\"OnEachFrame\", { hintSilent format [\"myVehicle's speed: %1 km/h\", speed myVehicle toFixed 2] }];\nsleep 5;\nmyVehicle limitSpeed 5;\n```\n\n*Example 3:*\n\n```sqf\n// it was necessary to use limitSpeed repeatedly before Arma 3 1.24\n_this setVariable [\"speedLimit\", 50];\n_this spawn {\n\twhile { sleep 0.1; canMove _this } do\n\t{\n\t\t_this limitSpeed (_this getVariable \"speedLimit\");\n\t};\n};\nsleep 10;\n_this setVariable [\"speedLimit\", 100]; // update the speed limit\n```","commands\\linearConversion.md":"Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to `true`, the resulting value is guaranteed to be within \"to\" range no matter what.\n\n\n---\n*Syntaxes:*\n\n`linearConversion`  [minFrom, maxFrom, value, minTo, maxTo, clip]\n\n---\n*Example 1:*\n\n```sqf\n// Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be 55\nlinearConversion [0, 1, 0.55, 0, 100];\n\n// but if given value is 1.1 it will return 110\nlinearConversion [0, 1, 1.1, 0, 100, false];\n\n// or if clipping is true it will return 100\nlinearConversion [0, 1, 1.1, 0, 100, true];\n```\n\n*Example 2:*\n\n```sqf\nlinearConversion [4, 8, 5, 0, 1, false];\n```\n\n*Example 3:*\n\n```sqf\n// Calculate days from 1/1/1970\nfnc_daysFromEpoc = \n{\n\tprivate _year = param [0];\n\tprivate _days = 0;\n\tfor \"_i\" from 1970 to _year - 1 do \n\t{\n\t\t_days = _days + round linearConversion [0, 1, dateToNumber [_i, 12, 31, 23, 59], 0, 365, false];\n\t};\n\t_days + linearConversion [0, 1, dateToNumber _this, 0, 365, false];\n};\n\nhint str (date call fnc_daysFromEpoc);\n```","commands\\lineBreak.md":"Creates a structured text containing a line break.\n\n\n---\n*Syntaxes:*\n\n`lineBreak`\n\n---\n*Example 1:*\n\n```sqf\nhint composeText [\"First line\", lineBreak, \"Second line\"];\n```\n\n*Example 2:*\n\n```sqf\nhint str (composeText [lineBreak] == parseText \"<br/>\"); // true\n```","commands\\lineIntersects.md":"Checks for object intersection with a virtual line between two positions.\n\n\n---\n*Syntaxes:*\n\n`lineIntersects` [begPos, endPos, objIgnore1, objIgnore2]\n\n---\n*Example 1:*\n\n```sqf\nprivate _hasStraightLineToChopper = lineIntersects [eyePos player, aimPos chopper, player, chopper];\n```","commands\\lineIntersectsObjs.md":"Returns a list of objects intersected by the line from `begPos` to `endPos`.\n\n\n---\n*Syntaxes:*\n\n`lineIntersectsObjs` [begPos, endPos, ignoreObj1, ignoreObj2, sortByDistance, flags]\n\n---\n*Example 1:*\n\n```sqf\nSto = [];\nFn = {\n  {\n\tSto set [_foreachindex,lineIntersectsObjs [(eyePos player),(ATLToASL screenToWorld [0.5,0.5]),objNull,objNull,false,_x]];\n  } forEach [1,2,4,8,16,32];\n  hintSilent format [\"\n  ONLY_WATER: %1, \n  NEAREST_CONTACT: %2, \n  ONLY_STATIC: %3, \n  ONLY_DYNAMIC: %4,\n  FIRST_CONTACT: %5,\n  ALL_OBJECTS: %6\",\n  Sto select 0,Sto select 1,Sto select 2,Sto select 3,Sto select 4,Sto select 5];\n};\n[\"sample_id\",\"onEachFrame\",\"Fn\"] call BIS_fnc_addStackedEventHandler;\n//Example display objects' array in the middle of the screen sorted by 6 flags\n```","commands\\lineIntersectsSurfaces.md":"Returns a list of intersections with surfaces and ground from `begPosASL` to `endPosASL`. Doesn't return intersection with sea surface. Works underwater, unlike `lineIntersects`. Hardcoded max distance: 5000m.\n\n\n---\n*Syntaxes:*\n\n`lineIntersectsSurfaces` [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]\n\n---\n*Example 1:*\n\n```sqf\n_intersections = lineIntersectsSurfaces [eyePos player, aimPos chopper, player, chopper, true, -1];\n```\n\n*Example 2:*\n\n```sqf\narrow = \"Sign_Arrow_F\" createVehicle [0,0,0];\nonEachFrame {\n\t_ins = lineIntersectsSurfaces [\n\t\tAGLToASL positionCameraToWorld [0,0,0], \n\t\tAGLToASL positionCameraToWorld [0,0,1000], \n\t\tplayer\n\t];\n\tif (count _ins == 0) exitWith { arrow setPosASL [0,0,0] };\n\tarrow setPosASL (_ins select 0 select 0);\n\tarrow setVectorUp (_ins select 0 select 1);\n\thintSilent str _ins;\n};\n```\n\n*Example 3:*\n\nThis should detect glass windows and wire fences (since {{arma3}} v1.52):\n\n```sqf\nwirefence = \"Land_New_WiredFence_5m_F\" createVehicle position player;\narrow = \"Sign_Arrow_F\" createVehicle [0,0,0];\nonEachFrame {\n\t_ins = lineIntersectsSurfaces [\n\t\tAGLToASL positionCameraToWorld [0,0,0], \n\t\tAGLToASL positionCameraToWorld [0,0,1000], \n\t\tplayer,\n\t\tobjNull,\n\t\ttrue,\n\t\t1,\n\t\t\"GEOM\",\n\t\t\"NONE\"\n\t];\n\tif (count _ins == 0) exitWith { arrow setPosASL [0,0,0] };\n\tarrow setPosASL (_ins select 0 select 0);\n\tarrow setVectorUp (_ins select 0 select 1);\n\thintSilent str _ins;\n};\n```","commands\\lineIntersectsWith.md":"Returns objects intersecting with the virtual line from `begPos` to `endPos`. By default, the resulting array of intersecting objects is unsorted (see ``sortByDistance``).\n\n\n---\n*Syntaxes:*\n\n`lineIntersectsWith` [begPos, endPos, objIgnore1, objIgnore2, sortByDistance]\n\n---\n*Example 1:*\n\n```sqf\n_objects = lineIntersectsWith [eyePos player, AGLToASL screenToWorld [0.5, 0.5]];\n```\n\n*Example 2:*\n\nSort by distance:\n\n```sqf\n_objects = lineIntersectsWith [eyePos player, AGLToASL screenToWorld [0.5, 0.5], objNull, objNull, true];\n```\n\n*Example 3:*\n\nIgnore objects:\n\n```sqf\n_objects = lineIntersectsWith [eyePos player, aimPos chopper, player, chopper];\n```","commands\\linkItem.md":"Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.\n\n\n---\n*Syntaxes:*\n\nunit `linkItem` item\n\n---\n*Example 1:*\n\n```sqf\nbluforUnit linkItem \"NVGoggles\";\nopforUnit linkItem \"NVGoggles_OPFOR\";\nindependentUnit linkItem \"NVGoggles_INDEP\";\n```","commands\\list.md":"List of units that would activate given `Trigger`.\n\nIt returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a ``pointer`` to the trigger's list after the simulation started.<br>\nSince this is just a `reference` this means that the value in your local variable will change as the content of the trigger area changes.\nTo permanently copy the returned list to a different variable, use <sqf inline>_mylist = +(list triggerOne)\n```.\n\nThe second example can be used inside the trigger (in that case, no need to name your trigger).\n\nThe list returned for trigger of type \"Not present\" is the same as that returned for type \"present\".\n\n\n---\n*Syntaxes:*\n\n`list` trigger\n\n---\n*Example 1:*\n\n```sqf\n_triggerList = list _triggerOne;\n```\n\n*Example 2:*\n\n```sqf\nhint format [\"%1\", thisList];\n```","commands\\listObjects.md":"Return the list of all objects of given type.\n\n\n---\n*Syntaxes:*\n\nmap `listObjects` type\n\n---\n*Example 1:*\n\n-","commands\\listRemoteTargets.md":"Return list of datalink targets and time for which they will be/were known.\n\n\n---\n*Syntaxes:*\n\n`listRemoteTargets` side\n\n---\n*Example 1:*\n\n```sqf\nlistRemoteTargets opfor;\n```","commands\\listVehicleSensors.md":"Returns an array of the sensors in the given vehicle's config (configFile >> \"CfgVehicles\" >> `vehicle` >> \"Components\" >> \"SensorsManagerComponent\" >> \"Components\").\n\n\n---\n*Syntaxes:*\n\n`listVehicleSensors` vehicle\n\n---\n*Example 1:*\n\n```sqf\nprivate _sensors = listVehicleSensors _v44blackfish;\nhint str _sensors;\n/*\n\te.g for a V44 Blackfish:\n\t[\n\t\t[\"IRSensorComponent\", \"IRSensorComponent\"],\n\t\t[\"VisualSensorComponent\", \"VisualSensorComponent\"],\n\t\t[\"ActiveRadarSensorComponent\", \"ActiveRadarSensorComponent\"],\n\t\t[\"PassiveRadarSensorComponent\", \"PassiveRadarSensorComponent\"],\n\t\t[\"LaserSensorComponent\", \"LaserSensorComponent\"],\n\t\t[\"NVSensorComponent\", \"NVSensorComponent\"]\n\t]\n*/\n```","commands\\ln.md":"Returns the natural logarithm of x.\n\n\n---\n*Syntaxes:*\n\n`ln`  x\n\n---\n*Example 1:*\n\n```sqf\n_nlog = ln 10;\n```\n\n*Example 2:*\n\n```sqf\n_euler = exp 1;\n_euler = ln _euler; // Returns 1\n```","commands\\lnbAddArray.md":"Adds list of rows of strings.\n\n\n---\n*Syntaxes:*\n\n`lnbAddArray` [idc, arrayOfTextAndValues]\n\n---\n*Example 1:*\n\n```sqf\nlnbAddArray [\n\t102,\n\t[\n\t\t[\n\t\t\t[\"#1\"],\n\t\t\t[1],\n\t\t\t[\"#1\"]\n\t\t],\n\t\t[\n\t\t\t[\"#2\"],\n\t\t\t[2],\n\t\t\t[\"#2\"]\n\t\t]\n\t]\n];\n```","commands\\lnbAddColumn.md":"Adds a column at given position.\n\n\n---\n*Syntaxes:*\n\ncontrol `lnbAddColumn` position\n\n`lnbAddColumn` [controlOrIdc, position]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbAddColumn 0.8;\n```\n\n*Example 2:*\n\n```sqf\nlnbAddColumn [105, 0.8];\n```","commands\\lnbAddRow.md":"Adds a row of strings.\n\n\n---\n*Syntaxes:*\n\n`lnbAddRow` [idc, data]\n\nctrl `lnbAddRow` data\n\n---\n*Example 1:*\n\n```sqf\nlnbAddRow [1, [\"COL1\", \"COL2\"]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbAddRow [\"COL1\", \"COL2\"];\n```","commands\\lnbClear.md":"Clears all items in the given listbox or combobox.\n\n\n---\n*Syntaxes:*\n\n`lnbClear` idc\n\n`lnbClear` ctrl\n\n---\n*Example 1:*\n\n```sqf\nlnbClear _ctrl;\n```","commands\\lnbColor.md":"Returns the text color of the item with the given position of the 2D listbox. The color is returned in format `Color (RGBA)`.\n\n\n---\n*Syntaxes:*\n\n`lnbColor` [idc, [row, column]]\n\ncontrol `lnbColor` [row, column]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbColor [0,0];\n```","commands\\lnbColorRight.md":"Returns the right color of given row.\n\n\n---\n*Syntaxes:*\n\n`lnbColorRight` [idc, [row, column]]\n\nctrl `lnbColorRight` [row, column]\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = _control lnbColorRight [0, 0];\n```","commands\\lnbCurSelRow.md":"Returns the index of the selected row id 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbCurSelRow` idc\n\n`lnbCurSelRow` ctrl\n\n---\n*Example 1:*\n\n```sqf\nlnbCurSelRow _ctrl;\n```","commands\\lnbData.md":"Returns the additional text (invisible) in an item with the given position of the 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbData` [idc, [row, column]]\n\nctrl `lnbData` [row, column]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbData [lnbCurSelRow _ctrl,0]; // \"#1\"\n```","commands\\lnbDeleteColumn.md":"Removes column with given index from ListNBox control.\n\n\n---\n*Syntaxes:*\n\n`lnbDeleteColumn` [idc, index]\n\nctrl `lnbDeleteColumn` index\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbDeleteColumn 1;\n```","commands\\lnbDeleteRow.md":"Removes row with the given index from the given listbox or combobox.\n\n\n---\n*Syntaxes:*\n\n_ctrl `lnbDeleteRow` row\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbDeleteRow 1;\n```","commands\\lnbGetColumnsPosition.md":"Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use `lnbSetColumnsPos` to set positions.\n\n\n---\n*Syntaxes:*\n\n`lnbGetColumnsPosition` _ctrl\n\n---\n*Example 1:*\n\n```sqf\nlnbGetColumnsPosition _ctrl;\n```","commands\\lnbPicture.md":"Returns the picture name or path of the item with the given position of the 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbPicture` [idc, [row, column]]\n\ncontrol `lnbPicture`  [row, column]\n\n---\n*Example 1:*\n\n```sqf\nlnbPicture [200, [1, 1]];\n```\n\n*Example 2:*\n\n```sqf\n_control lnbPicture [1, 1]; // \"a3\\ui_f\\data\\gui\\cfg\\ranks\\corporal_gs.paa\"\n```","commands\\lnbPictureRight.md":"Returns the right picture of given row. The `column` parameter does not matter.\n\n\n---\n*Syntaxes:*\n\n`lnbPictureRight` [idc, [row, column]]\n\nctrl `lnbPictureRight` [row, column]\n\n---\n*Example 1:*\n\n```sqf\n_path = _control lnbPictureRight [0, 0];\n```","commands\\lnbSetColor.md":"Sets the color of the item with the given position of the 2D listbox. Color is in format `Color (RGBA)`.\n\n\n---\n*Syntaxes:*\n\n`lnbSetColor` [idc, [row, column], color]\n\nctrl `lnbSetColor` [<nowiki/>[row, column], color]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbSetColor [[0,0], [1,0,0,1]];\n```","commands\\lnbSetColorRight.md":"Sets the right color.\n\n\n---\n*Syntaxes:*\n\n`lnbSetColorRight` [idc, [row, column], color]\n\nctrl `lnbSetColorRight` [<nowiki/>[row, column], color]\n\n---\n*Example 1:*\n\n```sqf\n_control lnbSetColorRight [[0, 0], [1,1,1,0.5]];\n```","commands\\lnbSetColumnsPos.md":"Sets relative screen X for ListNBox control columns positions. Setter for `lnbGetColumnsPosition`.\n\n\n---\n*Syntaxes:*\n\n`lnbSetColumnsPos` [idc, positions]\n\nctrl `lnbSetColumnsPos` positions\n\n---\n*Example 1:*\n\n```sqf\nlnbSetColumnsPos [101, [0.1,0.5,0.7]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbSetColumnsPos [0.1,0.5,0.7];\n```","commands\\lnbSetCurSelRow.md":"Selects the row with the given index of the 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbSetCurSelRow` [idc, index]\n\nctrl `lnbSetCurSelRow` index\n\n---\n*Example 1:*\n\n```sqf\ndisableSerialization;\n_ctrl = (findDisplay 300) displayCtrl 304;\n_ctrl lnbSetCurSelRow 1;\n```","commands\\lnbSetData.md":"Sets the additional text (invisible) on the item with the given position of the 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbSetData` [idc, [row, column], data]\n\nctrl `lnbSetData` [<nowiki/>[row, column], data]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetData [123, [0,0],\"#1\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbSetData [[0,0],\"#1\"];\n```","commands\\lnbSetPicture.md":"Sets the picture in the item with the given position of the 2D listbox.The picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory).\n\n\n---\n*Syntaxes:*\n\n`lnbSetPicture` [idc, [row, column], picturePathOrName]\n\nctrl `lnbSetPicture` [<nowiki/>[row, column], picturePathOrName]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetPicture [1, [0, 0], \"Picture\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbSetPicture [[0, 0], \"\\A3\\Ui_f\\data\\GUI\\Cfg\\Ranks\\lieutenant_gs.paa\"];\n```","commands\\lnbSetPictureColor.md":"Sets the cell picture's colour.\n\n\n---\n*Syntaxes:*\n\n`lnbSetPictureColor` [idc, [row, column], colour]\n\nctrl `lnbSetPictureColor` [<nowiki/>[row, column], colour]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetPictureColor [1492, [1,0], [0,0.75,0.3,0.5]];\n```\n\n*Example 2:*\n\n```sqf\nctrl lnbSetPictureColor [[0, 3], [1,0,0,1]];\n```","commands\\lnbSetPictureColorRight.md":"Sets color of the right picture in a `CT_LISTNBOX`.\n\n\n---\n*Syntaxes:*\n\n`lnbSetPictureColorRight` [idc, [row, column], color]\n\nctrl `lnbSetPictureColorRight` [<nowiki/>[row, column], color]\n\n---\n*Example 1:*\n\n```sqf\n_control lnbSetPictureColorRight [[0, 0], [1,1,1,0.5]];\n```","commands\\lnbSetPictureColorSelected.md":"Sets the cell picture's colour on cell selection.\n\n\n---\n*Syntaxes:*\n\n`lnbSetPictureColorSelected` [idc, [row, column], colour]\n\nctrl `lnbSetPictureColorSelected` [<nowiki/>[row, column], colour]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetPictureColorSelected [1492, [1,0], [0,0.75,0.3,0.5]];\n```\n\n*Example 2:*\n\n```sqf\nctrl lnbSetPictureColorSelected [[0, 3], [1,0,0,1]];\n```","commands\\lnbSetPictureColorSelectedRight.md":"Sets the color of the right picture when it is selected.\n\n\n---\n*Syntaxes:*\n\n`lnbSetPictureColorSelectedRight` [idc, [row, column], color]\n\nctrl `lnbSetPictureColorSelectedRight` [<nowiki/>[row, column], color]\n\n---\n*Example 1:*\n\n```sqf\n_control lnbSetPictureColorSelectedRight [[0, 0], [1,1,1,0.5]];\n```","commands\\lnbSetPictureRight.md":"Sets the cell's right-picture. The picture is set to the end of the `row`, the `column` parameter does not matter.\n\n\n---\n*Syntaxes:*\n\n`lnbSetPictureRight` [idc, [row, column], path]\n\nctrl `lnbSetPicture` [<nowiki/>[row, column], path]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetPictureRight [1, [0, 0], \"Picture.paa\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbSetPictureRight [ [0, 0], \"\\A3\\Ui_f\\data\\GUI\\Cfg\\Ranks\\lieutenant_gs.paa\"];\n```","commands\\lnbSetText.md":"Sets the text in the item with the given position of the 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbSetText` [idc, [row, column], data]\n\nctrl `lnbSetText` [<nowiki/>[row, column], data]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetText [101, [0,1], \"#1\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbSetText [[0,1], \"#1\"];\n```","commands\\lnbSetTextRight.md":"Sets cell's right-aligned text. Does not replace `cell's text`.\n\n\n---\n*Syntaxes:*\n\n`lnbSetTextRight` [idc, [row, column], text]\n\nctrl `lnbSetTextRight` [<nowiki/>[row, column], text]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetTextRight [1492, [1,0], \"right text\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbSetTextRight [[0, 3], \"right text\"];\n```","commands\\lnbSetTooltip.md":"Sets tooltip on the item with the given row and column of `CT_LISTNBOX`.\n\n\n---\n*Syntaxes:*\n\n`lnbSetTooltip` [idc, [row, column], text]\n\nctrl `lnbSetTooltip` [<nowiki/>[row, column], text]\n\n---\n*Example 1:*\n\n```sqf\nlnbSetTooltip [1234, [1,0], \"tip\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl lnbSetTooltip [[3,0], \"top\"];\n```","commands\\lnbSetValue.md":"Sets the additional `integer` value in the item with the position index of the 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbSetValue` [idc, [row, column], value]\n\ncontrol `lnbSetValue` [<nowiki/>[row, column], value]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbSetValue [[0,0],1];\n```","commands\\lnbSize.md":"Returns size of `CT_LISTNBOX`. This command supports `CT_TOOLBOX` control since Arma 3 v2.06. For `CT_COMBO` or `CT_LISTBOX` see `lbSize`.\n\n\n---\n*Syntaxes:*\n\n`lnbSize` controlOrIDC\n\n---\n*Example 1:*\n\n```sqf\nlnbSize _control;\n```\n\n*Example 2:*\n\n```sqf\nlnbSize _someIDC;\n```","commands\\lnbSort.md":"Sorts given multicolumn listbox by `lnbText` in given column in ascending or descending order.\n\n\n---\n*Syntaxes:*\n\n`lnbSort` [idc, column, reversed]\n\ncontrol `lnbSort`  [column, reversed]\n\n---\n*Example 1:*\n\n```sqf\nlnbSort [1800, 1, false];\n```\n\n*Example 2:*\n\n```sqf\n_ctl lnbSort [1, true];\n```","commands\\lnbSortBy.md":"Sorts given multi-column ListNBox in the given column by either `lnbText`, `lnbValue` or `lnbData` in normal or reversed order, using case-sensitive or case-insensitive comparison. Unlike the older `lnbSortXXX` commands, this command supports UNICODE characters out of the box.<br>\nWhen sorting by **\"VALUE\"**, the rows with the same `lnbValue` will additionally be sorted by `lnbText` in the order specified by the `reversedOrder` flag, text specified by `useTextRight` flag and case-sensitivity specified by `caseSensitive` flag.\n\n\n---\n*Syntaxes:*\n\n[controlOrIDC, column] `lnbSortBy` [sortByType, reversedOrder, caseSensitive, useTextRight,  unicodeOff]\n\n---\n*Example 1:*\n\n```sqf\nwith uiNamespace do\n{\n\tprivate _column = 1;\n\tprivate _lnb = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscListNBox\", -1];\n\t_lnb ctrlSetPosition [0,0,1,1];\n\t_lnb ctrlCommit 0;\n\tlnbClear _lnb;\n\t{ \n\t\t_lnb lnbAddRow [format [\"Row %1\", _forEachIndex], _x select 0];\n\t\t_lnb lnbSetValue [[_forEachIndex, _column], _x select 1];\n\t} \n\tforEach [[\"В\",1], [\"Я\",0], [\"Б\",1], [\"Ю\",0], [\"А\",1]];\n\t[_lnb, _column] lnbSortBy [\"VALUE\", true, false];\n};\n```","commands\\lnbSortByValue.md":"Sorts given multicolumn listbox by `lnbValue` in given column in ascending or descending order.\n\n\n---\n*Syntaxes:*\n\n`lnbSortByValue` [idc, column, reversed]\n\ncontrol `lnbSortByValue` [column, reversed]\n\n---\n*Example 1:*\n\n```sqf\nlnbSortByValue [1800, 1, false];\n```\n\n*Example 2:*\n\n```sqf\n_ctl lnbSortByValue [1, true];\n```","commands\\lnbText.md":"Returns the shown text in the item with the given position of the given 2D listbox.\n\n\n---\n*Syntaxes:*\n\ncontrol `lnbText` [row, column]\n\n---\n*Example 1:*\n\n```sqf\n_text = _ctrl lnbText [0,0];\n```","commands\\lnbTextRight.md":"Returns `CT_LISTNBOX`'s right aligned cell text.\n\n\n---\n*Syntaxes:*\n\n`lnbTextRight` [idc, [row, column]]\n\nctrl `lnbTextRight` [row, column]\n\n---\n*Example 1:*\n\n```sqf\n_text = _control lnbTextRight [0, 0];\n```","commands\\lnbValue.md":"Returns the additional integer value in the item with the given position of the 2D listbox.\n\n\n---\n*Syntaxes:*\n\n`lnbValue` [idc, [row, column]]\n\nctrl `lnbValue` [row, column]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl lnbValue [0,0]; // 1, default is 0 if value is String set by lnbSetValue\n```","commands\\load.md":"Returns the percentage of fullness of a unit's cargo. Output is usually in range 0..1, but can be higher after using certain scripting commands (like `addWeaponWithAttachmentsCargoGlobal`) which ignore load values when adding items.\n\n\n---\n*Syntaxes:*\n\n`load` unit\n\n---\n*Example 1:*\n\n```sqf\nload player;\n```\n\n*Example 2:*\n\nunit load calculation formula:\n\n```sqf\nprivate _unitLoad = loadAbs _unit / getNumber (configFile >> \"CfgInventoryGlobalVariable\" >> \"maxSoldierLoad\");\n```","commands\\loadAbs.md":"Returns current sum of mass from items stored in all unit's containers, linked items and weapons.\n\n\n---\n*Syntaxes:*\n\n`loadAbs` unit\n\n---\n*Example 1:*\n\nPlayer weight:\n\n```sqf\n_weight = loadAbs player;\n```","commands\\loadBackpack.md":"Returns current percentage of mass from items stored in a backpack relative to the maximum capacity of the backpack.<br>\nIt is equivalent to this formula:\n\n```sqf\n_loadBackpack = massOfAllItemsInBackpack / getContainerMaxLoad backpack player;\n```\n\n\n---\n*Syntaxes:*\n\n`loadBackpack` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _myVariable = loadBackpack myUnit;\n```","commands\\loadConfig.md":"Loads the given file as a `Config`, allowing easy processing of the config file contents using commands such as `configClasses`, `configProperties`, `>>`, etc. It can load .rvmat, .bisurf, .cpp, .bin, .sqm, and description.ext files (both binarized and unbinarized configs are supported).\n\n\n---\n*Syntaxes:*\n\n`loadConfig` path\n\n---\n*Example 1:*\n\n```sqf\nprivate _cfg = loadConfig \"a3\\data_f\\default_super.rvmat\"; // note: very slow! ~0.1200 ms on tested system\ngetText (_cfg >> \"Stage2\" >> \"uvSource\");\n```\n\n*Example 2:*\n\n```sqf\n// using a hashmap to cache loaded configs, since loading configs is very slow and should be done once.\nprivate _fnc_loadConfig = {\n\tparams [\"_path\"];\n\t// initialize cache if not initialized yet\n\tif (isNil \"TAG_configCache\") then {\n\t\tTAG_configCache = createHashMap;\n\t};\n\tprivate _cfg = TAG_configCache getOrDefault [_path, configNull];\n\t// if path doesn't exist in the cache or cfg is null, load the config\n\tif (isNull _cfg) then {\n\t\t_cfg = loadConfig _path;\n\t\tTAG_configCache set [_path, _cfg];\n\t};\n\t_cfg;\n};\n// the first call will be slow (~0.1200 ms), but subsequent calls are fast (~0.0050 ms)\n[\"a3\\data_f\\default_super.rvmat\"] call _fnc_loadConfig;\n```\n\n*Example 3:*\n\n```sqf\n// converting a config into hashmap\nprivate _fnc_convertClass = {\n\tparams [\"_cfgClass\"];\n\n\tprivate _result = createHashMap;\n\tprivate _props = configProperties [_cfgClass, \"true\", true];\n\t// Note: Hashmaps are case-sensitive. So configName cases have to be consistent (e.g. all lowercase)\n\t{\n\t\tif (isNumber _x) then {_result set [toLowerANSI configName _x, getNumber _x]; continue; };\n\t\tif (isText _x) then {_result set [toLowerANSI configName _x, getText _x]; continue; };\n\t\tif (isArray _x) then {_result set [toLowerANSI configName _x, getArray _x]; continue; };\n\t} forEach _props;\n\n\tprivate _classes = \"true\" configClasses _cfgClass;\n\t{\n\t\t_result set [toLowerANSI configName _x, _x call _fnc_convertClass];\n\t} forEach _classes;\n\t_result;\n};\nprivate _cfg = loadConfig \"mission.sqm\";\nprivate _cfgMap = _cfg call _fnc_convertClass;\n\n// The following expression is similar to getNumber(_cfg >> \"EditorData\" >> \"moveGridStep\")\n// Notice that all strings are lowercase (which is how they were stored in hashmap)\n_cfgMap get \"editordata\" get \"movegridstep\";\n```","commands\\loadFile.md":"Returns the content of given files. If you plan to `compile` said string, be aware that the file should not contain comments or `compile` will throw an error. If there are comments, use `preprocessFile`/`preprocessFileLineNumbers` instead.\n\n\n---\n*Syntaxes:*\n\n`loadFile` fileName\n\n---\n*Example 1:*\n\n```sqf\n_contents = loadFile \"wantedString.txt\";\n```\n\n*Example 2:*\n\n```sqf\n_contents = compile loadFile \"myFunction.sqf\"; // will compile string into code\n```","commands\\loadGame.md":"Loads game from the last autosave made with `saveGame`. If no autosave exists, restarts the mission. When used in campaign it will also deduct 1 life, defined in:<br>\n\n```sqf\ncampaignConfigFile >> \"Campaign\" / <battle> / <mission> / \"lives\"\n```\n\n\n---\n*Syntaxes:*\n\n`loadGame`\n\n---\n*Example 1:*\n\n```sqf\nloadGame;\n```","commands\\loadIdentity.md":"Loads person's identity from `Objects.sav` file in campaign directory (from entry name).\n\n\n---\n*Syntaxes:*\n\nunit `loadIdentity`  name\n\n---\n*Example 1:*\n\n```sqf\n_ok = player loadIdentity \"playerIdentity\";\n```","commands\\loadMagazine.md":"Initiates the loading action on given weapon of the turret of a transport. So the new magazine is not available instantly, yet according to the reloadTime.<br>\nThe turret has to be manned. One can also change the magazine if its respective weapon is not selected.\n\n\n---\n*Syntaxes:*\n\ntransport `loadMagazine` [turretPath, weaponName, magazineName]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player loadMagazine [[0], \"m256\", \"20Rnd_120mmHE_M1A2\"];\n```","commands\\loadOverlay.md":"Creates the load overlay dialog for the specified type of overlay.\n\n\n---\n*Syntaxes:*\n\nmap `loadOverlay` config\n\n---\n*Example 1:*\n\n-","commands\\loadStatus.md":"Loads object's properties from `Objects.sav` file in campaign directory (from entry name).\n\n\n---\n*Syntaxes:*\n\nobject `loadStatus`  entryName\n\n---\n*Example 1:*\n\n```sqf\n_ok = player loadStatus \"playerState\";\n```","commands\\loadUniform.md":"Returns current percentage of mass from items stored in a uniform relative to the maximum capacity of the uniform.<br>\nIt is equivalent to this formula:\n\n```sqf\nprivate _loadUniform = massOfAllItemsInUniform / getContainerMaxLoad uniform player;\n```\n\n\n---\n*Syntaxes:*\n\n`loadUniform` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _weight = loadUniform player;\n```","commands\\loadVest.md":"Returns current percentage of mass from items stored in a vest relative to the maximum capacity of the vest. <br>\nIt is equivalent to this formula:\n\n```sqf\n_loadVest = massOfAllItemsInVest / getContainerMaxLoad vest player;\n```\n\n\n---\n*Syntaxes:*\n\n`loadVest` unit\n\n---\n*Example 1:*\n\n```sqf\n_weight = loadVest player;\n```","commands\\local.md":"Check if given unit is local on the computer in multiplayer games - see *(Reference HashLink \"Multiplayer Scripting#Locality\")*.<br>\nThis can be used to determine on which computer some code must be run. In single player all objects are local.\n\n\n---\n*Syntaxes:*\n\n`local` object\n\n`local` variable = value <span style=\"margin-left: 7em\">`*(Reference Color \"red|From {{arma2\")* v1.00 until {{arma3}} v1.54}}` - see ``private`` for later versions</span>\n\n---\n*Example 1:*\n\n```sqf\nif (not local _unit) then\n{\n\thint format [\"%1 is remote\", name _unit];\n};\n```\n\n*Example 2:*\n\n```sqf\n_isLocalGroup = local group _unit;\n```\n\n*Example 3:*\n\nSets variable's `scope`:\n\n```sqf\n// from Arma 2 v1.00 until Arma 3v1.54\nlocal _myVariable = 42;\n\n// since Arma 3 v1.54\nprivate _myVariable = 42;\n```","commands\\localize.md":"Used to internationalize text messages. A string is returned from `Stringtable.csv` (or `Stringtable.xml`) which corresponds to the `stringName`.\n\n\n---\n*Syntaxes:*\n\n`localize` stringName\n\n---\n*Example 1:*\n\n```sqf\nhint localize \"STR_WEST\"; // Returns \"BLUFOR\"\n```\n\n*Example 2:*\n\n```sqf\nhint format [\"Go %1\", localize \"STR_Q_NORTH\"]; // Returns \"Go North\"\n```\n\n*Example 3:*\n\n```sqf\nhint format \n[\n\tlocalize \"STR_ACTION_DROP_WEAPON\", // \"STR_ACTION_DROP_WEAPON\" contains \"Drop %1\"\n\tlocalize \"STR_SN_RIFLE\" // \"STR_SN_RIFLE\" contains \"Rifle\"\n]; // Returns \"Drop Rifle\"\n```\n\n*Example 4:*\n\n```sqf\nlocalize \"$STR_USRACT_ADJUST\"; // Since Arma 3 v2.04, Returns \"Adjust\"\n```","commands\\localNamespace.md":"Returns local `Namespace` attached to the mission.\nHas the same lifetime as `missionNamespace` but variables `cannot be broadcasted` out of or into this namespace in multiplayer and will not be serialized when game is saved. UI variables can be safely stored in this namespace.\nUse `allVariables` command to save the variables elsewhere if required.\n\n\n---\n*Syntaxes:*\n\n`localNamespace`\n\n---\n*Example 1:*\n\n```sqf\nlocalNamespace setVariable [\"abc\", 123];\n```\n\n*Example 2:*\n\n```sqf\nwith localNamespace do { hint str abc };\n```","commands\\locationNull.md":"A non-existing `Location`. To compare non-existent locations use `isNull` or `isEqualTo`:\n\n```sqf\nlocationNull == locationNull;\t\t\t// false\nisNull locationNull;\t\t\t\t\t// true\nlocationNull isEqualTo locationNull;\t// true\n```\n\n\n---\n*Syntaxes:*\n\n`locationNull`\n\n---\n*Example 1:*\n\n```sqf\n!isNull locationNull; // false\n```\n\n*Example 2:*\n\n```sqf\nstr locationNull; // No location\n```\n\n*Example 3:*\n\n```sqf\nposition locationNull; // [0,0,0]\n```","commands\\locationPosition.md":"Returns the `position` of a location. If the location is attached to an object, that object's position is returned.\n\n\n---\n*Syntaxes:*\n\n`locationPosition` location\n\n---\n*Example 1:*\n\n```sqf\n_locationPos = locationPosition myLocation;\n```\n\n*Example 2:*\n\n```sqf\n_location = nearestLocation [getPos player, \"nameCity\"];\n_locationPos = locationPosition _location;\n```","commands\\lock.md":"Lock vehicle (disable mounting / dismounting) for player.\nThis command will remove user get in/get out actions but will not stop player getting into or out of vehicle via script commands (e.g `moveInCargo`).\n\n\n---\n*Syntaxes:*\n\nvehicleName `lock` locked\n\nvehicleName `lock` lockstate\n\n---\n*Example 1:*\n\n```sqf\n_jeepOne lock true;\n```\n\n*Example 2:*\n\n```sqf\nheli lock true;\nlocked heli; // 2\n\nheli lock false;\nlocked heli; // 0\n\nheli lock 1;\nlocked heli; // 1\n```","commands\\lockCameraTo.md":"Lock/Unlock stabilized camera to target. Works only on turrets which have optic mode selected with `direction stabilization enabled`.\n\n\n---\n*Syntaxes:*\n\nvehicle `lockCameraTo` [target, turretPath]\n\nvehicle `lockCameraTo` [target, turretPath, temporary]\n\n---\n*Example 1:*\n\n```sqf\nuav lockCameraTo [vehicle, [0,0]];\n```\n\n*Example 2:*\n\n```sqf\nuav lockCameraTo [objNull, [0,0]]; // unlocks the turret\n```\n\n*Example 3:*\n\n```sqf\nvehicle player lockCameraTo [enemyTarget, vehicle player unitTurret player, false];\n```","commands\\lockCargo.md":"Lock all cargo positions of a vehicle or lock by index.\nThis command will remove user \"get in\" action (not get out) but will also stop player getting into vehicle via script commands (e.g `moveInCargo`) unlike `lock` command.\n\n\n---\n*Syntaxes:*\n\nvehicle `lockCargo` lock\n\nvehicle `lockCargo` [index, lock]\n\n---\n*Example 1:*\n\n```sqf\nvehicleName lockCargo true;\n```\n\n*Example 2:*\n\n```sqf\nvehicleName lockCargo [0, true];\n```","commands\\lockDriver.md":"Lock the driver position of the vehicle. This command must be executed where vehicle is `local`. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike `lock` command\n\n\n---\n*Syntaxes:*\n\nvehicle `lockDriver` lock\n\n---\n*Example 1:*\n\n```sqf\nvehicleName lockDriver true;\n```","commands\\locked.md":"Check if `vehicle` is locked. If it is locked, `Persons` cannot mount / dismount without order.\n\n\n---\n*Syntaxes:*\n\n`locked` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_locked = locked _jeepOne;\n```","commands\\lockedCameraTo.md":"Return the turret lock target.\n\n\n---\n*Syntaxes:*\n\nvehicle `lockedCameraTo` turretPath\n\n---\n*Example 1:*\n\n```sqf\n    vehicle player lockedCameraTo [];\n```","commands\\lockedCargo.md":"Check whether cargo position of the vehicle is locked.\n\n\n---\n*Syntaxes:*\n\nvehicle `lockedCargo` cargoIndex\n\n---\n*Example 1:*\n\n```sqf\n_result = vehicleName lockedCargo 0;\n```","commands\\lockedDriver.md":"Check whether driver position of the vehicle turret is locked.\n\n\n---\n*Syntaxes:*\n\n`lockedDriver` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_driverLocked = lockedDriver vehicle player;\n```","commands\\lockedInventory.md":"Get a vehicle's inventory lock state. Can also be used on a unit's backback (see `lockInventory`).\n\n\n---\n*Syntaxes:*\n\n`lockedInventory` vehicle\n\n---\n*Example 1:*\n\n```sqf\nprivate _isInventoryLocked = lockedInventory vehicle player;\n```\n\n*Example 2:*\n\n```sqf\nprivate _isBackpackLocked = lockedInventory backpackContainer player;;\n```","commands\\lockedTurret.md":"Check whether gunner position of the vehicle turret is locked.\n\n\n---\n*Syntaxes:*\n\nvehicle `lockedTurret` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_locked = tank lockedTurret [0];\n```","commands\\lockIdentity.md":"Locks the identity of a person. This will disable default identity.\n\n\n---\n*Syntaxes:*\n\n`lockIdentity` unit\n\n---\n*Example 1:*\n\n```sqf\n_success = lockIdentity player;\n```","commands\\lockInventory.md":"Lock or unlock a vehicle's inventory access.\nThis command can also lock backpack a unit is wearing to prevent access by a third party.\nIf set to `true` (locked), the inventory cannot be accessed `via` hotkey or action menu.\n\n\n---\n*Syntaxes:*\n\nvehicle `lockInventory` lock\n\n---\n*Example 1:*\n\n```sqf\nvehicle player lockInventory true;\n```\n\n*Example 2:*\n\n```sqf\nbackpackContainer player lockInventory true;\n```","commands\\lockTurret.md":"Lock the gunner position of the vehicle turret.\nThis command will remove user \"get in\" action (not \"get out\") but will also stop player getting into vehicle via script commands unlike `lock` command.\n\n\n---\n*Syntaxes:*\n\nvehicle `lockTurret` [turretPath, lock]\n\n---\n*Example 1:*\n\n```sqf\nvehicleName lockTurret [[0,0], true];\n```\n\n*Example 2:*\n\n```sqf\nvehicle player lockTurret [[0], true];\n```","commands\\lockWP.md":"Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes.\n\n\n---\n*Syntaxes:*\n\ngroupName `lockWP` lock\n\n---\n*Example 1:*\n\n```sqf\n_groupOne lockWP true;\n```\n\n*Example 2:*\n\n```sqf\n_Soldier lockWP true;\n```\n\n*Example 3:*\n\n```sqf\n_MyTank lockWP false;\n```","commands\\log.md":"Base-10 logarithm of x.\n\n\n---\n*Syntaxes:*\n\n`log`  x\n\n---\n*Example 1:*\n\n```sqf\n_log = log 10;\n```\n\n*Example 2:*\n\n```sqf\n_log = log abs -10;\n```\n\n*Example 3:*\n\n```sqf\nfinite log -10; // Returns false\n```","commands\\logEntities.md":"Creates a log file containing the list of all game entities in scene. \n<br>File is created in the same directory as `.rpt file`. \n<br>Special: BattlEye's RCON variant of this command is #logEntities (see also `Multiplayer_Server_Commands`)\n\n\n---\n*Syntaxes:*\n\n`logEntities`\n\n---\n*Example 1:*\n\n```sqf\nlogEntities;\n```","commands\\logNetwork.md":"Registers new log file recording a network traffic and returns handle of the log. The log file is saved inside the {{arma3}} root folder.\n\n\n---\n*Syntaxes:*\n\n`logNetwork` logFile\n\n---\n*Example 1:*\n\n```sqf\n_handle = logNetwork [\"myLog.txt\", [\"\"]];\n```","commands\\logNetworkTerminate.md":"Terminates a network log file started with `logNetwork` with the given handle\n\n\n---\n*Syntaxes:*\n\n`logNetworkTerminate` handle\n\n---\n*Example 1:*\n\n```sqf\nlogNetworkTerminate _someHandle;\n```","commands\\lookAt.md":"Control what the unit(s) is/are looking at (target or `Position`). If target is used, it will get revealed fully.\n\n\n---\n*Syntaxes:*\n\nunit(s) `lookAt` position\n\n---\n*Example 1:*\n\n```sqf\n_someSoldier lookAt _otherSoldier;\n```\n\n*Example 2:*\n\n```sqf\n[_someSoldier, _otherSoldier] lookAt markerPos \"markerOne\";\n```\n\n*Example 3:*\n\n```sqf\nhint \"R U N !\";\nBFG = \"B_AAA_System_01_F\" createVehicle position player;\ncreateVehicleCrew BFG;\nt = time + 10;\nonEachFrame\n{\n\tBFG lookAt (unitAimPosition player vectorAdd (velocity player vectorMultiply 0.2));\n\tif (time > t && alive player) then\n\t{\n\t\t[BFG,\"weapon_Cannon_Phalanx\",[0]] call BIS_fnc_fire;\n\t};\n};\n```","commands\\lookAtPos.md":"Point the camera and center the map on the position.\n\n\n---\n*Syntaxes:*\n\nmap `lookAtPos` position\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 12 lookAtPos [0,0,0];\n```","commands\\magazineCargo.md":"Get array with magazines from ammo box (or any general weapon holder container).\n\n\n---\n*Syntaxes:*\n\n`magazineCargo` object\n\n---\n*Example 1:*\n\n```sqf\nhint str magazineCargo uniformContainer cursorTarget;\n```","commands\\magazines.md":"Returns array of type names of all vehicle's magazines. When applied to a unit, the command behaves differently and will omit magazines already loaded into unit's weapons. Use `currentMagazine` to get this information for a currently loaded magazine.\n\n\n---\n*Syntaxes:*\n\n`magazines` vehicle\n\n`magazines` [vehicle, includeEmpty]\n\n---\n*Example 1:*\n\n```sqf\n_mags = magazines player;\n```","commands\\magazinesAllTurrets.md":"Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts. Since Arma 3 v2.08.148327 it is possible to exclude person turrets from returned results.\n\n\n---\n*Syntaxes:*\n\n`magazinesAllTurrets` vehicle\n\n`magazinesAllTurrets` [vehicle, exludePersonTurrets]\n\n---\n*Example 1:*\n\n```sqf\n_mags = magazinesAllTurrets vehicle player;\n```\n\n*Example 2:*\n\n```sqf\n_mags = magazinesAllTurrets [vehicle player, true];\n```","commands\\magazinesAmmo.md":"Returns all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use `magazinesAmmoFull` to return all magazines.\n\n\n---\n*Syntaxes:*\n\n`magazinesAmmo` vehicle\n\n`magazinesAmmo` [vehicle, includeEmpty]\n\n---\n*Example 1:*\n\n```sqf\n_magazinesAmmo = magazinesAmmo player;\n/*\n[\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"16Rnd_9x21_Mag\",16],\n\t[\"SmokeShellGreen\",1],\n\t[\"Chemlight_green\",1],\n\t[\"HandGrenade\",1]\n]\n*/\n```\n\n*Example 2:*\n\n```sqf\n_magazinesAmmo = magazinesAmmo Mi_48;\n/*\n[\n\t[\"250Rnd_30mm_APDS_shells\",250],\n\t[\"250Rnd_30mm_HE_shells\",250],\n\t[\"8Rnd_LG_scalpel\",8],\n\t[\"38Rnd_80mm_rockets\",38]\n]\n*/\n```","commands\\magazinesAmmoCargo.md":"Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.\n\n\n---\n*Syntaxes:*\n\n`magazinesAmmoCargo` vehicle\n\n---\n*Example 1:*\n\n```sqf\nmagazinesAmmoCargo vehicle player;\n```\n\n*Example 2:*\n\n```sqf\nmagazinesAmmoCargo uniformContainer player;\n```\n\n```sqf\n// returns:\n[\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"30Rnd_65x39_caseless_mag\",30],\n\t[\"Chemlight_green\",1]\n]\n```","commands\\magazinesAmmoFull.md":"Returns array of arrays of all unit's or vehicle's magazines with extended information about them. The magazines returned are for primary gunner. If you need magazines for all turrets, see `magazinesAllTurrets`.\n\n\n---\n*Syntaxes:*\n\n`magazinesAmmoFull` entity\n\n`magazinesAmmoFull` [vehicle, includeEmpty]\n\n---\n*Example 1:*\n\n```sqf\ntoFixed 0; magazinesAmmoFull player;\n/*\n[\n\t[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Uniform\",10000003,0],\n\t[\"Chemlight_green\",1,true,0,\"ChemlightGreenMuzzle\",10000016,0],\n\t[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000008,0],\n\t[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000009,0],\n\t[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\",10000010,0],\n\t[\"HandGrenade\",1,true,0,\"HandGrenadeMuzzle\",10000018,0],\n\t[\"HandGrenade\",1,false,-1,\"Vest\",10000019,0],\n\t[\"30Rnd_65x39_caseless_mag\",30,true,1,\"arifle_MX_ACO_pointer_F\",10000001,0],\n\t[\"16Rnd_9x21_Mag\",16,true,2,\"hgun_P07_F\",10000011,0]\n]\n*/\n```\n\n*Example 2:*\n\n```sqf\ntoFixed 0; magazinesAmmoFull Mi_48;\n/*\n[\n\t[\"250Rnd_30mm_HE_shells_Tracer_Green\",250,true,65536,\"HE\",10000043,0],\n\t[\"250Rnd_30mm_APDS_shells_Tracer_Green\",250,true,65536,\"AP\",10000044,0],\n\t[\"Laserbatteries\",1,true,65536,\"Laserdesignator_mounted\",10000045,0],\n\t[\"PylonRack_4Rnd_LG_scalpel\",4,false,-1,\"\",10000049,0],\n\t[\"PylonRack_19Rnd_Rocket_Skyfire\",19,false,-1,\"\",10000051,0],\n\t[\"PylonRack_19Rnd_Rocket_Skyfire\",19,false,-1,\"\",10000052,0],\n\t[\"PylonRack_4Rnd_LG_scalpel\",4,false,-1,\"\",10000053,0]\n]\n*/\n```","commands\\magazinesDetail.md":"Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids for the primary gunner. \n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use `currentMagazineDetail` to get this information for a currently loaded magazine.\n\n\n---\n*Syntaxes:*\n\n`magazinesDetail` vehicle\n\n`magazinesDetail` [vehicle, includeEmpty, includeLoaded]\n\n---\n*Example 1:*\n\n```sqf\n_magazinesDetail = magazinesDetail player;\n/*\n[\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]\",\n\t\"Chemlight (Green)(1/1)[id/cr:10000020/0]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]\",\n\t\"RGO Grenade(1/1)[id/cr:10000016/0]\",\n\t\"RGO Grenade(1/1)[id/cr:10000017/0]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000070/0]\",\n\t\"PCML Missile(1/1)[id/cr:10000072/0]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000001/0]\",\n\t\"9 mm 16Rnd Mag(16/16)[id/cr:10000013/0]\"\n]\n*/\n```\n\n*Example 2:*\n\n```sqf\n_magazinesDetail = magazinesDetail Mi_48;\n/*\n[\n\t\"30 mm HE Tracer (Green) Shells(250/250)[id/cr:10000043/0]\",\n\t\"30 mm APDS Tracer (Green) Shells(250/250)[id/cr:10000044/0]\",\n\t\"Designator Batteries(1/1)[id/cr:10000045/0]\",\n\t\"Scalpel 4x(4/4)[id/cr:10000049/0]\",\n\t\"Skyfire 19x(19/19)[id/cr:10000051/0]\",\n\t\"Skyfire 19x(19/19)[id/cr:10000052/0]\",\n\t\"Scalpel 4x(4/4)[id/cr:10000053/0]\"\n]\n*/\n```","commands\\magazinesDetailBackpack.md":"Returns an array with the type names of all the unit's backpack magazines.\n\n\n---\n*Syntaxes:*\n\n`magazinesDetailBackpack` unit\n\n`magazinesDetailBackpack` [unit, includeEmpty, includeLoaded]\n\n---\n*Example 1:*\n\n```sqf\nmagazinesDetailBackpack player;\n/*\n[\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000011/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/2]\",\n\t\"Chemlight (Green)(1/1)[id/cr:10000027/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000013/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000014/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000015/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000016/2]\",\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000017/2]\",\n\t\"9 mm 16Rnd Mag(16/16)[id/cr:10000019/2]\",\n\t\"9 mm 16Rnd Mag(16/16)[id/cr:10000020/2]\",\n\t\"RGO Grenade(1/1)[id/cr:10000021/2]\",\n\t\"RGO Grenade(1/1)[id/cr:10000022/2]\",\n\t\"IR Grenade [NATO](1/1)[id/cr:10000023/2]\",\n\t\"IR Grenade [NATO](1/1)[id/cr:10000024/2]\",\n\t\"Smoke Grenade (White)(1/1)[id/cr:10000025/2]\",\n\t\"Smoke Grenade (Green)(1/1)[id/cr:10000026/2]\",\n\t\"Chemlight (Green)(1/1)[id/cr:10000028/2]\"\n]\n*/\n```","commands\\magazinesDetailUniform.md":"Returns an array with the type names of all the unit's uniform magazines.\n\n\n---\n*Syntaxes:*\n\n`magazinesDetailUniform` unit\n\n`magazinesDetailUniform` [unit, includeEmpty, includeLoaded]\n\n---\n*Example 1:*\n\n```sqf\nmagazinesDetailUniform player;\n/*\n[\n\t\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000003/0]\",\n\t\"Chemlight (Green)(1/1)[id/cr:10000020/0]\"\n]\n*/\n```","commands\\magazinesDetailVest.md":"Returns an array with the type names of all the unit's vest magazines.\n\n\n---\n*Syntaxes:*\n\n`magazinesDetailVest` unit\n\n`magazinesDetailVest` [unit, includeEmpty, includeLoaded]\n\n---\n*Example 1:*\n\n```sqf\nmagazinesDetailVest player;\n/*\n[\n\t[\"6.5 mm 30Rnd Sand Mag(30/30)[id/cr:10000012/0]\",\n\t\"RGO Grenade(1/1)[id/cr:10000016/0]\",\n\t\"RGO Grenade(1/1)[id/cr:10000017/0]\"]\n]\n*/\n```","commands\\magazinesTurret.md":"Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use `magazinesAllTurrets`.\n\n\n---\n*Syntaxes:*\n\nvehicle `magazinesTurret` turretPath\n\nvehicle `magazinesTurret` [turretPath, includeEmpty]\n\n---\n*Example 1:*\n\n```sqf\n_mags = vehicle player magazinesTurret [0, 0];\n```\n\n*Example 2:*\n\n```sqf\n_mags = _tank magazinesTurret [0];\n```","commands\\magazineTurretAmmo.md":"Returns ammo count of given type from given turret\n\n\n---\n*Syntaxes:*\n\nvehicle `magazineTurretAmmo` [magazineClass, turretPath]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player magazineTurretAmmo [\"cls\", [0]];\n```","commands\\mapAnimAdd.md":"Add next frame to map animation.\n\n\n---\n*Syntaxes:*\n\n`mapAnimAdd` [time, zoom, position]\n\n---\n*Example 1:*\n\n```sqf\nmapAnimAdd [1, 0.1, markerPos \"anim1\"];\nmapAnimCommit;\n```\n\n*Example 2:*\n\n```sqf\nmapAnimAdd [3, 0.01, player];\nmapAnimCommit;\n```","commands\\mapAnimClear.md":"Clear map animation.\n\n\n---\n*Syntaxes:*\n\n`mapAnimClear`\n\n---\n*Example 1:*\n\n```sqf\nmapAnimClear;\n```","commands\\mapAnimCommit.md":"Play map animation.\n\n\n---\n*Syntaxes:*\n\n`mapAnimCommit`\n\n---\n*Example 1:*\n\n```sqf\nmapAnimCommit;\n```","commands\\mapAnimDone.md":"Check if map animation is finished.\n\n\n---\n*Syntaxes:*\n\n`mapAnimDone`\n\n---\n*Example 1:*\n\n```sqf\nprivate _isDone = mapAnimDone;\n```","commands\\mapCenterOnCamera.md":"**ctrl `mapCenterOnCamera` enable** syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.<br>\n**`mapCenterOnCamera` ctrl** syntax centers mini map type control on camera. The command returns world position of the camera. Needs to be executed each frame (preferably inside onDraw EH).\n\n\n---\n*Syntaxes:*\n\nmainmap `mapCenterOnCamera` enable\n\n`mapCenterOnCamera`  minimap\n\n---\n*Example 1:*\n\n```sqf\n// --- Minimap update\n((uiNamespace getVariable \"BIS_UAV_DISPLAY\") displayCtrl 112410) mapCenterOnCamera true;\n```","commands\\mapGridPosition.md":"Returns the map grid position of an object or position.<br>\nThe format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: \"024577\" or \"De82\" or similar.\n\n\n---\n*Syntaxes:*\n\n`mapGridPosition` param\n\n---\n*Example 1:*\n\n```sqf\n_gridPos = mapGridPosition player;\n```\n\n*Example 2:*\n\n```sqf\n_gridPos = mapGridPosition getPos player;\n```","commands\\markAsFinishedOnSteam.md":"Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.\n\n\n---\n*Syntaxes:*\n\n`markAsFinishedOnSteam`\n\n---\n*Example 1:*\n\n```sqf\nmarkAsFinishedOnSteam;\nendMission \"END1\";\n```","commands\\markerAlpha.md":"Gets the marker alpha. See `setMarkerAlpha`.\n\n\n---\n*Syntaxes:*\n\n`markerAlpha` markerName\n\n---\n*Example 1:*\n\n```sqf\nAlphaMarker = markerAlpha \"myMarker;\n```","commands\\markerBrush.md":"Gets the marker brush. See `setMarkerBrush`.\n\n\n---\n*Syntaxes:*\n\n`markerBrush` name\n\n---\n*Example 1:*\n\n```sqf\nif (markerBrush \"Marker1\" == \"Solid\") then { hint \"Marker1 is solid!\" };\n```","commands\\markerChannel.md":"Returns the channel that a marker belongs to.\n\n\n---\n*Syntaxes:*\n\n`markerChannel` marker\n\n---\n*Example 1:*\n\n```sqf\nmarkerChannel \"marker_1\";\n```","commands\\markerColor.md":"Returns marker color for given marker. See also `setMarkerColor`.\n\n\n---\n*Syntaxes:*\n\n`markerColor` markerName\n\n---\n*Example 1:*\n\n```sqf\nif (markerColor \"Marker1\" == \"ColorRed\") then { hint \"Marker1 is red!\" };\n```","commands\\markerDir.md":"Get marker direction.\n\n\n---\n*Syntaxes:*\n\n`markerDir` markerName\n\n---\n*Example 1:*\n\n```sqf\n_mPos = markerDir \"markerOne\";\n```","commands\\markerPolyline.md":"Returns a polyline marker's path data.\n\n\n---\n*Syntaxes:*\n\n`markerPolyline` marker\n\n---\n*Example 1:*\n\n```sqf\nmarkerPolyline \"_USER_DEFINED #0/0/1\"; // returns your first polyline's data in Singleplayer\n```","commands\\markerPos.md":"Returns marker position. See also `setMarkerPos`.\n\n\n---\n*Syntaxes:*\n\n`markerPos` markerName\n\n`markerPos` [markerName, preserveElevation]\n\n---\n*Example 1:*\n\n```sqf\n_mPos1 = markerPos \"markerOne\";\n```\n\n*Example 2:*\n\n```sqf\n_mPos2 = markerPos [\"markerTwo\", true];\n```","commands\\markerShadow.md":"Returns if the marker is drawn with shadow enabled.\n\n\n---\n*Syntaxes:*\n\n`markerShadow` marker\n\n---\n*Example 1:*\n\n```sqf\nprivate _shadowEnabled = markerShadow _myMarker;\n```","commands\\markerShape.md":"Returns the shape of given marker.\n\n\n---\n*Syntaxes:*\n\n`markerShape`  name\n\n---\n*Example 1:*\n\n```sqf\nif (markerShape \"Marker1\" == \"RECTANGLE\") then {hint \"Marker1 is a rectangle!\"};\n```","commands\\markerSize.md":"Returns marker size. This command is identical to `getMarkerSize`.\n\n\n---\n*Syntaxes:*\n\n`markerSize` markerName\n\n---\n*Example 1:*\n\n```sqf\n_mSize = markerSize \"Marker1\";\n```","commands\\markerText.md":"Get marker text.\n\n\n---\n*Syntaxes:*\n\n`markerText` markerName\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"Marker Text: %1\", markerText \"Marker1\"];\n```","commands\\markerType.md":"Gets type of marker. See `CfgMarkers` for a list of standard markers.\n\n\n---\n*Syntaxes:*\n\n`markerType`  markerName\n\n---\n*Example 1:*\n\n```sqf\nif (markerType \"Marker1\" == \"\") then { hint \"Marker1 is not an icon!\" };\n```","commands\\matrixMultiply.md":"[[Image:matrixMultiply.jpg|right|600px]]\nReturns resulting matrix from the [multiplication](https://en.wikipedia.org/wiki/Matrix_multiplication) of two matrices. First matrix must be of the size n &times; `k`, while the second must be of the size `k` &times; m, i.e **columns}} matrix1 == {{hl|rows** matrix2. The resulting matrix will be of the size n &times; m. If the shapes do not match, empty array [] will be returned.\n\n\n---\n*Syntaxes:*\n\nmatrix1 `matrixMultiply` matrix2\n\n---\n*Example 1:*\n\n```sqf\n[\n\t[2],\n\t[2]\n] \nmatrixMultiply \n[ \n\t[3] \n]\n/* returns \n[\n\t[6],\n\t[6]\n] */\n```\n\n*Example 2:*\n\n```sqf\n[\n\t[-1,0,0],\n\t[0,-1,0]\n] \nmatrixMultiply \n[\n\t[1,2],\n\t[3,1],\n\t[2,3]\n] \n/* returns \n[\n\t[-1,-2],\n\t[-3,-1]\n] */\n```","commands\\matrixTranspose.md":"Returns [transposed](https://en.wikipedia.org/wiki/Transpose) version of the given matrix.\nThe matrix is an `Array` of rows.\nEach row is an `Array` of corresponding column values for the row. The minimum number of rows is 1.\n\n\n---\n*Syntaxes:*\n\n`matrixTranspose` matrix\n\n---\n*Example 1:*\n\n```sqf\nmatrixTranspose \n[\n\t[1,2,3], \n\t[3,1,2], \n\t[2,3,1]\n];\n/* returns \n[\n\t[1,3,2], \n\t[2,1,3], \n\t[3,2,1]\n] */\n```\n\n*Example 2:*\n\n```sqf\nmatrixTranspose \n[\n\t[1,2,3]\n];\n/* returns \n[\n\t[1],\n\t[2],\n\t[3]\n] */\n```\n\n*Example 3:*\n\n```sqf\nmatrixTranspose \n[\n\t[1],\n\t[2],\n\t[3]\n];\n/* returns \n[\n\t[1,2,3]\n] */\n```","commands\\max.md":"The greater value of a and b.\n\n\n---\n*Syntaxes:*\n\na `max`  b\n\n---\n*Example 1:*\n\n```sqf\n3 max 2; // Result is 3\n```\n\n*Example 2:*\n\n```sqf\n-3 max -2; // Result is -2\n```","commands\\maxLoad.md":"Returns maximum load limit for a unit, uniform/vest/backpack containers, vehicle cargo, supply boxes and weapon holders.\n\n\n---\n*Syntaxes:*\n\n`maxLoad` container\n\n---\n*Example 1:*\n\n```sqf\nprivate _maxLoad = maxLoad _yaMum;\n```","commands\\members.md":"Return a list of members in given team.\n\n\n---\n*Syntaxes:*\n\n`members` team\n\n---\n*Example 1:*\n\n```sqf\n_members = members _team;\n```","commands\\menuAction.md":"Returns action stored in item on given path in `CT_MENU_STRIP` control.\n\n\n---\n*Syntaxes:*\n\n`menuAction` [idc, path]\n\ncontrol `menuAction` path\n\n---\n*Example 1:*\n\n```sqf\nmenuAction [120, [1, 0]];\n```\n\n*Example 2:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuAction [1, 0];\n```","commands\\menuAdd.md":"Adds new submenu entry into item on given path.\n\n\n---\n*Syntaxes:*\n\n`menuAdd` [idc, path, text]\n\ncontrol `menuAdd` [path, text]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuAdd [[], \"Custom Tools\"]; // Add new entry at the top level to the menu strip in Eden Editor\n```","commands\\menuChecked.md":"Returns if item on given path is checked or not.\n\n\n---\n*Syntaxes:*\n\n`menuChecked` [idc, path]\n\ncontrol `menuChecked` path\n\n---\n*Example 1:*\n\n```sqf\nprivate _isChecked = findDisplay 313 displayCtrl 120 menuChecked [0, 1];\n```","commands\\menuClear.md":"Removes all entries from given menu strip.\n\n\n---\n*Syntaxes:*\n\n`menuClear` idc\n\n`menuClear` control\n\n---\n*Example 1:*\n\n```sqf\nmenuClear (findDisplay 313 displayCtrl 120); // removes all entries from Eden Editor. Restart the editor to reset the menu.\n```","commands\\menuCollapse.md":"Collapses item on given path and all its children.\n\n\n---\n*Syntaxes:*\n\n`menuCollapse` [idc, path]\n\ncontrol `menuCollapse` path\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuCollapse [0];\n```","commands\\menuData.md":"Returns data stored in menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuData` [idc, path]\n\ncontrol `menuData` path\n\n---\n*Example 1:*\n\n```sqf\n// Create an entry which will return its data once clicked\nprivate _ctrlMenuStrip = findDisplay 313 displayCtrl 120;\nprivate _indexMain = _ctrlMenuStrip menuAdd [[], \"Custom Tools\"];\nprivate _indexData = _ctrlMenuStrip menuAdd [[_indexMain],\"This entry will print its data to system chat when clicked\"];\n_ctrlMenuStrip menuSetData [[_indexMain,_indexData], \"[objNull,'Some String',true]\"];\n_ctrlMenuStrip menuSetAction [[_indexMain,_indexData], \"systemChat (findDisplay 313 displayCtrl 120 menuData (menuHover (findDisplay 313 displayCtrl 120)));\"];\n```","commands\\menuDelete.md":"Deletes menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuDelete` [idc,path]\n\ncontrol `menuDelete` path\n\n---\n*Example 1:*\n\n```sqf\n(findDisplay 313 displayCtrl 120) menuDelete [1]; // removes the second entry from Eden Editor menu strip. Restart Eden Editor to reset the menu.\n```","commands\\menuEnable.md":"Enables or disables menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuEnable` [idc, path, enable]\n\ncontrol `menuEnable` [path, enable]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuEnable [0];\n```\n\n*Example 2:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuEnable [[0, 0, 1], false]; // Since Arma 3 v2.06\n```","commands\\menuEnabled.md":"Returns if menu entry on given path is enabled or not.\n\n\n---\n*Syntaxes:*\n\n`menuEnabled` [idc, path]\n\ncontrol `menuEnabled` path\n\n---\n*Example 1:*\n\n```sqf\n_isEnabled = findDisplay 313 displayCtrl 120 menuEnabled [0];\n```","commands\\menuExpand.md":"Expands given menu entry on given path and all its parents so entry is visible.\n\n\n---\n*Syntaxes:*\n\n`menuExpand` [idc, path]\n\ncontrol `menuExpand` path\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuExpand [0, 1];\n```","commands\\menuHover.md":"Returns path to menu entry mouse is currently hovering over.\n\n\n---\n*Syntaxes:*\n\n`menuHover` idc\n\n`menuHover` control\n\n---\n*Example 1:*\n\n```sqf\nprivate _path = menuHover (findDisplay 313 displayCtrl 120);\n```","commands\\menuPicture.md":"Returns picture set into item on given path.\n\n\n---\n*Syntaxes:*\n\n`menuPicture` [idc, path]\n\ncontrol `menuPicture` path\n\n---\n*Example 1:*\n\n```sqf\nprivate _picturePath = (findDisplay 313 displayCtrl 120) menuPicture [0, 1];\n```","commands\\menuSetAction.md":"Sets new action into menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuSetAction` [idc, path, action]\n\ncontrol `menuSetAction` [path, action]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetAction [[0, 1], \"systemChat 'Hello World!'\"];\n```","commands\\menuSetCheck.md":"Sets item on given path to be checked or not. By default menu strip entries are not checkable.\nOnce this command was executed, an entry can become checked and unchecked.\nIf an entry is checked is indicated by a tick to the left of the entry's text.\nSetting an entry to be checkable will overwrite set picture with `menuSetPicture`.\n\n\n---\n*Syntaxes:*\n\n`menuSetCheck` [idc, path, checked]\n\ncontrol `menuSetCheck` [path, checked]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetCheck [[0,1], true];\n```","commands\\menuSetData.md":"Sets data into menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuSetData` [idc, path, data]\n\ncontrol `menuSetData` [path, data]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetData [[0, 1], \"[true, player, 'Hello World!', 1337]\"];\n```","commands\\menuSetPicture.md":"Sets new picture into menu entry on given path. The picture will be replaced by a tick if the entry was set to checkable with `menuSetCheck`.\n\n\n---\n*Syntaxes:*\n\n`menuSetPicture` [idc, path, picture]\n\ncontrol `menuSetPicture` [path, picture]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetPicture [[0, 1], \"\\a3\\modules_f\\data\\iconunlock_ca.paa\"];\n```","commands\\menuSetShortcut.md":"Sets shortcut of given menu strip entry.\n\n\n---\n*Syntaxes:*\n\n`menuSetShortcut` [idc, path, shortcut]\n\ncontrol `menuSetShortcut` [path, shortcut]\n\n---\n*Example 1:*\n\n```sqf\n_ctrlMenuStrip menuSetShortcut [[0,0], 2048 + 0x16]; // ALT + U\n```","commands\\menuSetText.md":"Sets text of given menu strip entry.\n\n\n---\n*Syntaxes:*\n\n`menuSetText` [idc, path, text]\n\ncontrol `menuSetText` [path, text]\n\n---\n*Example 1:*\n\n```sqf\n_ctrlMenuStrip menuSetText [[0,0,1], \"Hello World!\"];\n```","commands\\menuSetURL.md":"Sets weblink (URL) of given menu strip entry, subject to **allowedHTMLLoadURIs[]** whitelisting in `CfgCommands` config.\n\n\n---\n*Syntaxes:*\n\n`menuSetURL` [idc, path, link]\n\ncontrol `menuSetURL` [path, link]\n\n---\n*Example 1:*\n\n```sqf\n_ctrlMenuStrip menuSetURL [[0,0,1], \"https://arma3.com/\"];\n```","commands\\menuSetValue.md":"Sets new value into menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuSetValue` [idc, path, value]\n\ncontrol `menuSetValue` [path, value]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuSetValue [[0, 1], 1337];\n```","commands\\menuShortcut.md":"Returns shortcut related to menu entry on given path in form of a bitflag. To get the shortcut text use `menuShortcutText`.\n\n\n---\n*Syntaxes:*\n\n`menuShortcut` [idc, path]\n\ncontrol `menuShortcut` path\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuShortcut [0, 1];\n```","commands\\menuShortcutText.md":"Returns a string containing shortcut text for menu item on the given path.\n\n\n---\n*Syntaxes:*\n\n`menuShortcutText` [idc, path]\n\ncontrol `menuShortcutText` path\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuShortcutText [1, 8]; // returns \"#\"\n```","commands\\menuSize.md":"Returns how many sub entries is in item on given path.\n\n\n---\n*Syntaxes:*\n\n`menuSize` [idc, path]\n\ncontrol `menuSize` path\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuSize [];\n```","commands\\menuSort.md":"Sorts subentries of item on given path by their text.\n\n\n---\n*Syntaxes:*\n\n`menuSort` [idc, path, AtoZ]\n\ncontrol `menuSort` [path, AtoZ]\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuSort [[], true];\n```","commands\\menuText.md":"Returns current text set in menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuText` [idc, path]\n\ncontrol `menuText` path\n\n---\n*Example 1:*\n\n```sqf\n_ctrlMenuStrip menuText [1];\n```","commands\\menuURL.md":"Returns current URL set in entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuURL` [idc, path]\n\ncontrol `menuURL` path\n\n---\n*Example 1:*\n\n```sqf\nfindDisplay 313 displayCtrl 120 menuURL [7, 0]; // returns \"https://community.bistudio.com/wiki/Eden_Editor\"\n```","commands\\menuValue.md":"Returns current value set in menu entry on given path.\n\n\n---\n*Syntaxes:*\n\n`menuValue` [idc, path]\n\n---\n","commands\\merge.md":"Merges two `HashMap`s.\n\n\n---\n*Syntaxes:*\n\nhashMap1 `merge` hashMap2\n\nhashMap1 `merge` [hashMap2, overwriteExisting]\n\n---\n*Example 1:*\n\n```sqf\n_hashMap merge _otherHashMap;\n```","commands\\min.md":"The smaller of a and b.\n\n\n---\n*Syntaxes:*\n\na `min`  b\n\n---\n*Example 1:*\n\n```sqf\n3 min 2 // Result is 2\n```\n\n*Example 2:*\n\n```sqf\n-3 min -2 // Result is -3\n```","commands\\mineActive.md":"Checks if the given mine is active.\n\n\n---\n*Syntaxes:*\n\n`mineActive` obj\n\n---\n*Example 1:*\n\n```sqf\nif (mineActive _mine) then {hint \"BOOM!\"};\n```","commands\\mineDetectedBy.md":"Returns `true` if mine has been detected by a given side\n\n\n---\n*Syntaxes:*\n\nmine `mineDetectedBy` faction\n\n---\n*Example 1:*\n\n```sqf\n(allMines select 0) mineDetectedBy west;\n```","commands\\missileTarget.md":"Returns a guided missile's target.\n\n\n---\n*Syntaxes:*\n\n`missileTarget` munition\n\n---\n*Example 1:*\n\n```sqf\nmissileTarget missile1;\n```","commands\\missileTargetPos.md":"Returns a guided missile's target position.\n\n\n---\n*Syntaxes:*\n\n`missileTargetPos` munition\n\n---\n*Example 1:*\n\n```sqf\nprivate _targetDistance = vehicle player distance missileTargetPos missile1;\n```","commands\\missionConfigFile.md":"Return root of mission `Description.ext` entries hierarchy.\n\n\n---\n*Syntaxes:*\n\n`missionConfigFile`\n\n---\n*Example 1:*\n\n```sqf\nfor \"_i\" from 0 to (count paramsArray - 1) do\n{\n\tmissionNamespace setVariable [configName ((missionConfigFile/\"Params\") select _i), paramsArray select _i];\n};\n```\n\n*Example 2:*\n\nTo define custom values in `description.ext`:\n```cpp\nclass myMissionConfig\n{\n\tclass mySetup\n\t{\n\t\tmyNumber = 3;\n\t\tmyArray[] = { 1, 2, 3 };\n\t\tmyText = \"LOL\";\n\t};\n};\n```\n\nTo read defined custom values from a script:\n\n```sqf\n_myNumber = getNumber (missionConfigFile >> \"myMissionConfig\" >> \"mySetup\" >> \"myNumber\");\n_myArray = getArray (missionConfigFile >> \"myMissionConfig\" >> \"mySetup\" >> \"myArray\");\n_myText = getText (missionConfigFile >> \"myMissionConfig\" >> \"mySetup\" >> \"myText\");\n```","commands\\missionDifficulty.md":"Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it is used one from player's options.\n\n\n---\n*Syntaxes:*\n\n`missionDifficulty`\n\n---\n*Example 1:*\n\n```sqf\n_number = missionDifficulty;\n```","commands\\missionEnd.md":"Returns mission end type and how it was ended or an empty array [] is mission was not ended.\n\n\n---\n*Syntaxes:*\n\n`missionEnd`\n\n---\n*Example 1:*\n\n```sqf\nprivate _endInfo = missionEnd;\n```\n\n*Example 2:*\n\n```sqf\nmissionEnd params [\"_endType\", \"_failMission\", \"_isFailed\"];\n```","commands\\missionName.md":"Return currently loaded mission file (path to mission.pbo, relative to game exe).\n\n\n---\n*Syntaxes:*\n\n`missionName`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"You are playing mission \"\"%1\"\"\", missionName];\n```","commands\\missionNameSource.md":"Return workshop-compatible currently loaded mission file (path to mission.pbo, relative to game exe).\n\n\n---\n*Syntaxes:*\n\n`missionNameSource`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"You are playing mission \"\"%1\"\"\", missionNameSource];\n```","commands\\missionNamespace.md":"Returns the global namespace attached to mission.\n\n\n---\n*Syntaxes:*\n\n`missionNamespace`\n\n---\n*Example 1:*\n\n```sqf\nmissionNamespace setVariable [\"StringVariable\", \"myString\"]; // same as: StringVarilable = \"myString\";\n_myStringValue = missionNamespace getVariable \"StringVariable\";\nhint _myStringValue; // hints \"myString\"\n```","commands\\missionProfileNamespace.md":"This namespace has the same lifetime as `profileNamespace` but is also connected to the mission it is saved from. See `saveMissionProfileNamespace` for more details.\n\n\n---\n*Syntaxes:*\n\n`missionProfileNamespace`\n\n---\n*Example 1:*\n\n```sqf\nprivate _currentMissionProfileNamespace = missionProfileNamespace;\n```","commands\\missionStart.md":"Returns date and time when mission started. Because this command returns the time of the actual start of the mission, it might not be available in `pre-init` or `init`, but is guaranteed to be available in `post-init` when <sqf inline>time > 0\n```.\n\n\n---\n*Syntaxes:*\n\n`missionStart`\n\n---\n*Example 1:*\n\n```sqf\nsetDate (missionStart select [0,5]);\n```\n\n*Example 2:*\n\nSet real date:\n\n```sqf\n//postInit = 1;\nif (isServer) then\n{\n\twaitUntil { time > 0 };\n\tsetDate (missionStart select [0, 5]);\n};\n```","commands\\missionVersion.md":"Returns the version of the current mission.\n* Mission from the [[2D Editor]]: 12\n* Mission from the `Eden Editor`: 15 and higher (for example current version for `Eden Editor` mission in Arma 3 v1.57 is 51)\n\n\n---\n*Syntaxes:*\n\n`missionVersion`\n\n---\n*Example 1:*\n\n```sqf\n_version = missionVersion;\n```","commands\\mod.md":"Remainder of a divided by b.\n\n\n---\n*Syntaxes:*\n\na `mod` b\n\n---\n*Example 1:*\n\n```sqf\n_remaining = 5 mod 2; // returns 1, as 5 divided by 2 is 2 &times; 2 + 1\n```","commands\\modelToWorld.md":"Translates relative position from object model space to world space in `PositionAGL` format.<br>\nThis command will take into account `vectorUp` of the object when calculating relative coordinates.\nFor the `PositionASL` version of this command, see `modelToWorldWorld`.\n\n\n---\n*Syntaxes:*\n\nmodel `modelToWorld` position\n\n---\n*Example 1:*\n\n```sqf\n_aboveAndBehindPlayer = player modelToWorld [0,-1,3];\n```","commands\\modelToWorldVisual.md":"Converts position from object model space to world space in render time scope. For ASL version see `modelToWorldVisualWorld`.\n\n\n---\n*Syntaxes:*\n\nobject `modelToWorldVisual`  modelPos\n\n---\n*Example 1:*\n\n```sqf\n_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];\n```","commands\\modelToWorldVisualWorld.md":"Converts position from object model space to world space in render time scope. For the `PositionAGL` version see `modelToWorldVisual`.\n\n\n---\n*Syntaxes:*\n\nobj `modelToWorldVisualWorld` modelPos\n\n---\n*Example 1:*\n\n```sqf\nplayer modelToWorldVisualWorld [0,1,0];\n```","commands\\modelToWorldWorld.md":"Converts position from object model space to world space in `PositionASL` format from the object's centre position.\n\n\n---\n*Syntaxes:*\n\nobj `modelToWorldWorld` modelPos\n\n---\n*Example 1:*\n\n```sqf\nprivate _playersFrontWorld = player modelToWorldWorld [0,1,0];\n```","commands\\modParams.md":"Returns list of mod parameters according to given options, values are in same order as the given options.\n\n\n---\n*Syntaxes:*\n\n`modParams` [modClass, options]\n\n---\n*Example 1:*\n\n```sqf\n_data = modParams [\"Kart\", [\"name\", \"logo\", \"picture\"]];\n```","commands\\moonIntensity.md":"Returns the intensity of the moon's brightness in range 0...1.\n\n\n---\n*Syntaxes:*\n\n`moonIntensity`\n\n---\n*Example 1:*\n\n```sqf\n_intensity = moonIntensity;\n```","commands\\moonPhase.md":"Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on **`setDate` [4804,7,13,0,0];** Use [[Arma_3_Utilities#Moon_Phases|Moon Phase Utility]] to find out date for a mission with desired moon.\n\n\n---\n*Syntaxes:*\n\n`moonPhase` date\n\n---\n*Example 1:*\n\n```sqf\n_currentMoonPhase = moonPhase date;\n```\n\n*Example 2:*\n\n```sqf\n// Returns array of dates for given year when moon is at its fullest\nfnc_fullMoonDates = \n{\n\tprivate _year = param [0, 2035];\n\tprivate [\"_date\", \"_phase\", \"_fullMoonDate\"];\n\tprivate _fullMoonPhase = 1;\n\tprivate _waxing = false;\n\tprivate _fullMoonDates = [];\n\tfor \"_i\" from dateToNumber [_year, 1, 1, 0, 0] to dateToNumber [_year, 12, 31, 23, 59] step 1 / 365 do\n\t{\n\t\t_date = numberToDate [_year, _i];\n\t\t_phase = moonPhase _date;\n\t\tcall\n\t\t{\n\t\t\tif (_phase > _fullMoonPhase) exitWith\n\t\t\t{\n\t\t\t\t_waxing = true;\n\t\t\t\t_fullMoonDate = _date;\n\t\t\t};\n\t\t\tif (_waxing) exitWith \n\t\t\t{\n\t\t\t\t_waxing = false;\n\t\t\t\t_fullMoonDates pushBack _fullMoonDate;\n\t\t\t};\n\t\t};\n\t\t_fullMoonPhase = _phase;\n\t};\n\t_fullMoonDates\n};\n\n//set random full moon date in year 1970\nsetDate selectRandom (1970 call fnc_fullMoonDates);\n```","commands\\morale.md":"Checks a current morale level of the unit (-1..+1).\n\n\n---\n*Syntaxes:*\n\n`morale` unit\n\n---\n*Example 1:*\n\n```sqf\nmorale (leader player);//result is 0.5\n```","commands\\move.md":"Let group move to given position. Active waypoints will be ignored when command is used.\n\n\n---\n*Syntaxes:*\n\ngroup `move` position\n\n---\n*Example 1:*\n\n```sqf\n_groupOne move position player;\n```","commands\\move3DENCamera.md":"Moves the [[get3DENCamera|Eden Editor camera]].\n\n\n---\n*Syntaxes:*\n\n[[move3DENCamera]]  [position, useOffset]\n\n---\n*Example 1:*\n\n```sqf\nmove3DENCamera [getPos player, true];\n```","commands\\moveInAny.md":"Moves unit to the first available seat in a vehicle.\n\n\n---\n*Syntaxes:*\n\nunit `moveInAny` vehicle\n\n---\n*Example 1:*\n\n```sqf\nplayer moveInAny tank;\n```","commands\\moveInCargo.md":"Moves a unit into a vehicle cargo position (immediately and without animation).\n\n\n---\n*Syntaxes:*\n\nunit `moveInCargo` vehicle\n\nunit `moveInCargo` [vehicle, cargoIndex, canReassign]\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne moveInCargo _jeepOne;\n```\n\n*Example 2:*\n\n```sqf\n_soldierOne moveInCargo [_jeepOne, 1];\n```","commands\\moveInCommander.md":"Move soldier into vehicle commander position (Immediate, no animation).\n\n\n---\n*Syntaxes:*\n\nunitName `moveInCommander` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne moveInCommander _tankOne;\n```","commands\\moveInDriver.md":"Moves soldier into vehicle driver position (immediate, no animation).\n\n\n---\n*Syntaxes:*\n\nunit `moveInDriver` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne moveInDriver _tankOne;\n```","commands\\moveInGunner.md":"Move soldier into vehicle gunner position (Immediate, no animation).\n\n\n---\n*Syntaxes:*\n\nunitName `moveInGunner` vehicle\n\n---\n*Example 1:*\n\n```sqf\nsoldierOne moveInGunner tankOne;\n```","commands\\moveInTurret.md":"Moves the soldier into the vehicle's turret. (Immediately, without animation).\n\n\n---\n*Syntaxes:*\n\nunitName `moveInTurret`  [vehicle, turretPath]\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne moveInTurret [_tank, [0, 0]];\n```","commands\\moveObjectToEnd.md":"Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects).\n\n\n---\n*Syntaxes:*\n\nmap `moveObjectToEnd` object\n\n---\n*Example 1:*\n\n-","commands\\moveOut.md":"Moves the soldier out of the vehicle.\n<br><br>\nNotes:\n* Works for both AI and player entities\n* AI unit gets back in - unless is under player command or combined with other sqf commands (`orderGetIn` false, `allowGetIn` false or `leaveVehicle`)\n* Respects the vehicle's lock state (same as [[Arma 3: Actions#Eject|action \"Eject\"]]) - unlike `doGetOut`, `commandGetOut`. It will work for `player` entities regardless though\n* Still executes when the vehicle is moving/flying (same as [[Arma 3: Actions#Eject|action \"Eject\"]]) - unlike `doGetOut`, `commandGetOut`\n* Without vehicle's position's get out animation - unlike [[Arma 3: Actions#Eject|action eject]], `doGetOut`, `commandGetOut`\n* Immediately - unlike [[Arma 3: Actions#Eject|action eject]], `doGetOut`, `commandGetOut`\n* Works also on dead units (same as [[Arma 3: Actions#Eject|action \"Eject\"]] (but one after another)) - unlike `doGetOut`, `commandGetOut`\n* Does not work for UAV crew\n* Does not work for `remoteControl`led units\n* Works on `unconscious` (same as [[Arma 3: Actions#Eject|action \"Eject\"]] (but one after another)) - unlike `doGetOut`, `commandGetOut` (unless AI under player command)\n\n\n---\n*Syntaxes:*\n\n`moveOut` soldier\n\nsoldier `moveOut` vehicle\n\n---\n*Example 1:*\n\n```sqf\n{if (lifeState _x == \"UNCONSCIOUS\") then { moveOut _x } } forEach crew cursorTarget;\n```\n\n*Example 2:*\n\nMove out player just before he dies:\n\n```sqf\nplayer addEventHandler [\n\t\"HandleDamage\", \n\tformat [\n\t\t'if (switch (_this select 1) do {\n\t\t\tcase \"\": { _this select 2 >= 1 };\n\t\t\tcase \"head\": {_this select 2 >= %1};\n\t\t\tcase \"body\": {_this select 2 >= %2};\n\t\t\tdefault {false};\n\t\t}) then {moveOut player}',\n\t\tgetNumber (configFile >> \"CfgFirstAid\" >> \"CriticalHeadHit\"),\n\t\tgetNumber (configFile >> \"CfgFirstAid\" >> \"CriticalBodyHit\")\n\t]\n];\n```","commands\\moveTarget.md":"Change information about a target.\n\n\n---\n*Syntaxes:*\n\ntarget `moveTarget` [position, typeAccuracy, posAccuracy]\n\n---\n*Example 1:*\n\n```sqf\n_moved = _target moveTarget [position player, 1, 1];\n```","commands\\moveTime.md":"Returns the current time of the most important RTM animation currently being played on the soldier.\n\n\n---\n*Syntaxes:*\n\n`moveTime` soldier\n\n---\n*Example 1:*\n\n```sqf\nmoveTime player;\n```","commands\\moveTo.md":"Low level command to person to move to given position.\n\n\n---\n*Syntaxes:*\n\nunit `moveTo` position\n\n---\n*Example 1:*\n\n```sqf\n_myAgent moveTo getPosATL player;\n```","commands\\moveToCompleted.md":"Check if latest low level moveTo command is finished.\n\n\n---\n*Syntaxes:*\n\n`moveToCompleted`  person\n\n---\n*Example 1:*\n\n```sqf\n_isCompleted = moveToCompleted _unit;\n```","commands\\moveToFailed.md":"Check if latest low level `moveTo` command failed.\n\n\n---\n*Syntaxes:*\n\n`moveToFailed` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _hasFailed = moveToFailed _unit;\n```","commands\\musicVolume.md":"Returns the current music volume (set by `fadeMusic`)\n\n\n---\n*Syntaxes:*\n\n`musicVolume`\n\n---\n*Example 1:*\n\n```sqf\nhint str musicVolume;\n```","commands\\name.md":"When argument is `Object`, the command returns the name given to a unit using the `setIdentity` instruction or selected randomly by the game engine if `setIdentity` has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.<br>\nWhen argument is `Location`, the location's name is returned. To return the textual value of a location use `text` command instead.\n\n\n---\n*Syntaxes:*\n\n`name` object\n\n`name` location\n\n---\n*Example 1:*\n\n```sqf\n_name = name player;\n```\n\n*Example 2:*\n\n```sqf\n_locationName = name myLocation;\n```\n\n*Example 3:*\n\n```sqf\nname nearestLocation [position player, \"Hill\"]; // \"\"\ntext nearestLocation [position player, \"Hill\"]; // \"Lesnoy Khrebet\"\n```","commands\\namedProperties.md":"Returns a list of named properties on Geometry LOD.\n\n\n---\n*Syntaxes:*\n\n`namedProperties`  object\n\n---\n*Example 1:*\n\n```sqf\nprivate _properties = namedProperties _object; // [[\"sbsource\",\"shadowvolume\"],[\"prefershadowvolume\",\"1\"],[\"reversed\",\"1\"],[\"buoyancy\",\"1\"]]\n```","commands\\nameSound.md":"Returns the nameSound of a person.\n\n\n---\n*Syntaxes:*\n\n`nameSound` person\n\n---\n*Example 1:*\n\n```sqf\nnameSound player;\n```","commands\\nearEntities.md":"[[Image:sphere_radius.jpg|right|200px]]\nFinds entities inside a sphere with the given radius. If the alternative syntax is used, only entities of given types or subtypes are listed. Entities returned are not sorted by distance. This command doesn't return dead entities or entities inside vehicles. If you need to return those, use `entities` command.\n\n\n---\n*Syntaxes:*\n\nposition `nearEntities` radius\n\nposition `nearEntities` [type, radius]\n\n---\n*Example 1:*\n\n```sqf\n_list = player nearEntities 20;\n_list = ASLToAGL getPosASL player nearEntities 50;\n_list = player nearEntities [\"Man\", 1000];\n_list = ASLToAGL getPosASL player nearEntities [\"LaserTarget\", 3000];\n_list = player nearEntities [[\"Car\", \"Motorcycle\", \"Tank\"], 50];\n_list = ASLToAGL getPosASL player nearEntities [[\"Man\", \"Air\", \"Car\", \"Motorcycle\", \"Tank\"], 200];\n```","commands\\nearestBuilding.md":"Finds the nearest building to a given object or position. A \"building\" is defined as an object that is of class \"House\" and contains a path LOD.\n\n\n---\n*Syntaxes:*\n\n`nearestBuilding` position\n\n---\n*Example 1:*\n\n```sqf\n_nBuilding = nearestBuilding player;\n```\n\n*Example 2:*\n\n```sqf\n_nBuilding = nearestBuilding position player;\n```","commands\\nearestLocation.md":"Return the closest location of specified class to a given position. Checked range is unlimited (i.e. covers the whole map).\n\n\n---\n*Syntaxes:*\n\n`nearestLocation` [position, locationClass]\n\n---\n*Example 1:*\n\n```sqf\n_nearestCity = nearestLocation [getPos player, \"nameCity\"];\n```\n\n*Example 2:*\n\n```sqf\n_anyNearestLocation = nearestLocation [player, \"\"];\n```","commands\\nearestLocations.md":"Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest.\n\n\n---\n*Syntaxes:*\n\n`nearestLocations` [position, [locationType1, locationType2, ...], radius, sortPosition]\n\n---\n*Example 1:*\n\n```sqf\n_nearbyLocations = nearestLocations [position player, [\"RockArea\", \"VegetationFir\"], 100];\n```\n\n*Example 2:*\n\nFind any of nearest locations:\n\n```sqf\nprivate _allLocationTypes = [];\n\"_allLocationTypes pushBack configName _x\" configClasses (configFile >> \"CfgLocationTypes\");\n{\n\tsystemChat format [\n\t\t\"%1 (%2) - %3m\", \n\t\t_x, \n\t\ttext _x, \n\t\tposition player distance _x\n\t];\n} forEach nearestLocations [player, _allLocationTypes, 500];\n```","commands\\nearestLocationWithDubbing.md":"Find the nearest location having a non-empty speech.\n\n\n---\n*Syntaxes:*\n\n`nearestLocationWithDubbing` position\n\n---\n*Example 1:*\n\n```sqf\n_location = nearestLocationWithDubbing player;\n```\n\n*Example 2:*\n\n```sqf\n_location = nearestLocationWithDubbing getMarkerPos \"myMarker\";\n```","commands\\nearestMines.md":"Returns a list of nearest mines of the given types to the given position or object, within the specified distance.\nIf more than one mine are found they will be ordered by proximity by default, the closest one will be first in the array. The sorting can be turned off.\n\n\n---\n*Syntaxes:*\n\n`nearestMines` [position, types, radius, sort, 2Dmode]\n\n---\n*Example 1:*\n\n```sqf\nnearestMines [player, [\"MineBase\"], 20];\n```\n\n*Example 2:*\n\n```sqf\nnearestMines [position player, [\"DirectionalBombBase\"], 500, true];\n```\n\n*Example 3:*\n\n```sqf\nnearestMines [[2716,2949,0], [\"APERSTripMine_Wire_Ammo\", \"APERSMine_Range_Ammo\"], 100, false, true];\n```\n\n*Example 4:*\n\nReturn every mine in 50 metres radius around player sorted by distance:\n\n```sqf\nnearestMines [player, [], 50];\n```","commands\\nearestObject.md":"Returns the nearest object of given type (or inherited classes) to given position within a sphere. Hardcoded radius is 50 meters. Unlike with `nearestObjects`, where distance is measured in 2D space, `nearestObject` will be closest object in 3D space.\n\n\n---\n*Syntaxes:*\n\n`nearestObject` [position, type]\n\n`nearestObject` position\n\nposition `nearestObject` typeOrId\n\nposition `nearestObject` id\n\n---\n*Example 1:*\n\n```sqf\n_nObject = nearestObject [2345, 6789];\n_nObject = nearestObject [player, \"StreetLamp\"];\n```\n\n*Example 2:*\n\nReturn the object with ID 123456:\n\n```sqf\n_nObject = [0,0,0] nearestObject 123456;\n```\n\n*Example 3:*\n\n```sqf\n_nObject = getPos player nearestObject \"StreetLamp\";\n```\n\n*Example 4:*\n\nReturn the nearest object with (`typeOf` _nObject == \"#XXXX\") -> #mark, #slop, etc. Unlimited search range:\n\n```sqf\n_nObject = _position nearestObject -1;\n```\n\nReturn the nearest object with (`typeOf` _nObject != \"\"). Search range is 50m:\n\n```sqf\n_nObject = nearestObject _position;\n```\n\n*Example 5:*\n\n(See also `allMissionObjects`):\n\n```sqf\n_blood\t= nearestObject [player, \"#slop\"];\n_step\t= nearestObject [player, \"#mark\"];\n_track\t= nearestObject [player, \"#track\"];\n_crater\t= nearestObject [player, \"#crater\"];\n```","commands\\nearestObjects.md":"Returns a list of nearest objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered by proximity, the closest one will be first in the array. If an object is given as the center and the filter criteria applies to it, it will be the first result in the list. Alternatively, you can use `nearObjects` command, which doesn't sort results.\n<br><br>\nA list of ClassName types (e.g **Tank**) can be found in `CfgVehicles`.\n\n\n---\n*Syntaxes:*\n\n`nearestObjects` [position, types, radius, 2Dmode]\n\n---\n*Example 1:*\n\n```sqf\nnearestObjects [player, [\"Car\", \"Tank\"], 200];\n```\n\n*Example 2:*\n\n```sqf\nnearestObjects [player, [\"house\"], 200];\n```\n\n*Example 3:*\n\n```sqf\nnearestObjects [[2716,2949,0], [\"Car\", \"Truck\"], 100];\n```\n\n*Example 4:*\n\nReturn every object in 50 metres radius around player:\n\n```sqf\nnearestObjects [player, [], 50];\n```","commands\\nearestTerrainObjects.md":"Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). \nIn contrast to `nearestObjects` this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.<br><br>\nPossible type names:\n{{Columns|7|\n* **\"BUILDING\"**\n* **\"BUNKER\"**\n* **\"BUSH\"**\n* **\"BUSSTOP\"**\n* **\"CHAPEL\"**\n* **\"CHURCH\"**\n* **\"CROSS\"**\n* **\"FENCE\"**\n* **\"FOREST BORDER\"**\n* **\"FOREST SQUARE\"**\n* **\"FOREST TRIANGLE\"**\n* **\"FOREST\"**\n* **\"FORTRESS\"**\n* **\"FOUNTAIN\"**\n* **\"FUELSTATION\"**\n* **\"HIDE\"**\n* **\"HOSPITAL\"**\n* **\"HOUSE\"**\n* **\"LIGHTHOUSE\"**\n* **\"MAIN ROAD\"**\n* **\"POWER LINES\"**\n* **\"POWERSOLAR\"**\n* **\"POWERWAVE\"**\n* **\"POWERWIND\"**\n* **\"QUAY\"**\n* **\"RAILWAY\"**\n* **\"ROAD\"**\n* **\"ROCK\"**\n* **\"ROCKS\"**\n* **\"RUIN\"**\n* **\"SHIPWRECK\"**\n* **\"SMALL TREE\"**\n* **\"STACK\"**\n* **\"TOURISM\"**\n* **\"TRACK\"**\n* **\"TRAIL\"**\n* **\"TRANSMITTER\"**\n* **\"TREE\"**\n* **\"VIEW-TOWER\"**\n* **\"WALL\"**\n* **\"WATERTOWER\"**\n}}\n\n\n</spoiler>\n\n\n---\n*Syntaxes:*\n\n`nearestTerrainObjects` [position, types, radius, sort, 2Dmode]\n\n---\n*Example 1:*\n\n```sqf\nnearestTerrainObjects [player, [\"Tree\", \"Bush\"], 200];\n```\n\n*Example 2:*\n\n```sqf\nnearestTerrainObjects [player, [\"House\"], 200];\n```\n\n*Example 3:*\n\n```sqf\nnearestTerrainObjects [[2716, 2949, 0], [\"Chapel\", \"Fuelstation\"], 100];\n```\n\n*Example 4:*\n\nReturn every terrain object in 50 metres radius around player sorted, closest first:\n\n```sqf\nnearestTerrainObjects [player, [], 50];\n```\n\n*Example 5:*\n\nReturn every terrain object in 50 metres radius around player unsorted:\n\n```sqf\nnearestTerrainObjects [player, [], 50, false];\n```\n\n*Example 6:*\n\nHide all terrain objects `nearestTerrainObjects` could find:\n\n```sqf\nif (isServer) then\n{\n\tprivate _allTerrainObjects = nearestTerrainObjects\n\t[\n\t\t[worldSize / 2, worldSize / 2],\n\t\t[],\n\t\tworldSize * sqrt 2 / 2,\n\t\tfalse\n\t];\n\n\t{ _x hideObjectGlobal true } forEach _allTerrainObjects;\n};\n```","commands\\nearObjects.md":"Find objects (Units, Vehicles, Dead, Map Objects) in a sphere with given radius. The first object in the returned array is `not` necessarily the closest one. If you need returned objects to be sorted by distance, use `nearestObjects`. If typeName is given, only objects of given type (or its subtype) are listed.\n\n\n---\n*Syntaxes:*\n\nposition `nearObjects` radius\n\nposition `nearObjects` [typeName, radius]\n\n---\n*Example 1:*\n\n```sqf\n_list = position player nearObjects 50;\n```\n\n*Example 2:*\n\n```sqf\n_list = [_xpos,_ypos] nearObjects [\"House\", 20];\n```\n\n*Example 3:*\n\n```sqf\n_list = player nearObjects 20;\n```","commands\\nearObjectsReady.md":"Check whether all data are loaded to nearObjects will return in reasonable time.\n\n\n---\n*Syntaxes:*\n\nposition `nearObjectsReady` radius\n\n---\n*Example 1:*\n\n```sqf\n_twnpos nearObjectsReady 500; //from ALICE\n```","commands\\nearRoads.md":"Find the road segments within the circle of given radius.\n\n\n---\n*Syntaxes:*\n\npos `nearRoads` radius\n\n---\n*Example 1:*\n\n```sqf\n_list = player nearRoads 50;\n```\n\n*Example 2:*\n\n```sqf\n_list = (position _unit) nearRoads 50;\n```\n\n*Example 3:*\n\n```sqf\n_list = [1800,5700] nearRoads 50;\n```","commands\\nearSupplies.md":"Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.\n\n\n---\n*Syntaxes:*\n\norigin `nearSupplies` radius\n\norigin `nearSupplies` [typeName, radius]\n\n---\n*Example 1:*\n\n```sqf\n_list = player nearSupplies 50;\n```","commands\\nearTargets.md":"Returns a list of targets within the defined range. \"Targets\" are not restricted to enemy units.\n\n\n---\n*Syntaxes:*\n\nunit `nearTargets`  range\n\n---\n*Example 1:*\n\n```sqf\nplayer nearTargets 100;\n// can return e.g\n/*\n\t[\n\t\t[[2555.33,2535.33,1.32708],\"SoldierEB\",EAST,214222,EAST 1-1-A:1],\n\t\t[[2550.39,2482.5,1.32696],\"SoldierWB\",WEST,0,WEST 1-1-A:2]\n\t]\n*/\n```","commands\\needReload.md":"Return how much vehicle wants to reload its weapons.\n\n\n---\n*Syntaxes:*\n\n`needReload` vehicle\n\n---\n*Example 1:*\n\n```sqf\n_seriousness = needReload _vehicle;\n```\n\n*Example 2:*\n\n```sqf\nif (needReload player == 1) then { reload player };\n```","commands\\netId.md":"Unique ID of object or group.  As this command is MP only, you can use `BIS_fnc_netId`, which extends the use to SP as well. See also: `BIS_fnc_objectVar`\n\n\n---\n*Syntaxes:*\n\n`netId`  var\n\n---\n*Example 1:*\n\n```sqf\n_playerNetId = netId player;\n```","commands\\netObjNull.md":"A non-existing network object.\n\n\n---\n*Syntaxes:*\n\n`netObjNull`\n\n---\n*Example 1:*\n\n-","commands\\newOverlay.md":"Creates the new overlay dialog for the specified type of overlay.\n\n\n---\n*Syntaxes:*\n\nmap `newOverlay` config\n\n---\n*Example 1:*\n\n-","commands\\nextMenuItemIndex.md":"Returns the next available menu item index.\n\n\n---\n*Syntaxes:*\n\n`nextMenuItemIndex` map\n\n---\n*Example 1:*\n\n-","commands\\nextWeatherChange.md":"Return the remaining time (in seconds) over which the current weather change will occur.\n<br>\nWhen a weather change finishes, the game engine will automatically generate a new random weather change over a realistic time period (minimum of 90 minutes).\n\n\n---\n*Syntaxes:*\n\n`nextWeatherChange`\n\n---\n*Example 1:*\n\n```sqf\n_seconds = nextWeatherChange;\n```","commands\\nil.md":"Nil value. This value can be used to undefine existing `variables`.\n\n\n---\n*Syntaxes:*\n\n`nil`\n\n---\n*Example 1:*\n\n```sqf\nvariableToDestroy = nil;\n```\n\n*Example 2:*\n\n```sqf\nprivate _variable = 50;\n_variable = nil;\nhint format [\"Variable = %1\", _variable]; // will display \"Variable = any\" (Arma 3)\n```","commands\\nMenuItems.md":"Returns the total number of user-added menu items belonging to the given menu.\n\n\n---\n*Syntaxes:*\n\nmap `nMenuItems` menuName\n\nmap `nMenuItems`  index\n\n---\n*Example 1:*\n\n-","commands\\not.md":"`not` a is exactly the same as `! a`.\n\n\n---\n*Syntaxes:*\n\n`not` a\n\n---\n*Example 1:*\n\n```sqf\nnot false; // returns true\n```","commands\\numberOfEnginesRTD.md":"Returns the number of engines a helicopter has.\n\n\n---\n*Syntaxes:*\n\n`numberOfEnginesRTD` helicopterRTD\n\n---\n*Example 1:*\n\n```sqf\n_engineCount = numberOfEnginesRTD vehicle player;\n```","commands\\numberToDate.md":"Convert float number to a date.\n\n\n---\n*Syntaxes:*\n\n`numberToDate` [year, time]\n\n---\n*Example 1:*\n\n```sqf\nsetDate numberToDate [2008, 0.5324]; // sets date to [2008,7,13,7,49]\n```","commands\\objectCurators.md":"Returns array with all curators which can edit given object.\n\n\n---\n*Syntaxes:*\n\n`objectCurators` obj\n\n---\n*Example 1:*\n\n```sqf\n_curatorsThatcanEdit = objectCurators BIS_Tank;\n```","commands\\objectFromNetId.md":"Get object with given unique ID. If object is a `group` use `groupFromNetId`. As this command is MP only, you can use `BIS_fnc_objectFromNetId`, which extends the use to SP as well.\n\n\n---\n*Syntaxes:*\n\n`objectFromNetId` id\n\n---\n*Example 1:*\n\n```sqf\nobjectFromNetId \"2:3\"\n```","commands\\objectParent.md":"Returns parent of an object if the object is proxy, otherwise `objNull`. In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.<br><br>\nAnother good use of `objectParent` is when a static weapon is known and one needs to check if it is assembled or not. **`objectParent` _staticWeapon** will return `objNull` if weapon is unpacked, or backpack object if packed.<br><br>\n[[Image:objectParent.jpg|600px]]\n\n\n---\n*Syntaxes:*\n\n`objectParent` object\n\n---\n*Example 1:*\n\n```sqf\n_weaponholder = objectParent _mybackpack;\n```\n\n*Example 2:*\n\nCreate and place created backpack in front of player:\n\n```sqf\n_backpackContainer = \"B_TacticalPack_rgr\" createVehicle [0, 0, 0];\n_weaponHolder = objectParent _backpackContainer;\n_weaponHolder setPos (player modelToWorld [0, 5, 0]);\n```\n\n*Example 3:*\n\nCheck if player is on foot:\n\n```sqf\n_isOnFoot = isNull objectParent player;\n```\n\n*Example 4:*\n\nDetect if player is in commander turret of a vehicle:\n\n```sqf\n_isVehicleCommander = player isEqualTo commander objectParent player;\n```","commands\\objNull.md":"A non-existent `Object`. To compare non-existent objects use `isNull` or `isEqualTo`:\n\n```sqf\nobjNull == objNull;\t\t\t// false\nisNull objNull;\t\t\t\t// true\nobjNull isEqualTo objNull;\t// true\n```\n\n\n---\n*Syntaxes:*\n\n`objNull`\n\n---\n*Example 1:*\n\n```sqf\nplayer == player; // false if player is null\n```\n\n*Example 2:*\n\n```sqf\nisNull player; // true if player is null\n```\n\n*Example 3:*\n\n```sqf\nstr objNull // <NULL-object>\n```\n\n*Example 4:*\n\n```sqf\nposition objNull // [0,0,0]\n```","commands\\objStatus.md":"Sets the status of an objective that was defined in `briefing.html`.\n\nStatus may be one of:\n* \"ACTIVE\"\n* \"FAILED\"\n* \"DONE\"\n* \"HIDDEN\"\n\nTo refer to an objective that is named \"OBJ_1\", for example, use only the index number in this command (i.e. \"1\" objStatus \"HIDDEN\").\n\n\n---\n*Syntaxes:*\n\nobjectivenumber `objStatus` status\n\n---\n*Example 1:*\n\n```sqf\n\"1\" objStatus \"DONE\";\n``` \nMarks the objective named \"OBJ_1\" as completed.","commands\\onBriefingGroup.md":"Select a sound declared in the `Description.ext` of the mission to be played the first time the `Group tab` is selected in the `briefing`.\n\n\n---\n*Syntaxes:*\n\n`onBriefingGroup`  soundName\n\n---\n*Example 1:*\n\n```sqf\nonBriefingGroup \"GroupVoiceOver\";\n```","commands\\onBriefingNotes.md":"Select a sound declared in the `Description.ext` of the mission to be played the first time the `Notes tab` is selected in the `briefing`.\n\n\n---\n*Syntaxes:*\n\n`onBriefingNotes`  soundName\n\n---\n*Example 1:*\n\n```sqf\nonBriefingNotes \"NotesVoiceOver\";\n```","commands\\onBriefingPlan.md":"Select a sound declared in the `Description.ext` of the mission to be played the first time the `Plan tab` is selected in the `briefing`.\n\n\n---\n*Syntaxes:*\n\n`onBriefingPlan`  soundName\n\n---\n*Example 1:*\n\n```sqf\nonBriefingPlan \"PlanVoiceOver\";\n```","commands\\onBriefingTeamSwitch.md":"Select a sound defined in the `CfgSounds` of the mission to be played the first time the TeamSwitch tab is selected in the `briefing`.\n\n\n---\n*Syntaxes:*\n\n`onBriefingTeamSwitch` soundName\n\n---\n*Example 1:*\n\n```sqf\nonBriefingTeamSwitch \"TeamSwitchVoiceOver\";\n```","commands\\onCommandModeChanged.md":"Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or `hcShowBar` scripting command. Groups hc mode must contain at least one group for this command to work (see `High Command`). Attached code receives `_isHighCommand` boolean.\n\n\n---\n*Syntaxes:*\n\n`onCommandModeChanged` code\n\n---\n*Example 1:*\n\n```sqf\n//Examples in-use can be found in:\n\n//ca\\modules\\HC\\data\\scripts\\HC_GUI.sqf\n//A3\\modules_f\\HC\\data\\scripts\\HC_GUI.sqf\n```","commands\\onDoubleClick.md":"Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state\n\n\n---\n*Syntaxes:*\n\nmap `onDoubleClick` command\n\n---\n*Example 1:*\n\n-","commands\\onEachFrame.md":"Runs given statement every frame.\n\n\n---\n*Syntaxes:*\n\n`onEachFrame` statement\n\n---\n*Example 1:*\n\n```sqf\nonEachFrame { hintSilent str position player}; // Hints position every frame\n```\n\n*Example 2:*\n\nPrivate variables defined outside of the `onEachFrame` scope are not inherited:\n\n```sqf\n_myvar = \"bob\";\nmyvar = \"bill\";\nonEachFrame { hintSilent str [_myvar, myvar]; };\n// Result: [any, \"bill\"]\n```\n\n*Example 3:*\n\nOnly one `onEachFrame` loop can exist at any time:\n\n```sqf\nonEachFrame { player sideChat \"first\"; };\nonEachFrame { player sideChat \"second\"; };\n// Result: \"second\", \"second\", \"second\"...\n```\n\nNote how \"first\" never gets shown even though it precedes \"second\". This is because script thread is executing within the same frame and first `onEachFrame` is overwritten before it has a chance to execute its statement.\n\n*Example 4:*\n\nScript suspension is not permitted within `onEachFrame` scope:\n\n```sqf\n// Will throw an error\nonEachFrame { sleep 1; };\n```\n\n*Example 5:*\n\n```sqf\nonEachFrame {}; // Reset event\n```","commands\\onGroupIconClick.md":"Defines an action performed when player clicked on group marker (3D or in a map). The code executed once.\nThis EH, unlike `onGroupIconOverEnter` and `onGroupIconOverLeave`, has one more param which returns 1 if RMB was pressed, 0 otherwise.\n\n\n---\n*Syntaxes:*\n\n`onGroupIconClick` command\n\n---\n*Example 1:*\n\n```sqf\nonGroupIconClick\n{\n\t// passed values for _this are:\n\tparams [\"_is3D\", \"_group\", \"_wpID\", \"_posX\", \"_posY\", \"_shift\", \"_ctrl\", \"_alt\"];\n\n\t// before Arma 3\n\t_is3D = _this select 0;\n\t_group = _this select 1;\n\t_wpID = _this select 2;\n\t_RMB = _this select 3;\n\t_posx = _this select 4;\n\t_posy = _this select 5;\n\t_shift = _this select 6;\n\t_ctrl = _this select 7;\n\t_alt = _this select 8;\n\n\t_message = format [\"____ Info ____\"];\n\t{_message = _message + format [\"\\n %1\", _x]} forEach _this;\n\thint _message;\n};\n```","commands\\onGroupIconOverEnter.md":"Defines an action performed when player moves pointer over group marker (3D or in a map). The code will execute continuously while pointer is over icon.\n\n\n---\n*Syntaxes:*\n\n`onGroupIconOverEnter` command\n\n---\n*Example 1:*\n\n```sqf\nonGroupIconOverEnter\n{\n\t// passed values for _this are:\n\tparams [\"_is3D\", \"_group\", \"_wpID\", \"_posX\", \"_posY\", \"_shift\", \"_ctrl\", \"_alt\"];\n\n\t// passed values for _this are:\n\t_is3D = _this select 0;\n\t_group = _this select 1;\n\t_wpID = _this select 2;\n\t_posx = _this select 3;\n\t_posy = _this select 4;\n\t_shift = _this select 5;\n\t_ctrl = _this select 6;\n\t_alt = _this select 7;\n\n\t_message = format [\"____ Info ____\"];\n\t{_message = _message + format [\"\\n %1\",_x]} forEach _this;\n\thint _message;\n}\n```","commands\\onGroupIconOverLeave.md":"Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once.\n\n\n---\n*Syntaxes:*\n\n`onGroupIconOverLeave` command\n\n---\n*Example 1:*\n\n```sqf\nonGroupIconOverLeave\n{\n\t// passed values for _this are:\n\tparams [\"_is3D\", \"_group\", \"_wpID\", \"_posX\", \"_posY\", \"_shift\", \"_ctrl\", \"_alt\"];\n\n\t// before Arma 3\n\t_is3D = _this select 0;\n\t_group = _this select 1;\n\t_wpID = _this select 2;\n\t_posx = _this select 3;\n\t_posy = _this select 4;\n\t_shift = _this select 5;\n\t_ctrl = _this select 6;\n\t_alt = _this select 7;\n\n\t_message = format [\"____ Info ____\"];\n\t{ _message = _message + format [\"\\n %1\",_x] } forEach _this;\n\thint _message;\n};\n```","commands\\onHCGroupSelectionChanged.md":"Defines an action performed when `high command` group selection has been changed.<br>\nCommand receives 2 variables:\n* _group: `Group` - last selected/deselected group\n* _isSelected: `Boolean` - new selection state of the specific group\nThe code is executed on every `hc` group selection change until it is replaced or removed (see *(Reference HashLink \"#Example 3\")*).\n\n\n---\n*Syntaxes:*\n\n`onHCGroupSelectionChanged` code\n\n---\n*Example 1:*\n\n```sqf\nonHCGroupSelectionChanged {\n\tif (_isSelected) then\n\t{\n\t\thint format [\"Group %1 has been selected.\", _group];\n\t}\n\telse\n\t{\n\t\thint format [\"Group %1 has been deselected.\", _group];\n\t};\n};\n```\n\n*Example 2:*\n\n```sqf\nonHCGroupSelectionChanged \"player globalChat 'HC group selection has been changed.';\";\n```\n\n*Example 3:*\n\nRemove event handler:\n\n```sqf\nonHCGroupSelectionChanged \"\";\n// or\nonHCGroupSelectionChanged {};\n```","commands\\onMapSingleClick.md":"Defines the action performed when user clicks in map by executing command string. The code is executed on every click, until the `command` is \n* removed via <sqf inline>onMapSingleClick \"\"\n```, or\n* replaced by <sqf inline>onMapSingleClick \"SomeOtherCommand(s)\"\n```\n\nIn {{arma3}} the code should return `true` only if you wish to override default engine handling of the mouse click on map (see *(Reference Link \"#Example 4\")*).<br>\nFor older games, when click is processed, code should ultimately return `true` back to the engine. If `false` is returned, default processing by the game engine is done.\nReturn value of any other type (including `Nothing`) is an error. In such case default processing by the game engine is done, and error message may be displayed.\n\n\n---\n*Syntaxes:*\n\n`onMapSingleClick` command\n\nparams `onMapSingleClick` command\n\n---\n*Example 1:*\n\n`{{arma1}}:` Creates a soldier unit at the position clicked:\n\n```sqf\nonMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\";\n```\n\n*Example 2:*\n\n`{{arma1}}:` Orders \"grp1\" to move to position clicked. Disables further map-click actions:\n\n```sqf\nonMapSingleClick \"grp1 move _pos; onMapSingleClick ''; true\";\n```\n\n*Example 3:*\n\n`{{ofp}}:` Single quotes cannot be used for string definition, so two double-quotes have to be used instead:\n\n```sqf\nonMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\";\n```\n\n*Example 4:*\n\n```sqf\n// The following code will disable Shift+click waypoint marker creation\nonMapSingleClick {_shift};\n```\n\n*Example 5:*\n\n```sqf\n// Pass params to onMapSingleClick code\nplayer onMapSingleClick { hint (\"Hello \" + name _this) }; // Hello KK\n```\n\n*Example 6:*\n\n```sqf\n// Pass params to onMapSingleClick code -and- disable Shift+click waypoint marker creation\n player onMapSingleClick \"hint (\"\"Hello \"\" + name _this); _shift\"; // Hello KK\n```","commands\\onPlayerConnected.md":"This command will execute the provided code on the server whenever a player connects to a multiplayer session.\n\n\n---\n*Syntaxes:*\n\n`onPlayerConnected` code\n\n---\n*Example 1:*\n\n```sqf\nonPlayerConnected \"[_id, _name] execVM 'PlayerConnected.sqf';\";\n```\n\n*Example 2:*\n\n```sqf\nonPlayerConnected { diag_log [_id, _uid, _name] };\n```\n\n*Example 3:*\n\nFrom {{arma3}} v1.49:\n\n```sqf\nonPlayerConnected {\n\tsomevar = random 123;\n\t_owner publicVariableClient \"somevar\";\n\t// this will define \"somevar\" to a random value on the joining machine\n};\n```","commands\\onPlayerDisconnected.md":"This command will execute attached code whenever a player is leaving an MP session. The code will receive a number of special variables:\n\n\n---\n*Syntaxes:*\n\n`onPlayerDisconnected`  code\n\n---\n*Example 1:*\n\n```sqf\nonPlayerDisconnected {diag_log [_id, _uid, _name]};\n```\n\n*Example 2:*\n\n```sqf\nonPlayerDisconnected {\n\tif (count allPlayers == 0) then {\n\t\tendMission \"END1\";\n\t};\n};\n```","commands\\onPreloadFinished.md":"Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start.\n\n\n---\n*Syntaxes:*\n\n`onPreloadFinished` command\n\n---\n*Example 1:*\n\n```sqf\nonPreloadFinished {TAG_ReceivingScreenDone = true};\n```\n\n*Example 2:*\n\n```sqf\n// removes the event immediately after the first run again\nonPreloadFinished { TAG_ReceivingScreenDone = true; onPreloadFinished \"\" };\n```","commands\\onPreloadStarted.md":"Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start.\n\n\n---\n*Syntaxes:*\n\n`onPreloadStarted` command\n\n---\n*Example 1:*\n\n```sqf\nonPreloadStarted {diag_log \"preload started\"};\n```","commands\\onShowNewObject.md":"Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position,\n\n\n---\n*Syntaxes:*\n\nmap `onShowNewObject` command\n\n---\n*Example 1:*\n\n-","commands\\onTeamSwitch.md":"Defines an action performed when the team switch is finished.\nCommandset receives the following special variables: `_from` object previous unit, `_to` object current unit.\nConsecutive use of onTeamSwitch command will overwrite previously set commandset.\n\n\n---\n*Syntaxes:*\n\n`onTeamSwitch` commandset\n\n---\n*Example 1:*\n\n```sqf\nonTeamSwitch { [_from, _to] execVM \"myTeamSwitchScript.sqf\"; };\n```","commands\\openCuratorInterface.md":"Force opens curator interface.\n\n\n---\n*Syntaxes:*\n\n`openCuratorInterface`\n\n---\n*Example 1:*\n\nOpen interface:\n\n```sqf\nopenCuratorInterface;\n```\n\n*Example 2:*\n\nClose interface:\n\n```sqf\nfindDisplay 312 closeDisplay 2;\n```\n\n*Example 3:*\n\nDetect if user used \"Zeus\" key to open curator interface in the absence of event handler for it:\n\n```sqf\nfindDisplay 46 displayAddEventHandler [\"KeyDown\", {\n\tif (inputAction \"CuratorInterface\" > 0) then\n\t{\n\t\thint \"Curator interface is open\";\n\t};\n\tfalse\n}];\n```","commands\\openDLCPage.md":"Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)\n\n\n---\n*Syntaxes:*\n\n`openDLCPage` dlcID\n\n---\n*Example 1:*\n\n`openDLCPage` 288520","commands\\openGPS.md":"Opens or closes minimap if player has **\"ItemGPS\"}} linked in inventory and {{hl|\"MinimapDisplayComponent\"** is not disabled with `enableInfoPanelComponent`. Returns `true` on success. If more than one minimap is open (see `infoPanels`, `infoPanel`) each call to the command will close only 1 minimap. Visibility of minimap can be checked with `visibleGPS` command.\n\n\n---\n*Syntaxes:*\n\n`openGPS` open\n\n---\n*Example 1:*\n\n```sqf\nplayer linkItem \"ItemGPS\";\nprivate _success = openGPS true;\n```\n\n*Example 2:*\n\nTo close all opened minimaps:\n\n```sqf\nwhile { openGPS false } do { };\n// or\nwhile { visibleGPS } do { openGPS false };\n```","commands\\openMap.md":"Opens or closes in-game map.\n\n\n---\n*Syntaxes:*\n\n`openMap` show\n\n`openMap` [show, forced]\n\n---\n*Example 1:*\n\n```sqf\nopenMap true;\n```\n\n*Example 2:*\n\n```sqf\nopenMap [true, true];\n```","commands\\openSteamApp.md":"Opens a Steam application, returns false if it was not possible to run the application.\n\n\n---\n*Syntaxes:*\n\n`openSteamApp` appID\n\n---\n*Example 1:*\n\n```sqf\nopenSteamApp 553228;\n```","commands\\openYoutubeVideo.md":"Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with `watch?v=...`. If the user has Steam overlay disabled, the command will display appropriate message to the user and return `false`.\n\n\n---\n*Syntaxes:*\n\n`openYoutubeVideo` youTubeUrl\n\n---\n*Example 1:*\n\n```sqf\n// open http://www.youtube.com/watch?v=UBIAbm7Rt78\n_isOpened = openYoutubeVideo \"watch?v=UBIAbm7Rt78\";\n```","commands\\opfor.md":"Pre-defined variable for the opfor `side`.\n\n\n---\n*Syntaxes:*\n\n`opfor`\n\n---\n*Example 1:*\n\n```sqf\nif (side player == opfor) then\n{\n\thint \"OPFOR\";\n};\n```","commands\\or.md":"Returns `true` if one or both conditions are `true`. In case of the alternative syntax, [lazy evaluation](https://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures) is used. That means that if left operand is `true`, evaluation of the right side is skipped completely.\n\n\n---\n*Syntaxes:*\n\na `or` b\n\na `or` b\n\n---\n*Example 1:*\n\n```sqf\nif (_obj1 or (_enemycount == 0) or (not alive _enemyGeneral)) then { hint \"you win !\"; };\n```\n\n*Example 2:*\n\n```sqf\n// without lazy evaluation, select would throw an error in the event of an empty array\nif ((count _array == 0) or { (_array select 0) != player }) then\n{\n\thint \"It works!\";\n};\n```","commands\\orderGetIn.md":"Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything.\n\n\n---\n*Syntaxes:*\n\nunitArray `orderGetIn` order\n\n---\n*Example 1:*\n\n```sqf\n[_unitOne, _unitTwo] orderGetIn true;\n```\n\n*Example 2:*\n\n```sqf\n[_unitOne, _unitTwo] orderGetIn false;\n```","commands\\overcast.md":"Return the current overcast level. Zero is clear skies, one is maximum cloud cover.\n\n\n---\n*Syntaxes:*\n\n`overcast`\n\n---\n*Example 1:*\n\n```sqf\n_cloudLevel = overcast;\n```","commands\\overcastForecast.md":"Return the overcast forecast.\n\n\n---\n*Syntaxes:*\n\n`overcastForecast`\n\n---\n*Example 1:*\n\n```sqf\n_forecast = overcastForecast;\n```","commands\\owner.md":"On server machine, returns the ` machine network ID` of the client to which the object is `local`. Otherwise returns 0. For use on clients `clientOwner` command is available. To find out the owner of a `Group`, use `groupOwner`.\n\n\n---\n*Syntaxes:*\n\n`owner` object\n\n---\n*Example 1:*\n\n```sqf\n_clientID = owner _someobject;\n```","commands\\param.md":"Extracts a single value with given index from input argument, similar to `BIS_fnc_param`.  When used without argument, as shown in main syntax, internal variable `_this`, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.\n<br><br>\nIf extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.54, onscreen errors are displayed for when the input is of the wrong type or size.\n\n\n---\n*Syntaxes:*\n\n`param` [index, defaultValue, expectedDataTypes, expectedArrayCount]\n\nargument `param` [index, defaultValue, expectedDataTypes, expectedArrayCount]\n\n---\n*Example 1:*\n\n```sqf\n[1, 2, 3] call \n{\n\tprivate _one = param [0, 1];\n\tprivate _two = param [1, 2];\n\tprivate _three = param [2, 3];\n\t// ...\n};\n```\n\n*Example 2:*\n\n```sqf\n[123] call \n{\n\tprivate _val = param [0];\n};\n\n// Below would produce the same result as above\n123 call \n{\n\tprivate _val = param [0];\n};\n```\n\n*Example 3:*\n\n```sqf\n_z = position player param [2, 0];\nif (_z > 10) then \n{\n\thint \"YOU ARE FLYING!\";\n};\n```\n\n*Example 4:*\n\n```sqf\nfnc = \n{\n\tprivate _pos = param [0, [0,0,0], [objNull, []], [2,3]];\n\tprivate _rad = param [1, 0, [0]];\n\t_pos nearObjects _rad;\n};\n\n[position player, 25] call fnc; // ok\n[player, 25] call fnc; // ok\n[25, player] call fnc; // default values are used\n```","commands\\params.md":"Parses input argument into array of `private` variables. When used without argument, as shown in main syntax, internal variable `_this`, which is usually available inside functions and event handlers, is used as argument.<br><br>\nIn addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.54, onscreen errors are displayed for when the input is of the wrong type or size.\n{{Feature|Warning| All variables names must start with underscore and be enclosed in quotes: {{hl\n\n\n---\n*Syntaxes:*\n\n`params` [element1, element2,...elementN]\n\nargument `params` [element1, element2,...elementN]\n\n---\n*Example 1:*\n\n```sqf\n[1, 2, 3] call {\n\tprivate [\"_one\", \"_two\", \"_three\"];\n\t_one = _this select 0;\n\t_two = _this select 1;\n\t_three = _this select 2;\n\t// ...\n};\n\n// Same as above, only using params\n[1, 2, 3] call {\n\tparams [\"_one\", \"_two\", \"_three\"];\n\t// ...\n};\n```\n\n*Example 2:*\n\n```sqf\n[123] call {\n\tparams [\"_myvar\"];\n};\n\n// Below would produce the same result as above\n123 call {\n\tparams [\"_myvar\"];\n};\n```\n\n*Example 3:*\n\n```sqf\nposition player params [\"\", \"\", \"_z\"];\nif (_z > 10) then {\n\thint \"YOU ARE FLYING!\";\n};\n```\n\n*Example 4:*\n\n```sqf\n[1, nil, 2] params [\"_var1\", \"_var2\", \"_var3\"];\n// All 3 variables are made private but only _var1 and _var3 are defined\n\n[1, nil, 2] params [\"_var1\", [\"_var2\", 23], \"_var3\"];\n// All 3 variables are private and defined\n```\n\n*Example 5:*\n\n```sqf\n[1, 2] call {\n\tif (!params [\"_var1\", \"_var2\", [\"_var3\", true, [true]]]) exitWith {\n\t\thint str [_var1, _var2, _var3];\n\t};\n};\n// The hint shows [1,2,true]\n// Script exits, default value was used due to missing value\n\n[1, 2, 3] call {\n\tif (!params [\"_var1\", \"_var2\", [\"_var3\", true, [true]]]) exitWith {\n\t\thint str [_var1, _var2, _var3];\n\t};\n};\n// The hint shows [1,2,true]\n// Script exits, default value was used due incorrect value type\n```\n\n*Example 6:*\n\n```sqf\n[1, \"ok\", [1, 2, 3]] call {\n\tif (!params [\n\t\t[\"_var1\", 0, [0]],\n\t\t[\"_var2\", \"\", [\"\"]],\n\t\t[\"_var3\", [0,0,0], [[], objNull, 0], [2,3]]\n\t]) exitWith {};\n\thint \"ok\";\n};\n// Passes validation\n\n[1, 2, [3, 4, 5]] call {\n\tif (!params [\"_var1\", \"_var2\", [\"_var3\", [], [[], objNull, 0], 0]]) exitWith {};\n\thint \"ok\";\n};\n// Fails, because passed array is expected to be of 0 length, i.e. empty\n```\n\n*Example 7:*\n\n```sqf\n[1, 2, 3, [4, 5, 6]] call {\n\tparams [\"_one\", \"_two\", \"_three\"];\n\t_this select 3 params [\"_four\", \"_five\", \"_six\"];\n};\n```\n\n*Example 8:*\n\n```sqf\n{\n\t_x params [\"_group\", \"_index\"];\n\t// ...\n} forEach waypoints group player;\n\nfn_someFnc = {\n\tparams [\"_position\", [\"_direction\", 0], [\"_name\", \"\"]];\n\t// Extract the x, y, and z from \"_position\" array:\n\t_position params [\"_x\", \"_y\", \"_z\"];\n\t// ...\n};\n\n[position player, direction player, name player] call fn_someFnc;\n```\n\n*Example 9:*\n\n```sqf\nplayer addEventHandler [\"HitPart\", {\n\t_this select 0 params [\"_target\", \"_shooter\", \"_projectile\"];\n}];\n```","commands\\parseNumber.md":"Parses the string, interpreting its content as a floating point number.\n\n\n---\n*Syntaxes:*\n\n`parseNumber` value\n\n---\n*Example 1:*\n\n```sqf\n_number = parseNumber \"0.125\";\t\t\t// 0.125\n_number = parseNumber \"0050\";\t\t\t// 50\n_number = parseNumber \"   42 yes\";\t\t// 42\n_number = parseNumber \"3 or 4\";\t\t\t// 3\n_number = parseNumber \"either 3 or 4\";\t// 0\n_number = parseNumber \"0xCF\";\t\t\t// 0\n```\n\n*Example 2:*\n\nsince {{arma3}} v1.50:\n\n```sqf\nprivate _result = parseNumber false;\t\t\t\t// 0\nprivate _result = parseNumber true;\t\t\t\t\t// 1\nprivate _zeroOneStatus = parseNumber alive player;\t// 0 if the player is dead, 1 if alive\n```","commands\\parseSimpleArray.md":"Converts given, formatted as simple array, `String` into a valid `Array`. Simple array is array consisting of `Number`s, `String`s, `Boolean`s and `Array`s of all of the above.\nThis command is almost `4&times; faster` than similar uncached `call` `compile` method. And because `call` `compile` is not required, it is also `more secure` and primarily intended for use with `callExtension` to parse the `String` output into `Array`.<br>\n<br>\nSince {{arma3}} v1.96 the command will tolerate extra spaces and supports single quotes. The only recognised keywords (case `in`sensitive) are:\n* **true** - translates into `true`\n* **false** - translates into `false`\n* **nil** - translates into `nil`\n* **null** - translates into `nil`\n* **<null>** - translates into `nil`\n* **any** - translates into `nil`\n\n\n---\n*Syntaxes:*\n\n`parseSimpleArray` stringArray\n\n---\n*Example 1:*\n\n```sqf\nprivate _arr = parseSimpleArray \"[1,2,3]\";\n```\n\n*Example 2:*\n\n```sqf\nprivate _array1 = [1, \"2\", true, [4, \"five\", false]];\nprivate _array2 = parseSimpleArray \"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\";\n_array1 isEqualTo _array2; // true\n```\n\n*Example 3:*\n\n```sqf\n_bool = true;\n_num = 123.45;\n_str = \"ok\";\n_arr = [1, false, \"cool\"];\n_res = parseSimpleArray format [\"[%1,%2,%3,%4]\", _bool, _num, str _str, str _arr];\n// note how _bool and _num do not need str, however if used anyway, the result in this case would be identical\nhint str _res;  // returns [true,123.45,\"ok\",[1,false,\"cool\"]]\n```","commands\\parseText.md":"Creates a structured text by parsing the given XML description. Do not use `parseText` when displaying a localized text from `Stringtable.xml`.<br>\nA detailed explanation of all formatting possibilities can be found at `Structured Text`.\n\n\n---\n*Syntaxes:*\n\n`parseText` text\n\n---\n*Example 1:*\n\n```sqf\nprivate _Stxt = parseText \"First line<img image='data\\isniper.paa'/><br/>Second line\";\n```\n\n*Example 2:*\n\n```sqf\nhintSilent parseText format[\"<t size='1.25' font='Zeppelin33' color='#ff0000'>%1 lives remaining.</t>\", 12];\n```\n\n*Example 3:*\n\n```sqf\nprivate _clickableLink = parseText \"<a href='http://arma3.com'>A3</a>\";\n```","commands\\parsingNamespace.md":"Returns the global namespace attached to config parser.\n\n\n---\n*Syntaxes:*\n\n`parsingNamespace`\n\n---\n*Example 1:*\n\n```sqf\nparsingNamespace setVariable [\"var1\", 101.23124];\n_profVar1 = parsingNamespace getVariable \"var1\";\n```","commands\\particlesQuality.md":"Returns current user settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high\n\n\n---\n*Syntaxes:*\n\n`particlesQuality`\n\n---\n*Example 1:*\n\n```sqf\n_currentQuality = particlesQuality;\n```","commands\\periscopeElevation.md":"Returns current periscope elevation value, see also `elevatePeriscope`.\n\n\n---\n*Syntaxes:*\n\nvehicle `periscopeElevation` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_eddie periscopeElevation [0] params [\"_elevation\", \"_isLocked\"];\n```","commands\\pi.md":"pi (180 degrees converted to `Radians`).\n\n\n---\n*Syntaxes:*\n\n`pi`\n\n---\n*Example 1:*\n\n```sqf\n_radians = 2 * pi; // Result is 6.2830\n```","commands\\pickWeaponPool.md":"Transfers weapons and magazines from cargo of object into the weapon pool. This is used in the campaign to transfer weapons into the next mission.\n\n\n---\n*Syntaxes:*\n\n`pickWeaponPool` object\n\n---\n*Example 1:*\n\n```sqf\npickWeaponPool vehicle player;\n```","commands\\pitch.md":"Returns the pitch of a persons voice.\n\n\n---\n*Syntaxes:*\n\n`pitch` person\n\n---\n*Example 1:*\n\n```sqf\npitch player;\n```","commands\\pixelGrid.md":"Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.\n\n\n---\n*Syntaxes:*\n\n`pixelGrid`\n\n---\n*Example 1:*\n\n```sqf\n_gridHeight = pixelH * pixelGrid;\n```","commands\\pixelGridBase.md":"Returns grid size based on screen resolution.\n\n\n---\n*Syntaxes:*\n\n`pixelGridBase`\n\n---\n*Example 1:*\n\n```sqf\n_gridBaseHeight = pixelH * pixelGridBase;\n```","commands\\pixelGridNoUIScale.md":"Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids. As mentioned in the name of this command, the `user interface scale is ignored`.\n\n\n---\n*Syntaxes:*\n\n`pixelGridNoUIScale`\n\n---\n*Example 1:*\n\n```sqf\n_gridHeightNoUIScale = pixelH * pixelGridNoUIScale;\n```","commands\\pixelH.md":"Returns the height of one pixel for current resolution.\n\n\n---\n*Syntaxes:*\n\n`pixelH`\n\n---\n*Example 1:*\n\n```sqf\n_pixelHeight = pixelH;\n```","commands\\pixelW.md":"Returns width of one pixel for current resolution.\n\n\n---\n*Syntaxes:*\n\n`pixelW`\n\n---\n*Example 1:*\n\n```sqf\n_pixelWidth = pixelW;\n```","commands\\playableSlotsNumber.md":"Returns the number of available slots in mission per `side` (both empty and taken). <br>In singleplayer mission, it returns number of playable units per side.\n\n\n---\n*Syntaxes:*\n\n`playableSlotsNumber` side\n\n---\n*Example 1:*\n\n```sqf\n_maxBluforPlayers = playableSlotsNumber blufor;\n```","commands\\playableUnits.md":"Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides `east`/`opfor`, `west`/`blufor`, `resistance`/`independent` and `civilian` only. Does not contain units of `sideLogic`.<br>\n\n\n---\n*Syntaxes:*\n\n`playableUnits`\n\n---\n*Example 1:*\n\n```sqf\n{ _x groupChat \"I'm a playable unit.\"; } forEach playableUnits;\n```\n\n*Example 2:*\n\n```sqf\n_playableInGroup = units group player arrayIntersect playableUnits;\n```\n\n*Example 3:*\n\n```sqf\n_nonPlayableInGroup = units group player - playableUnits;\n```","commands\\playAction.md":"When used on a person, a smooth transition to the given action will be initiated.\n<br>\nFor Arma 3 actions see: `playAction/actions`.\n\n\n---\n*Syntaxes:*\n\nsoldier `playAction` action\n\n---\n*Example 1:*\n\n```sqf\nsoldierOne playAction \"SitDown\";\n```","commands\\playActionNow.md":"When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.\n<br>\nFor Arma 3 actions see: `playAction/actions`.\n\n\n---\n*Syntaxes:*\n\nsoldier `playActionNow` action\n\n---\n*Example 1:*\n\n```sqf\nsoldierOne playActionNow \"SitDown\";\n```\n\n*Example 2:*\n\n```sqf\nrabbitTwo playActionNow \"WalkF\";\n```","commands\\player.md":"A person object controlled by user. In Intros and Outros this isn't set by default and must be assigned.\n\n\n---\n*Syntaxes:*\n\n`player`\n\n---\n*Example 1:*\n\n```sqf\nplayer addRating 500;\n```","commands\\playerRespawnTime.md":"Return the player's remaining time before respawn, or -1 if it is not available (such as when the player is alive).\n\n\n---\n*Syntaxes:*\n\n`playerRespawnTime`\n\n---\n*Example 1:*\n\n```sqf\nwaitUntil { playerRespawnTime <= 0 };\n```","commands\\playerSide.md":"Returns the player's `side`. This is valid even when the player controlled person is dead (a difference from `side` `player`).\n\n\n---\n*Syntaxes:*\n\n`playerSide`\n\n---\n*Example 1:*\n\n```sqf\nif (side man1 == playerSide) then\n{\n\thint \"man1 is on your side!\";\n};\n```\n\n*Example 2:*\n\n```sqf\nswitch (playerSide) do\n{\n\tcase west: { hint \"You are BLUFOR\"; };\n\tcase east: { hint \"You are OPFOR\"; };\n};\n```\n\n*Example 3:*\n\nthe following code will change the side of the player including `playerSide`:\n\n```sqf\nprivate _player = player;\n[player] join createGroup east;\nselectNoPlayer;\nselectPlayer _player;\nhint str playerSide; // EAST\n```","commands\\playersNumber.md":"Returns count of occupied role selection slots for given side. Players who claimed a slot in the lobby but did not start the mission are counted as well. If <syntaxhighlight lang=\"cpp\" inline>disabledAI = 0;</syntaxhighlight> in `description.ext` or `Enable AI` option is checked in `Eden Editor`, AI bots will be treated as valid players and will be counted too.\n\n\n---\n*Syntaxes:*\n\n`playersNumber` side\n\n---\n*Example 1:*\n\n```sqf\n_west = playersNumber west;\n_east = playersNumber east;\n_civ = playersNumber civilian;\nhint format [\"West:%1 East:%2, Civ:%3\", _west, _east, _civ];\n```","commands\\playGesture.md":"When used on a person,a smooth transition to the given move will be initiated. `Command doesn't seem to be functional`\n\n\n---\n*Syntaxes:*\n\nsoldier `playGesture` moveName\n\n---\n*Example 1:*\n\n```sqf\nsoldierOne playGesture \"Wave\";\n```","commands\\playMission.md":"The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped.\n\n\n---\n*Syntaxes:*\n\n`playMission` [campaign, mission, skipBriefing]\n\n---\n*Example 1:*\n\n```sqf\nplayMission [\"XOutrage\",\"x05Negotiator.Noe\"];\n```\n\n*Example 2:*\n\n```sqf\nplayMission [\"\", configFile >> \"CfgMissions\" >> \"Missions\" >> \"Armory1\"];\n```\n\n*Example 3:*\n\n```sqf\nplayMission [\"\",\"\\A3\\Missions_F_Bootcamp\\Scenarios\\Arsenal.VR\"];\n```","commands\\playMove.md":"When used on a person, smooth transition to given move will be done.<br>\nThe difference between `playMove` and `playMoveNow` is that `playMove` adds another move to the move queue, while `playMoveNow` replaces the whole move queue with new move (see *(Reference HashLink \"#Example 2\")*).\n\n\n---\n*Syntaxes:*\n\nunitName `playMove` moveName\n\n---\n*Example 1:*\n\n```sqf\nsoldierOne playMove \"Stand\";\n```\n\n*Example 2:*\n\n```sqf\nplayer switchMove \"AmovPercMstpSrasWrflDnon\";\n[] spawn \n{\n\tsleep 0.5;\n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\";\t\t// player goes prone\n\tplayer playMove \"amovPknlMstpSrasWrflDnon\";\t\t// player gets up on one knee\n};\n```\n\n*Example 3:*\n\n```sqf\nplayer switchMove \"AmovPercMstpSrasWrflDnon\";\n[] spawn\n{\n\tsleep 0.5;\n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\";\t\t// player never goes prone\n\tplayer playMoveNow \"AmovPknlMstpSrasWrflDnon\";\t// player goes down on one knee straight away\n};\n```","commands\\playMoveNow.md":"When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded. <br>\nThe difference between `playMove` and `playMoveNow` is that `playMove` adds another move to the move queue, while `playMoveNow` replaces the whole move queue with new move (see *(Reference HashLink \"#Example 2\")*).\n\n\n---\n*Syntaxes:*\n\nsoldier `playMoveNow` moveName\n\n---\n*Example 1:*\n\n```sqf\nplayer playMoveNow \"AmovPercMevaSlowWrflDf\";\n```\n\n*Example 2:*\n\n```sqf\nplayer switchMove \"AmovPercMstpSrasWrflDnon\";\n[] spawn \n{\n\tsleep 0.5;\n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\"; // player goes prone\n\tplayer playMove \"amovPknlMstpSrasWrflDnon\"; // player gets up on one knee\n};\n```\n\n*Example 3:*\n\n```sqf\nplayer switchMove \"amovpercmstpsraswrfldnon\";\n[] spawn\n{\n\tsleep 0.5;\n\tplayer playMove \"AmovPpneMstpSrasWrflDnon\"; // player never goes prone\n\tplayer playMoveNow \"AmovPknlMstpSrasWrflDnon\"; // player goes down on one knee straight away\n};\n```","commands\\playMusic.md":"Plays music defined in `Description.ext's CfgMusic` or config.cpp. If the `musicName` could not be found a message is logged into the .rpt file: **Music <`musicName`> not found**.\n* [[Arma 3 CfgMusic]]\n* [[Arma 2: CfgMusic]]\n* `ArmA: Armed Assault: CfgMusic`\n* `Operation Flashpoint: CfgMusic`\n\n\n---\n*Syntaxes:*\n\n`playMusic` musicName\n\n`playMusic` [musicName, start]\n\n---\n*Example 1:*\n\n```sqf\nplayMusic \"RadioAmbient1\";\n```\n\n*Example 2:*\n\n```sqf\nplayMusic [\"RadioAmbient3\", 3]; // start to play from 00:00:03\n```\n\n*Example 3:*\n\nPlay from 00:00:01 to 00:00:05:\n\n```sqf\n[] spawn {\n\tplayMusic [\"RadioAmbient5\", 1];\n\tsleep 4;\n\tplayMusic \"\";\n};\n```","commands\\playScriptedMission.md":"Load the given world, launch an empty mission, and execute the given expression.\nIf provided, `config` can reference to the config entry, replacing `Description.ext` for this mission.\n\n\n---\n*Syntaxes:*\n\n`playScriptedMission` [world, expression, config, ignoreChildWindow]\n\n---\n*Example 1:*\n\n```sqf\nplayScriptedMission\n[\n\t\"desert_e\",\n\t{\n\t\texecVM \"\\ca\\missions_e\\data\\scenes\\credits1\\init.sqf\";\n\t},\n\tconfigFile / \"CfgMissions\" / \"Cutscenes\" / \"Credits\"\n];\n```","commands\\playSound.md":"Plays a sound from CfgSounds. Sound can be defined in `missionConfigFile`, `configFile` or `campaignConfigFile`.\n\n\n---\n*Syntaxes:*\n\n`playSound` soundName\n\n`playSound` [soundName, isSpeech, offset]\n\n---\n*Example 1:*\n\n```sqf\nplaySound \"soundname\";\n```\n\n*Example 2:*\n\nStart a sound and then stop it after 1.2 second:\n\n```sqf\nplaySound \"AlarmCar\";\n[] spawn \n{\n\t_sound = ASLToAGL [0,0,0] nearestObject \"#soundonvehicle\";\n\tsleep 1.2;\n\tdeleteVehicle _sound;\n};\n\n// since Arma 3 v2.00\n_source = playSound \"AlarmCar\";\n_source spawn \n{\n\tsleep 1.2;\n\tdeleteVehicle _this;\n};\n```\n\n*Example 3:*\n\nStart a sound and wait until it is finished:\n\n```sqf\nplaySound \"Alarm\";\nhint \"Started!\";\n[] spawn\n{\n\t_sound = ASLToAGL [0,0,0] nearestObject \"#soundonvehicle\";\n\twaitUntil {isNull _sound};\n\thint \"Finished!\";\n};\n\n// since Arma 3 v2.00\n_source = playSound \"Alarm\";\n_source spawn \n{\n\twaitUntil {isNull _this};\n\thint \"Finished!\";\n};\n```","commands\\playSound3D.md":"Plays positional sound with given `filename` on every computer on network. Since Arma 2.10 the leading slash in file path will be ignored.\n\n\n---\n*Syntaxes:*\n\n[[playSound3D]] [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance, offset, local]\n\n---\n*Example 1:*\n\n```sqf\nplaySound3D [\"A3\\Sounds_F\\sfx\\blip1.wss\", player]\n```\n\n*Example 2:*\n\n```sqf\nplaySound3D [\"A3\\Sounds_F\\sfx\\blip1.wss\", player, false, getPosASL player, 1, 1, 0]\n```\n\n*Example 3:*\n\n```sqf\nplaySound3D [getMissionPath \"mySound.ogg\", player]; // to play a mission directory sound\n```\n\n*Example 4:*\n\nSound file extension must be specified even if a config entry has none:\n\n```sqf\nplaySound3D [\"A3\\Sounds_F\\sfx\\alarm_independent\", player]; // no sound\nplaySound3D [\"A3\\Sounds_F\\sfx\\alarm_independent.wss\", player]; // alarm\n```","commands\\playSoundUI.md":"Plays given `CfgSounds` sound or a [[Arma 3: Sound Files| sound file]] given by file path through a dedicated UI sound channel unaffected by the global mixer volumes. If the file path is given, the leading slash will be ignored.\n\n\n---\n*Syntaxes:*\n\n`playSoundUI` [sound, volume, soundPitch, isEffect]\n\n---\n*Example 1:*\n\n```sqf\nplaySoundUI [\"Alarm\", 0.5, 0.5];\n```\n\n*Example 2:*\n\n```sqf\nplaySoundUI [\"A3\\Sounds_F\\sfx\\blip1.wss\"];\n```\n\n*Example 3:*\n\nSound file extension must be specified even if a config entry has none:\n\n```sqf\nplaySoundUI [\"A3\\Sounds_F\\sfx\\alarm_independent\", 5, 1]; // no sound\nplaySoundUI [\"A3\\Sounds_F\\sfx\\alarm_independent.wss\", 5, 1]; // alarm\n```","commands\\pose.md":"Returns the pose of the given unit. It can be one of:\n{{Columns|3|\n* **\"Dead\"**\n* **\"Weapon\"** (special weapon - AT)\n* **\"BinocLying\"**\n* **\"LyingNoWeapon\"**\n* **\"Lying\"**\n* **\"HandGunLying\"**\n* **\"Crouch\"**\n* **\"HandGunCrouch\"**\n* **\"Combat\"**\n* **\"HandGunStand\"**\n* **\"Stand\"**\n* **\"Swimming\"**\n* **\"BottomSwimming\"**\n* **\"SurfaceSwimming\"**\n* **\"Diving\"**\n* **\"BottomDiving\"**\n* **\"SurfaceDiving\"**\n* **\"NoWeapon\"** (civilian moves)\n* **\"Binoc\"** (binocular pose)\n* **\"BinocStand\"** (binocular pose (weapon on back))\n* **\"Healing\"**\n* **\"Dragged\"**\n* **\"Carrying\"**\n* **\"Freefall\"**\n\n\n---\n*Syntaxes:*\n\n`pose` unit\n\n---\n*Example 1:*\n\n```sqf\nif (pose player == \"SurfaceSwimming\") then { hint \"How's water?\" };\n```","commands\\position.md":"Returns position of an object (alias of `getPos`) or location (alias of `locationPosition`).\n\n\n---\n*Syntaxes:*\n\n`position` object\n\n`position` location\n\n---\n*Example 1:*\n\n```sqf\nprivate _pos = position player;\n```\n\n*Example 2:*\n\n```sqf\n_myLocationHomePos = position myLocation;\n```","commands\\positionCameraToWorld.md":"Transforms position from camera coordinate space to world coordinate space. \n\nCamera axes are relative to camera orientation. x axis goes from left of the camera to right of the camera, z axis goes from underneath the camera to above the camera and y axis goes from back of the camera to where the camera is looking.\n\n\n---\n*Syntaxes:*\n\n`positionCameraToWorld` cameraPos\n\n---\n*Example 1:*\n\n```sqf\n_worldPos = positionCameraToWorld _cameraPos;\n```\n\n*Example 2:*\n\nExample demonstrating reversed y and z:\n\n```sqf\nplayer setDir 0; // assuming player is looking forward\nhint str [positionCameraToWorld [0,0,0], positionCameraToWorld [0,0,1]];\n/*\n[\n\t[2481.35, 5671.21, 1.51395],\n\t[2481.35, 5672.21, 1.46955]\n]\n*/\n```","commands\\posScreenToWorld.md":"Converts map screen coordinates into world coordinates. Unlike `ctrlMapScreenToWorld`, this command returns world position is format [x, y, 0], otherwise it is identical to it.\n\n\n---\n*Syntaxes:*\n\nmap `posScreenToWorld` [x, y]\n\n---\n*Example 1:*\n\n```sqf\n_worldCoord = _control posScreenToWorld _ScreenCoord;\n```\n\n*Example 2:*\n\n```sqf\n_worldCoord = _control posScreenToWorld [_x, _y];\n```\n\n*Example 3:*\n\n```sqf\n_worldCoord = _control posScreenToWorld [0.5, 0.5];\n```","commands\\posWorldToScreen.md":"Converts world coordinates into map screen coordinates. This command is identical to `ctrlMapWorldToScreen`.\n\n\n---\n*Syntaxes:*\n\nmap `posWorldToScreen` position\n\n---\n*Example 1:*\n\n```sqf\n_screenCoord = _control posWorldToScreen _worldCoord;\n```\n\n*Example 2:*\n\n```sqf\n_screenCoord = _control posWorldToScreen position player;\n```","commands\\ppEffectAdjust.md":"Set `post process effect` parameters.\n\n\n---\n*Syntaxes:*\n\neffect `ppEffectAdjust` settings\n\n---\n*Example 1:*\n\n```sqf\n\"colorCorrections\" ppEffectAdjust [1, 1, -0.01, [0, 0, 0, 0], [1.5, 1, 1.2, 0.6], [0.199, 0.587, 0.114, 0]];\n```\n\n*Example 2:*\n\nBlack&White:\n\n```sqf\n_colorCorrectionsEffHandle ppEffectAdjust [1, 0.4, 0, [0, 0, 0, 0], [1, 1, 1, 0], [1, 1, 1, 0]];\n```","commands\\ppEffectCommit.md":"Commit `post process effect` in given time.\n\n\n---\n*Syntaxes:*\n\neffect `ppEffectCommit` commit\n\nhandle `ppEffectCommit` commit\n\nhandles `ppEffectCommit` commit\n\n---\n*Example 1:*\n\n```sqf\n\"colorCorrection\" ppEffectCommit 3;\n```\n\n*Example 2:*\n\n```sqf\n_hndl ppEffectCommit 3;\n```\n\n*Example 3:*\n\n```sqf\n[_hndl1, _hndl2] ppEffectCommit 3;\n```","commands\\ppEffectCommitted.md":"Check whether given `post process effect` is committed.\n\n\n---\n*Syntaxes:*\n\n`ppEffectCommitted` effect\n\n`ppEffectCommitted` handle\n\n---\n*Example 1:*\n\n```sqf\nppEffectCommitted \"colorCorrection\";\n```\n\n*Example 2:*\n\n```sqf\nppEffectCommitted _hndl;\n```\n\n*Example 3:*\n\n```sqf\nif (ppEffectCommitted \"colorCorrection\") then { hint \"alteration done !\" };\n```","commands\\ppEffectCreate.md":"Creates `Post Process Effects` specified by effect name and priority.<br>\nSupported effects:\n{{Columns|2|\n* `\"RadialBlur\"`\n* `\"ChromAberration\"`\n* `\"WetDistortion\"`\n* `\"ColorCorrections\"`\n* `\"DynamicBlur\"`\n* `\"FilmGrain\"`\n* `\"ColorInversion\"`\n\n\n---\n*Syntaxes:*\n\n`ppEffectCreate` [name, priority]\n\n`ppEffectCreate` [<nowiki/>[name1, priority1], ...]\n\n---\n*Example 1:*\n\n```sqf\n_ppGrain = ppEffectCreate [\"filmGrain\", 2005];\n```","commands\\ppEffectDestroy.md":"Destroy `Post Process Effects` given by handle or array of handles.\n\n\n---\n*Syntaxes:*\n\n`ppEffectDestroy` effect\n\n`ppEffectDestroy` effects\n\n---\n*Example 1:*\n\n```sqf\nppEffectDestroy _hndl;\n```\n\n*Example 2:*\n\n```sqf\nppEffectDestroy [_hndl0, _hndl1, _hndl2];\n```","commands\\ppEffectEnable.md":"Enable / disable `Post Process Effects`\n\n\n---\n*Syntaxes:*\n\neffect `ppEffectEnable` enable\n\neffect `ppEffectEnable` enable\n\neffectArray `ppEffectEnable` enable\n\n---\n*Example 1:*\n\n```sqf\n\"colorCorrections\" ppEffectEnable true;\n```\n\n*Example 2:*\n\n```sqf\n_hndl ppEffectEnable true;\n```\n\n*Example 3:*\n\n```sqf\n[_hndl1, _hndl2] ppEffectEnable true;\n```","commands\\ppEffectEnabled.md":"Checks whether given post process effect is enabled\n\n\n---\n*Syntaxes:*\n\n`ppEffectEnabled` effect\n\n`ppEffectEnabled` effect\n\n---\n*Example 1:*\n\n```sqf\n_enabled = ppEffectEnabled _hndl;\n```\n\n*Example 2:*\n\n```sqf\n_enabled = ppEffectEnabled \"DynamicBlur\";\n```","commands\\ppEffectForceInNVG.md":"Forces use of `Post Process Effects` in NVG.\n\n\n---\n*Syntaxes:*\n\nppHandle `ppEffectForceInNVG` force\n\n---\n*Example 1:*\n\n```sqf\n_ppGrain ppEffectForceInNVG true;\n```","commands\\precision.md":"Return the movement precision of the given entity, how is the entity able to be precise when moving to given target.\n\n\n---\n*Syntaxes:*\n\n`precision` entity\n\n---\n*Example 1:*\n\n```sqf\n// used in formationCDanger.fsm\nif (getPosATL _this distance _dangerPos <= precision _this) then { /* ... */ };\n```","commands\\preloadCamera.md":"Preload all textures and models around given `Position` to avoid visual artifacts after camera is moved.\n\nShould be used before any abrupt camera change/cut.\n\nReturns true once all data is ready. See `camPreload` for alternative, more flexible camera preloading.\n\n\n---\n*Syntaxes:*\n\n`preloadCamera` position\n\n---\n*Example 1:*\n\n```sqf\nwaitUntil {preloadCamera markerPos \"cam_location_2\"};\n```","commands\\preloadObject.md":"Preloads all textures, materials and proxies needed to render given object. Works with objects and classnames - note that classnames require an object instance in the mission.\n\n\n---\n*Syntaxes:*\n\ndistance `preloadObject` object\n\n---\n*Example 1:*\n\n```sqf\n[] spawn \n{\n\twaitUntil { 10 preloadObject \"SoldierW\" };\n\thint \"Preload finished\";\n};\n```\n\n*Example 2:*\n\n```sqf\n[] spawn \n{\n\twaitUntil { 10 preloadObject leader player };\n\thint \"Preload finished\";\n};\n```","commands\\preloadSound.md":"Makes sure that a sound can start playing without any delay once it is needed. Command works in Arma 3, but might not be implemented in earlier Arma installments.\n\n\n---\n*Syntaxes:*\n\n`preloadSound` soundName\n\n---\n*Example 1:*\n\n```sqf\n{\n\twaitUntil {preloadSound _x};\n} forEach getArray (missionConfigFile >> \"CfgSounds\" >> \"sounds\");\n```","commands\\preloadTitleObj.md":"Preloads data for the given resource object.\n\n\n---\n*Syntaxes:*\n\n`preloadTitleObj` [name, type, speed, showInMap]\n\n---\n*Example 1:*\n\n```sqf\n_ok = preloadTitleObj [\"BISLogo\", \"PLAIN\"];\n```","commands\\preloadTitleRsc.md":"Resource title - preload data. The resource can be defined in the `Description.ext` file.\n\n\n---\n*Syntaxes:*\n\n`preloadTitleRsc` [name, type, speed, showInMap]\n\n---\n*Example 1:*\n\n```sqf\n_ok = preloadTitleRsc [\"BIS\", \"PLAIN\"];\n```","commands\\preprocessFile.md":"Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and `PreProcessor Commands`. Due to the hard-drive access this command executes and the lack of caching this command should not be used in time-critical script loops.\n\n\n---\n*Syntaxes:*\n\n`preprocessFile` fileName\n\n---\n*Example 1:*\n\n```sqf\n_content = preprocessFile \"myFunction.sqf\";\n```","commands\\preprocessFileLineNumbers.md":"Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using /* */ and `PreProcessor Commands`. The preprocessor also adds a default debug entrypoint for compiler at the begining of script: **#line 1 \"aFilename\"**<br><br>\n\nThe `#line` keyword can be used in any script that are not preprocess, or with preprocess script with extra macro to protect reserverd sharp character. The format is:<br>\n**`#line` <number> \"<name>\"**<br>\nfollowed by new line. <number> could be only positive integer and <name> could be any name. This will be used only if an error occurs in the script. The error will contain the line:\n**File <filename>, line <linenumber>**<br>\nwhere <filename> will be the <name> you set and <linenumber> will be <number> + how many lines it is from the `#line` line. If the error happened on the line right under `#line` it will add 0 to <number>, if on second line, it will add 1 etc.<br><br>\nIt is possible to use more than one `#line` keywords, but it seems having just one at the top for little script is enough to pinpoint position of the error easily.\n\n\n---\n*Syntaxes:*\n\n`preprocessFileLineNumbers` fileName\n\n---\n*Example 1:*\n\n```sqf\n_string = preprocessFileLineNumbers \"A3\\ui_f\\scripts\\IGUI\\RscUnitInfo.sqf\"\n```\n\nResult is: <br>\n #line 1 \"A3\\ui_f\\scripts\\IGUI\\RscUnitInfo.sqf\"<br>\n disableserialization;<br>\n ........","commands\\primaryWeapon.md":"Returns name of unit's primary weapon. This command will also return a weapon class name if the weapon is not used by the player, for example, it is on the unit's back. Use `currentWeapon` to get the weapon the unit is using.\n\n\n---\n*Syntaxes:*\n\n`primaryWeapon` unit\n\n---\n*Example 1:*\n\n```sqf\n_pWeap = primaryWeapon player;\n```\n\n*Example 2:*\n\n```sqf\nhint primaryWeapon player; // \"arifle_MX_ACO_pointer_F\"\n```","commands\\primaryWeaponItems.md":"Returns array with all items assigned to the `primaryWeapon` except magazines. Use `primaryWeaponMagazine` command for the latter. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`primaryWeaponItems` unit\n\n---\n*Example 1:*\n\n```sqf\nprimaryWeaponItems player;\n/*\n[\n\t\"muzzle_snds_H\",\t// silencer\n\t\"acc_pointer_IR\",\t// laser\n\t\"optic_Aco\",\t\t// optics\n\t\"bipod_01_F_blk\"\t// bipod\n]\n*/\n```","commands\\primaryWeaponMagazine.md":"Collects all loaded `magazines` from all `primaryWeapon` muzzles and returns them in `Array`, otherwise it returns []. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`primaryWeaponMagazine` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str primaryWeaponMagazine player; //[\"30Rnd_65x39_caseless_mag\"]\n```\n\n*Example 2:*\n\n```sqf\n_array = primaryWeaponMagazine player;\nif (count _array > 0) then {\n\thint (\"Primary weapon is loaded with \" + (_array select 0) + \"!\");\n} else {\n\tif (primaryWeapon player != \"\") then {\n\t\thint \"Primary weapon is not loaded!\";\n\t} else {\n\t\thint \"Player doesn't have a primary weapon!\";\n\t};\n};\n```","commands\\priority.md":"Return the priority of the task.\n\n\n---\n*Syntaxes:*\n\n`priority` task\n\n---\n*Example 1:*\n\n```sqf\n_prioTsk01 = priority task01;\n```","commands\\private.md":"Sets a variable to the innermost scope as demonstrated in Example 3. See also `param` and `params`.\n{{Feature | Informative | `private` variables `must` start with an underscore: {{hl\n\n\n---\n*Syntaxes:*\n\n`private` variableName\n\n`private` variableNameList\n\n`private` _identifier = value\n\n---\n*Example 1:*\n\n```sqf\nprivate _varname = \"this is my new variable\"; // since Arma 3 v1.54\n\n// identical, but less performant\nprivate \"_varname\";\n_varname = \"this is my new variable\";\n```\n\n*Example 2:*\n\n```sqf\nprivate [\"_varname1\", \"_varname2\"];\n_varname1 = \"variable 1\";\n_varname2 = \"variable 2\";\n```\n\n*Example 3:*\n\n```sqf\n_lol =  123; call { hint str [_lol] }; // [123]\n_lol =  123; call { private \"_lol\"; hint str [_lol] }; // [any]\n```\n\n*Example 4:*\n\n```sqf\n_myvar = 123;\nsystemChat str [_myvar];\t\t// [123]\ncall {\n\tsystemChat str [_myvar];\t// [123]\n\tprivate \"_myvar\";\n\tsystemChat str [_myvar];\t// [any]\n\t_myvar = 345;\n\tsystemChat str [_myvar];\t// [345]\n};\nsystemChat str [_myvar];\t\t// [123]\n```","commands\\processDiaryLink.md":"Opens the `Diary` screen on the subject/record specified by link. To get a valid link format, use `createDiaryLink`.\n\n\n---\n*Syntaxes:*\n\n`processDiaryLink` link\n\n---\n*Example 1:*\n\n```sqf\nprocessDiaryLink createDiaryLink [\"Tasks\", (simpleTasks player) select 0, \"\"]; // Select a task in the Task menu\n```\n\n*Example 2:*\n\n```sqf\n// To select various tabs in the map screen:\nprocessDiaryLink createDiaryLink [\"selected_tab\", player, \"\"];\n// ... where \"selected_tab\" can be \"Tasks\", \"Diary\", \"Units\", \"Players\", \"Statistics\", other user created subjects\n```","commands\\productVersion.md":"Returns the product's friendly name, identifier, version and build number.\n\n\n---\n*Syntaxes:*\n\n`productVersion`\n\n---\n*Example 1:*\n\n```sqf\nhint str productVersion; // would return [\"Arma 2 OA\", \"arma2oa\", 162, 95208] on Arma 2 OA 1.62.95208\n```\n\n*Example 2:*\n\n```sqf\nhint str productVersion; // [\"Arma 3\", \"Arma3\", 137, 128764, \"Development\", false, \"Windows\"]\n```\n\n*Example 3:*\n\n```sqf\nformat [\"%1.%2\",(productVersion # 2)/100 toFixed 2,(productVersion # 3)]; // returns version e.g.: \"2.00.146773\"\n```","commands\\profileName.md":"Returns currently chosen user profile name. For Steam profile name see `profileNameSteam`.\n\n\n---\n*Syntaxes:*\n\n`profileName`\n\n---\n*Example 1:*\n\n```sqf\n_myInGameProfileName = profileName;\n```","commands\\profileNamespace.md":"Returns the global namespace attached to the active user profile. Use `setVariable` and `getVariable` to save and load data to and from this `Namespace`. A variable can be deleted by setting its value to `nil`. By default the variables set in this namespace will exist while the game is running, and variables are saved persistently when the game is closed. Saving can also be forced by using `saveProfileNamespace` to prevent data loss on e.g game crash.<br>\nThe variables are stored next to the user profile in a file named **myUsername.vars.GAMENAME**.\n\n\n---\n*Syntaxes:*\n\n`profileNamespace`\n\n---\n*Example 1:*\n\n```sqf\nprofileNamespace setVariable [\"TAG_kills\", 10000];\n// somewhere else in the code\n_kills = profileNamespace getVariable [\"TAG_kills\", 0];\n```","commands\\profileNameSteam.md":"Returns name of the current Steam profile. For currently chosen user profile name see `profileName`\n\n\n---\n*Syntaxes:*\n\n`profileNameSteam`\n\n---\n*Example 1:*\n\n```sqf\n_mySteamProfileName = profileNameSteam;\n```","commands\\progressLoadingScreen.md":"If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])\n\n\n---\n*Syntaxes:*\n\n`progressLoadingScreen` progress\n\n---\n*Example 1:*\n\n```sqf\nstartLoadingScreen [\"Loading My Mission\"];\n// \n// batch of code\n// \nprogressLoadingScreen 0.25;\n// \n// batch of code\n// \nprogressLoadingScreen 0.50;\n// \n// batch of code\n// \nprogressLoadingScreen 0.95;\n// \n// batch of code\n// \nendLoadingScreen;\n```","commands\\progressPosition.md":"Returns the current position in the `progress bar`.\n\n\n---\n*Syntaxes:*\n\n`progressPosition` control\n\n---\n*Example 1:*\n\n```sqf\n_progress = progressPosition _control;\n```","commands\\progressSetPosition.md":"Sets progress position of a `progress bar`.\n\n\n---\n*Syntaxes:*\n\ncontrol `progressSetPosition` progress\n\n---\n*Example 1:*\n\n```sqf\n_control progressSetPosition 0.5;\n```\n\n*Example 2:*\n\n```sqf\nwith uiNamespace do {\n\tbar = findDisplay 46 ctrlCreate [\"RscProgress\", -1];\n\tbar ctrlSetPosition [0,0,1,0.01];\n\tbar ctrlCommit 0;\n\tbar progressSetPosition 0.75;\n};\n```","commands\\publicVariable.md":"Reliably broadcasts `missionNamespace` variable and its `current` value to all computers (server/client).<br>\nVariables broadcast with `publicVariable` during a mission will be available to `JIP` clients with the value they held at the time.<br>\nSuch variables are persistent and sent to the JIP client before the first batch of client-side `Event Scripts` (such as `init.sqf`) is run.\n\n\n---\n*Syntaxes:*\n\n`publicVariable` varName\n\n---\n*Example 1:*\n\n```sqf\nTAG_MyPublicVariable = 0;\nTAG_MyPublicVariable = 1;\npublicVariable \"TAG_MyPublicVariable\";\t// other clients will receive the \"TAG_MyPublicVariable\" variable with a 1 value\n\nTAG_MyPublicVariable = 2;\t\t\t\t// needs to be broadcast again - synchronisation is not automatic\n```\n\n*Example 2:*\n\nJIP example:\n\n```sqf\nif (isNil \"TAG_CurrentTarget\") then\t// has the variable already been set and broadcast?\n{\n\tTAG_CurrentTarget = objNull;\t// if not, set it on the local machine\n};\n\nplayer doTarget TAG_CurrentTarget;\n```\n\n*Example 3:*\n\n```sqf\nTAG_BossName = \"EvilBigBoss\";\n\npublicVariable TAG_BossName;\t// wrong - will try to publicVariable \"EvilBigBoss\" variable, that does not exist\npublicVariable \"TAG_BossName\";\t// correct - important, do not forget the QUOTES\n```","commands\\publicVariableClient.md":"Send the variable value to the client computer - same limitations regarding variable type as `publicVariable`.\n\nThe Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the `owner` command (using it on a player's character, for example, will give you that players client ID).<br><br>\n\n\n---\n*Syntaxes:*\n\nclientID `publicVariableClient` varName\n\n---\n*Example 1:*\n\n```sqf\n3 publicVariableClient \"CTFscoreOne\";\n```","commands\\publicVariableServer.md":"Send the variable value to the server - same limitations regarding variable type as `publicVariable`.\n\n\n---\n*Syntaxes:*\n\n`publicVariableServer` varName\n\n---\n*Example 1:*\n\n```sqf\npublicVariableServer \"CTFscoreOne\";\n```","commands\\pushBack.md":"Insert an element to the back of the given array. This command modifies the original array. (see also: `pushBackUnique`)\n\n\n---\n*Syntaxes:*\n\narray `pushBack` element\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,2,3];\n_arr pushBack 4;\nhint str _arr; //[1,2,3,4]\n```\n\n*Example 2:*\n\n```sqf\n_arr = [1,[2,4],3];\n(_arr select 1) pushBack [5,6];\nhint str _arr //[1,[2,4,[5,6]],3]\n```","commands\\pushBackUnique.md":"Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.\n\n\n---\n*Syntaxes:*\n\narray `pushBackUnique` element\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,2,3];\n_index = _arr pushBackUnique 3;\nhint str [_index, _arr]; // [-1,[1,2,3]]\n```\n\n*Example 2:*\n\n```sqf\n_arr = [1,2,3];\n_index = _arr pushBackUnique 4;\nhint str [_index, _arr]; // [3,[1,2,3,4]]\n```","commands\\putWeaponPool.md":"Transfers weapons and magazines from weapon pool into cargo of given object. Used in campaign to transfer weapons into next mission.\n\n\n---\n*Syntaxes:*\n\n`putWeaponPool` object\n\n---\n*Example 1:*\n\n```sqf\nputWeaponPool player;\n```","commands\\queryItemsPool.md":"Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).\n\n\n---\n*Syntaxes:*\n\n`queryItemsPool` name\n\n---\n*Example 1:*\n\n```sqf\nprivate _amountOfFAKgiven = queryItemsPool \"FirstAidKit\";\n```","commands\\queryMagazinePool.md":"Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission).\n\n\n---\n*Syntaxes:*\n\n`queryMagazinePool` name\n\n---\n*Example 1:*\n\n```sqf\n_num = queryMagazinePool \"M16\";\n```","commands\\queryWeaponPool.md":"Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission).\n\n\n---\n*Syntaxes:*\n\n`queryWeaponPool` name\n\n---\n*Example 1:*\n\n```sqf\n_num = queryWeaponPool \"M16\";\n```","commands\\rad.md":"Converts given value in degrees to radians. 1 radian equals 180 degrees divided by `pi`.\n\n\n---\n*Syntaxes:*\n\n`rad` value\n\n---\n*Example 1:*\n\n```sqf\n_radians = rad 180; // returns 3.1415 (pi)\n```","commands\\radioChannelAdd.md":"Add the units to the custom channel.\n\n\n---\n*Syntaxes:*\n\ncustomChannelID `radioChannelAdd` units\n\n---\n*Example 1:*\n\n```sqf\n2 radioChannelAdd [player, unit1];\n```","commands\\radioChannelCreate.md":"Create a custom radio channel with the given color, label, call sign and registered characters. The ``custom channel ID`` returned can be used to manipulate the created channel later. There are 10 slots for custom radio channels which would correspond to channels 6-15 (see `getPlayerChannel`). The command will find an unused index in this range and create it when found.\n\n\n---\n*Syntaxes:*\n\n`radioChannelCreate` [color, label, callSign, units, sentenceType]\n\n---\n*Example 1:*\n\n```sqf\n_channelID = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [player1, player2]];\n```\n\n*Example 2:*\n\n```sqf\n_channelID = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [player1, player2], true];\n// using true also disables automatic quotes for chat in channel (Arma 3)\n```\n\n*Example 3:*\n\nCreate custom channel and add all players to it, present and JIP:\n\n```sqf\nif (isServer) then\n{\n\tprivate _channelName = \"Q-dance Radio\";\n\tprivate _channelID = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], _channelName, \"%UNIT_NAME\", []];\n\tif (_channelID == 0) exitWith {diag_log format [\"Custom channel '%1' creation failed!\", _channelName]};\n\t[_channelID, {_this radioChannelAdd [player]}] remoteExec [\"call\", [0, -2] select isDedicated, _channelName];\n};\n```","commands\\radioChannelInfo.md":"Obtains custom radio channel's details, set by `radioChannelCreate`.\n\n\n---\n*Syntaxes:*\n\n`radioChannelInfo` customChannelID\n\n---\n*Example 1:*\n\n```sqf\nprivate _channelID = radioChannelCreate [[1, 0, 0.5, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false];\nradioChannelInfo _channelID; // returns [[1,0,0.5,0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [u1, u2], false, true]\n```","commands\\radioChannelRemove.md":"Remove the units from the custom radio channel.\n\n\n---\n*Syntaxes:*\n\ncustomChannelID `radioChannelRemove` units\n\n---\n*Example 1:*\n\n```sqf\n3 radioChannelRemove [blufor_unit_1, blufor_unit_2];\n```","commands\\radioChannelSetCallSign.md":"Set the custom radio channel's call sign. \n\nAvailable special parameters:\n* $KEY (reference to a localized text)\n* %CHANNEL_LABEL\n* %UNIT_SIDE\n* %UNIT_NAME\n* %UNIT_RANK\n* %UNIT_ID\n* %UNIT_REF\n* %UNIT_GRP_NAME\n* %UNIT_GRP_LEADER\n* %UNIT_VEH_NAME\n* %UNIT_VEH_POSITION\n\n\n---\n*Syntaxes:*\n\ncustomChannelID `radioChannelSetCallSign` callSign\n\n---\n*Example 1:*\n\n```sqf\n4 radioChannelSetCallSign \"%UNIT_NAME\";\n```","commands\\radioChannelSetLabel.md":"Set the custom radio channel's label.\n\n\n---\n*Syntaxes:*\n\ncustomChannelID `radioChannelSetLabel` label\n\n---\n*Example 1:*\n\n```sqf\n5 radioChannelSetLabel \"Q-dance Radio\";\n```","commands\\radioEnabled.md":"A getter for `enableRadio`.\n\n\n---\n*Syntaxes:*\n\n`radioEnabled`\n\n---\n*Example 1:*\n\n```sqf\nif (radioEnabled) then { enableRadio false };\n```","commands\\radioVolume.md":"Returns the current radio volume (set by `fadeRadio`).\n\n\n---\n*Syntaxes:*\n\n`radioVolume`\n\n---\n*Example 1:*\n\n```sqf\nhint str radioVolume;\n```","commands\\rain.md":"Returns the current value of rain density in range 0..1\n\n\n---\n*Syntaxes:*\n\n`rain`\n\n---\n*Example 1:*\n\n```sqf\n_rainLevel = rain;\n```","commands\\rainbow.md":"Returns the current rainbow intensity.\n\n\n---\n*Syntaxes:*\n\n`rainbow`\n\n---\n*Example 1:*\n\n```sqf\nprivate _intensity = rainbow;\n```","commands\\rainParams.md":"Returns currently set [[Arma_3:_CfgWorlds_Config_Reference#class_RainParticles | RainParticles]] params, custom or default.\n\n\n---\n*Syntaxes:*\n\n`rainParams`\n\n---\n*Example 1:*\n\n```sqf\nprivate _rainParams = rainParams;\n```","commands\\random.md":"[[Image:bellcurve.jpg|thumb|120px|[[#Syntax 2|Syntax&nbsp;2]]'s distribution]]\n\n\n---\n*Syntaxes:*\n\n`random` x\n\n`random` [min, mid, max]\n\nseed `random` x\n\nseed `random` [x, y]\n\n---\n*Example 1:*\n\n```sqf\n_rNumber = random 1;\n```\n\n*Example 2:*\n\n```sqf\n_rNumber = random -10;\n```\n\n*Example 3:*\n\nGenerate a random position inside a circle (see also `Example Code: Random Area Distribution`)\n\n```sqf\n_center getPos [_radius * sqrt random 1, random 360];\n```\n\n*Example 4:*\n\nSelect a random value from an array:\n\n```sqf\n_array = [\"apples\", \"pears\", \"bananas\", \"M16\"];\n\n_random = _array select floor random count _array;\t// Before Arma 2\n_random = _array call BIS_fnc_selectRandom;\t\t\t// Since Arma 2\n_random = selectRandom _array;\t\t\t\t\t\t// Since Arma 3 v1.56\n```","commands\\rank.md":"Returns the rank of the given unit. Rank can be one of the following:\n* **\"PRIVATE\"**\n* **\"CORPORAL\"**\n* **\"SERGEANT\"**\n* **\"LIEUTENANT\"**\n* **\"CAPTAIN\"**\n* **\"MAJOR\"**\n* **\"COLONEL\"**\n\n\n---\n*Syntaxes:*\n\n`rank` unit\n\n---\n*Example 1:*\n\n```sqf\n_rank = rank player;\n```","commands\\rankId.md":"Return the rank of the given unit for comparison.\n\nValue may be:\n* `0` - Private\n* `1` - Corporal\n* `2` - Sergeant\n* `3` - Lieutenant\n* `4` - Captain\n* `5` - Major\n* `6` - Colonel\n\n\n---\n*Syntaxes:*\n\n`rankId` unit\n\n---\n*Example 1:*\n\n```sqf\n_myIdRank = rankId player;\n```","commands\\rating.md":"Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see `Rating Values`). Can be changed via `addRating` by the mission designer. \n\nThe rating of the player is displayed as the \"score\" at the end of the mission. Via `Description.ext` one can define how many points it takes to get a perfect score, as well as the number of stars.\n\n\n---\n*Syntaxes:*\n\n`rating` unitName\n\n---\n*Example 1:*\n\n```sqf\n_score = rating player;\n```","commands\\rectangular.md":"Checks if a location is rectangular (returns true) or elliptical (returns false).\n\n\n---\n*Syntaxes:*\n\n`rectangular` location\n\n---\n*Example 1:*\n\n```sqf\n_isRect = rectangular myLocation;\n```","commands\\regexFind.md":"Searches in a string with a regular expression.\n\n\n---\n*Syntaxes:*\n\nhaystack `regexFind` [pattern, startOffset]\n\n---\n*Example 1:*\n\n```sqf\n\"wooKie boOkie cookie\" regexFind [\".ookie/gio\"]; // [[[\"wooKie\", 0]], [[\"boOkie\", 7]], [[\"cookie\", 14]]]\n```\n\n*Example 2:*\n\n```sqf\n\"wooKie boOkie cookie\" regexFind [\".ookie/i\"]; // [[[\"wooKie\",0]]]\n```\n\n*Example 3:*\n\n```sqf\n\"wooKie boOkie cookie\" regexFind [\".ookie/\"]; // [[[\"cookie\", 14]]]\n```\n\n*Example 4:*\n\nMultiline example:\n\n```sqf\n\"co1kie2\nco2kie\" regexFind [\"^co.kie$\"]; // [[[\"co2kie\",9]]]\n```\n\n*Example 5:*\n\n```sqf\n\"I'm a cookie clicker\" regexFind [\"c(.*?)k(.*?)e/i\"]; // [[[\"cookie\",6], [\"oo\", 7], [\"i\", 10]]]\n```\n\n*Example 6:*\n\n```sqf\n\"I'm a cookie clicker\" regexFind [\"c(.*?)k(.*?)e\"]; // [[[\"cookie\", 6], [\"oo\", 7], [\"i\", 10]], [[\"clicke\", 13], [\"lic\", 14], [\"\", 18]]]\n```","commands\\regexMatch.md":"Returns whether the `haystack` matches the `pattern`.\n\n\n---\n*Syntaxes:*\n\nhaystack `regexMatch` pattern\n\n---\n*Example 1:*\n\n```sqf\n\"I'm a coOkIe clicker\" regexMatch \".*cookie.*\"; // true\n```\n\n*Example 2:*\n\n```sqf\n\"I'm a coOkIe clicker\" regexMatch \".*cookie.*/\"; // false, empty flags == case sensitive\n```\n\n*Example 3:*\n\n```sqf\nforceUnicode 1;\n\"I'm a coÖkIe clicker\" regexMatch \".*coökie.*\";\n```\n\n*Example 4:*\n\n```sqf\n\"Cookie clicker\" regexMatch \"cookie/i\"; // false, pattern does not fully match the haystack\n```","commands\\regexReplace.md":"Searches given `haystack` with given `pattern` and replaces all matches with given `replaceString`.\n\n\n---\n*Syntaxes:*\n\nhaystack `{{PAGENAMEE}}` [pattern, replace string]\n\n---\n*Example 1:*\n\n```sqf\n\"wookie boOkie cookie\" regexReplace [\".oo/gio\", \"[$']\"]; // \"[kie boOkie cookie]kie [kie cookie]kie [kie]kie\"\n```\n\n*Example 2:*\n\n```sqf\n\"wookie boOkie cookie\" regexReplace [\".oo/gio\", \"[$&]\"]; // \"[woo]kie [boO]kie [coo]kie\"\n```\n\n*Example 3:*\n\n```sqf\n\"wook1e boOk2e cook3e\" regexReplace [\".oo/gio\", \"[$`]\"]; // \"[]kie [k1e ]k2e [k2e ]k3e\"\n```\n\n*Example 4:*\n\n```sqf\n\"wook1e boOk2e cook3e\" regexReplace [\".(oo)(.*?)e\", \"[$2]\"]; // \"[k1] [k2] [k3]\"\n```\n\n*Example 5:*\n\n```sqf\n\"wOokie boOkie cookie\" regexReplace [\".(?<test>oo)kie/gio\", \"[$+{test}]\"]; // \"[oo] [oO] [oo]\"\n```","commands\\registeredTasks.md":"Returns array with all registered task types for the given agent. The values are the names set in **CfgTasks}} classes {{hl|name** property. The same names are used for `unregisterTask`\n\n\n---\n*Syntaxes:*\n\n`registeredTasks` teamMember\n\n---\n*Example 1:*\n\n```sqf\ntasklist = registeredTasks teamMember _agent;\n```\n\n*Example 2:*\n\n```sqf\n_rabbit = createAgent [\"Rabbit_F\", position player,[], 0, \"None\"];\nhint str registeredTasks teamMember _rabbit; // shows [\"Animal Main Task\"] in Arma 3\n```","commands\\registerTask.md":"Registers a new task type. Parameters are defined in the given config class (subclass of **CfgTasks**)\n\n\n---\n*Syntaxes:*\n\nteamMember `registerTask` entryName\n\n---\n*Example 1:*\n\n```sqf\nteamMember _agent registerTask \"MyTask\";\n```","commands\\reload.md":"* Old syntax: Reload first found muzzle that needs reloading (with some inconsistencies). \n* Alternative syntax (Since Arma 3 v2.08.148609): This syntax allows to reload given muzzle with given magazine while playing proper animation. If param is omitted or is empty string, default value is used. The default behaviour is to find best matching magazine for given muzzle from the pool of available magazines. If specific magazine is requested, the reload will fail if unit has run out of this type of magazines. If empty array [] is given, the behaviour is similar to player pressing \"Reload\" key. The command reloads the given muzzle but doesn't select it. In case of ` throwable` muzzles, each throwable has own muzzle, they are autoreloaded after throw. Using reload on the trowable muzzle will just swap throwable for another one of the same type from inventory.\n\n\n---\n*Syntaxes:*\n\n`reload` unitName\n\nunit `reload` [muzzle, magazine]\n\n---\n*Example 1:*\n\n```sqf\nif (needReload player == 1) then { reload player };\n```\n\n*Example 2:*\n\n```sqf\nplayer reload [\"GL_3GL_F\", \"1Rnd_HE_Grenade_shell\"];\n```\n\n*Example 3:*\n\nReload current muzzle:\n\n```sqf\nplayer reload [];\n```","commands\\reloadEnabled.md":"Check whether magazine is reloaded whenever emptied.\n\n\n---\n*Syntaxes:*\n\n`reloadEnabled` unitName\n\n---\n*Example 1:*\n\n```sqf\nprivate _canReload = reloadEnabled _unit1;\n```","commands\\remoteControl.md":"Switches on remote control of the unit. Command needs to be executed locally to the player.\nIf driver is remote it will get transferred to players PC.\n\n\n---\n*Syntaxes:*\n\nwho `remoteControl` whom\n\n---\n*Example 1:*\n\nSet player remote control of driver:\n\n```sqf\nplayer remoteControl driver UAV;\ndriver UAV switchCamera \"Internal\"; // switchCamera required\n// sometimes switchCamera is not needed\nplayer remoteControl driver UAV;\n```\n\n*Example 2:*\n\nReturn control to player: \n```sqf\nobjNull remoteControl driver UAV;\n```\n\n*Example 3:*\n\nA dirty hack to return controlling unit because of the absence of dedicated getter:\n\n```sqf\nSQF_fnc_remoteControlledBy =\n{\n\tparams [\"_obj\"];\n\tif (!isNull objectParent _obj) exitWith { UAVControl _obj select 0 };\n\tprivate _res = [objNull];\n\tisNil\n\t{\n\t\tprivate _pos = getPosWorld _obj;\n\t\tprivate _dirUp = [vectorDirVisual _obj, vectorUpVisual _obj];\n\t\tprivate _anim = animationState _obj;\n\t\tprivate _dummy = \"PaperCar\" createVehicleLocal [0,0,0];\n\t\t_obj moveInAny _dummy;\n\t\t_res = uavControl _dummy;\n\t\t_obj setPosWorld _pos;\n\t\t_obj setVectorDirAndUp _dirUp;\n\t\t_obj switchMove _anim;\n\t\tdeleteVehicle _dummy;\n\t};\n\t_res select 0\n};\n```\nUsage (could be scheduled or unscheduled):\n\n```sqf\n[] spawn\n{\n\tplayer remoteControl bob;\n\tsystemChat str (bob call SQF_fnc_remoteControlledBy); // B Alpha 1-1:1 (KK)\n\tobjNull remoteControl bob;\n\tsystemChat str (bob call SQF_fnc_remoteControlledBy); // <NULL-object>\n};\n```","commands\\remoteExec.md":"Asks the server to execute the given function or script command on the given target machine(s).\n* Functions are executed in the `scheduled environment`; suspension is allowed.\n* Script commands are executed in the `unscheduled environment`; suspension is not allowed (see *(Reference Link \"#Example 7\")*).\n\nRead [[Arma 3: Remote Execution]] for more information about remote execution, security features and JIP techniques.\n\n\n---\n*Syntaxes:*\n\nparams `remoteExec` [order, targets, JIP]\n\n`remoteExec` [functionName, targets, JIP]\n\n---\n*Example 1:*\n\nHow to write `remoteExec`/`remoteExecCall`:\n<code>*(Reference Color \"hint\" at darkorange)* *(Reference Color \"teal|\"Hello\"\")*;\n*(Reference cc \"becomes\")*\n[*(Reference Color \"teal|\"Hello\"\")*] remoteExec [\"*(Reference Color \"hint\" at darkorange)*\"];\n*(Reference Color \"teal|\"Hello\"\")* remoteExec [\"*(Reference Color \"hint\" at darkorange)*\"]; *(Reference cc \"alternatively\")*</code>\n\n<code>*(Reference Color \"unit1\" at green)* *(Reference Color \"setFace\" at darkorange)* *(Reference Color \"teal|\"Miller\"\")*;\n*(Reference cc \"becomes\")*\n[*(Reference Color \"unit1\" at green)*, *(Reference Color \"teal|\"Miller\"\")*] remoteExec [\"*(Reference Color \"setFace\" at darkorange)*\"];</code>\n\n<code>*(Reference Color \"cutRsc\" at darkorange)* *(Reference Color \"darkred|[\"\", \"BLACK OUT\"]\")*;\n*(Reference cc \"becomes\")*\n[*(Reference Color \"darkred|[\"\", \"BLACK OUT\"]\")*] remoteExec [\"*(Reference Color \"cutRsc\" at darkorange)*\"]; // double brackets are needed as the unary command takes an array</code>\n\n<code>*(Reference cc \"functions, however, do not need double squared brackets\")*\n*(Reference Color \"teal|[\"line 1\", \"line 2\"]\")* spawn *(Reference Color \"BIS_fnc_infoText\" at darkorange)*;\n*(Reference cc \"becomes\")*\n*(Reference Color \"teal|[\"line 1\", \"line 2\"]\")* remoteExec [\"*(Reference Color \"BIS_fnc_infoText\" at darkorange)*\"];</code>\n\n*Example 2:*\n\nsend an order to specific machines:\n\n```sqf\n\"message\" remoteExec [\"hint\", 0];\t\t\t\t// sends a hint message to everyone, identical to \"message\" remoteExec [\"hint\"]\n\"message\" remoteExec [\"hint\", -2];\t\t\t\t// sends a hint message to everybody but the server\n\"message\" remoteExec [\"hint\", myCar];\t\t\t// sends a hint message where myCar is local\n\"message\" remoteExec [\"hint\", -clientOwner];\t// sends a hint message to everybody but the current machine\n```\n\n*Example 3:*\n\n<!-- This example is referenced in the Syntax section. -->\nAdd statements to the JIP queue:\n\n```sqf\nprivate _jipId = [\"mission state: the car is broken\"] remoteExec [\"systemChat\", 0, true]; // adds the hint to the JIP queue and returns the JIP queue order id\nwaitUntil { canMove _car };\nremoteExec [\"\", _jipId]; // the systemChat order is removed from the JIP queue\n```\n\n\n```sqf\n[\"mission state: the car is broken\"] remoteExec [\"systemChat\", 0, _queueObject];\n// ...\nremoteExec [\"\", _queueObject]; // the order attached to _queueObject is removed\n```\n\n\n```sqf\nprivate _jipId = [\"mission state: the car is broken\"] remoteExec [\"systemChat\", 0, \"MY_JIP_ID\"]; // _jipId is actually \"MY_JIP_ID\" now\nwaitUntil { canMove _car };\n[\"mission state: the car is repaired\"] remoteExec [\"systemChat\", 0, \"MY_JIP_ID\"]; // this order replaces the previous one\n// ...\nremoteExec [\"\", \"MY_JIP_ID\"]; // the \"MY_JIP_ID\" order is removed from the JIP queue\n```\n\n*Example 4:*\n\nSome more complex examples:\n\n```sqf\n[\"Open\", true] remoteExec [\"BIS_fnc_arsenal\", MyTargetPlayer];\n[MyCurator, [[MyObject1, MyObject2], false]] remoteExec [\"addCuratorEditableObjects\", 2];\n```\n\n*Example 5:*\n\nA tricky example: executing <sqf inline>player setAmmo [primaryWeapon player, 1];\n``` (on machines where the player is in MyGroup):\n\n```sqf\n[player, [primaryWeapon player, 1]] remoteExec [\"setAmmo\", MyGroup]; // WRONG: the local player object is used here!\n{ player setAmmo [primaryWeapon player, 1]; } remoteExec [\"call\", MyGroup]; // CORRECT: the remote player object is used here\n```\n\n*Example 6:*\n\n``Multiplayer Scripting` \"performance trick\"`<br>\nThis <sqf inline>[0, -2] select isDedicated\n``` check is worth to avoid `function` server-side calculations only:\n\n```sqf\n[\"message\"] remoteExec [\"BIS_fnc_infoText\"];\t\t\t\t\t\t\t\t// not ideal - the function will still run on the dedicated server for nothing\n[\"message\"] remoteExec [\"BIS_fnc_infoText\", [0, -2] select isDedicated];\t// ideal - the dedicated server will not run the code, a player-hosted server will\n\n\"message\" remoteExec [\"hint\", [0, -2] select isDedicated];\t// the check is too costy to be worthy\n\"message\" remoteExec [\"hint\"];\t\t\t\t\t\t\t\t// the (dedicated) server will automatically ditch hint usage due to it not having an interface\n```\n\n*Example 7:*\n\n<!-- This example is referenced in the Description section. -->\nAs said in the description: `commands` will be executed in an `unscheduled environment`\n\n```sqf\n[{ sleep 1 }] remoteExec [\"call\"]; // will throw an error: it is forbidden to use sleep (or waitUntil, etc) in unscheduled environment\n```\n\n*Example 8:*\n\n<!-- This example is referenced in the Description section. -->\n\n```sqf\n\"Message 1\" remoteExec [\"systemChat\"];\n\"Message 2\" remoteExec [\"systemChat\"];\n// will result in\n// \"Message 1\"\n// \"Message 2\"\n// in this exact order on clients\n```","commands\\remoteExecCall.md":"`Unscheduled` version of `remoteExec`. The only difference between `remoteExec` and `remoteExecCall` is that `remoteExecCall` will run `functions` in `unscheduled environment`.\n\n\n---\n*Syntaxes:*\n\nsee `remoteExec`\n\n---\n*Example 1:*\n\n```sqf\n[\"hello\"] remoteExec [\"hint\"];\t\t// runs unscheduled\n[\"hello\"] remoteExecCall [\"hint\"];\t// no difference at all\n```\n\n*Example 2:*\n\n```sqf\n[\"my message\"] remoteExec [\"BIS_fnc_infoText\"];\t\t// correct\n[\"my message\"] remoteExecCall [\"BIS_fnc_infoText\"];\t// wrong - BIS_fnc_infoText needs a scheduled environment, see its spawn need\n```\n\n*Example 3:*\n\n```sqf\nremoteExecCall [\"fnc1\"];\ncall fnc2;\t// fnc1 may or may not be executed after fnc2\n\ncall fnc1;\ncall fnc2;\t// fnc2 will be executed after fnc1\n```","commands\\remoteExecutedOwner.md":"Returns the ` machine network ID` of the client that initiated `Remote Execution`. If used in SP or outside of remote executed context, the command returns 0.\n\n\n---\n*Syntaxes:*\n\n`remoteExecutedOwner`\n\n---\n*Example 1:*\n\n```sqf\nprivate _callerRE = remoteExecutedOwner;\n```\n\n*Example 2:*\n\nSend request to the server and get immediate response:\n\n```sqf\n{\n\t// in this scope, the remoteExecutedOwner equals clientOwner of the sender\n\t// so using it as target in remoteExec will send response right back at him\n\t[\n\t\ttime, // mission time value on the server\n\t\t{\n\t\t\thint format\n\t\t\t[\n\t\t\t\t\"Request recieved!\\nMission time value on the server is: %1\",\n\t\t\t\t_this\n\t\t\t];\n\t\t}\n\t]\n\tremoteExec [\"call\", remoteExecutedOwner]; // server response to the sender\n} \nremoteExec [\"call\", 2]; // send request to server\n```","commands\\remove3DENConnection.md":"Removes `connection` between entities.\n\n\n---\n*Syntaxes:*\n\n[[remove3DENConnection]] [type, from, to]\n\n---\n*Example 1:*\n\n```sqf\nremove3DENConnection [\"RandomStart\", get3DENSelected \"Object\", \"marker_0\"];// Remove random start on marker \"marker_0\" from all selected objects.\n```","commands\\remove3DENEventHandler.md":"Removes Eden Editor event handler of given type and ID.\n<br><br>\nSee the list of all [[Arma_3:_Event_Handlers:_Eden_Editor|Eden Editor Event Handlers]].\n\n\n---\n*Syntaxes:*\n\n[[remove3DENEventHandler]] [type,id]\n\n---\n*Example 1:*\n\n```sqf\neh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}];\nremove3DENEventHandler [\"onUndo\",eh];\n```","commands\\remove3DENLayer.md":"Remove `Eden Editor` editing layer.\n\n\n---\n*Syntaxes:*\n\n[[remove3DENLayer]] layerID\n\n---\n*Example 1:*\n\n```sqf\n_myLayer = -1 add3DENLayer \"Enemy Base\";\nremove3DENLayer _myLayer ;\n```","commands\\removeAction.md":"Removes user added action with given ID. This only removes actions added with the `addAction` command. You cannot remove default game actions, such as reload.\n\n\n---\n*Syntaxes:*\n\nunit `removeAction` actionID\n\n---\n*Example 1:*\n\n```sqf\nplayer removeAction 0;\n```","commands\\removeAll3DENEventHandlers.md":"Removes all `Eden Editor` event handlers of given type. \n<br><br>\nSee the list of all [[Arma_3:_Event_Handlers:_Eden_Editor|Eden Editor Event Handlers]].\n\n\n---\n*Syntaxes:*\n\n[[removeAll3DENEventHandlers]] type\n\n---\n*Example 1:*\n\n```sqf\nremoveAll3DENEventHandlers \"onUndo\";\n```","commands\\removeAllActions.md":"Removes all unit's user added actions.\n\n\n---\n*Syntaxes:*\n\n`removeAllActions` obj\n\n---\n*Example 1:*\n\n```sqf\nremoveAllActions player;\n```\n\n*Example 2:*\n\nDo\n\n```sqf\nprivate _actionId = player addAction [\"Heal self\", { player setDamage 0; }];\n// ...\nplayer removeAction _actionId;\n```\nDon't\n\n```sqf\nplayer addAction [\"Heal self\", { player setDamage 0; }];\n// ...\nremoveAllActions player;\n```\n\n*Example 3:*\n\nDo\n\n```sqf\nplayer addAction [\"Heal self (once)\", {\n\tparams [\"_target\", \"\", \"_actionId\"];\n\t_target setDamage 0;\n\t_target removeAction _actionId;\n}];\n```\nDon't\n\n```sqf\nplayer addAction [\"Heal self (once)\", {\n\tplayer setDamage 0;\n\tremoveAllActions player;\n}];\n```","commands\\removeAllAssignedItems.md":"Unassigns and deletes all linked items from inventory.\nThe commands operates on `assignedItems` array, which does not include goggles or headgear.<br>\nUse `removeGoggles` and `removeHeadgear` for those.\n\n\n---\n*Syntaxes:*\n\n`removeAllAssignedItems` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllAssignedItems player;\n```","commands\\removeAllBinocularItems.md":"Removes all items from `binocular` weapon, except magazine.\n\n\n---\n*Syntaxes:*\n\n`removeAllBinocularItems` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllBinocularItems player;\n```","commands\\removeAllContainers.md":"Removes all containers from the unit.\n\n\n---\n*Syntaxes:*\n\n`removeAllContainers` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllContainers player;\n```","commands\\removeAllCuratorAddons.md":"Restrict access to all addons for given curator.\n\n\n---\n*Syntaxes:*\n\n`removeAllCuratorAddons` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nremoveAllCuratorAddons myCurator;\n```","commands\\removeAllCuratorCameraAreas.md":"Delete all curator camera areas.\n\n\n---\n*Syntaxes:*\n\n`removeAllCuratorCameraAreas` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nremoveAllCuratorCameraAreas myCurator;\n```","commands\\removeAllCuratorEditingAreas.md":"Delete all curator edit areas.\n\n\n---\n*Syntaxes:*\n\n`removeAllCuratorEditingAreas` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nremoveAllCuratorEditingAreas myCurator;\n```","commands\\removeAllEventHandlers.md":"Removes all event handlers of given type that were added by `addEventHandler` `and` resets event handler's creation index to 0.\n\n\n---\n*Syntaxes:*\n\ntarget `removeAllEventHandlers` handlerType\n\n---\n*Example 1:*\n\n```sqf\nplayer removeAllEventHandlers \"Killed\";\n```","commands\\removeAllHandgunItems.md":"Removes all items from `handgunWeapon`, except magazine.\n\n\n---\n*Syntaxes:*\n\n`removeAllHandgunItems` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllHandgunItems player;\n```","commands\\removeAllItems.md":"Removes all special items from the unit.\n\n\n---\n*Syntaxes:*\n\n`removeAllItems` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllItems unitName;\n```","commands\\removeAllItemsWithMagazines.md":"Removes all `itemsWithMagazines` from the uniform, vest and backpack. Command essentially clears all unit's containers.\n\n\n---\n*Syntaxes:*\n\n`removeAllItemsWithMagazines` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllItemsWithMagazines player;\n```","commands\\removeAllMissionEventHandlers.md":"Removes all mission event handlers of the given type which were added by `addMissionEventHandler`.\n\n\n---\n*Syntaxes:*\n\n`removeAllMissionEventHandlers` type\n\n---\n*Example 1:*\n\n```sqf\nremoveAllMissionEventHandlers \"Loaded\";\n```","commands\\removeAllMPEventHandlers.md":"Removes all MP event handlers of the given type which were added by `addMPEventHandler`. Command needs to be executed only on one PC for MP event handler to be removed globally.\n\n\n---\n*Syntaxes:*\n\nobjectName `removeAllMPEventHandlers` event\n\n---\n*Example 1:*\n\n```sqf\nplayer removeAllMPEventHandlers \"MPKilled\";\n```","commands\\removeAllMusicEventHandlers.md":"Removes all music track event handlers of given type.\n\n\n---\n*Syntaxes:*\n\n`removeAllMusicEventHandlers` type\n\n---\n*Example 1:*\n\n```sqf\nremoveAllMusicEventHandlers \"MusicStart\";\n```\n\n*Example 2:*\n\n```sqf\nremoveAllMusicEventHandlers \"MusicStop\";\n```","commands\\removeAllOwnedMines.md":"Removes ownership of all owned mines/explosive devices of the given unit\n\n\n---\n*Syntaxes:*\n\n`removeAllOwnedMines` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllOwnedMines player;\n```","commands\\removeAllPrimaryWeaponItems.md":"Removes all items from `primaryWeapon`, except magazine.\n\n\n---\n*Syntaxes:*\n\n`removeAllPrimaryWeaponItems` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllPrimaryWeaponItems player;\n```","commands\\removeAllSecondaryWeaponItems.md":"Removes all items from `secondaryWeapon`, except magazine.\n\n\n---\n*Syntaxes:*\n\n`removeAllSecondaryWeaponItems` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveAllSecondaryWeaponItems player;\n```","commands\\removeAllUserActionEventHandlers.md":"Removes all UserAction event handlers of the given type which were added by `addUserActionEventHandler`.\n\n\n---\n*Syntaxes:*\n\n`removeAllUserActionEventHandlers` [keyName, eventType]\n\n---\n*Example 1:*\n\n```sqf\nremoveAllUserActionEventHandlers [\"Reload\", \"Activate\"];\n```","commands\\removeAllWeapons.md":"Removes all weapons and magazines from the given unit. Does not remove items like map, compass, radio (see `removeWeapon` for this).<br>\nDoesn't quite work with vehicles. If you need to remove all weapons from a vehicle, remove each weapon individually (see `removeWeapon`).\n\n\n---\n*Syntaxes:*\n\n`removeAllWeapons` unitName\n\n---\n*Example 1:*\n\n```sqf\nremoveAllWeapons player;\n```","commands\\removeBackpack.md":"Removes unit's backpack\n\n\n---\n*Syntaxes:*\n\n`removeBackpack` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveBackpack this;\n```\n\n*Example 2:*\n\n```sqf\nremoveBackpack mySoldierDude;\n```","commands\\removeBackpackGlobal.md":"Removes backpack from a unit. (even non-local)\n\n\n---\n*Syntaxes:*\n\n`removeBackpackGlobal` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveBackpackGlobal player;\n```","commands\\removeBinocularItem.md":"Removes given weapon item, including magazine, from the `binocular` weapon.\n\n\n---\n*Syntaxes:*\n\nunit `removeBinocularItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removeBinocularItem \"Laserbatteries\";\n```","commands\\removeCuratorAddons.md":"Restrict curator use of given addons.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `removeCuratorAddons` addons\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule removeCuratorAddons [addon1, addon2];\n```","commands\\removeCuratorCameraArea.md":"Removes curator camera area.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `removeCuratorCameraArea` cameraAreaID\n\n---\n*Example 1:*\n\n```sqf\nmyCurator removeCuratorCameraArea 3;\n```","commands\\removeCuratorEditableObjects.md":"Unregister objects which can be edited by a curator.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `removeCuratorEditableObjects` <nowiki>[[</nowiki>objects], removeCrew]\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule removeCuratorEditableObjects [[cursorTarget], true];\n```","commands\\removeCuratorEditingArea.md":"Removes editing area for given curator.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `removeCuratorEditingArea` editAreaID\n\n---\n*Example 1:*\n\n```sqf\nmyCurator removeCuratorEditingArea 3;\n```","commands\\removeDiaryRecord.md":"Remove a log record.\n\n\n---\n*Syntaxes:*\n\nunit `removeDiaryRecord` [subject, diaryRecord]\n\n---\n*Example 1:*\n\n```sqf\nprivate _diaryRecord = player createDiaryRecord [\"diary\", [\"Subject\", \"Text\"]];\n// ...\nplayer removeDiaryRecord [\"Diary\", _diaryRecord];\n```","commands\\removeDiarySubject.md":"Removes a page and all its subjects from the `Diary`.\n\n\n---\n*Syntaxes:*\n\nplayer `removeDiarySubject` diaryPage\n\n---\n*Example 1:*\n\n```sqf\nplayer removeDiarySubject \"myPage\";\n```","commands\\removeDrawIcon.md":"Removes an icon for an editor object.\n\n\n---\n*Syntaxes:*\n\nmap `removeDrawIcon` [object,string identifier]\n\n---\n*Example 1:*\n\n-","commands\\removeDrawLinks.md":"Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.\n\n\n---\n*Syntaxes:*\n\nmap `removeDrawLinks` [from,param type]\n\n---\n*Example 1:*\n\n-","commands\\removeEventHandler.md":"Removes a given Event Handler that was added with `addEventHandler`.\n\n\n---\n*Syntaxes:*\n\ntarget `removeEventHandler` [type, index]\n\n---\n*Example 1:*\n\n```sqf\nplayer removeEventHandler [\"Killed\", 0];\n```\n\n*Example 2:*\n\nThe `Magic Variables` <var>_thisEvent</var> and <var>_thisEventHandler</var> can be used to easily remove an Event Handler:\n\n```sqf\nplayer addEventHandler [\"FiredNear\", {\n\tsystemChat \"This Event Handler is now removing itself!\";\n\tplayer removeEventHandler [_thisEvent, _thisEventHandler];\n}];\n```","commands\\removeFromRemainsCollector.md":"Removes vehicles/units from the garbage collector, so they do not get deleted automatically; added earlier with `addToRemainsCollector`.\n\n\n---\n*Syntaxes:*\n\n`removeFromRemainsCollector` remains\n\n---\n*Example 1:*\n\n```sqf\nremoveFromRemainsCollector [unit1, unit2, vehicle1];\n```","commands\\removeGoggles.md":"Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use `unassignItem` and `removeItem` or just `unlinkItem` for latter.\n\n\n---\n*Syntaxes:*\n\n`removeGoggles` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveGoggles assaultDiver;\n```","commands\\removeGroupIcon.md":"Remove icon with given ID from group.\n\n\n---\n*Syntaxes:*\n\ngroup `removeGroupIcon` iconID\n\n---\n*Example 1:*\n\n```sqf\n_target removeGroupIcon (_target getvariable \"hc_attackicon\");\n```","commands\\removeHandgunItem.md":"Removes given weapon item, including magazine, from the `handgunWeapon`\n\n\n---\n*Syntaxes:*\n\nunit `removeHandgunItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removeHandgunItem \"muzzle_snds_L\";\n```","commands\\removeHeadgear.md":"Removes headgear from a unit. If unit has no headgear command quietly fails.\n\n\n---\n*Syntaxes:*\n\n`removeHeadgear` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveHeadgear player;\n```","commands\\removeItem.md":"Removes item from the inventory.\n\n\n---\n*Syntaxes:*\n\nunit `removeItem` item\n\n---\n*Example 1:*\n\n```sqf\nbluforUnit unassignItem \"NVGoggles\";\nbluforUnit removeItem \"NVGoggles\";\nopforUnit unassignItem \"NVGoggles_OPFOR\";\nopforUnit removeItem \"NVGoggles_OPFOR\";\nindependentUnit unassignItem \"NVGoggles_INDEP\";\nindependentUnit removeItem \"NVGoggles_INDEP\";\n```","commands\\removeItemFromBackpack.md":"Removes item from soldier's backpack.\n\n\n---\n*Syntaxes:*\n\nunit `removeItemFromBackpack` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removeItemFromBackpack \"itemGPS\";\n```","commands\\removeItemFromUniform.md":"Removes item from soldier's uniform. Can be used with magazines and weapons too.\n\n\n---\n*Syntaxes:*\n\nunit `removeItemFromUniform` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removeItemFromUniform \"FirstAidKit\";\n```","commands\\removeItemFromVest.md":"Removes item from soldier's vest.\n\n\n---\n*Syntaxes:*\n\nunit `removeItemFromVest` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removeItemFromVest \"itemWatch\";\n```","commands\\removeItems.md":"Removes all items with given class name from the inventory.\n\n\n---\n*Syntaxes:*\n\nunit `removeItems` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removeItems \"FirstAidKit\";\n```","commands\\removeMagazine.md":"Remove magazine from the unit.\n\n\n---\n*Syntaxes:*\n\nunitName `removeMagazine` magazineName\n\n---\n*Example 1:*\n\n```sqf\nplayer removeMagazine \"M16\";\n```","commands\\removeMagazineGlobal.md":"Removes the magazine from the unit.\n\n\n---\n*Syntaxes:*\n\nunit `removeMagazineGlobal` magazineName\n\n---\n*Example 1:*\n\n```sqf\nplayer removeMagazineGlobal \"30Rnd_65x39_caseless_mag\";\n```","commands\\removeMagazines.md":"Removes all magazines of given type from the unit. If magazine class does not exist, nothing happens, not even .rpt message, unlike with `addMagazine` command.\n\n\n---\n*Syntaxes:*\n\nunitName `removeMagazines` magazineName\n\n---\n*Example 1:*\n\n```sqf\nplayer removeMagazines \"30Rnd_556x45_Stanag\";\n```","commands\\removeMagazinesTurret.md":"Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `removeMagazinesTurret` [magazineName, turretPath]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player removeMagazinesTurret [\"60rnd_cmflaremagazine\",[-1]];\n```\n\n*Example 2:*\n\n```sqf\n_tank removeMagazinesTurret [\"20Rnd_120mmSABOT_M1A2\",[0]];\n```","commands\\removeMagazineTurret.md":"Removes the magazine from the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.\n\n\n---\n*Syntaxes:*\n\nvehicle `removeMagazineTurret` [magazineName, turretPath]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player removeMagazineTurret [\"60rnd_cmflaremagazine\",[-1]];\n```\n\n*Example 2:*\n\n```sqf\n_tank removeMagazineTurret [\"20Rnd_120mmSABOT_M1A2\",[0]];\n```","commands\\removeMenuItem.md":"Removes a previously added menu item.\n\n\n---\n*Syntaxes:*\n\nmap `removeMenuItem` index\n\n---\n*Example 1:*\n\n-","commands\\removeMissionEventHandler.md":"Removes mission event handler added by `addMissionEventHandler`.\n\n\n---\n*Syntaxes:*\n\n`removeMissionEventHandler` [type, index]\n\n---\n*Example 1:*\n\n```sqf\nprivate _eventHandlerId = addMissionEventHandler [\"Ended\", { diag_log \"mission complete\"; }];\n// ...\nremoveMissionEventHandler [\"Ended\", _eventHandlerId];\n```\n\n*Example 2:*\n\n```sqf\nfor \"_i\" from 0 to 4 do {\n\tmissionNamespace setVariable [format [\"handler%1\",_i], addMissionEventHandler [\"Loaded\",\"hint \"\"_i\"\";\"]];\n};\nremoveMissionEventHandler [\"Loaded\", handler2]; // Remove the third index under type \"Loaded\"\n```","commands\\removeMPEventHandler.md":"Removes MP event handler added by `addMPEventHandler`.\n\n\n---\n*Syntaxes:*\n\nunitName `removeMPEventHandler` [event, index]\n\n---\n*Example 1:*\n\n```sqf\nplayer removeMPEventHandler [\"MPKilled\", 0];\n```","commands\\removeMusicEventHandler.md":"Removes specified music track event handler.\n\n\n---\n*Syntaxes:*\n\n`removeMusicEventHandler` [type, id]\n\n---\n*Example 1:*\n\n```sqf\nremoveMusicEventHandler [\"MusicStart\", 12];\n```\n\n*Example 2:*\n\n```sqf\nremoveMusicEventHandler [\"MusicStop\", 12];\n```\n\n*Example 3:*\n\n```sqf\nprivate _stopMusicEH = addMusicEventHandler [\"MusicStop\", {}];\n// ...\nremoveMusicEventHandler [\"MusicStop\", _stopMusicEH];\n```","commands\\removeOwnedMine.md":"Removes ownership over a remotely detonatable mine from the unit.\n\n\n---\n*Syntaxes:*\n\nunit `removeOwnedMine` mine\n\n---\n*Example 1:*\n\n```sqf\nplayer removeOwnedMine SuperMine;\n```","commands\\removePrimaryWeaponItem.md":"Removes given weapon item, including magazine, from the `primaryWeapon`.\n\n\n---\n*Syntaxes:*\n\nunit `removePrimaryWeaponItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removePrimaryWeaponItem \"acc_flashlight\";\n```","commands\\removeSecondaryWeaponItem.md":"Removes given weapon item, including magazine, from the `secondaryWeapon`.\n\n\n---\n*Syntaxes:*\n\nunit `removeSecondaryWeaponItem` item\n\n---\n*Example 1:*\n\n```sqf\nplayer removeSecondaryWeaponItem (secondaryWeaponItems player select 0);\n```","commands\\removeSimpleTask.md":"Remove a simple task from the list of simple tasks.\n\n\n---\n*Syntaxes:*\n\nperson `removeSimpleTask` task\n\n---\n*Example 1:*\n\n```sqf\nplayer removeSimpleTask _tskKillSpongebob;\n```","commands\\removeSwitchableUnit.md":"Remove a unit from the list of units available for `Team Switch`.\n\n\n---\n*Syntaxes:*\n\n`removeSwitchableUnit`  unitName\n\n---\n*Example 1:*\n\n```sqf\nremoveSwitchableUnit _unit1;\n```","commands\\removeTeamMember.md":"Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.\n\n\n---\n*Syntaxes:*\n\nteam `removeTeamMember` member\n\n---\n*Example 1:*\n\n```sqf\n_team removeTeamMember _teamMember;\n```","commands\\removeUniform.md":"Removes uniform from unit.\n\n\n---\n*Syntaxes:*\n\n`removeUniform` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveUniform player;\n```","commands\\removeUserActionEventHandler.md":"Removes a UserAction event handler. For a list of available UserAction event handlers, see: [[Arma 3: Mission Event Handlers]].\n\n\n---\n*Syntaxes:*\n\n`removeUserActionEventHandler`  [keyName, event, index]\n\n---\n*Example 1:*\n\n```sqf\nremoveUserActionEventHandler [\"Reload\", \"Activate\", _reloadUAEH];\n```","commands\\removeVest.md":"Removes vest from unit.\n\n\n---\n*Syntaxes:*\n\n`removeVest` unit\n\n---\n*Example 1:*\n\n```sqf\nremoveVest player;\n```","commands\\removeWeapon.md":"Remove weapon from a unit. The unit must be `local` to the computer where command is executed. For a global version of this command see `removeWeaponGlobal`.\n\n`Note`: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined.\n\n\n---\n*Syntaxes:*\n\nunit `removeWeapon` weapon\n\n---\n*Example 1:*\n\n```sqf\nplayer removeWeapon \"BAF_L85A2_RIS_SUSAT\";\n```\n\n*Example 2:*\n\n```sqf\nAn_2 removeWeapon \"M240_veh\";\n```","commands\\removeWeaponAttachmentCargo.md":"Remove attachment linked to a weapon from the vehicle cargo space.\n\n\n---\n*Syntaxes:*\n\nobject `removeWeaponAttachmentCargo` [weaponID,creatorID,\"attachment\"]\n\n---\n*Example 1:*\n\n```sqf\nrearmTruckOne removeWeaponAttachmentCargo [weaponID, creatorID, \"attachment\"];\n```","commands\\removeWeaponCargo.md":"Remove weapon from the vehicle cargo space.\n\n\n---\n*Syntaxes:*\n\nobject `removeWeaponCargo` [weaponID,creatorID]\n\n---\n*Example 1:*\n\n```sqf\nrearmTruckOne removeWeaponCargo [19, 1];\n```","commands\\removeWeaponGlobal.md":"Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.\n\n\n---\n*Syntaxes:*\n\nunit `removeWeaponGlobal` weapon\n\n---\n*Example 1:*\n\n```sqf\n{\n\t_x removeWeaponGlobal \"Laserdesignator\";\n} forEach allUnits;\n```\n\n*Example 2:*\n\n```sqf\n{\n\tif (typeOf _x == \"O_Heli_Attack_02_black_F\") then {\n\t\t_x removeWeaponGlobal \"rockets_Skyfire\";\n\t};\n} forEach vehicles;\n```","commands\\removeWeaponTurret.md":"Removes weapon from the turret. Use turret path [-1] for driver's turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `removeWeaponTurret` [weaponName, turretPath]\n\n---\n*Example 1:*\n\n```sqf\n_tank removeWeaponTurret [\"LMG_M200\", [0,0]];\n```\n\n*Example 2:*\n\n```sqf\nvehicle player removeWeaponTurret [\"SportCarHorn\", [-1]];\n```","commands\\reportRemoteTarget.md":"Shares the target vehicle via datalink to the `Side` center for a given time.\n\n\n---\n*Syntaxes:*\n\nside `reportRemoteTarget` [target, time]\n\n---\n*Example 1:*\n\n```sqf\nblufor reportRemoteTarget [vehicle player, 60];\n```","commands\\requiredVersion.md":"Check if version of application is available. If the current version is older than the required one, a warning message is shown and `false` is returned. \n\n<br>Version of format `Major.Minor`, e.g. `1.30`\n\n\n---\n*Syntaxes:*\n\n`requiredVersion` version\n\n---\n*Example 1:*\n\n```sqf\nif !(requiredVersion \"1.09\") exitWith {};\n```","commands\\resetCamShake.md":"Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, `enableCamShake` should be used.\n\n\n---\n*Syntaxes:*\n\n`resetCamShake`\n\n---\n*Example 1:*\n\n```sqf\nresetCamShake;\n```","commands\\resetSubgroupDirection.md":"Sets ` formation direction` of a group relative to current direction of the group leader. The group units will change their positions to form new formation if new formation direction is different (approx +/- 15 degrees). Does the same as:<br>\n\n```sqf\n_grp setFormDir getDir leader _grp;\n```\n\n\n---\n*Syntaxes:*\n\n`resetSubgroupDirection` unit\n\n---\n*Example 1:*\n\n```sqf\nresetSubgroupDirection myUnit;\n```","commands\\resistance.md":"Pre-defined variable for the resistance `side`.\n\n\n---\n*Syntaxes:*\n\n`resistance`\n\n---\n*Example 1:*\n\n```sqf\nif (side _unit == resistance) then\n{\n\thint \"This is a resistance unit!\";\n};\n```\n\n*Example 2:*\n\n```sqf\nhint format [\"%1\", resistance]; // Returns \"GUER\"\n```","commands\\resize.md":"Changes the size of the given array. The command does not return new array, it resizes the source array to the desired number of elements.\nIf the new size is bigger than the current size, the new places are filled with `nil`. The *(Reference Link \"alternative syntax\" at #Syntax 2)* allows to fill resized positions with a given value. `Array` and `HashMap` values are copied.\n\n\n---\n*Syntaxes:*\n\narray `resize` count\n\narray `resize` [count, fill]\n\n---\n*Example 1:*\n\n```sqf\n_arrayNum = [0,1,2,3,4];\n_arrayNum resize 2; // _arrayNum is now [0, 1]\n_arrayNum resize 5; // _arrayNum is now [0, 1, nil, nil, nil]\n```\n\n*Example 2:*\n\n```sqf\nprivate _array = [0, 1, 2];\n_array resize [5, -1]; // _array is now [0, 1, 2, -1, -1]\n\nprivate _array = [0, 1, 2];\n_array resize [1, -1]; // _array is now [0]\n\nprivate _array = [0, 1, 2];\n_array resize [4, \"something\"]; // _array is now [0, 1, 2, \"something\"]\n```","commands\\resources.md":"Returns the resources of a team member. Results are local to the PC on which command was executed.\n\n\n---\n*Syntaxes:*\n\n`resources` member\n\n---\n*Example 1:*\n\n```sqf\nresources teamMember _unit;\n```","commands\\respawnVehicle.md":"Sets vehicle as respawnable in MP game. The vehicle will be spawned at the locality and coordinates it was prior to destruction.\nIf respawn type is set to base respawn (type 3) and vehicle respawn marker is provided (respawn_vehicle_XXXSIDEXXX), vehicle will spawn on the marker.\n\n\n---\n*Syntaxes:*\n\nvehicle `respawnVehicle` [delay, count]\n\n---\n*Example 1:*\n\n```sqf\ncar respawnVehicle [5, 3]; // 'car' will respawn at the predefined marker for the side after 5 seconds. The unit will respawn 3 times.\n```\n\n*Example 2:*\n\n```sqf\ncar respawnVehicle [30]; // 'car' will respawn at the predefined marker for the side after 30 seconds. The unit will respawn an unlimited number of times.\n```","commands\\restartEditorCamera.md":"Restarts the mission editor camera (if it was deleted by a script,for example).\n\n\n---\n*Syntaxes:*\n\n`restartEditorCamera` map\n\n---\n*Example 1:*\n\n-","commands\\reveal.md":"Reveals a target to a `group`. If `toWhom` is a unit, unit's group is considered. If `toWhom` is a vehicle, vehicle commander's group is considered.  The `knowledge value` will be set to the highest level any unit of the revealing side has about the revealed target. If the revealing side has `no` knowledge about the revealed target, the value will be set to 1.\n\n\n---\n*Syntaxes:*\n\ntoWhom `reveal` target\n\ntoWhom `reveal` [target, accuracy]\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne reveal _soldierTwo; // soldierOne knowsAbout information about soldierTwo is updated\n```\n\n*Example 2:*\n\n```sqf\nplayer reveal cursorObject; // player knowsAbout information about object under cursor is updated\n```\n\n*Example 3:*\n\n```sqf\n_soldierOne reveal [_soldierTwo, 1.5];\n```","commands\\revealMine.md":"Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)\n\n\n---\n*Syntaxes:*\n\nside `revealMine` mine\n\n---\n*Example 1:*\n\n```sqf\nwest revealMine _mine;\n```","commands\\reverse.md":"Reverses given array by reference (modifies the original array, just like `resize`). The alternative syntax can be used to reverse a ANSI `string`. If Unicode support is desired, see `forceUnicode`.\n\n\n---\n*Syntaxes:*\n\n`reverse` array\n\n`reverse` string *(Reference GVI \"arma3|2.02\")*\n\n---\n*Example 1:*\n\n```sqf\n_arr = [1,2,3];\nreverse _arr;\nhint str _arr; // [3,2,1]\n```\n\n*Example 2:*\n\n```sqf\n_wordArr = toArray \"gateman\";\nreverse _wordArr;\nhint toString _wordArr; // nametag\n```\n\n*Example 3:*\n\n```sqf\nreverse \"treboR\"; // Returns \"Robert\"\n```","commands\\reversedMouseY.md":"Returns `true` if mouse vertical axe is inverted.\n\n\n---\n*Syntaxes:*\n\n`reversedMouseY`\n\n---\n*Example 1:*\n\n```sqf\nif (reversedMouseY) then { hint \"Dude!\" };\n```","commands\\roadAt.md":"Returns a road segment containing given position, `objNull` otherwise. Same as `isOnRoad` only returns the actual road object instead of boolean.\n\n\n---\n*Syntaxes:*\n\n`roadAt` position\n\n---\n*Example 1:*\n\n```sqf\n_road = roadAt ASLToAGL getPosASL player;\n```\n\n*Example 2:*\n\n```sqf\n_isOnRoad = !isNull roadAt player;\n```\n\n*Example 3:*\n\nFor detecting bridges, for example:\n\n```sqf\ngetModelInfo (roadAt ASLToAGL getPosASL player); // [\"bridgesea_01_f.p3d\", \"a3\\structures_f_exp\\infrastructure\\bridges\\bridgesea_01_f.p3d\", true]\n```","commands\\roadsConnectedTo.md":"Find the road segments connected to the given road segment.\n\n\n---\n*Syntaxes:*\n\n`roadsConnectedTo` roadSegment\n\n`roadsConnectedTo` [roadSegment, extended]\n\n---\n*Example 1:*\n\n```sqf\n_road = (player nearRoads 50) select 0;\n_connectedRoads = roadsConnectedTo _road;\n```\n\n*Example 2:*\n\n```sqf\n_road = (player nearRoads 50) select 0;\n_connectedRoadsIncPedestrian = roadsConnectedTo [_road, true];\n```","commands\\roleDescription.md":"Returns unit description set in the editor and visible on role selection screen in multiplayer.\n\n\n---\n*Syntaxes:*\n\n`roleDescription` unit\n\n---\n*Example 1:*\n\n```sqf\n_playerRole = roleDescription player;\n```","commands\\ropeAttachedObjects.md":"Returns an array of all entities that are attached to the transport with `ropes`. This command is the opposite of `ropeAttachedTo`.<br><br>\n[[Image:ropeAttachedObjects.jpg|400px]]\n\n\n---\n*Syntaxes:*\n\n`ropeAttachedObjects` ropesOwner\n\n---\n*Example 1:*\n\n```sqf\n_cargoArray = ropeAttachedObjects heli1;\n```","commands\\ropeAttachedTo.md":"Returns the owner of the first rope - the transport to which other entities are attached with `ropes`. This command is the opposite of `ropeAttachedObjects`. To return all owners see `ropesAttachedTo`.<br><br>\n[[Image:ropeAttachedTo.jpg|400px]]\n\n\n---\n*Syntaxes:*\n\n`ropeAttachedTo` cargo\n\n---\n*Example 1:*\n\n```sqf\n_heli = ropeAttachedTo veh1;\n```","commands\\ropeAttachEnabled.md":"Returns `true` if entity can be attached to a rope end.\n\n\n---\n*Syntaxes:*\n\n`ropeAttachEnabled` entity\n\n---\n*Example 1:*\n\n```sqf\nropeAttachEnabled veh1;\n```","commands\\ropeAttachTo.md":"Attaches entity to the rope end with optional offset. For detach operation use `ropeDetach`.\n\n\n---\n*Syntaxes:*\n\n[entity, toPoint, ropeEndDownVector] `ropeAttachTo` rope\n\nentity `ropeAttachTo` rope\n\n---\n*Example 1:*\n\n```sqf\n[veh1, [0,0,0], [0,0,-1]] ropeAttachTo (ropes heli1 select 0);\n```","commands\\ropeCut.md":"Cuts the given rope to the specified length. If some entity was attached to the end of the rope, it will be detached. The rope remains attached to its parent transport and if the length is set to 0 or even negative does not get destroyed. Use `ropeDestroy` to remove it completely.\n\n\n---\n*Syntaxes:*\n\n`ropeCut` [rope, length]\n\n---\n*Example 1:*\n\n```sqf\nropeCut [ropes heli1 select 0, 5];\n```","commands\\ropeDestroy.md":"Destroys the given rope. If the rope is attached to a vehicle, it will be detached and then destroyed.\n\n\n---\n*Syntaxes:*\n\n`ropeDestroy` rope\n\n---\n*Example 1:*\n\n```sqf\nropeDestroy myRope;\n```","commands\\ropeDetach.md":"Detaches attached object from rope (i.e. detaches rope end from attached to it entity). See `ropeAttachTo` for attach operation.\n\n\n---\n*Syntaxes:*\n\nattachedObject `ropeDetach` rope\n\n---\n*Example 1:*\n\n```sqf\nvehicle player ropeDetach myRope;\n```","commands\\ropeEndPosition.md":"Returns start and end positions for the given ` rope`. If command fails, empty array **[]** is returned.\n\n\n---\n*Syntaxes:*\n\n`ropeEndPosition` rope\n\n---\n*Example 1:*\n\n```sqf\n_ends = ropeEndPosition (ropes heli1 select 0);\n_start = _ends select 0;\n_end = _ends select 1;\n```","commands\\ropeLength.md":"Return rope length in meters (set by `ropeCreate`, `ropeCut`, `ropeUnwind`).\n\n\n---\n*Syntaxes:*\n\n`ropeLength` rope\n\n---\n*Example 1:*\n\n```sqf\n_length = ropeLength (ropes heli1 select 0);\n```","commands\\ropes.md":"Returns all ropes attached to a ropes owner transport in an `Array`, otherwise an empty array **[]** is returned.\n\n\n---\n*Syntaxes:*\n\n`ropes` ropesOwner\n\n---\n*Example 1:*\n\n```sqf\nhint str (ropes vehicle player);\n```\n\n*Example 2:*\n\n```sqf\n_rope1 = (ropes heli1) select 0;\n```","commands\\ropesAttachedTo.md":"Returns the owners of all ropes attached to the cargo - the transports to which other entities are attached with `ropes`.\nThis command returns `Array` of `Object`s instead of a single `Object` as with `ropeAttachedTo`.\n\n\n---\n*Syntaxes:*\n\n`ropesAttachedTo` cargo\n\n---\n*Example 1:*\n\n```sqf\nr1 = ropeCreate [car1, [0,0,0], car3, [0,0,0], 10]; \nr2 = ropeCreate [car2, [0,0,0], car3, [0,0,0], 10];\nropesAttachedTo car3; // [car1,car2]\n```","commands\\ropeSegments.md":"Returns provided rope's segments\n\n\n---\n*Syntaxes:*\n\n`ropeSegments` rope\n\n---\n*Example 1:*\n\n```sqf\nprivate _segments = ropeSegments _myRope;\n```","commands\\ropeUnwind.md":"Increases or decreases the rope length by the given amount. Use relative parameter for changing rope length +/- from current length.\n\n\n---\n*Syntaxes:*\n\n`ropeUnwind` [rope, speed, length, relative]\n\n---\n*Example 1:*\n\n```sqf\nropeUnwind [ropes heli1 select 0, 3, 10]; // set rope length to 10m at 3m/s\n```\n\n*Example 2:*\n\n```sqf\nropeUnwind [ropes heli1 select 0, 3, -5, true]; // decrease rope length by 5m at 3m/s\n```","commands\\ropeUnwound.md":"Returns `false` if rope length changing animation is in progress. Returns `true` if animation is done.\n\n\n---\n*Syntaxes:*\n\n`ropeUnwound` rope\n\n---\n*Example 1:*\n\n```sqf\nwaitUntil { ropeUnwound (ropes heli1 select 0) };\nhint \"Unwinding Complete\";\n```","commands\\rotorsForcesRTD.md":"Returns force produced by rotors.\n\n\n---\n*Syntaxes:*\n\n`rotorsForcesRTD` helicopter\n\n---\n*Example 1:*\n\n```sqf\n_rotorForces = rotorsForcesRTD _taru; // Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]\n```","commands\\rotorsRpmRTD.md":"Returns rotors RPM.\n\n\n---\n*Syntaxes:*\n\n`rotorsRpmRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_mh9_main = (rotorsRpmRTD _MH9) select 0;//main rotor\n_mh9_tail = (rotorsRpmRTD _MH9) select 1;//tail rotor\n```","commands\\round.md":"Rounds the provided value to the closest integer.\n\n\n---\n*Syntaxes:*\n\n`round` value\n\n---\n*Example 1:*\n\n```sqf\nround 5.25; // returns 5\n```\n\n*Example 2:*\n\n```sqf\nround -5.25; // returns -5\n```","commands\\runInitScript.md":"Fades in mission screen and re-executes `init.sqf` and `init.sqs` scripts. In `Eden Editor` the code inside the \"Init\" mission attribute is executed.\n\n\n---\n*Syntaxes:*\n\n`runInitScript`\n\n---\n*Example 1:*\n\n```sqf\nrunInitScript;\n```","commands\\safeZoneH.md":"[[Image:safezone.jpg|right|600px]]\nReturns the height of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the Y axis, the value will be positive but resulting Y will end up beyond the bottom border. Therefore in order to calculate Y of the bottom screen border, the length of `safeZoneY` must be subtracted from `safeZoneH`, but because it is negative, it must be added instead. {{hl\n\n\n---\n*Syntaxes:*\n\n`safeZoneH`\n\n---\n*Example 1:*\n\n```sqf\n_screenHeight = safeZoneH;\n```\n\n*Example 2:*\n\n```sqf\n_screenTopBorderY = safeZoneY;\n_screenBottomBorderY = safeZoneH + safeZoneY;\n```\n\n*Example 3:*\n\nCreate control 50% wide, 30% tall, centered on screen:\n\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth;\n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```","commands\\safeZoneW.md":"[[Image:safezone.jpg|right|600px]]\nReturns the width of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the X axis, the value will be positive but resulting X will end up beyond the right border. Therefore in order to calculate X of the right screen border, the length of `safeZoneX` must be subtracted from `safeZoneW`, but because it is negative, it must be added instead. {{hl\n\n\n---\n*Syntaxes:*\n\n`safeZoneW`\n\n---\n*Example 1:*\n\n```sqf\n_screenWidth = safeZoneW;\n```\n\n*Example 2:*\n\n```sqf\n_screenLeftBorderX = safeZoneX;\n_screenRightBorderX = safeZoneW + safeZoneX;\n```\n\n*Example 3:*\n\nCreate control 50% wide, 30% tall, centered on screen:\n\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth;\n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```","commands\\safeZoneWAbs.md":"Returns absolute `safeZoneW` including all monitors.<br>\n[[Image:UI_12-3.jpg|600px]]\n\n\n---\n*Syntaxes:*\n\n`safeZoneWAbs`\n\n---\n*Example 1:*\n\n```sqf\n_szW = safeZoneWAbs;\n```","commands\\safeZoneX.md":"[[Image:safezone.jpg|right|600px]] Returns the X of the left border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the left border of the screen.\nSince it is going in opposite way of the X axis, <u>the value is negative</u>. The measurement units depend on the current screen resolution `getResolution`. See also `SafeZone`.\n\n\n---\n*Syntaxes:*\n\n`safeZoneX`\n\n---\n*Example 1:*\n\n```sqf\n_screenLeftBorderX = safeZoneX; // returns a float value < 0\n```\n\n*Example 2:*\n\nCreate control 50% wide, 30% tall, centered on screen:\n\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth;\n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```","commands\\safeZoneXAbs.md":"Returns absolute `safeZoneX` including all monitors. \n<br>[[Image:UI_12-3.jpg|600px]]\n\n\n---\n*Syntaxes:*\n\n`safeZoneXAbs`\n\n---\n*Example 1:*\n\n```sqf\n_szX = safeZoneXAbs;\n```","commands\\safeZoneY.md":"[[Image:safezone.jpg|right|600px]] Returns the Y of the top border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the top border of the screen.\nSince it is going in opposite way of the Y axis, <u>the value is negative</u>. The measurement units depend on the current screen resolution `getResolution`. See also `SafeZone`.\n\n\n---\n*Syntaxes:*\n\n`safeZoneY`\n\n---\n*Example 1:*\n\n```sqf\n_screenTopBorderY = safeZoneY; // returns a float value < 0\n```\n\n*Example 2:*\n\nCreate control 50% wide, 30% tall, centered on screen:\n\n```sqf\nprivate _ctrl = findDisplay 46 createDisplay \"RscDisplayEmpty\" ctrlCreate [\"RscText\", -1];\n_ctrl ctrlSetBackgroundColor [1,0,0,0.5];\nprivate _ctrlWidth = 0.5 * safeZoneW; // 50% of screen width\nprivate _ctrlHeight = 0.3 * safeZoneH; // 30% of screen height\n_ctrl ctrlSetPositionW _ctrlWidth;\n_ctrl ctrlSetPositionH _ctrlHeight;\n_ctrl ctrlSetPositionX ((safeZoneW - _ctrlWidth) / 2 + safeZoneX); // center it horizontally\n_ctrl ctrlSetPositionY ((safeZoneH - _ctrlHeight) / 2 + safeZoneY); // center it vertically\n_ctrl ctrlCommit 0;\n```","commands\\save3DENInventory.md":"Saves the current state of entities' inventory to the `Mission.sqm`.\n\n\n---\n*Syntaxes:*\n\n[[save3DENInventory]] entities\n\n---\n*Example 1:*\n\n```sqf\nsave3DENInventory [_soldier1, _soldier2];\n```\n\n*Example 2:*\n\n```sqf\nsave3DENInventory [11234, 21251];\n```","commands\\saveGame.md":"Autosaves the game (used for Retry). The saving is not started immediately, the request for autosave is made instead. To check the status of the request, use `isSaving`. The game can then be loaded from the last autosave with `loadGame`. Will not save if the player is ` null` or dead.\n\n\n---\n*Syntaxes:*\n\n`saveGame`\n\n---\n*Example 1:*\n\n```sqf\nsaveGame;\n```","commands\\saveIdentity.md":"Saves units's identity to `Objects.sav` file in campaign directory as entry name.\n\n\n---\n*Syntaxes:*\n\nunit `saveIdentity` name\n\n---\n*Example 1:*\n\n```sqf\n_successful = player saveIdentity \"playerid\";\n```","commands\\saveJoysticks.md":"Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.\n\n\n---\n*Syntaxes:*\n\n`saveJoysticks`\n\n---\n*Example 1:*\n\n```sqf\nsaveJoysticks;\n```","commands\\saveMissionProfileNamespace.md":"`missionProfileNamespace` provides long term storage solution for mission variables. When this namespace has variables set with `setVariable` and is saved, the variables are saved into **``missionName``.vars** file into current soldier `profileName` folder. Next time when the same mission is loaded by the client with the same soldier profile, the saved variables can be read normally with `getVariable` command. This way each mission maker can create persistent data that is both mission and soldier profile specific. This is default behaviour. The file is only created when save operation is invoked with this command.<br><br>\nIt is also possible to share the same mission profile variables between several missions. To override default behaviour one needs to create an entry {{hl\n\n\n---\n*Syntaxes:*\n\n`saveMissionProfileNamespace`\n\n---\n*Example 1:*\n\n```sqf\nsaveMissionProfileNamespace;\n```","commands\\saveOverlay.md":"Save the current overlay.\n\n\n---\n*Syntaxes:*\n\n`saveOverlay` map\n\n---\n*Example 1:*\n\n```sqf\nsaveOverlay _map;\n```","commands\\saveProfileNamespace.md":"Saves all variables stored in `profileNamespace` to the active `Profile`.\n\n\n---\n*Syntaxes:*\n\n`saveProfileNamespace`\n\n---\n*Example 1:*\n\n```sqf\nprofileNamespace setVariable [\"TAG_lastPlayerLocation\", getPosASL player];\nsaveProfileNamespace;// Optional since namespace is saved when game is closed\n```","commands\\saveStatus.md":"Saves object's properties to `Objects.sav` file in campaign directory as entry name.\n\n\n---\n*Syntaxes:*\n\nobject `saveStatus` name\n\n---\n*Example 1:*\n\n```sqf\nplayer saveStatus \"playerstate\";\n```","commands\\saveVar.md":"Save variable value into the campaign space.\nThis variable is available to all following missions in the campaign.\n\n\n---\n*Syntaxes:*\n\n`saveVar` varname\n\n---\n*Example 1:*\n\n```sqf\nsaveVar \"varOne\";\n```","commands\\savingEnabled.md":"Check if saving the game is enabled.\n\n\n---\n*Syntaxes:*\n\n`savingEnabled`\n\n---\n*Example 1:*\n\n```sqf\nif (savingEnabled) then\n{\n\thint \"Saving is enabled!\";\n};\n```","commands\\say.md":"Make unit say given sound. The sound is defined in `CfgSounds`. If the `unit` is a `person`, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\n* A dead or non-existent unit obviously cannot say anything.\n* If the camera is not within given range, title is not shown and the sound will not be heard.\n* See also `playSound` in order to play a sound wherever the `camera/player` is.\n\n\n---\n*Syntaxes:*\n\nfrom `say` sound\n\nfrom `say` [sound, maxTitlesDistance, speed]\n\n[from, to] `say` sound\n\n[from, to] `say` [sound, maxTitlesDistance, speed]\n\n---\n*Example 1:*\n\n```sqf\n(units player select 1) say [\"whisper1\", 5];\n```\n\n*Example 2:*\n\nArma 3:\n\n```sqf\nplayer say \"scuba_breath\";\n```","commands\\say2D.md":"Plays given sound in 2D.\n\n\n---\n*Syntaxes:*\n\nfrom [[say2D]] sound\n\nfrom [[say2D]] [sound, maxTitlesDistance, speed]\n\n[from, to] [[say2D]] sound\n\n[from, to] [[say2D]] [sound, maxTitlesDistance, speed]\n\n---\n*Example 1:*\n\n```sqf\nplayer say2D \"HelloThere\";\n```\n\n*Example 2:*\n\n```sqf\n[player, _officer] say2D [\"HelloThere\", 50, 0.9];\n```","commands\\say3D.md":"Lets an object say given sound in 3D space.\nThis allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command.\nCompare this with [[say2D]] which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound.\nSound is defined in `\"CfgSounds\"` of the `Description.ext` or main config.\n\n\n---\n*Syntaxes:*\n\nfrom [[say3D]] sound\n\nfrom [[say3D]] [sound, maxDistance, pitch, isSpeech, offset]\n\n[from, to] [[say3D]] sound\n\n[from, to] [[say3D]] [sound, maxDistance, pitch, isSpeech, offset]\n\n---\n*Example 1:*\n\n```sqf\nhelicopter1 say3D \"FortunateSon\";\n```\n\n*Example 2:*\n\nWorkaround for dead bodies:\n\n```sqf\nprivate _dummy = \"#particlesource\" createVehicleLocal ASLToAGL getPosWorld _corpse;\n_dummy say3D \"whatever\";\n_dummy spawn {\n\tsleep 5; // at least the length of your sound\n\tdeleteVehicle _this;\n};\n```\n\n*Example 3:*\n\n```sqf\n// Since Arma 3 v2.00, the sound source is returned and can be deleted directly\n_soundSrc = helicopter1 say3D \"Fortunateson\";\nsleep 5;\ndeleteVehicle _soundSrc; // stop the sound after ~5 seconds\n```","commands\\scopeName.md":"Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands like `breakOut` and `breakTo`. Scope name should be defined only once per scope. Trying to set a different name on the scope that has already defined scope name will result in error.\n\n\n---\n*Syntaxes:*\n\n`scopeName` name\n\n---\n*Example 1:*\n\n```sqf\nscopeName \"main\";\nwhile {true} do {\n\tscopeName \"loop1\";\n\twhile {true} do {\n\t\tscopeName \"loop2\";\n\t\t...\n\t};\n};\n```","commands\\score.md":"Returns the person's score in MP.\n\n\n---\n*Syntaxes:*\n\n`score` unit\n\n---\n*Example 1:*\n\n```sqf\n_pScore = score player;\n```","commands\\scoreSide.md":"Returns score for the given `side`. MP Only.\n\n\n---\n*Syntaxes:*\n\n`scoreSide` side\n\n---\n*Example 1:*\n\n```sqf\n_number = scoreSide west;\n```","commands\\screenshot.md":"Captures a screenshot and stores it to given filename. <u>PNG is the only available format</u> and the file must have .png extension.<br><br>\nThe file is saved into `Screenshots` folder in the `Profile` directory. The folder is by default limited to 250 MB to prevent abuse.<br>\nTo increase the limit, add the following line at the end of the profile file:\n```cpp\nmaxScreenShotFolderSizeMB = 2000; // 2 GB\n```\n\n\n---\n*Syntaxes:*\n\n`screenshot` filename\n\n---\n*Example 1:*\n\n```sqf\nscreenshot \"\";\n```\n\n*Example 2:*\n\n```sqf\nscreenshot \"testFile.png\";\n```\n\n*Example 3:*\n\nThe following code will result in the screenshot being placed in **\\Documents\\Arma 3\\Screenshots\\`any\\where\\you\\want.png`**\n\n```sqf\nscreenshot \"any\\where\\you\\want.png\";\n```","commands\\screenToWorld.md":"Returns the position on landscape (`PositionAGL`) corresponding to the given point on screen (in UI coordinates).\n\n\n---\n*Syntaxes:*\n\n`screenToWorld` screen\n\n---\n*Example 1:*\n\n```sqf\n_wPos = screenToWorld [0.5, 0.5];\n```","commands\\scriptDone.md":"Check if a script is finished running using the `Script Handle` returned by `execVM` or `spawn`.\n\n\n---\n*Syntaxes:*\n\n`scriptDone` handle\n\n---\n*Example 1:*\n\n```sqf\n_scriptHandle = [\"arguments\"] execVM \"scriptname.sqf\";\nwaitUntil { scriptDone _scriptHandle };\n```","commands\\scriptName.md":"Assign a user friendly name to the `VM script` this command is executed from.\n\n\n---\n*Syntaxes:*\n\n`scriptName` name\n\n---\n*Example 1:*\n\n```sqf\nscriptName \"leetScript.sqf\";\n```\n\n*Example 2:*\n\n```sqf\nscriptName format [\"%1ARTY\\data\\scripts\\ARTY_sadarmDeploy.sqf (_this: %1)\", _this];\n```","commands\\scriptNull.md":"A non-existing `Script` or script that has finished (`scriptDone`). To compare non-existent scripts use `isNull` or `isEqualTo`:\n\n```sqf\nscriptNull == scriptNull;\t\t\t// ERROR! == cannot be used with script object\nisNull scriptNull;\t\t\t\t\t// true\nscriptNull isEqualTo scriptNull;\t// true\n```\n\n\n---\n*Syntaxes:*\n\n`scriptNull`\n\n---\n*Example 1:*\n\nWait until previous script is finished before starting a new one:\n\n```sqf\n[] spawn\n{\n\t_script = scriptNull;\n\tfor \"_i\" from 1 to 10 do {\n\t\twaitUntil { isNull _script };\n\t\t_script = _i spawn {\n\t\t\thint format [\"script %1 started\", _this];\n\t\t\tsleep 1;\n\t\t\thint format [\"script %1 finished\", _this];\n\t\t\tsleep 0.2;\n\t\t};\n\t};\n};\n```\n\n*Example 2:*\n\n```sqf\nif (scriptDone (_obj getVariable [\"objScript\", scriptNull])) then {\n\t_obj setVariable [\"objScript\", _obj spawn {\n\t\twaitUntil { damage _this > 0.9 };\n\t\thint \"Critical Damage!\";\n\t}];\n};\n```\n\n*Example 3:*\n\n```sqf\nstr scriptNull; // <NULL-script>\n```","commands\\scudState.md":"Return the current state of given Scud launcher.\n\n\n---\n*Syntaxes:*\n\n`scudState` scudName\n\n---\n*Example 1:*\n\n```sqf\nwaitUntil { sleep 1; scudState _scud > 2 };\nguba say \"MasterPlanCompletion\";\n```","commands\\secondaryWeapon.md":"Returns the name of a unit's secondary weapon (launcher). To detect the weapon which is `currently` being used by the unit use `currentWeapon`.\n\n\n---\n*Syntaxes:*\n\n`secondaryWeapon` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _secondaryWeapon = secondaryWeapon player;\n```\n\n*Example 2:*\n\n```sqf\nhint secondaryWeapon player; // \"launch_NLAW_F\"\n```","commands\\secondaryWeaponItems.md":"Returns array with all items assigned to the `secondaryWeapon` except magazines. Use `secondaryWeaponMagazine` command for the latter. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`secondaryWeaponItems` unit\n\n---\n*Example 1:*\n\n```sqf\nsecondaryWeaponItems player; //[\"\",\"\",\"\",\"\"]\n```","commands\\secondaryWeaponMagazine.md":"Collects all loaded `magazines` from all `secondaryWeapon` muzzles and returns them in `Array`, otherwise it returns []. This command is used for infantry weapons only.\n\n\n---\n*Syntaxes:*\n\n`secondaryWeaponMagazine` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str secondaryWeaponMagazine player; //[\"NLAW_F\"]\n```\n\n*Example 2:*\n\n```sqf\n_array = secondaryWeaponMagazine player;\nif (count _array > 0) then {\n\thint (\"Secondary weapon is loaded with \" + (_array select 0) + \"!\");\n} else {\n\tif (secondaryWeapon player != \"\") then {\n\t\thint \"Secondary weapon is not loaded!\";\n\t} else {\n\t\thint \"Player doesn't have a secondary weapon!\";\n\t};\n};\n```","commands\\select.md":"Selects an element from an array, config entry from `Config` or substring from a string or a range from an array.\n\n\n---\n*Syntaxes:*\n\narray `select` index\n\narray `select` boolean\n\nconfig `select` index\n\nstring `select` [start, length]\n\narray `select` [start, count]\n\narray `select` expression\n\n---\n*Example 1:*\n\n```sqf\n[\"a\", \"b\", \"c\", \"d\"] select 2;\t// result is \"c\"\nposition player select 2;\t\t// result is Z coordinate of player position\n```\n\n*Example 2:*\n\n```sqf\n[\"\", currentWeapon player] select alive player; // if player is dead, \"\" is selected\n```\n\n*Example 3:*\n\n```sqf\n(configFile >> \"cfgVehicles\" >> typeOf vehicle player >> \"Turrets\") select 0 >> \"gunnerAction\";\n```\n\n*Example 4:*\n\n```sqf\nhint str (\"japa is the man!\" select [8]);\t\t// the man!\nhint str (\"japa is the man!\" select [0, 7]);\t// japa is\n```\n\n*Example 5:*\n\n```sqf\nhint str ([1,2,3,4,5,6] select [1, 4]); // [2,3,4,5]\n```\n\n*Example 6:*\n\n```sqf\n_even = [1,2,3,4,5,6,7,8,9,0] select { _x % 2 == 0 }; // returns [2, 4, 6, 8, 0]\n```\n\n*Example 7:*\n\nJavaScript endsWith() alternative:\n\n```sqf\nprivate _fnc_endsWith = \n{\n\tparams [\"_string\", \"_endswith\"];\n\t_string select [count _string - count _endswith] isEqualTo _endswith\n};\n\n[\"Arma 3\", \"3\"] call _fnc_endsWith; // true\n[\"Arma 3\", \"4\"] call _fnc_endsWith; // false\n```","commands\\selectBestPlaces.md":"Find the places with the maximum value of `expression` in the given area. Places can be on water. Results are sorted by value. Search pattern is randomised every command execution.\n\n\n---\n*Syntaxes:*\n\n`selectBestPlaces` [position, radius, expression, precision, sourcesCount]\n\n---\n*Example 1:*\n\n```sqf\nmyPlaces = selectBestPlaces [position player, 50, \"meadow + 2*hills\", 1, 5];\n```","commands\\selectDiarySubject.md":"Selects a subject page in the `diary`. The subject page is selected but the command does not open the map by default, which could be opened with `openMap` if necessary.\n\n\n---\n*Syntaxes:*\n\nplayer `selectDiarySubject` subject\n\n---\n*Example 1:*\n\n```sqf\nopenMap true;\nplayer selectDiarySubject \"Diary\";\n```","commands\\selectedEditorObjects.md":"Returns a list of currently selected editor objects.\n\n\n---\n*Syntaxes:*\n\n`selectedEditorObjects` map\n\n---\n*Example 1:*\n\n```sqf\n_selObjects = selectedEditorObjects _map; // result can be: [\"_vehicle_0\",\"_vehicle_9\",\"_vehicle_11\"]\n```","commands\\selectEditorObject.md":"Select an editor object. Does not un-select previously selected objects.\n\n\n---\n*Syntaxes:*\n\nmap `selectEditorObject` object\n\n---\n*Example 1:*\n\n-","commands\\selectionNames.md":"Returns the list of model selections. When using default syntax, the named selections are returned from the first `LOD` only (LOD index 0). Alternative syntax allows to select LOD by name or by `LOD resolution`.\n\n\n---\n*Syntaxes:*\n\n`selectionNames` object\n\nobject `selectionNames` LOD\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = \"Land_i_House_Small_02_V3_F\" createVehicle _pos;\nselectionNames _house;\n// [\"door_1\",\"door_2\",\"damt_1\",\"door_handle_1\",\"door_handle_2\",\"glass_1_hide\",\"glass_2_hide\",\"glass_3_hide\",\"glass_1_unhide\",\"glass_2_unhide\",\"glass_3_unhide\",\"glass_4_hide\",\"glass_4_unhide\"]\n```\n\n*Example 2:*\n\n```sqf\nselectionNames player;\n// [\"spine\",\"spine1\",\"spine2\",\"spine3\",\"head\",\"leftshoulder\",\"leftarm\",\"leftarmroll\",\"leftforearm\",\"leftforearmroll\",\"lefthand\",\"rightshoulder\",\"rightarm\",\"rightarmroll\",\"rightforearm\",\"rightforearmroll\",\"righthand\",\"pelvis\",\"leftupleg\",\"leftuplegroll\",\"leftleg\",\"leftlegroll\",\"leftfoot\",\"lefttoebase\",\"rightupleg\",\"rightuplegroll\",\"rightleg\",\"rightlegroll\",\"rightfoot\",\"righttoebase\",\"weapon\",\"proxy:\\a3\\characters_f\\proxies\\weapon.001\",\"proxy:\\a3\\characters_f\\proxies\\pistol.001\",\"proxy:\\a3\\characters_f\\proxies\\binoculars.001\",\"proxy:\\a3\\characters_f\\proxies\\launcher.001\",\"launcher\",\"nvg\",\"proxy:\\a3\\characters_f\\proxies\\nvg.001\",\"proxy:\\a3\\characters_f\\proxies\\flag.001\",\"proxy:\\a3\\characters_f\\proxies\\equipment.001\",\"proxy:\\a3\\characters_f\\proxies\\backpack.001\",\"proxy:\\a3\\characters_f\\proxies\\pistol_holstered.001\",\"proxy:\\a3\\characters_f\\proxies\\head_male.001\",\"proxy:\\a3\\characters_f\\proxies\\glasses.001\",\"proxy:\\a3\\characters_f\\proxies\\headgear.001\",\"proxy:\\a3\\characters_f\\proxies\\hair.001\",\"proxy:\\a3\\characters_f\\proxies\\backpack2.001\",\"proxy:\\a3\\characters_f\\proxies\\radio.001\",\"body_proxy\",\"head_proxy\",\"lefthandindex1\",\"lefthandindex2\",\"lefthandindex3\",\"lefthandmiddle1\",\"lefthandmiddle2\",\"lefthandmiddle3\",\"lefthandring\",\"lefthandpinky1\",\"lefthandpinky2\",\"lefthandpinky3\",\"lefthandring1\",\"lefthandring2\",\"lefthandring3\",\"lefthandthumb1\",\"lefthandthumb2\",\"lefthandthumb3\",\"righthandindex1\",\"righthandindex2\",\"righthandindex3\",\"righthandmiddle1\",\"righthandmiddle2\",\"righthandmiddle3\",\"righthandring\",\"righthandpinky1\",\"righthandpinky2\",\"righthandpinky3\",\"righthandring1\",\"righthandring2\",\"righthandring3\",\"righthandthumb1\",\"righthandthumb2\",\"righthandthumb3\",\"injury_hands\",\"camo\",\"proxy:\\a3\\characters_f\\heads\\bysta.001\",\"injury_legs\",\"proxy:\\a3\\characters_f\\proxies\\hmd.001\",\"hl\",\"insignia\",\"injury_body\",\"clan\"]\n```\n\n*Example 3:*\n\n[[Arma_3:_Event_Handlers#HitPart|HitPart]] hit selections only:\n\n```sqf\nselectionNames player select { !(player selectionPosition _x, \"HitPoints\"] isEqualTo [0,0,0]) };\n// [\"spine1\",\"spine2\",\"spine3\",\"head\",\"leftarm\",\"leftarmroll\",\"leftforearm\",\"rightarm\",\"rightarmroll\",\"rightforearm\",\"pelvis\",\"leftupleg\",\"leftuplegroll\",\"leftlegroll\",\"leftfoot\",\"rightupleg\",\"rightuplegroll\",\"rightleg\",\"rightlegroll\",\"rightfoot\"]\n```\n\n*Example 4:*\n\nCopy 5 LODs' selections:\n\n```sqf\nprivate _car = \"B_MRAP_01_F\" createVehicle getPos player;\nprivate _return = [];\n{\n\t_return pushBack (_x + \": \" + str (_car selectionNames _x));\n} forEach [\"Memory\", \"Geometry\", \"FireGeometry\", \"LandContact\", \"HitPoints\"];\ncopyToClipboard (_return joinString endl);\n/*\n\tMemory: [\"light_r_end\",\"drivewheel_axis\",\"posun wheel_1_1\",\"posun wheel_1_2\",\"posun wheel_2_1\",\"posun wheel_2_2\",\"wheel_1_1_steering_axis\",\"wheel_2_1_steering_axis\",\"wheel_2_1_axis\",\"wheel_2_2_axis\",\"wheel_1_2_axis\",\"wheel_1_1_axis\",\"basic_damper_destruct_axis\",\"pos cargo\",\"pos cargo dir\",\"pos driver\",\"pos driver dir\",\"circulumreference\",\"zamerny\",\"doplnovani\",\"light_l_end\",\"light_r\",\"light_l\",\"stopa pll\",\"stopa plp\",\"stopa ppl\",\"stopa ppp\",\"stopa zll\",\"stopa zlp\",\"stopa zpl\",\"stopa zpp\",\"exhaust_dir\",\"exhaust_pos\",\"osaveze\",\"mph_axis\",\"rpm_axis\",\"fuel_axis\",\"temp2_axis\",\"temp_axis\",\"pip1_pos\",\"pip1_dir\",\"pip4_dir\",\"pip6_dir\",\"pip5_dir\",\"pip7_dir\",\"pip4_pos\",\"pip6_pos\",\"pip7_pos\",\"pip5_pos\",\"dustfrontright\",\"dustfrontleft\",\"dustbackleft\",\"dustbackright\",\"light_r_flare\",\"light_l_flare\",\"light_r_flare2\",\"light_l_flare2\",\"wheel_1_1_bound\",\"wheel_1_2_bound\",\"wheel_2_1_bound\",\"wheel_2_2_bound\",\"door_1_axis\",\"door_2_axis\",\"door_3_axis\",\"door_4_axis\",\"pedal_thrust_axis\",\"pedal_brake_axis\",\"slingloadcargo1\",\"slingloadcargo2\",\"slingloadcargo3\",\"slingloadcargo4\",\"tow_front_l\",\"tow_rear_r\",\"tow_front_r\",\"tow_rear_l\",\"taskmarker_1_pos\",\"bbox_1_2_pos\",\"bbox_1_1_pos\",\"bbox_2_1_pos\",\"bbox_2_2_pos\",\"pip_1_tl\",\"pip_1_tr\",\"pip_1_bl\",\"pip_1_br\",\"pip_4_tl\",\"pip_4_tr\",\"pip_4_bl\",\"pip_4_br\",\"pip_5_tl\",\"pip_5_tr\",\"pip_5_br\",\"pip_5_bl\"]\n\tGeometry: [\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.001\",\"wheel_1_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.002\",\"wheel_1_2_unhide\",\"wheel_2_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.003\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.004\",\"wheel_2_2_unhide\",\"damagehide\",\"wheel_1_2_damper\",\"wheel_1_1_damper\",\"wheel_2_2_damper\",\"wheel_2_1_damper\"]\n\tFireGeometry: [\"wheel_2_2_hide\",\"wheel_1_2_hide\",\"wheel_1_1_hide\",\"wheel_2_1_hide\",\"damagehide\",\"glass2\",\"glass3\",\"glass1\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.001\",\"wheel_1_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.002\",\"wheel_1_2_unhide\",\"wheel_2_1_unhide\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.003\",\"proxy:\\a3\\data_f\\proxies\\damagewheel\\damagewheel_1.004\",\"wheel_2_2_unhide\",\"proxy:\\a3\\data_f\\proxies\\passenger_mrap_01_back\\cargo.002\",\"proxy:\\a3\\data_f\\proxies\\passenger_generic01_foldhands\\cargo.003\",\"proxy:\\a3\\data_f\\proxies\\passenger_mrap_01_front\\cargo.001\",\"proxy:\\a3\\data_f\\proxies\\driver_offroad\\driver.001\",\"reserve_wheel\",\"zbytek\",\"glass4\",\"glass5\",\"glass6\",\"hit_engine\",\"hit_fuel\",\"hit_hull\",\"door_1_hide\",\"door_3_hide\"]\n\tLandContact: [\"wheel_2_1_damper_land\",\"wheel_1_2_damper_land\",\"wheel_2_2_damper_land\",\"wheel_1_1_damper_land\"]\n\tHitPoints: [\"wheel_2_1_steering\",\"wheel_2_2_steering\",\"wheel_1_2_steering\",\"wheel_1_1_steering\",\"motor\",\"karoserie\",\"light_r\",\"light_l\",\"glass2\",\"palivo\",\"glass3\",\"glass1\",\"wheel_reserve_hit\",\"light_r2\",\"light_l2\",\"zbytek\",\"door_1\",\"door_2\",\"door_3\",\"door_4\",\"glass4\",\"glass5\",\"glass6\",\"hit_engine_point\",\"hit_fuel_point\",\"hit_hull_point\"]\n*/\n```\n\n*Example 5:*\n\nSelect \"Memory\" LOD by its `resolution`:\n\n```sqf\nprivate _memoryLODNamedSelections = player selectionNames 1e15;\n```","commands\\selectionPosition.md":"Returns selection position in model space pertaining to the current animation in `render time scope`.\nWhen the default syntax is used, command searches first in Memory `LOD`, then in Geometry LOD, FireGeometry LOD, LandContact LOD, HitPoints LOD and finally in ViewGeometry LOD and returns the first matching find.\nThe second syntax allows to specify which one of these LODs to search in instead.\n\n\n---\n*Syntaxes:*\n\nobject `selectionPosition` selectionName\n\nobject `selectionPosition` [selectionName, LOD, returnMode]\n\n`selectionPosition` [object, selectionName, LODIndex, isVisual, returnMode]\n\n---\n*Example 1:*\n\n```sqf\n_inModelPosition = player selectionPosition \"head_hit\";\n```\n\n*Example 2:*\n\n```sqf\n_inModelPosition = player selectionPosition \"pelvis\";\n```\n\n*Example 3:*\n\n```sqf\n_inModelPosition = player selectionPosition \"head\";\n```\n\n*Example 4:*\n\n```sqf\n_inModelPosition = player selectionPosition \"camera\";\n```\n\n*Example 5:*\n\n```sqf\nstomper selectionPosition [\"wheel_1_1\", \"HitPoints\", \"FirstPoint\"];\t// [-0.774058,0.860854,-1.40365]\nstomper selectionPosition [\"wheel_1_1\", \"HitPoints\", \"AveragePoint\"];\t// [-0.597142,1.35486,-1.58345]\nstomper selectionPosition [\"wheel_1_1\", \"HitPoints\", \"BoundingBox\"];\t// [[-0.774058,0.860854,-2.07746],[-0.420225,1.84887,-1.08944]]\n```","commands\\selectionVectorDirAndUp.md":"Searches for selection in the object model's LOD level, and returns the Direction and Up vectors in model space.\n\n\n---\n*Syntaxes:*\n\nobject `selectionVectorDirAndUp` [selectionName, LOD]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player selectionVectorDirAndUp [\"drivewheel_axis\", \"FireGeometry\"] params [\"_axisVectorDir\", \"_axisVectorUp\"];\n```","commands\\selectLeader.md":"Select the group's leader. Group locality can be checked with `local` command and group ownership with `groupOwner` command.\n\n\n---\n*Syntaxes:*\n\ngroup `selectLeader` unitName\n\n---\n*Example 1:*\n\n```sqf\ngroup player selectLeader player;\n```\n\n*Example 2:*\n\nMake unit a leader from server:\n\n```sqf\n[group _unit, _unit] remoteExec [\"selectLeader\", groupOwner group _unit];\n```","commands\\selectMax.md":"Returns the array element with `max`imum numerical value. Engine solution to `BIS_fnc_greatestNum` and `BIS_fnc_findExtreme`. Therefore it is expected that supplied array consists of `Number`s only. `Boolean`s however are also supported and will be evaluated as `Number`s: `true` - 1, `false` - 0.  `nil` value treated as 0.\n\n\n---\n*Syntaxes:*\n\n`selectMax` array\n\n---\n*Example 1:*\n\n```sqf\n_max = selectMax [1,2,3,4,5]; //5\n```\n\n*Example 2:*\n\n```sqf\n// Same as, for example: \n_max = _a max _b max _c max _d;\n// Only faster:\n_max = selectMax [_a,_b,_c,_d];\n```","commands\\selectMin.md":"Returns the array element with `min`imum numerical value. Engine solution to `BIS_fnc_lowestNum` and `BIS_fnc_findExtreme`. Therefore it is expected that supplied array consists of `Number`s only.  `Boolean`s however are also supported and will be evaluated as `Number`s: `true` - 1, `false` - 0. `nil` value treated as 0.\n\n\n---\n*Syntaxes:*\n\n`selectMin` array\n\n---\n*Example 1:*\n\n```sqf\n_min = selectMin [1,2,3,4,5]; //1\n```\n\n*Example 2:*\n\n```sqf\n// Same as, for example: \n_min = _a min _b min _c min _d;\n// Only faster:\n_min = selectMin [_a,_b,_c,_d];\n```","commands\\selectNoPlayer.md":"Switches player to no unit, makes `player` return `objNull`.\n\n\n---\n*Syntaxes:*\n\n`selectNoPlayer`\n\n---\n*Example 1:*\n\nSingle player:\n\n```sqf\nselectNoPlayer;\nhint str player; // <NULL-object>\n```\nRough multiplayer emulation:\n\n```sqf\n_noPlayer = createGroup sideLogic createUnit [\n\t\"Logic\",\n\t[0,0,1000],\n\t[],\n\t0,\n\t\"NONE\"\n];\nselectPlayer _noPlayer;\nhint str player; // L Charlie 4-3:1 (KK)\n```","commands\\selectPlayer.md":"Move player into given unit. Some usage advices:\n* Try avoiding `selectPlayer` on editor-placed units in multiplayer, as it may, on occasion, lead to some undefined behaviour.\n* If you need to `selectPlayer` into another unit, consider `creatingUnit` dynamically.\n\n\n---\n*Syntaxes:*\n\n`selectPlayer` unitName\n\n---\n*Example 1:*\n\n```sqf\nselectPlayer bob;\n```","commands\\selectRandom.md":"Returns a random element from the given array. Engine solution to `BIS_fnc_selectRandom`\n\n\n---\n*Syntaxes:*\n\n`selectRandom` array\n\n---\n*Example 1:*\n\n```sqf\n_randomElement = selectRandom [1,2,3,4,5];\n```","commands\\selectRandomWeighted.md":"Returns a random element from the given array according to assigned weights. Engine solution to `BIS_fnc_selectRandomWeighted`. A few notes:\n* Negative weights are not supported\n* If an item's weight is 0, the item is ignored\n* The weights don't have to total to 1 \n* If numbers of items and weights do not match, the shortest array is used\n* A single array Syntax is slightly faster than Alt Syntax\n\n\n---\n*Syntaxes:*\n\n`selectRandomWeighted` valuesAndWeights\n\nvalues `selectRandomWeighted` weights\n\n---\n*Example 1:*\n\n```sqf\nprivate _randomWeightedElement = selectRandomWeighted [1,0.1,2,0.2,3,1.3,4,2.4,5,7.5];\n```\n\n*Example 2:*\n\n```sqf\nprivate _randomWeightedElement = [1,2,3,4,5] selectRandomWeighted [0.1,0.2,1.3,2.4,7.5];\n```","commands\\selectWeapon.md":"Selects the given weapon.\n\n\n---\n*Syntaxes:*\n\nunitName `selectWeapon` muzzleName\n\nunit `selectWeapon` [weapon, muzzle, firemode]\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 selectWeapon \"LAWLauncher\";\n```\n\n*Example 2:*\n\n```sqf\nplayer selectWeapon \"M203Muzzle\";\n```\n\n*Example 3:*\n\n```sqf\nplayer selectWeapon [\"arifle_MX_GL_ACO_F\", \"arifle_MX_GL_ACO_F\", \"FullAuto\"];\n```","commands\\selectWeaponTurret.md":"Selects the given weapon on the specified turret. Use turret path [-1] for the driver's turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `selectWeaponTurret` [weapon, turretPath, muzzle, firemode]\n\n---\n*Example 1:*\n\n```sqf\nMBT_Kuma selectWeaponTurret [\"LMG_coax\",[0]];\n```\n\n*Example 2:*\n\n```sqf\nKamysh selectWeaponTurret [\"missiles_titan\", [0], \"missiles_titan\", \"topdown\"];\n```","commands\\sendAUMessage.md":"Send the command to the list of clients.\n\n\n---\n*Syntaxes:*\n\n`sendAUMessage` [clientList, command]\n\n---\n*Example 1:*\n\n```sqf\nsendAUMessage [[dpnid1, dpnid2], \"ConnectTo: 192.168.1.66\"];\n```","commands\\sendSimpleCommand.md":"Sends a simple command to the vehicle's driver / gunner (air vehicles ignore it). See also `vehicleMoveInfo`. - turn right, while moving or not\n* {{GVI|arma3|1.78\n\n\n---\n*Syntaxes:*\n\nvehicleName `sendSimpleCommand` command\n\n---\n*Example 1:*\n\n```sqf\nvehicle player sendSimpleCommand \"STOP\";\n```","commands\\sendTask.md":"Create a new AI task (subtask of parentTask). Type is name of registered task type.\n\n\n---\n*Syntaxes:*\n\nsender `sendTask` [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]\n\n---\n*Example 1:*\n\n```sqf\n(example);\n```","commands\\sendTaskResult.md":"Send a result of the task to the task sender.\n\n\n---\n*Syntaxes:*\n\ntask `sendTaskResult` [state,result,sentence]\n\n---\n*Example 1:*\n\n```sqf\n(example);\n```","commands\\sendUDPMessage.md":"Send message to given address using UDP protocol. Returns false if the message has not been delivered\n\n\n---\n*Syntaxes:*\n\n`sendUDPMessage` [ip, port, message]\n\n---\n*Example 1:*\n\n```sqf\n_bool = sendUDPMessage [\"192.168.0.1\", 2302, \"Here goes you message...\"];\n```","commands\\sentencesEnabled.md":"A getter for `enableSentences`.\n\n\n---\n*Syntaxes:*\n\n`sentencesEnabled`\n\n---\n*Example 1:*\n\n```sqf\nif (sentencesEnabled) then\n{\n\thint \"sentences are enabled; changing that now\";\n\tenableSentences false;\n};\n```","commands\\serverCommand.md":"Executes the given `server command`.\n\n\n---\n*Syntaxes:*\n\n`serverCommand` command\n\npassword `serverCommand` command *(Reference Icon \"32\" at serverExec)*\n\n---\n*Example 1:*\n\n```sqf\nserverCommand \"#logout\";\n```\n\n*Example 2:*\n\nCreate button on the main map which will show userlist to anyone who clicks on it:\n\n```sqf\nwith uiNamespace do \n{\n\tprivate _ctrl = findDisplay 12 ctrlCreate [\"RscButton\", -1];\n\t_ctrl ctrlSetPosition [0,0,0.5,0.1];\n\t_ctrl ctrlSetText \"USERLIST\";\n\t_ctrl ctrlCommit 0;\n\t_ctrl ctrlAddEventHandler [\"ButtonDown\", \n\t{\n\t\tserverCommand \"#userlist\";\n\t}];\n};\n```\n\n*Example 3:*\n\n```sqf\nserverCommand format [\"#kick %1\",_name];\n```\n\n*Example 4:*\n\n```sqf\nprivate _passwordWasOK = \"MyServerCommandPassword\" serverCommand \"#lock\";\n```","commands\\serverCommandAvailable.md":"Returns `true` if given `serverCommand` is available on current machine, `false` if not. Here is the general table of availability of Arma 3 server commands:\n<br><br>\n* `Available to anyone`\n<blockquote>**#login}}, *(Reference hl \"#userlist\")*, *(Reference hl \" #beclient\")*, {{hl| #vote**</blockquote>\n* `Available to any `admin` (voted in / logged in) or `server` host`\n<blockquote>**#kick}}, {{hl|#debug**</blockquote>\n* `Available to logged in `admin` or `server` host`\n<blockquote>**#lock}}, *(Reference hl \"#unlock\")*, *(Reference hl \"#maxping\")*, *(Reference hl \"#maxdesync\")*, {{hl|#maxpacketloss**</blockquote>\n* `Available to any `admin` (voted in / logged in)`\n<blockquote>**#logout}}, *(Reference hl \"#restart\")*, *(Reference hl \"#mission\")*, *(Reference hl \"#missions\")*, *(Reference hl \"#reassign\")*, *(Reference hl \"#monitor\")*, {{hl|#init**</blockquote>\n* `Available to logged in `admin``\n<blockquote>**#shutdown}}, *(Reference hl \"#restartserver\")*, *(Reference hl \"#exec\")*, *(Reference hl \"#beserver\")*, *(Reference hl \"#monitords\")*, *(Reference hl \"#logentities\")*, {{hl|#exportjipqueue**</blockquote>\n* `Available to logged in `admin` on certain game builds`\n<blockquote>**#captureframe}}, *(Reference hl \"#enabletest\")*, {{hl|#disabletest**</blockquote>\nTo check if server command could be executed in current environment use `serverCommandExecutable`. For more information on what each server command does, see `Multiplayer Server Commands`.<br><br>\n`NOTE`: When password variant of `serverCommand` is used on dedicated server, the table above does not apply as everything is available to it.\n\n\n---\n*Syntaxes:*\n\n`serverCommandAvailable` command\n\n---\n*Example 1:*\n\n```sqf\n_can = serverCommandAvailable \"#kick\";\n```\n\n*Example 2:*\n\n```sqf\nif (serverCommandAvailable \"#logout\") then \n{\n\thint \"You are a some sort of admin\";\n};\n```","commands\\serverCommandExecutable.md":"Returns `true` if the `serverCommand` can be performed on the machine and in this exact environment, otherwise `false`. serverCommand can be executed only from `User Interface Event Handlers`, and this command also checks if that's the case.\n\n\n---\n*Syntaxes:*\n\n`serverCommandExecutable` command\n\n---\n*Example 1:*\n\n```sqf\n_canKick = serverCommandAvailable \"#kick\";\n```\n\n*Example 2:*\n\nAdd button to the main map to lock server, which could only be activated by admin:\n\n```sqf\nwith uiNamespace do {\n\tctrl = findDisplay 12 ctrlCreate [\"RscButton\", -1];\n\tctrl ctrlSetPosition [0, 0, 0.5, 0.1];\n\tctrl ctrlCommit 0;\n\tctrl ctrlSetText \"LOCK SERVER\";\n\tctrl ctrlAddEventHandler [\"ButtonDown\",\n\t{\t\n\t\tif (serverCommandExecutable \"#lock\") then {\n\t\t\tserverCommand \"#lock\";\n\t\t} else {\n\t\t\thint \"You need to be logged in as admin to do this\";\n\t\t};\n\t}];\n};\n```","commands\\serverName.md":"Returns name of the hosting server in MP, \"\" in SP.\n\n\n---\n*Syntaxes:*\n\n`serverName`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"Welcome to the %1 server!\", serverName];\n```","commands\\serverNamespace.md":"Returns server's `namespace`.\nThis namespace is only available on the server for the server's uptime duration (same as `uiNamespace`).\nServer event handlers, which are available in server config, all use this namespace.\n\n\n---\n*Syntaxes:*\n\n`serverNamespace`\n\n---\n*Example 1:*\n\n```sqf\nprivate _serverVars = allVariables serverNamespace;\n```","commands\\serverTime.md":"Returns the time since last server restart, synced to all clients in MP. The syncing is happening every 5 minutes, but you can force the next sync earlier by executing `estimatedTimeLeft` command. The time returned is also different to the time returned by `time` and `diag_tickTime` commands on server. Returns 0 in SP.<br><br>\n\n\n---\n*Syntaxes:*\n\n`serverTime`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"Synced server time : %1\", serverTime];\n```","commands\\set.md":"Changes the element at the given zero-based index of the `array`.\n\n\n---\n*Syntaxes:*\n\narray `set` [index, value]\n\nhashMap `set` [key, value, insertOnly]\n\n---\n*Example 1:*\n\n```sqf\n_arrayOne set [0, \"Hello\"];\n```\n\n*Example 2:*\n\nAppend \"Bye\" as last element to **_arrayTwo**:\n\n```sqf\n_arrayTwo set [count _arrayTwo, \"Bye\"];\n```\n\n*Example 3:*\n\nReplace the last element of **_arrayThree** with 23:\n\n```sqf\n_arrayThree set [(count _arrayThree) - 1, 23];\n```\n\n*Example 4:*\n\nUsing `set` with an index that is out of bounds:\n\n```sqf\nprivate _array = [\"A\"];\n_array set [2, \"C\"]; // _array is now [\"A\", nil, \"C\"]\n_array set [1, \"B\"]; // _array is now [\"A\", \"B\", \"C\"]\n```\n\n*Example 5:*\n\n```sqf\nprivate _myHashMap = createHashMap;\n_myHashMap set [\"key\", \"value1\", true]; // \"key\" value is set to \"value1\"\n_myHashMap set [\"key\", \"value2\", true]; // \"key\" value is still \"value1\" as \"key\" already exists in the hashmap\n```","commands\\set3DENAttribute.md":"Sets one of entity `attributes`. For the list of all attributes with their properties see `Setting Attributes`.\n\n\n---\n*Syntaxes:*\n\nentity [[set3DENAttribute]] [class, value]\n\n---\n*Example 1:*\n\n```sqf\nplayer set3DENAttribute [\"allowDamage\", false]; // Mark player as invincible\n```","commands\\set3DENAttributes.md":"Set entity `attributes`.\nAn attribute is identified by its **property}} ({{hl|data** when it is engine-drive attribute) value in config.\nFor the list of all attributes with their properties, see `Setting Attributes`.\n\n\n---\n*Syntaxes:*\n\n[[set3DENAttributes]] [<nowiki/>[entities1, class1, value1], [entities2, class2, value2], ...]\n\n---\n*Example 1:*\n\n```sqf\n// Set all selected objects as playable\nset3DENAttributes [[get3DENSelected \"Object\", \"ControlMP\", true]];\n```","commands\\set3DENGrid.md":"Sets the grid increment for the given transformation type.\n\n\n---\n*Syntaxes:*\n\n[[set3DENGrid]] [type, value]\n\n---\n*Example 1:*\n\n```sqf\nset3DENGrid [\"t\",100]; // 100m movement increment\n```","commands\\set3DENIconsVisible.md":"Toggle visibility of `Eden Editor` icons.\n\n\n---\n*Syntaxes:*\n\n[[set3DENIconsVisible]] [showMap, showScene]\n\n---\n*Example 1:*\n\n```sqf\nset3DENIconsVisible [false, false]; // Hide all icons\n```","commands\\set3DENLayer.md":"Set layer for `Eden Entity`.\n\n\n---\n*Syntaxes:*\n\nentity [[set3DENLayer]] layerID\n\n---\n*Example 1:*\n\n```sqf\n_myLayer = -1 add3DENLayer \"CTRG\";\nplayer set3DENLayer _myLayer;\n```","commands\\set3DENLinesVisible.md":"Toggle visibility of `Eden Editor` lines.\n\n\n---\n*Syntaxes:*\n\n[[set3DENLinesVisible]] [showMap, showScene]\n\n---\n*Example 1:*\n\n```sqf\nset3DENLinesVisible [false, false];// Hide all lines\n```","commands\\set3DENLogicType.md":"Sets the new type of Logic object(s). For other objects use [[set3DENObjectType]].\n\n\n---\n*Syntaxes:*\n\nobjects [[set3DENLogicType]] classname\n\n---\n*Example 1:*\n\n```sqf\n[get3DENSelected \"logic\" select 0] set3DENLogicType \"MiscOR_F\";\n```","commands\\set3DENMissionAttribute.md":"Set `scenario attribute`.\nAn attribute is identified by its **property}} ({{hl|data** when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see `Setting Attributes`.\n\n\n---\n*Syntaxes:*\n\nsection [[set3DENMissionAttribute]] [class, value]\n\n---\n*Example 1:*\n\n```sqf\n\"Multiplayer\" set3DENMissionAttribute [\"respawn\", 3]; // Set respawn type to 3\n```","commands\\set3DENMissionAttributes.md":"Set `scenario attributes`.\nAn attribute is identified by its **property}} ({{hl|data** when it is an engine-driven attribute) value in config.\nFor the list of all attributes with their properties, see `Mission Attributes`.\n\n\n---\n*Syntaxes:*\n\n[[set3DENMissionAttributes]] [<nowiki/>[section1, class1, value1], ...]\n\n---\n*Example 1:*\n\n```sqf\n// set respawn type to 3 and respawn delay to 10 seconds\nset3DENMissionAttributes [[\"Multiplayer\", \"respawn\", 3], [\"Multiplayer\", \"respawnDelay\", 10]];\n```","commands\\set3DENModelsVisible.md":"Enables or disables trigger area visibility.\n\n\n---\n*Syntaxes:*\n\nset3DENModelsVisible [map, scene]\n\n---\n*Example 1:*\n\n```sqf\nset3DENModelsVisible [true, true];\n```","commands\\set3DENObjectType.md":"Sets the classname of one or more given Eden Editor `objects`. For Logic objects use [[set3DENLogicType]].\n\n\n---\n*Syntaxes:*\n\nobjects [[set3DENObjectType]] classname\n\n---\n*Example 1:*\n\n```sqf\n[get3DENMouseOver select 1] set3DENObjectType \"B_crew_F\"; // turns object under cursor into a blufor crewman\n```","commands\\set3DENSelected.md":"Changes selection in `Eden Editor` to what is inside entities array.\n\n\n---\n*Syntaxes:*\n\n[[set3DENSelected]] entities\n\n---\n*Example 1:*\n\n```sqf\nset3DENSelected [0,5,3,6,7,12];\n```","commands\\setAccTime.md":"Set simulation acceleration coefficient. May also be used to slow time in cutscenes.\n\n\n---\n*Syntaxes:*\n\n`setAccTime` accFactor\n\n---\n*Example 1:*\n\n```sqf\nsetAccTime 0.1;\n```","commands\\setActualCollectiveRTD.md":"Sets the collective pitch control to a specific position, regardless of input devices (until those are changed).\n* 0: collective fully down\n* ~0.7: approximate stable hover position\n* 1: collective fully up\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `setActualCollectiveRTD` value\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopterRTD setActualCollectiveRTD 0.7;\n```","commands\\setAirplaneThrottle.md":"Sets a wanted throttle position - works only on `player`'s vehicle.\n\n\n---\n*Syntaxes:*\n\nairplane `setAirplaneThrottle` value\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setAirplaneThrottle 0.5;\n```","commands\\setAirportSide.md":"Set owning side of the airport. `ID` is the number to identify which airport on the island you want to check.\n\n\n---\n*Syntaxes:*\n\nid `setAirportSide` side\n\ntarget `setAirportSide` side\n\n---\n*Example 1:*\n\n```sqf\n0 setAirportSide east;\n```","commands\\setAmmo.md":"Sets custom ammo count in the currently loaded magazine of the specified weapon or muzzle.\n\n\n---\n*Syntaxes:*\n\nunit `setAmmo` [weaponOrMuzzle, count]\n\n---\n*Example 1:*\n\nSet player's handgun magazine ammo count to 10 rounds:\n\n```sqf\nplayer setAmmo [handgunWeapon player, 10];\n```\n\n*Example 2:*\n\nSet player's current weapon magazine ammo count to 1 round:\n\n```sqf\nplayer setAmmo [currentWeapon player, 1];\n```\n\n*Example 3:*\n\nIf player is a gunner in a vehicle, set current weapon magazine ammo count to 5 rounds:\n\n```sqf\nif (local vehicle player) then {\n\tvehicle player setAmmo [currentWeapon vehicle player, 5];\n} else {\n\thint \"Vehicle must be local to this machine for 'setAmmo' to work\";\n};\n```\n\n*Example 4:*\n\nIf you try to set more ammo than the magazine can hold, it will be clipped at default magazine capacity:\n\n```sqf\nplayer setAmmo [primaryWeapon player, 1000000]; // full mag with default ammo count\n```\n\n*Example 5:*\n\nSome weapons has more than one muzzles:\n\n```sqf\n_marshall setAmmo [\"autocannon_40mm_CTWS\", 0];// won't work\n_marshall setAmmo [\"HE\", 0];// works\n```","commands\\setAmmoCargo.md":"Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo.\n\nThe <u>actual</u> `quantity` to work with is determined by the model's class in `CfgVehicles`\n\n\n---\n*Syntaxes:*\n\nvehicleName `setAmmoCargo` ammoCargo\n\n---\n*Example 1:*\n\n```sqf\n_ammoTruck1 setAmmoCargo 0.5;\n```","commands\\setAmmoOnPylon.md":"Set count of ammo in magazine on pylon (supports pylon name since Arma 3 v1.94)\n\n\n---\n*Syntaxes:*\n\nvehicle `setAmmoOnPylon` [pylon, ammocount]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setAmmoOnPylon [1, 12];\n```\n\n*Example 2:*\n\n```sqf\nvehicle player setAmmoOnPylon [\"pylon1\", 12];\n```","commands\\setAnimSpeedCoef.md":"Sets a coefficient for animation speed (0.5 will play animations half the speed, 2 twice the speed).<br>\nDoesn't affect upper body animations (reloading, etc.)\n\n\n---\n*Syntaxes:*\n\nunit `setAnimSpeedCoef` coef\n\n---\n*Example 1:*\n\n```sqf\nplayer setAnimSpeedCoef 0.75;\n```","commands\\setAperture.md":"Sets custom eye accommodation camera aperture.\n\n\n---\n*Syntaxes:*\n\n`setAperture` aperture\n\n---\n*Example 1:*\n\n```sqf\nsetAperture 0.3;\n```\n\n*Example 2:*\n\n```sqf\n[] spawn { sleep 0.2; setAperture 100 };\n```","commands\\setApertureNew.md":"Sets custom camera aperture when HDR is enabled ([-1] to do it automatically). <nowiki>`minimum` should be <= `standard` and <= `maximum`</nowiki>.\n\n\n---\n*Syntaxes:*\n\n`setApertureNew` [minimum, standard, maximum, luminance]\n\n---\n*Example 1:*\n\n```sqf\nsetApertureNew [0.3, 0.2, 0.1, 1];\n```\n\n*Example 2:*\n\nSimulate eye adjustment at night:\n\n```sqf\nsetDate [2016, 8, 10, 4, 0];\nsetApertureNew [2, 8, 14, 0.9];\n```\n\n*Example 3:*\n\nNarrower range for a subtler effect:\n\n```sqf\nsetDate [2016, 8, 10, 4, 0];\nsetApertureNew [2, 5, 9, 0.8];\n```","commands\\setArmoryPoints.md":"Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to `armoryPoints` entry. If entry doesn't exist, it is created.\n\n\n---\n*Syntaxes:*\n\n`setArmoryPoints` points\n\n---\n*Example 1:*\n\n```sqf\nsetArmoryPoints (armoryPoints + 20);\n```\n\n*Example 2:*\n\n```sqf\nsetArmoryPoints 3.14;\n```","commands\\setAttributes.md":"Returns a `Structured Text` created from the given `structured` text and sets ` attributes` to the given values.\n\n\n---\n*Syntaxes:*\n\ntext `setAttributes` [name1, value1, name2, value2, ...]\n\n---\n*Example 1:*\n\n```sqf\n_txt = text \"Red text, right align\";\n_txt setAttributes [\"color\", \"#FF0000\", \"align\", \"right\"];\nhint composeText [_txt];\n```","commands\\setAutonomous.md":"Sets UAV autonomous mode.\n\n\n---\n*Syntaxes:*\n\nuav `setAutonomous` bool\n\n---\n*Example 1:*\n\n```sqf\nuav setAutonomous true;\n```","commands\\setBehaviour.md":"Sets individual unit behaviour `on every unit in a group`.\n\n<spoiler text=\"Comparison of Behaviour commands\">\n{\n\n\n---\n*Syntaxes:*\n\ngroupOrUnit `setBehaviour` behaviour\n\n---\n*Example 1:*\n\n```sqf\n_group1 setBehaviour \"SAFE\";\n```","commands\\setBehaviourStrong.md":"Sets individual unit behaviour on every unit in a group and additionally tries to force this behaviour to the unit's group. Alternatively see `setCombatBehaviour`.\n\n<spoiler text=\"Comparison of Behaviour commands\">\n{\n\n\n---\n*Syntaxes:*\n\ngroupName `setBehaviourStrong` behaviour\n\n---\n*Example 1:*\n\n```sqf\n_group1 setBehaviourStrong \"SAFE\";\n```","commands\\setBleedingRemaining.md":"Sets for how many seconds injured unit leaves blood trail.\nThe unit damage must be >= 0.1 for this command to have an effect, otherwise, the `getBleedingRemaining` will return 0 and no blood trail is left behind.\n\n\n---\n*Syntaxes:*\n\nunit `setBleedingRemaining` time\n\n---\n*Example 1:*\n\n```sqf\n_unit setBleedingRemaining 60;\n```\n\n*Example 2:*\n\n```sqf\nplayer setDamage 0.25;\nplayer setBleedingRemaining 120;\n```","commands\\setBrakesRTD.md":"Enable landing gear wheel brakes for a helicopter.\n* value 0: brakes off\n* value 1: brakes on\n\n* index 1: left wheels\n* index 2: right wheels\n* index 3: both sides\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `setBrakesRTD` [value, wheelIndex]\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopterRTD setBrakesRTD [1, 3];\n```","commands\\setCameraInterest.md":"Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50. Camera interest is used to focus camera to control depth of field in cutscenes. Combination of camera interest, unit position of the screen, unit movement, unit type, and some other properties is used to determine which unit to focus at. Higher camera interest increases the chance of the unit being focused.\n\n\n---\n*Syntaxes:*\n\nentity `setCameraInterest` interest\n\n---\n*Example 1:*\n\n```sqf\n_soldier setCameraInterest 50;\n```","commands\\setCamShakeDefParams.md":"Sets camera shake default parameters.\n\n\n---\n*Syntaxes:*\n\n`setCamShakeDefParams` [power, duration, frequency, minSpeed, minMass, caliberCoefHit, vehicleCoef]\n\n---\n*Example 1:*\n\n```sqf\nsetCamShakeDefParams [1, 2, 3, 4, 5, .5, .5];\n```\n\n*Example 2:*\n\n```sqf\nsetCamShakeDefParams [100, 10, 10, 4, 5, 1, 1];\n```","commands\\setCamShakeParams.md":"Sets camera shake parameters. Will not have any effect until shake is started via `addCamShake`.\n\n\n---\n*Syntaxes:*\n\n`setCamShakeParams`  [posCoef, vertCoef, horzCoef, bankCoef, interpolation]\n\n---\n*Example 1:*\n\n```sqf\nsetCamShakeParams [0.1, 1, 1, 1, true];\n```","commands\\setCamUseTI.md":"Sets thermal vision mode for currently used camera. This command only works with `camCreate` created camera that is currently the main camera for the player (see Example 2).\n\n\n---\n*Syntaxes:*\n\nstate `setCamUseTI` modeIndex\n\n---\n*Example 1:*\n\n```sqf\ntrue setCamUseTI 1;\n```\n\n*Example 2:*\n\n`Predator` vision:\n\n```sqf\n_cam = \"camera\" camCreate [0, 0, 0];\n_cam camSetTarget player;\n_cam camSetRelPos [0, 1, 1.5];\n_cam cameraEffect [\"Internal\", \"Back\"];\n_cam camCommit 0;\ntrue setCamUseTI 7;\n```","commands\\setCaptive.md":"Mark a unit as captive. If unit is a vehicle, commander is marked. A captive unit:\n* is seen as belonging to the `civilian` `side`\n* will not be fired upon\n* will still shoot at its real side's enemies\n* will not get its weapons removed (see `removeAllWeapons`)\n* will not trigger \"detected by\" conditions for its original `side`.\n\n\n---\n*Syntaxes:*\n\nunitName `setCaptive` status\n\nunitName `setCaptive` statusNumber\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 setCaptive true;\nside _soldier1; // returns civilian\nside group _soldier1; // returns e.g blufor\n```\n\n*Example 2:*\n\n```sqf\n_soldier1 setCaptive 1;\ncaptive _soldier1; // returns true\n\n_soldier1 setCaptive 42;\ncaptive _soldier1; // returns true\n\n_soldier1 setCaptive 0;\ncaptive _soldier1; // returns false\n```","commands\\setCenterOfMass.md":"Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.\n\n\n---\n*Syntaxes:*\n\nmyObject `setCenterOfMass` [centerOfMass, time]\n\nmyObject `setCenterOfMass` centerOfMass\n\n---\n*Example 1:*\n\n```sqf\nmyObject setCenterOfMass [[0,-1,0], 0.5];\n```\n\n*Example 2:*\n\n```sqf\nmyObject setCenterOfMass [0,-1,0];\n```","commands\\setCollisionLight.md":"Switches collision lights of a vehicle on/off.\n\n\n---\n*Syntaxes:*\n\nvehicle `setCollisionLight` set\n\n---\n*Example 1:*\n\n```sqf\nheli setCollisionLight true;\n```","commands\\setCombatBehaviour.md":"Sets an individual unit entity behaviour (main syntax) or a group entity behaviour (alternative syntax). The group in this case is a `Group` entity and not a simple collection of units. To retrieve unit or group behaviour see `combatBehaviour`. The behaviour is one of: \n* \"CARELESS\"\n* \"SAFE\"\n* \"AWARE\"\n* \"COMBAT\"\n* \"STEALTH\"\n\n\n<spoiler text=\"Comparison of Behaviour commands\">\n{\n\n\n---\n*Syntaxes:*\n\nunit `setCombatBehaviour` behaviour\n\ngroup `setCombatBehaviour` behaviour\n\n---\n*Example 1:*\n\n```sqf\nunit1 setCombatBehaviour \"SAFE\";\n```\n\n*Example 2:*\n\n```sqf\ngroup1 setCombatBehaviour \"CARELESS\";\n```","commands\\setCombatMode.md":"Sets AI ` group` combat mode (engagement rules). For individual unit's combat mode see `setUnitCombatMode`. Mode may be one of the following: \n* **\"BLUE\"** : Never fire, keep formation\n* **\"GREEN\"** : Hold fire, keep formation\n* **\"WHITE\"** : Hold fire, engage at will/loose formation\n* **\"YELLOW\"** : Fire at will, keep formation\n* **\"RED\"** : Fire at will, engage at will/loose formation\nSee `Combat Modes` for more information on combat modes.\n\n\n---\n*Syntaxes:*\n\ngroup `setCombatMode` mode\n\n---\n*Example 1:*\n\n```sqf\n_group1 setCombatMode \"BLUE\";\n```","commands\\setCompassOscillation.md":"This command sets random heading on the player's compass (both in map and in 3D view) with given frequency, which is also randomised.\n\n\n---\n*Syntaxes:*\n\n`setCompassOscillation` [angle, frequencyMin, frequencyMax]\n\n---\n*Example 1:*\n\nSet compass to oscillate every second within -90/+90 degrees:\n\n```sqf\nsetCompassOscillation [rad 90, 1, 1];\n```\n\n*Example 2:*\n\nChange heading every 60 to 90 seconds:\n\n```sqf\nsetCompassOscillation [rad 180, 60, 90];\n```\n\n*Example 3:*\n\nMake compass go crazy:\n\n```sqf\nsetCompassOscillation [rad 360, 0.1, 0.2];\n```\n\n*Example 4:*\n\nReset to default behaviour:\n\n```sqf\nsetCompassOscillation [-1, 0, 0];\n```","commands\\setConvoySeparation.md":"Sets the distance to keep to the vehicle which is `in front`.<br>\n*This command has to be applied to all vehicles in a convoy in order to have a separation of, for example, 50 m. \n*Vehicles in a convoy can also have different distances.\n*It's recommended that small values (<10m) should only be used for slowly moving convoys, otherwise AI driven vehicles will leave the road frequently to avoid collisions\n\n\n---\n*Syntaxes:*\n\nvehicle `setConvoySeparation` distance\n\n---\n*Example 1:*\n\n```sqf\nvehicle setConvoySeparation 20;\n```","commands\\setCruiseControl.md":"Limits or sets ``local` `player`-controlled` vehicle's speed through cruise control.\n\n\n---\n*Syntaxes:*\n\nvehicle `setCruiseControl` [speed, autoThrust]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setCruiseControl [50, true]; // sets cruise control to 50 km/h\n```\n\n*Example 2:*\n\n```sqf\nvehicle player setCruiseControl [5, false]; // limits player's vehicle speed to 5 km/h\n```","commands\\setCuratorCameraAreaCeiling.md":"Sets maximal (`ATL`) height to which curator camera can move.\n\n\n---\n*Syntaxes:*\n\ncuratorObj `setCuratorCameraAreaCeiling` height\n\n---\n*Example 1:*\n\n```sqf\nmyCurator setCuratorCameraAreaCeiling 50;\n```","commands\\setCuratorCoef.md":"Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).\n\n\n---\n*Syntaxes:*\n\ncuratorObj `setCuratorCoef` [action, coef]\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule setCuratorCoef [\"Place\", 1];\n```\n\n*Example 2:*\n\n```sqf\ncuratorModule setCuratorCoef [\"Delete\", -1e10];\n```","commands\\setCuratorEditingAreaType.md":"Set whether curator can edit in all editing areas (true) or outside of them (false).\n\n\n---\n*Syntaxes:*\n\ncuratorObj `setCuratorEditingAreaType` bool\n\n---\n*Example 1:*\n\n```sqf\ncuratorModule setCuratorEditingAreaType true;\n```","commands\\setCuratorWaypointCost.md":"Sets cost of waypoints (used for placing, editing and deleting).\n\n\n---\n*Syntaxes:*\n\ncuratorObj `setCuratorWaypointCost` cost\n\n---\n*Example 1:*\n\n```sqf\nmyCurator setCuratorWaypointCost 0.1;\n```","commands\\setCurrentChannel.md":"Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see `enableChannel`), this is why this command returns boolean, `true` on success or `false` on failure. \n \nFor Custom Radio (see `radioChannelCreate`)\n\n\n---\n*Syntaxes:*\n\n`setCurrentChannel` channelID\n\n---\n*Example 1:*\n\n```sqf\n_isDirectSelected = setCurrentChannel 5; // sets Direct channel as current active\n```","commands\\setCurrentTask.md":"Set the task as a current task of the person.\n\n\n---\n*Syntaxes:*\n\nobject `setCurrentTask` task\n\n---\n*Example 1:*\n\n```sqf\nplayer setCurrentTask tskKillSpongebob;\n```","commands\\setCurrentWaypoint.md":"Sets the currently active waypoint for a group.\n\n\n---\n*Syntaxes:*\n\ngroupName `setCurrentWaypoint` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_grp setCurrentWaypoint [_grp, 1];\n```","commands\\setCustomAimCoef.md":"Set custom aim precision coefficient for weapon sway\n\n\n---\n*Syntaxes:*\n\nunit `setCustomAimCoef` coef\n\n---\n*Example 1:*\n\n```sqf\nplayer setCustomAimCoef 3;\n```","commands\\setCustomMissionData.md":"Defines custom mission text that is sent to [[Arma 3 Analytics]].\n\n\n---\n*Syntaxes:*\n\n`setCustomMissionData` data\n\n---\n*Example 1:*\n\n```sqf\nsetCustomMissionData [\"someData\", \"someMoreData\"];\n```","commands\\setCustomSoundController.md":"Sets value of the specified custom sound controller to be used in `simple expression`s in config. Returns `true` if value was set to the controller, `false` if command fails, for example if vehicle is not a transport or controller name is not recognised.\n\n\n---\n*Syntaxes:*\n\n`setCustomSoundController` [vehicle, controller, value]\n\n---\n*Example 1:*\n\nChange value of CustomSoundController1 to 12\n\n```sqf\nsetCustomSoundController [vehicle player, \"CustomSoundController1\", 12];\n```","commands\\setCustomWeightRTD.md":"Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `setCustomWeightRTD` weight\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopterRTD setCustomWeightRTD 120;\n```","commands\\setDamage.md":"Sets the damage (or lack thereof) of an object/unit. The alternative syntax allows to skip destruction effects for vehicles and buildings.\n\n\n---\n*Syntaxes:*\n\nobject `setDamage` damage\n\nobject `setDamage` [damage, useEffects, killer, instigator]\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 setDamage 1;\n```\n\n*Example 2:*\n\n```sqf\n_house1 setDamage [1, false];\n```\n\n*Example 3:*\n\n```sqf\n// executed on a client\n_remoteVehicle setDamage [1, true, player];\t// killer is not considered if the command is not called on the server - the vehicle still gets destroyed\n_tree setDamage [1, true, player];\t\t\t// the tree is destroyed and falls away from the player\n```","commands\\setDammage.md":"Damages/hurts or repairs/heals object/unit. Damage 0 means fully functional, damage 1 means completely destroyed / dead.\n\n\n---\n*Syntaxes:*\n\nobject `setDammage` damage\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 setDammage 1;\n```","commands\\setDate.md":"Sets mission date and time. Players joining after mission start will get the current server `date` including the year.\n\n\n---\n*Syntaxes:*\n\n`setDate` date\n\n---\n*Example 1:*\n\n```sqf\nsetDate [1986, 2, 25, 16, 0]; // 4:00pm February 25, 1986\n```\n\n*Example 2:*\n\n```sqf\n// postInit = 1;\n// Set the real date (MP only):\nif (isServer) then\n{\n\twaitUntil { time > 0 };\n\t[missionStart select [0, 5]] remoteExec [\"setDate\"];\n};\n```","commands\\setDebriefingText.md":"Sets debriefing title, text, subtitle, picture and background for a mission ending. The end type could be the engine-defined (\"CONTINUE\", \"KILLED\", \"LOSER\", \"END1\", \"END2\", \"END3\", \"END4\", \"END5\", \"END6\"), config-defined (see `CfgDebriefing`) or, with an alternative syntax of this command, any `String`. Given texts will be used to replace the corresponding texts on the debriefing screen. \n\n\n[[Image:endMission.jpg|400px]] [[Image:failMission.jpg|400px]]\n\n\n---\n*Syntaxes:*\n\nendType `setDebriefingText` [title, description]\n\nendType `setDebriefingText` [title, description, subtitle, picture, background]\n\n---\n*Example 1:*\n\n```sqf\n_currentObjective = (taskDescription (currentTask player)) select 2;\n\"endDeath\" setDebriefingText [\"You Lose\",\"All of your men were killed while assaulting the \" + _currentObjective];\n```","commands\\setDefaultCamera.md":"Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)\n\n\n---\n*Syntaxes:*\n\n`setDefaultCamera` [position, direction]\n\n---\n*Example 1:*\n\n```sqf\nsetDefaultCamera [[5000, 5000, 200], [1, 1, -1]];\n```\n\n*Example 2:*\n\nLift camera 100m up above current player position and point downwards:\n\n```sqf\nsetDefaultCamera [ATLToASL (player modelToWorld [0, 0, 100]), [0, 0, -1]];\n```","commands\\setDestination.md":"Set the destination for path planning of the pilot.\n\nPossible values for planningMode are:\n\n* \"DoNotPlan\" - used when not moving\n* \"DoNotPlanFormation\" - used in formation when simple path testing is used\n* \"LEADER PLANNED\" - used for formation leader (full path finding used)\n* \"LEADER DIRECT\" - used for DirectGo (like getin, supply)\n* \"FORMATION PLANNED\" - used in formation when full path finding is used\n* \"VEHICLE PLANNED\" - used for vehicle driver\n\nWorks best when used on `agents`. Using \"LEADER PLANNED\" will trigger **\"PathCalculated\"** [[Arma_3:_Event_Handlers#PathCalculated | Event Handler]]\n\n\n---\n*Syntaxes:*\n\nobject `setDestination` [position, planningMode, forceReplan]\n\n---\n*Example 1:*\n\n```sqf\nbob setDestination [screenToWorld [0.5,0.5], \"LEADER PLANNED\", true];\n```","commands\\setDetailMapBlendPars.md":"Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance.\n* If `noDetail` > `fullDetail`, the texture detail will incur smooth transition in the area between the thresholds.\n* If `noDetail` <= `fullDetail`, there will be obvious visible edge between texture detail changes at `fullDetail` distance.\n\n\n---\n*Syntaxes:*\n\n`setDetailMapBlendPars` [fullDetail, noDetail]\n\n---\n*Example 1:*\n\n```sqf\nsetDetailMapBlendPars [20, 50];\n```\n\n*Example 2:*\n\n```sqf\nsetDetailMapBlendPars ([[20, 50], [300, 600]] select (currentWeapon player in [\"Binocular\", \"Rangefinder\", \"Laserdesignator\"]));\n```\n\n*Example 3:*\n\nReset to default:\n\n```sqf\nsetDetailMapBlendPars [-1, -1];\n```","commands\\setDiaryRecordText.md":"Set text of a log record.\n\n\n---\n*Syntaxes:*\n\nunit `setDiaryRecordText` `subject, diaryRecord], [title, text, icon`\n\n---\n*Example 1:*\n\n```sqf\nplayer setDiaryRecordText `\"diary\", _diaryRec], [\"Kill all enemies.\", \"The enemies are the bad guys. Kill them because you are the good guy.\"`;\n```","commands\\setDiarySubjectPicture.md":"Sets a picture to be displayed on the right of the `Diary` subject. The picture can also be set during custom `Diary` subject ` creation`, but this command also allows to change icon for the fixed subjects, like \"Tasks\", \"Diary\", \"Units\", \"Players\" and \"Statistics\".\n\n\n---\n*Syntaxes:*\n\nunit `setDiarySubjectPicture` [subject, picture]\n\n---\n*Example 1:*\n\n```sqf\nplayer setDiarySubjectPicture [\"Diary\", \"\\A3\\ui_f\\data\\map\\markers\\nato\\o_mech_inf.paa\"];\n```","commands\\setDir.md":"Sets object heading. Angles are measured in degrees clockwise from north; the regular range goes from 0 to 360 (0° = N, 90° = E, 180° = S, 270° = W). Negative angles represent counter-clockwise angles.\n\n\n---\n*Syntaxes:*\n\nobject `setDir` heading\n\n---\n*Example 1:*\n\n```sqf\nmyUnit setDir 45; // will set myUnit to face North-East\n```\n\n*Example 2:*\n\n```sqf\nmyUnit setDir -675; // will also set myUnit to face North-East (= 45-360-360)\n```\n\n*Example 3:*\n\n```sqf\nMyUnit setDir 30;\nMyUnit setFormDir 30; // needed for AI to keep the given direction\n```\n\n*Example 4:*\n\n```sqf\n// provided _myMine is local\n_myMine setDir 45;\n_myMine setPosWorld getPosWorld _myMine;\n\n// or\n[_myMine, 45] remoteExec [\"setDir\"];\n```","commands\\setDirection.md":"Sets the orientation of a location. The location's area and map icon (if its type uses an icon) will be rotated to this orientation.\n\n\n---\n*Syntaxes:*\n\nlocation `setDirection` direction\n\n---\n*Example 1:*\n\n```sqf\n_location = createLocation [\"VegetationPalm\", getPos player, 200, 200];\n_location setText \"Benargee's Palm Tree\";\n_location setDirection 45;\n```","commands\\setDrawIcon.md":"Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.\n\n\n---\n*Syntaxes:*\n\nmap `setDrawIcon` [object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]\n\n---\n*Example 1:*\n\n-","commands\\setDriveOnPath.md":"Sets the path to follow for AI driver. Note that `unitReady` will return `true` even if AI is still driving through the points.<br>\nUsing any other `move` command (e.g <sqf inline>_vehicle move getPosATL _vehicle\n```) or `doStop` will stop the effect of this command.\n\n\n---\n*Syntaxes:*\n\nvehicleName `setDriveOnPath` points\n\n---\n*Example 1:*\n\n```sqf\nmyVehicle setDriveOnPath [getMarkerPos \"wp1\", getMarkerPos \"wp2\"];\n```\n\n*Example 2:*\n\n```sqf\nprivate _points = allMapMarkers apply { getMarkerPos _x; }; // getting all marker positions\n{ _x pushBack 15; } forEach _points; // setting speed\nmyVehicle setDriveOnPath _points;\n```","commands\\setDropInterval.md":"Set interval of emitting particles from particle source. In Arma 3 hardcoded limit of how many particles can exist at the same time is {{ExternalLink\n\n\n---\n*Syntaxes:*\n\nparticleSource `setDropInterval` interval\n\n---\n*Example 1:*\n\n```sqf\n_source setDropInterval 0.05;\n```","commands\\setDynamicSimulationDistance.md":"Sets activation distance of [[Arma 3: Dynamic Simulation]] for given category.\n\n\n---\n*Syntaxes:*\n\ncategory `setDynamicSimulationDistance` distance\n\n---\n*Example 1:*\n\n```sqf\n\"Group\" setDynamicSimulationDistance 1000;\n```","commands\\setDynamicSimulationDistanceCoef.md":"Sets activation distance multiplier of [[Arma 3: Dynamic Simulation]] for the given class\n\n\n---\n*Syntaxes:*\n\nclass `setDynamicSimulationDistanceCoef` multiplier\n\n---\n*Example 1:*\n\n```sqf\n\"IsMoving\" setDynamicSimulationDistanceCoef 3;\n```","commands\\setEditorMode.md":"Sets map mode to MAP,3D or PREVIEW.\n\n\n---\n*Syntaxes:*\n\nmap `setEditorMode` mode\n\n---\n*Example 1:*\n\n-","commands\\setEditorObjectScope.md":"This command defines the level of access a user has to editor objects.\n\n\"objects\" is an array of either `Editor Objects` (eg [\"_unit_0\"]) or actual `Game Objects` (eg [player]). If the array is empty then the command will automatically parse all editor objects.\n\n\"editorType\" is the editor type to effect (eg \"unit\", \"vehicle\", \"center\") or \"\" for all types.\n\n\"condition\" is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. \"_x\" can be used in the string as reference to the ingame representation of the currently processed array member.\n\n\"scope\" is one of \"HIDE\", \"VIEW\", \"SELECT\", \"LINKTO\", \"LINKFROM\", \"ALLNODRAG\", \"ALLNOTREE\", \"ALLNOCOPY\", \"ALLNOSELECT\" or \"ALL\".\n\n\"subordinatesAlso\" is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent.\n\n\n---\n*Syntaxes:*\n\nmap `setEditorObjectScope` [objects, editorType, condition, scope, subordinatesAlso]\n\n---\n*Example 1:*\n\n```sqf\n_map setEditorObjectScope [ [],\"vehicle\", \"side effectiveCommander _x != side player\", \"HIDE\", false];\n```\n\n*Example 2:*\n\n```sqf\n((findDisplay 128) displayCtrl 51) setEditorObjectScope [ [\"_unit_0\"], \"\", \"true\", \"ALLNODRAG\", false];\n```","commands\\setEffectCondition.md":"The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.\n\n*If the result is a `boolean` and `true`, the effect is launched.\n*If the result is an `object`, the effect is launched if the result is the player or the player vehicle.\n*If the result is an `array`, the effect is launched if the result contains the player or the player vehicle.\n\n\n---\n*Syntaxes:*\n\ntrigger `setEffectCondition` statement\n\nwaypoint `setEffectCondition` statement\n\n---\n*Example 1:*\n\n```sqf\n_triggerObj setEffectCondition \"thisList\";\n```","commands\\setEffectiveCommander.md":"Sets `effectiveCommander` of the given vehicle. Effective commander is the person who commands the vehicle, i.e. gives commands to the driver.\nEvery time a person gets in or out of a vehicle, effective commander eligibility is recalculated by the engine based on the current `crew`.\nUse this command to force desired effective commander.\n\n\n---\n*Syntaxes:*\n\nvehicle `setEffectiveCommander` person\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setEffectiveCommander player;\n```","commands\\setEngineRpmRTD.md":"Sets the RPM of given engines.\n\n\n---\n*Syntaxes:*\n\nhelicopter `setEngineRpmRTD` [rpm, engineIndex]\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopter setEngineRpmRTD [1337, -1];\n```","commands\\setFace.md":"Set person's face. For a list of available faces, check `:Category:CfgIdentities`.\n\n\n---\n*Syntaxes:*\n\nperson `setFace` face\n\n---\n*Example 1:*\n\n```sqf\nsoldier1 setFace \"WhiteHead_02\";\n```\n\n*Example 2:*\n\nSet persistent face for a unit in MP\n```sqf\nif (isServer) then {[_unit, \"AsianHead_A3_02\"] remoteExec [\"setFace\", 0, _unit]};\n```","commands\\setFaceAnimation.md":"Sets facial animation phase (eye blinking), blink is in the range from **0}} to {{hl|1**.\n\n\n---\n*Syntaxes:*\n\nunit `setFaceAnimation` blink\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 setFaceAnimation 0.5;\n```","commands\\setFatigue.md":"Sets the person's fatigue, from 0 to 1.\n\n\n---\n*Syntaxes:*\n\nunit `setFatigue` value\n\n---\n*Example 1:*\n\n```sqf\nplayer setFatigue 1;\n```","commands\\setFeatureType.md":"Enable/disable object as a feature/landmark. Possible feature types:\n* 0 - Feature disabled\n* 1 - Object is always visible within object view distance\n* 2 - Object is always visible within terrain view distance\nThe limit is 500 map/static objects and 200 dynamic objects including config features and auto features (flying helicopters, airplanes). When limit is reached, function returns false.\n\n\n---\n*Syntaxes:*\n\nobject `setFeatureType` type\n\n---\n*Example 1:*\n\nSet a building to be always rendered:\n\n```sqf\nbuilding setFeatureType 2;\n```","commands\\setFlagAnimationPhase.md":"Sets flag position on the flag pole. To animate flag use `BIS_fnc_animateFlag`.\n\n\n---\n*Syntaxes:*\n\nflag `setFlagAnimationPhase` phase\n\n---\n*Example 1:*\n\n```sqf\n_flag1 setFlagAnimationPhase 0.5;\n```","commands\\setFlagOwner.md":"Sets flag owner. When owner is set to `objNull` or any object other than a unit of class [[Models_%26_Classnames:_CfgVehicles_-_Class_Man|man]] or `logic`, flag is returned to the flagpole. A flag owned by a logic has no visual representation.\n\n\n---\n*Syntaxes:*\n\nflag `setFlagOwner` owner\n\n---\n*Example 1:*\n\n```sqf\n_flag1 setFlagOwner _soldier1;\n```\n\n*Example 2:*\n\nTo return the flag back to the flag pole:\n\n```sqf\n//Method 1: (set owner null)\nflag _flagCarrier setFlagOwner objNull;\n//Method 2: (set the flag mast as the owner)\nflag _flagCarrier setFlagOwner flag _flagCarrier;\n```","commands\\setFlagSide.md":"Sets flag `Side`. A flag may be taken by any unit that is enemy to the side that owns the flag. Just like with `setFlagTexture`, if the command executed where unit is `local` effect of the command will be global and `JIP` compatible.\n\n\n---\n*Syntaxes:*\n\nflag `setFlagSide` side\n\n---\n*Example 1:*\n\n```sqf\n_flag1 setFlagSide east;\n```\n\n*Example 2:*\n\nCapturable OPFOR flag:\n\n```sqf\nprivate _flag = \"FlagPole_F\" createVehicle position player;\n_flag setFlagTexture \"\\A3\\Data_F\\Flags\\Flag_CSAT_CO.paa\";\n_flag setFlagSide east;\n```","commands\\setFlagTexture.md":"Sets flag texture.\n\n\n---\n*Syntaxes:*\n\nflag `setFlagTexture` texture\n\n---\n*Example 1:*\n\n```sqf\n_flagE setFlagTexture \"\\ca\\misc\\data\\sever_vlajka.paa\";\n```\n\n*Example 2:*\n\n```sqf\n_flagW setFlagTexture \"\\ca\\misc\\data\\usa_vlajka.paa\";\n```\n\n*Example 3:*\n\n```sqf\nflag1 setFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";\n```\n\n*Example 4:*\n\n```sqf\n_customFlag setFlagTexture \"myMissionFlag.paa\";\n```\n\n*Example 5:*\n\n```sqf\n_flag_Arma_3 setFlagTexture \"\\a3\\ui_f\\data\\Logos\\arma3_expansion_ca.paa\";\n```\n\n*Example 6:*\n\nCapturable OPFOR flag:\n\n```sqf\nprivate _flag = \"FlagPole_F\" createVehicle position player;\n_flag setFlagTexture \"\\A3\\Data_F\\Flags\\Flag_CSAT_CO.paa\";\n_flag setFlagSide east;\n```","commands\\setFog.md":"Smoothly change the fog over given time (in seconds). See also `fogParams`.\n\n\n---\n*Syntaxes:*\n\ntime `setFog` fog\n\ntime `setFog` [fogValue, fogDecay, fogBase]\n\n---\n*Example 1:*\n\n```sqf\n15 setFog 0.5;\n```\n\n*Example 2:*\n\nForce no fog:\n\n```sqf\n0 setFog 0;\n// forceWeatherChange; // change is immediate\n999999 setFog 0;\n```\n\n*Example 3:*\n\n```sqf\n0 setFog [1, 0.01, 0];\n```\n\n*Example 4:*\n\nMountain fog, starts from 70m ASL and thickens more the higher you climb:\n\n```sqf\n0 setFog [1, -1, 70];\n```\n\n*Example 5:*\n\nValley fog, starts from 60m ASL and thickens more the lower you descend: \n```sqf\n0 setFog [1, 1, 60];\n```\n\n*Example 6:*\n\nFooooog on the waaaater: \n```sqf\n0 setFog [1, 1, 0];\n```","commands\\setForceGeneratorRTD.md":"*(Reference Wiki \"stub\")*\n\n\n---\n*Syntaxes:*\n\nhelicopter `setForceGeneratorRTD` ????\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopter setForceGeneratorRTD ????;\n```","commands\\setFormation.md":"Set group formation.\n\n\n---\n*Syntaxes:*\n\ngroup `setFormation` formation\n\n---\n*Example 1:*\n\n```sqf\n_groupOne setFormation \"LINE\";\n```","commands\\setFormationTask.md":"Set the current task of the formation member.\n\n\n---\n*Syntaxes:*\n\nunit `setFormationTask` task\n\n---\n*Example 1:*\n\n```sqf\n_unit setFormationTask \"MOVE\";\n```","commands\\setFormDir.md":"Sets group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overridden by movement direction. If the new direction is noticeably different from the old direction (approx +/- 15 degrees), units will change positions changing `formationDirection`.\n\n\n---\n*Syntaxes:*\n\ngroup `setFormDir` heading\n\n---\n*Example 1:*\n\n```sqf\n_group1 setFormDir 180;\n```\n\n*Example 2:*\n\n```sqf\n_unit1 setFormDir random 360;\n```\n\n*Example 3:*\n\n```sqf\n//center the main turret\n(group BIS_Crew1) setFormDir (getDir BIS_Armor);\n```","commands\\setFriend.md":"Sets how friendly a side is with another. The friendliness is set for one side, not for the other.  See also `Side relations`.\n\n\n---\n*Syntaxes:*\n\nside1 `setFriend` [side2, value]\n\n---\n*Example 1:*\n\n```sqf\nwest setFriend [resistance, 0]; // west will not like resistance from now on\n```\n\n*Example 2:*\n\n```sqf\nresistance setFriend [east, 0];\neast setFriend [resistance, 0]; // both are enemies\n\nresistance setFriend [east, 1];\neast setFriend [resistance, 0]; // resistance likes east, but east does not like resistance\n```\n\n*Example 3:*\n\n```sqf\nwest setFriend [west, 0]; // free for all deathmatch! works with west/blufor, east/opfor, independent/resistance and civilian\n```","commands\\setFromEditor.md":"Set if given team member was inserted directly from editor.\n\n\n---\n*Syntaxes:*\n\nteamMember `setFromEditor` fromEditor\n\n---\n*Example 1:*\n\n```sqf\n_teamMember setFromEditor true;\n```","commands\\setFSMVariable.md":"Set variable to given value in the variable space of given FSM.<br>\nThe FSM handle is the number returned by the `execFSM` command.\n\n\n---\n*Syntaxes:*\n\nhandle `setFSMVariable` [name, value]\n\n---\n*Example 1:*\n\n```sqf\n_handle = execFSM \"test.fsm\";\n_handle setFSMVariable [\"_foo\", 23]; // sets variable _foo in the FSM to 23\n```","commands\\setFuel.md":"Sets fuel level.\n\n\n---\n*Syntaxes:*\n\nvehicle `setFuel` amount\n\n---\n*Example 1:*\n\n```sqf\n_jeepOne setFuel 0.5;\n```","commands\\setFuelCargo.md":"Sets fuel amount in cargo space of refuel vehicles. Note that the carrying capacity of each side's refuel trucks differ.\n\n\n---\n*Syntaxes:*\n\nvehicle `setFuelCargo` amount\n\n---\n*Example 1:*\n\n```sqf\n_refuelTruck setFuelCargo 0;\n```","commands\\setGroupIcon.md":"Sets group icon properties.\n\n\n---\n*Syntaxes:*\n\ngroup `setGroupIcon` [id, icon, offset]\n\n---\n*Example 1:*\n\n```sqf\n_target setGroupIcon [_icon, \"hc_selectedEnemy\"];\n_target setGroupIcon [_icon, \"flag\"];\n_grp setGroupIcon [_iconsize, _iconsizeclass, _offset];\n_grp setGroupIcon [_newid, _icon, _offset];\n_grp setGroupIcon [_icon, _iconclass];\n```","commands\\setGroupIconParams.md":"Set group icons parameters.\n\n\n---\n*Syntaxes:*\n\ngroup `setGroupIconParams` properties\n\n---\n*Example 1:*\n\n```sqf\n_grp setGroupIconParams [[0.9,0,0, 1], \"The Group\", 1.25, false];\n```","commands\\setGroupIconsSelectable.md":"Sets if group icons raise `onGroupIconClick`, `onGroupIconOverEnter` and `onGroupIconOverLeave` events.\n\n\n---\n*Syntaxes:*\n\n`setGroupIconsSelectable` selectable\n\n---\n*Example 1:*\n\n```sqf\nsetGroupIconsSelectable true;\n```","commands\\setGroupIconsVisible.md":"Sets if group icons added with `addGroupIcon` are visible on map and in the HUD.\n\n\n---\n*Syntaxes:*\n\n`setGroupIconsVisible` [showOnMap, showOnHUD]\n\n---\n*Example 1:*\n\n```sqf\nsetGroupIconsVisible [true, true];\n(group player) addGroupIcon [\"b_inf\", [0, 0]];\n```","commands\\setGroupId.md":"Sets the group radio callsign, how it will be displayed in radio chat. Two groups on the same side `cannot` have the same callsign (possible on different sides) - see *(Reference HashLink \"#Example 4\")*.<br>\nThe identity setup can consist of format keywords (marked with `%`) and param keywords taken from `CfgWorlds` config.\nFormatting is almost like using the `format` command but with some special group keywords (see *(Reference HashLink \"#Example 2\")*).\n<br>\n<spoiler text=\"Show Arma 3 values table\">\n\n</spoiler>\n<spoiler text=\"Show OFP values table\">\n\n</spoiler>\n\n\n---\n*Syntaxes:*\n\ngroup `setGroupId` [nameFormat, nameParam1, ..., nameParamN]\n\n---\n*Example 1:*\n\n`{{arma3}}`:\n\n```sqf\ngroup player setGroupId [\"Some name for the group\"];\nhint groupId group player;\t// \"Some name for the group\"\nplayer sideChat \"lalala\";\t// Some name for the group (KK): \"lalala\"\n```\n\n*Example 2:*\n\n`{{arma3}}`:\n\n```sqf\ngroup player setGroupId [\"%GroupNames :=: %GroupColors\", \"Alpha\", \"GroupColor2\"];\nhint groupId group player;\t// \"Alpha :=: Red\"\nplayer sideChat \"lalala\";\t// Alpha :=: Red (KK): \"lalala\"\n```\n\n*Example 3:*\n\n`{{arma1}} / {{arma2}} / {{arma3}}`:\n\n```sqf\ngroup player setGroupId [\"First Assault Recon Team\"];\n```\n`{{ofp}}`:\n\n```sqf\n_group1 setGroupId [\"Delta\", \"GroupColor4\"]\n```\n\n*Example 4:*\n\nWhen trying to apply the same callsign to two groups of the same side, the callsigns will simply be swapped, e.g:\n\n```sqf\ngroup1 setGroupId [\"Active Group\"];\ngroup2 setGroupId [\"Inactive Group\"];\ngroup2 setGroupId [\"Active Group\"]; // group1 is \"Inactive Group\" now\n```","commands\\setGroupIdGlobal.md":"A `global` equivalent of  `setGroupId`.\n\n\n---\n*Syntaxes:*\n\ngroup `setGroupIdGlobal` [format, keyword1, ..., keywordN]\n\n---\n*Example 1:*\n\n```sqf\ngroup player setGroupIdGlobal [\"PAPA BEAR\"];\nhint groupId group player; // \"PAPA BEAR\"\n```","commands\\setGroupOwner.md":"Changes the ownership of a group (and all its units) to a given client. The group leader must not be a player. This command only works when called from the server. Returns true if locality was changed. For `agents` use `setOwner` command.\n\n\n---\n*Syntaxes:*\n\ngroup `setGroupOwner` clientID\n\n---\n*Example 1:*\n\n```sqf\n_localityChanged = _someGroup setGroupOwner (owner _playerObject);\n```","commands\\setGusts.md":"Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.\n\n\n---\n*Syntaxes:*\n\ntime `setGusts` value\n\n---\n*Example 1:*\n\n```sqf\n60 setGusts 0.75;\n```","commands\\setHideBehind.md":"Sets the data for hiding. objectWhereHide can be taken using `findCover`. hidePosition can be taken using `getHideFrom`. Command is not functional in Arma 2.\n\n\n---\n*Syntaxes:*\n\nobject `setHideBehind` [objectWhereHide, hidePosition]\n\n---\n*Example 1:*\n\n-","commands\\setHit.md":"Set damage on a part of an object.\n\n\n---\n*Syntaxes:*\n\nobject `setHit` [part, damage, useEffects, killer, instigator]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setHit [\"motor\", 1];\n```\n\n*Example 2:*\n\n```sqf\nvehicle player setHit [\"mala vrtule\", 0.95];\n```\n\n*Example 3:*\n\n```sqf\nif (local _heli) then\n{\n\t_heli setHit [\"velka vrtule\", 0];\n}\nelse\n{\n\thint (\"Vehicle \" + str _heli + \" must be local to this machine to do that!\");\n};\n```","commands\\setHitIndex.md":"Sets the current level of damage for a specific Hit Point. All hit points can be obtained with `getAllHitPointsDamage` command.\n\n\n---\n*Syntaxes:*\n\nvehicle `setHitIndex` [hitPartIndex, damage, useEffects, killer, instigator]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setHitIndex [1, 1];\n```\n\n*Example 2:*\n\n```sqf\nplayer setHitIndex [7, 0.5];\n```","commands\\setHitPointDamage.md":"Set the current level of damage for a specific Hit Point (specified by its config class). This command has no effect when `allowDamage` is set to `false`.\n\n\n---\n*Syntaxes:*\n\nvehicle `setHitPointDamage` [hitPointName, damage, useEffects, killer, instigator]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setHitPointDamage [\"hitEngine2\", 1.0];\n```\n\n*Example 2:*\n\n```sqf\nplayer setHitPointDamage [\"hitHead\", 0.5];\nplayer setHitPointDamage [\"hitBody\", 0.5];\nplayer setHitPointDamage [\"hitHands\", 0.5];\nplayer setHitPointDamage [\"hitLegs\", 0.5];\n```","commands\\setHorizonParallaxCoef.md":"Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).\n\n\n---\n*Syntaxes:*\n\n`setHorizonParallaxCoef` coef\n\n---\n*Example 1:*\n\n```sqf\nsetHorizonParallaxCoef 1;\n```","commands\\setHUDMovementLevels.md":"Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.\n\n\n---\n*Syntaxes:*\n\n`setHUDMovementLevels` [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]\n\n---\n*Example 1:*\n\n```sqf\nsetHUDMovementLevels [20, 30, -1, -1, 0.23, 2.1, [0,0,0]];\n```\n\n*Example 2:*\n\n```sqf\nsetHUDMovementLevels [20, 30, -1, -1, 0.23, 2.1, player];\n```","commands\\setHumidity.md":"Sets surface humidity. Affects how footsteps sound (dry / wet). `humidity` is increasing when raining and decreasing when not raining. Exception is if the rain is set with 'snow' flag, then `humidity` is not updated.\n\n\n---\n*Syntaxes:*\n\n`setHumidity` humidity\n\n---\n*Example 1:*\n\n```sqf\nsetHumidity 1;\n```","commands\\setIdentity.md":"Sets identity of a person. The identities could be defined in a custom config in `Description.ext` or in the main config. For a list of available main config values see `CfgIdentities`.\n<br><br> \nThis command is an aggregate of the following commands: `setName`, `setFace`, `setSpeaker`, `setNameSound`, `setPitch`, only the values are loaded from the given config. It also includes value for glasses for which currently there is no direct command, instead there is an inventory command `addGoggles`.\n\n\n---\n*Syntaxes:*\n\nperson `setIdentity` identity\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 setIdentity \"MyLittleSoldier\";\n```\n\n*Example 2:*\n\nClone factory in MP:\n\n```sqf\nfor \"_i\" from 1 to 10 do\n{\n\t_bob = group player createUnit [typeOf player, position player, [], 0, \"none\"];\n\t[_bob, \"MyLittleSoldier\"] remoteExec [\"setIdentity\", 0, _bob];\n};\n```","commands\\setImportance.md":"Sets the importance value of location.\n\n\n---\n*Syntaxes:*\n\nlocation `setImportance` value\n\n---\n*Example 1:*\n\n```sqf\nmyLocation setImportance 2;\n```","commands\\setInfoPanel.md":"Opens given component or first component of given component type on specified info panel.\n\n\n---\n*Syntaxes:*\n\n`setInfoPanel` [infopanelId, componentClassOrType]\n\n---\n*Example 1:*\n\n```sqf\n// opens slingload assistant on right panel\nprivate _result = setInfoPanel [\"VehicleSystemsDisplayManagerComponentRight\", \"SlingLoadDisplayComponent\"];\nif (!_result) then { hint \"could not open the slingload assistant, sorry\" };\n```","commands\\setLeader.md":"Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global.\n\n\n---\n*Syntaxes:*\n\nteam `setLeader` leader\n\n---\n*Example 1:*\n\n```sqf\n(example);\n```","commands\\setLightAmbient.md":"Set ambient color of light. This includes surfaces that `face away` from the light, unlike `setLightColor`.\n\n\n---\n*Syntaxes:*\n\nlight `setLightAmbient` color\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightAmbient [0.5,0,0]; // produces red light around the origin source\n```","commands\\setLightAttenuation.md":"Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)).\n`start` param represents distance where the attenuation starts to take effects (dist = distance - start).\n\n\n---\n*Syntaxes:*\n\nlight `setLightAttenuation` [start, constant, linear, quadratic, hardlimitstart, hardlimitend]\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightAttenuation [2, 4, 4, 0, 9, 10];\n```","commands\\setLightBrightness.md":"Set brightness of light.\n\n\n---\n*Syntaxes:*\n\nlight `setLightBrightness` brightness\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightBrightness 2;\n```","commands\\setLightColor.md":"Set diffuse color of light. Illuminates surfaces that are facing the light.\n\n\n---\n*Syntaxes:*\n\nlight `setLightColor` [r, g, b]\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightColor [0.5,0,0]; // produces red\n```","commands\\setLightConePars.md":"Sets the lightpoint (directional light **#lightreflector**)'s cone params.\n\n\n---\n*Syntaxes:*\n\nlightReflector `setLightConePars` [outerAngle, innerAngle, fadeCoef]\n\n---\n*Example 1:*\n\n```sqf\n_light setLightConePars [90, 45, 1];\n```","commands\\setLightDayLight.md":"Sets if light can be used during the day.\n\n\n---\n*Syntaxes:*\n\nlight `setLightDayLight` bool\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightDayLight true;\n```","commands\\setLightFlareMaxDistance.md":"Sets max distance where the flare is visible.\n\n\n---\n*Syntaxes:*\n\nlight `setLightFlareMaxDistance` distance\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightFlareMaxDistance 500;\n```","commands\\setLightFlareSize.md":"Sets relative size of the flare for the light.\n\n\n---\n*Syntaxes:*\n\nlight `setLightFlareSize` size\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightFlareSize 5;\n```","commands\\setLightIntensity.md":"Sets intensity of light.\n\n\n---\n*Syntaxes:*\n\nlight `setLightIntensity` value\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightIntensity 4;\n```","commands\\setLightIR.md":"Sets lightpoint in infrared range.\n\n\n---\n*Syntaxes:*\n\nlight `setLightIR` value\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightIR true; // visible with NVG only!\n```","commands\\setLightnings.md":"Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.<br><br>\n`NOTE`: This command will have no effect (even though the value of `lightnings` changes) unless **Manual Override** option is selected in the editor in the Intel, which is normally off.<br><br>\n[[Image:setLightnings.jpg|left|600px]]\n\n\n---\n*Syntaxes:*\n\ntime `setLightnings` value\n\n---\n*Example 1:*\n\n```sqf\n1800 setLightnings 0.7;\n```","commands\\setLightUseFlare.md":"Sets if light has flare.\n\n\n---\n*Syntaxes:*\n\nlight `setLightUseFlare` bool\n\n---\n*Example 1:*\n\n```sqf\nmyLight setLightUseFlare true;\n```","commands\\setLightVolumeShape.md":"Sets the lightpoint (directional light **#lightreflector**)'s volume shape.\n\n\n---\n*Syntaxes:*\n\nlightReflector `setLightVolumeShape` [shapePath, scale]\n\n---\n*Example 1:*\n\n```sqf\n_light setLightVolumeShape [\"a3\\data_f\\VolumeLightFlashlight.p3d\", [1, 1, 1]];\n```","commands\\setLocalWindParams.md":"Sets parameters for helicopter rotor wash.\nIt affects the visual effect of a rotor's downwash, such as blown particles, vegetation wind effect and area size.\n\n\n---\n*Syntaxes:*\n\n`setLocalWindParams` [strength, diameter]\n\n---\n*Example 1:*\n\n```sqf\nsetLocalWindParams [10, 5];\n```\n\n*Example 2:*\n\n\"Disables\" the effects:\n\n```sqf\nsetLocalWindParams [0.0001, 0.0001]; // 0 values are ignored by the command\n```\n\n*Example 3:*\n\nReset to default:\n```sqf\nsetLocalWindParams [1, 1];\n```","commands\\setMagazineTurretAmmo.md":"Sets ammo count to given amount for given turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `setMagazineTurretAmmo` [magazineClass, ammoCount, turretPath]\n\n---\n*Example 1:*\n\n```sqf\nmyMRAP setMagazineTurretAmmo [\"200Rnd_127x99_mag_Tracer_Red\", 30, [0]]];\n```","commands\\setMarkerAlpha.md":"Sets the marker alpha. The marker is modified on all computers in a network session.\n<br>\nWhen alpha equals **1}}, the marker is visible, but if alpha equals {{hl|0**, then the marker is invisible.\n<br>\nAlpha can be numbers and fractions.\n\n\n---\n*Syntaxes:*\n\nmarker `setMarkerAlpha` alpha\n\n---\n*Example 1:*\n\n```sqf\n\"my_marker\" setMarkerAlpha 0.5;\n```\n\n*Example 2:*\n\n```sqf\n\"enemy_convoy_marker\" setMarkerAlpha 0;\n```","commands\\setMarkerAlphaLocal.md":"Sets the marker alpha.\n\n\n---\n*Syntaxes:*\n\nmarker `setMarkerAlphaLocal` alpha\n\n---\n*Example 1:*\n\n```sqf\n\"my_marker\" setMarkerAlphaLocal 0.5;\n```\n\n*Example 2:*\n\n```sqf\n\"enemy_convoy_marker\" setMarkerAlphaLocal 0;\n```","commands\\setMarkerBrush.md":"Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n<br>\n<br>\n`brush` can be:\n* \"Solid\"\n* \"SolidFull\" (A3 only)\n* \"Horizontal\"\n* \"Vertical\"\n* \"Grid\"\n* \"FDiagonal\"\n* \"BDiagonal\"\n* \"DiagGrid\"\n* \"Cross\"\n* \"Border\"  (Not present in A1)\n* \"SolidBorder\"  (Not present in A1)\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerBrush` brush\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerBrush \"DIAGGRID\";\n```","commands\\setMarkerBrushLocal.md":"Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n<br>\n<br>\n`brush` can be:\n* \"Solid\"\n* \"SolidFull\" (A3 only)\n* \"Horizontal\"\n* \"Vertical\"\n* \"Grid\"\n* \"FDiagonal\"\n* \"BDiagonal\"\n* \"DiagGrid\"\n* \"Cross\"\n* \"Border\" (A2/A3 only)\n* \"SolidBorder\" (OA/A3 only)\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerBrushLocal` brush\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerBrushLocal \"DiagGrid\";\n```","commands\\setMarkerColor.md":"Sets marker color. Marker color names and their corresponding RGBA values for Arma 3 could be found here: [[Arma 3: CfgMarkerColors]]\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerColor` color\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerColor \"ColorBlack\";\n```","commands\\setMarkerColorLocal.md":"Sets marker color for the given marker locally. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: [[Arma 3: CfgMarkerColors]]\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerColorLocal` color\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerColorLocal \"ColorBlack\";\n```","commands\\setMarkerDir.md":"Sets the orientation of the marker. Angle is in degrees.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerDir` angle\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerDir 90;\n```","commands\\setMarkerDirLocal.md":"Sets the orientation of the marker.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerDirLocal` angle\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerDirLocal 90;\n```","commands\\setMarkerPolyline.md":"Sets a polyline marker's path.\n\n\n---\n*Syntaxes:*\n\nmarker `setMarkerPolyline` path\n\n---\n*Example 1:*\n\nChanges **\"marker_1\"** into a polyline and draws a sine curve on `player`'s position:\n\n```sqf\n// createMarker [\"marker_1\", [0,0,0]];\n\"marker_1\" setMarkerShape \"polyline\";\nprivate _return = [] ;\n\nfor \"_i\" from 0 to 100 step 0.1 do\n{\n\t_return pushBack (_i + getPosASL player # 0);\n\t_return pushBack ((sin (_i * 10)) * 10 + getPosASL player # 1);\n} ;\n\n\"marker_1\" setMarkerPolyline _return;\n```","commands\\setMarkerPolylineLocal.md":"Sets a polyline marker's path. Works only on the computer that executes this command.\n\n\n---\n*Syntaxes:*\n\nmarker `setMarkerPolylineLocal` path\n\n---\n*Example 1:*\n\nChanges **\"marker_1\"** into a polyline and draws a sine curve on your position:\n\n```sqf\n\"marker_1\" setMarkerShape \"polyline\";\nprivate _return = [] ;\n\nfor \"_i\" from 0 to 100 step 0.1 do\n{\n\t_return pushBack (_i + getPos player#0);\n\t_return pushBack ((sin (_i*10))*10 + getPos player#1);\n} ;\n\n\"marker_1\" setMarkerPolylineLocal _return;\n```","commands\\setMarkerPos.md":"Moves the marker. If position is given in 3D format, **z** coordinate is stored with the marker and will be used when marker is passed to commands like `createVehicle`, `createUnit`, `createAgent`, `createMine`, `setVehiclePosition` for example. When `Object` is used for position, its `getPosWorld` is used.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerPos` pos\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerPos getMarkerPos \"MarkerTwo\";\n```","commands\\setMarkerPosLocal.md":"Moves the marker. If position is given in 3D format, **z** coordinate is stored with the marker and will be used when marker is passed to commands like `createVehicle`, `createUnit`, `createAgent`, `createMine`, `setVehiclePosition` for example. When `Object` is used for position, its `getPosWorld` is used.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerPosLocal` pos\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerPosLocal getMarkerPos \"MarkerTwo\";\n```","commands\\setMarkerShadow.md":"Sets the shadow property of given marker.\n\n\n---\n*Syntaxes:*\n\nmarker `setMarkerShadow` shadowState\n\n---\n*Example 1:*\n\n```sqf\n_myMarker setMarkerShadow true; // enable shadow\n```","commands\\setMarkerShadowLocal.md":"Sets the shadow property of given marker.\n\n\n---\n*Syntaxes:*\n\nmarker `setMarkerShadowLocal` shadowState\n\n---\n*Example 1:*\n\n```sqf\n_myMarker setMarkerShadowLocal true; // enable shadow\n```","commands\\setMarkerShape.md":"Selects shape (actual type) of the marker.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerShape` shape\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerShape \"RECTANGLE\";\n```","commands\\setMarkerShapeLocal.md":"Selects shape (actual type) of the local marker.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerShapeLocal` shape\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerShapeLocal \"RECTANGLE\";\n```","commands\\setMarkerSize.md":"Sets the marker's size.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerSize` [a-axis, b-axis]\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerSize [100, 200];\n```","commands\\setMarkerSizeLocal.md":"Set marker size.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerSizeLocal` [axisA, axisB]\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerSizeLocal [100, 200];\n```","commands\\setMarkerText.md":"Sets the text label of an existing marker.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerText` text\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerText \"You are here.\";\n```","commands\\setMarkerTextLocal.md":"Sets the text label of an existing marker.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerTextLocal` text\n\n---\n*Example 1:*\n\n```sqf\n\"Marker1\" setMarkerTextLocal \"You are here.\";\n```","commands\\setMarkerType.md":"Sets marker type. Marker type is a class name from `CfgMarkers`.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerType` type\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerType \"Warning\";\n```","commands\\setMarkerTypeLocal.md":"Sets marker type locally. Marker type is a class name in `CfgMarkers`.\n\n\n---\n*Syntaxes:*\n\nmarkerName `setMarkerTypeLocal` type\n\n---\n*Example 1:*\n\n```sqf\n\"MarkerOne\" setMarkerTypeLocal \"Warning\";\n```","commands\\setMass.md":"Changes the mass of a PhysX object. When using the alternative syntax the mass change is gradual during the given time. A time of zero means immediate change.\n\n\n---\n*Syntaxes:*\n\nmyObject `setMass` mass\n\nmyObject `setMass` [mass, time]\n\n---\n*Example 1:*\n\n```sqf\nmyObject setMass [10, 0.5];\n```\n\n*Example 2:*\n\n```sqf\nmyObject setMass 10;\n```","commands\\setMaxLoad.md":"Sets maximum load limit for a uniform/vest/backpack containers, vehicle cargo, supply boxes and weapon holders. In MP this command should be executed on the server and will persist on given container for JIP.\n\n\n---\n*Syntaxes:*\n\ncontainer `setMaxLoad` maxLoadValue\n\n---\n*Example 1:*\n\n```sqf\n_yaMum setMaxLoad _maxLoad;\n```","commands\\setMimic.md":"Sets person's facial expression. To set it back to default, use \"\".\n\n\n---\n*Syntaxes:*\n\nperson `setMimic` mimic\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 setMimic \"hurt\";\n```","commands\\setMissileTarget.md":"Sets a guided missile target. Does not work for all types of missiles. If the target is dead, it is ignored. The target has to be inside the missile's configured targeting cone for the command to work.\n\n\n---\n*Syntaxes:*\n\nmunition `setMissileTarget` target\n\n---\n*Example 1:*\n\n```sqf\nmissile1 setMissileTarget tank1;\n```\n\n*Example 2:*\n\n```sqf\n_missile = createVehicle [\"Missile_AGM_01_F\",player modelToWorld [0,0,50],[],0,\"CAN_COLLIDE\"];\n_missile setDir getDir player;\n_tgt = createVehicle [\"O_APC_Wheeled_02_rcws_v2_F\",player modelToWorld [0,300,0],[],0,\"CAN_COLLIDE\"];\n_tgt setVehicleTiPars [1,1,1];\n[_missile,_tgt] spawn {\n\tparams [\"_missile\",\"_tgt\"];\n\tsleep 0.1;\n\t_missile setMissileTarget _tgt;\n};\n```","commands\\setMissileTargetPos.md":"Sets a guided munition target position.\nThe munition must have **manualControl** config entry to use this command.\nThe target position has to be inside the missile's configured targeting cone for the command to work.\n\n\n---\n*Syntaxes:*\n\nmunition `setMissileTargetPos` position\n\n---\n*Example 1:*\n\n```sqf\nmissile1 setMissileTargetPos unitAimPosition tank1;\n```\n\n*Example 2:*\n\n```sqf\nprivate _missile = createVehicle [\"M_Scalpel_AT\", player modelToWorld [0,0,100], [], 0, \"CAN_COLLIDE\"];\n_missile setMissileTargetPos (player modelToWorld [0,100,0]);\n```","commands\\setMousePosition.md":"Moves mouse pointer to specified position on the screen. `x` and `y` could be any number, but will be clipped so mouse never leaves the screen area.\n\n\n---\n*Syntaxes:*\n\n`setMousePosition` [x, y]\n\n---\n*Example 1:*\n\n```sqf\nsetMousePosition [0.5, 0.5];\n```","commands\\setMusicEffect.md":"Defines a music track played on activation. If another track is playing already, this will stop it and start the new track.\n\nTrack is a subclass name of CfgMusic. In addition, \"$STOP$\" (stops the current music track) or use **`playMusic` \"\"**.\nWhen used in a trigger, the track starts on activation but does not automatically stop on deactivation.\n\n\n---\n*Syntaxes:*\n\ntrigger `setMusicEffect` track\n\nwaypoint `setMusicEffect` track\n\n---\n*Example 1:*\n\n```sqf\n_trigger setMusicEffect \"Track1\";\n```\n\n*Example 2:*\n\n```sqf\n[_group1,1] setMusicEffect \"$STOP$\";\n```","commands\\setMusicEventHandler.md":"Sets given music track event handler. Will overwrite other music event handlers.\n\n\n---\n*Syntaxes:*\n\n`setMusicEventHandler` [type, function]\n\n---\n*Example 1:*\n\n```sqf\n_ehID = setMusicEventHandler [\"MusicStart\", \"hint str _this\"];\n```\n\n*Example 2:*\n\n```sqf\n_ehID = setMusicEventHandler [\"MusicStop\", \"hint str _this\"];\n```","commands\\setName.md":"Sets the name of a location or a person. In Arma 3 this can be used to set `name` of a person but only in single player.\n\n\n---\n*Syntaxes:*\n\nunit `setName` name\n\nunit `setName` [name, firstName, lastName]\n\nlocation `setName` name\n\n---\n*Example 1:*\n\n```sqf\nmyLocation setName \"My Location Name\";\n```\n\n*Example 2:*\n\n```sqf\nplayer setName \"New Name\";\n```\n\n*Example 3:*\n\n```sqf\nplayer setName [\"Ben Kerry\",\"Ben\",\"Kerry\"];\n```","commands\\setNameSound.md":"Sets the `nameSound` of a person. By default, when giving orders, the units are addressed by their number. When nameSound is set, it will be used instead to address the unit. For example: \"Two, hold fire!\", one can have: \"Miller, hold fire!\".\n\n\n---\n*Syntaxes:*\n\nperson `setNameSound` name\n\n---\n*Example 1:*\n\n```sqf\nunit1 setNameSound \"dixon\";\n```\n\n*Example 2:*\n\n```sqf\nunit1 setNameSound \"\"; // will reset to default behaviour\n```\n\n*Example 3:*\n\n```sqf\n_name = \"Masood\";\nunit1 setNameSound _name;\nunit1 setName _name;\n```","commands\\setObjectArguments.md":"Set object arguments in mission editor.\n\n\n---\n*Syntaxes:*\n\nmap `setObjectArguments` [object,[name1,value1,...]]\n\n---\n*Example 1:*\n\n-","commands\\setObjectMaterial.md":"Sets material of object selection. The selection number is defined through the `hiddenselection`[] = {} array in the vehicle's config (starting with 0).\n\n\n---\n*Syntaxes:*\n\nobj `setObjectMaterial` [selectionNumber, material]\n\n---\n*Example 1:*\n\n```sqf\ncar setObjectMaterial [0,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];\ncar setObjectMaterial [1,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];\n```","commands\\setObjectMaterialGlobal.md":"Set the material of the given selection on all computers in a network session.\n\n\n---\n*Syntaxes:*\n\nobj `setObjectMaterialGlobal` [selection, material]\n\n---\n*Example 1:*\n\n```sqf\nplayer setObjectMaterialGlobal [0, \"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];\n```","commands\\setObjectProxy.md":"Set the proxy object associated with the given editor object.\n\n\n---\n*Syntaxes:*\n\nmap `setObjectProxy` [object, proxy]\n\n---\n*Example 1:*\n\n```sqf\n_map setObjectProxy [\"_group_0\", vehicle (leader _group)];\n```","commands\\setObjectScale.md":"Scales an `attached object` or a [[Arma_3_Simple_Objects|Simple Object]]'s model.\n\n\n---\n*Syntaxes:*\n\nobject `setObjectScale` scale\n\n---\n*Example 1:*\n\n```sqf\n_mrap attachTo [player,[0,0,0]];\n_mrap setObjectScale 0.1;\n```\n\n*Example 2:*\n\n```sqf\n// Select an object in Eden Editor and execute the following code in the Arma 3: Debug Console. When moving the object, the effect is reset!\n(get3DENSelected \"Object\" # 0) setObjectScale 0.1;\n```","commands\\setObjectTexture.md":"Applies given texture to object's selection. See `Retexturing with setObjectTexture` for a short tutorial.\n\n\n---\n*Syntaxes:*\n\nobject `setObjectTexture` [selection, texture]\n\n---\n*Example 1:*\n\n```sqf\n_objectname setObjectTexture [0, \"\\pboname\\texture.paa\"];\n_objectname setObjectTexture [1, \"\\pboname\\texture2.paa\"];\n```\n\n*Example 2:*\n\n```sqf\n_obj setObjectTexture [0, \"#(rgb,8,8,3)color(1,0,0,1)\"];\n```\n\n*Example 3:*\n\n```sqf\n_obj setObjectTexture [0, \"#(argb,512,512,1)r2t(rendersurface,1.333)\"];\n```\n\n*Example 4:*\n\nDisable randomization before applying a texture to a vehicle in the Editor (if it is a vehicle that supports randomization):\n\n```sqf\nthis setVariable [\"BIS_enableRandomization\", false];\nthis setObjectTexture [0,\"#(rgb,8,8,3)color(1,0,0,1)\"];\n```\n\n*Example 5:*\n\nThe **\"clan\"** selection can be used to apply a texture to the areas that usually display the `squad.xml` logo:\n\n```sqf\nMyVehicle setObjectTexture [\"clan\", \"\\a3\\missions_f_epa\\data\\img\\orbat\\b_111_texture_ca.paa\"];\n```","commands\\setObjectTextureGlobal.md":"Set the texture of the given selection on all computers in a network session.<br>\nNot all objects can be textured this way. See `getObjectTextures` for supported texture selections.\n\n\n---\n*Syntaxes:*\n\nobj `setObjectTextureGlobal` [selection, texture]\n\n---\n*Example 1:*\n\n```sqf\nplayer setObjectTextureGlobal [0, \"\\MyAddon\\blue.paa\"];\n```\n\n*Example 2:*\n\n```sqf\n// Set up a persistent texture keeper\nplayer addEventHandler [\"Take\", {\n\t(getObjectTextures player + [uniformContainer player getVariable \"texture\"])\n\tparams [\"_texUniform\", \"_texInsignia\", \"_texCustom\"];\n\tif (isNil \"_texCustom\") exitWith {};\n\tif (_texUniform == _texCustom) exitWith {};\n\tplayer setObjectTextureGlobal [0, _texCustom];\n\tfalse\n}];\n\n// Example: make current uniform persistently blue\n\nprivate _texture = \"#(rgb,8,8,3)color(0,0,1,1)\"; // blue texture\nplayer setObjectTextureGlobal [0, _texture]; // set it on player\nuniformContainer player setVariable [\"texture\", _texture, true]; // store it on uniform\n```","commands\\setObjectViewDistance.md":"Sets the rendering distance of objects and shadows.\n\n\n---\n*Syntaxes:*\n\n`setObjectViewDistance` objectDistance\n\n`setObjectViewDistance` [objectDistance, shadowDistance]\n\n---\n*Example 1:*\n\n```sqf\nsetObjectViewDistance 2000;\n```\n\n*Example 2:*\n\n```sqf\nsetObjectViewDistance [2000, 800];\n```","commands\\setOpticsMode.md":"Sets the optic mode of the current weapon to the given class name or the index.\n\n\n---\n*Syntaxes:*\n\nunit `setOpticsMode` mode\n\n---\n*Example 1:*\n\n```sqf\nplayer setOpticsMode \"Hamr2Scope\"; // Default optic mode for optic_Hamr\n```\n\n*Example 2:*\n\n```sqf\nplayer setOpticsMode 0;\n```\n\n*Example 3:*\n\n```sqf\nplayer setOpticsMode [1, 0]; // reset the optics mode of the player's primary weapon to the default\n```","commands\\setOvercast.md":"Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change.\nAn overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher `wind` speeds.\n\n\n---\n*Syntaxes:*\n\ntime `setOvercast` overcast\n\n---\n*Example 1:*\n\n```sqf\n50 setOvercast 0.5;\n```","commands\\setOwner.md":"From server machine, change the ownership of an object to a given client. Using command in an unintended way will log a message to .rpt file. To transfer ownership of all AI units in a group properly, use `setGroupOwner` instead.\n\n\n---\n*Syntaxes:*\n\nobject `setOwner` clientID\n\n---\n*Example 1:*\n\n```sqf\n_someObject setOwner 12;\n```\n\n*Example 2:*\n\n```sqf\n_someObject setOwner (owner _playerObject);\n```","commands\\setOxygenRemaining.md":"Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.\n\n\n---\n*Syntaxes:*\n\nunit `setOxygenRemaining` value\n\n---\n*Example 1:*\n\n```sqf\nplayer setOxygenRemaining 0; // drowns player\n```","commands\\setParticleCircle.md":"Updates particle source, creates particles in circle with given radius. Velocity is transformed and added to total velocity.\n\n\n---\n*Syntaxes:*\n\nparticleSource `setParticleCircle` [circleRadius, circleVelocity]\n\n---\n*Example 1:*\n\n```sqf\n_myParticleSource setParticleCircle [3, [0,0,5]];\n```","commands\\setParticleClass.md":"Sets particle source parameters using existing particle config from **CfgCloudlets** class. Use `setParticleParams` subsequently if you need to overwrite some values.\n\n\n---\n*Syntaxes:*\n\nsource `setParticleClass` className\n\n---\n*Example 1:*\n\n```sqf\n_source01 = \"#particlesource\" createVehicleLocal _pos01;\n_source01 setParticleClass \"ObjectDestructionFire1Smallx\";\n_source01 attachTo [_object,[0,0,0]];\n```","commands\\setParticleFire.md":"Set fire parameters to particle effect.\n\nNote: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands `setParticleClass` or `setParticleParams` to do so (see example). Correspondence between CfgCloudlets class param names and command array of params:\n\n```sqf\nparticleSource setParticleFire\n[\n\tcoreIntensity,\n\tcoreDistance,\n\tdamageTime\n];\n```\n\n\n---\n*Syntaxes:*\n\nsource `setParticleFire` [coreIntensity, coreDistance, damageTime]\n\n---\n*Example 1:*\n\n```sqf\n_emitter = \"#particlesource\" createVehicleLocal (getPos player);\n_emitter setParticleClass \"MediumSmoke\";\n_emitter setParticleFire [0.3,1.0,0.1];\n```","commands\\setParticleParams.md":"Set parameters to particle source. Array is in format `ParticleArray`. <br>\n\nSince Arma 3 version 1.11.114706 you can use this command to overwrite many values set by `setParticleClass`, particularity those defined in `ParticleArray`. Correspondence between CfgCloudlets class param names and command array of params:\n\n```sqf\nparticleSource setParticleParams\n[\n\t/* String or Array - If string then the name of the particleShape. And following default values are used:\n\t\tparticleFSNtieth = 1\n\t\tparticleFSIndex = 0\n\t\tparticleFSFrameCount = 1\n\t\tparticleFSLoop = 1\n\t*/\n\t[\n\t\tparticleShape, /*String*/\n\t\tparticleFSNtieth, /*Number*/\n\t\tparticleFSIndex, /*Number*/\n\t\tparticleFSFrameCount, /*Number*/\n\t\tparticleFSLoop /*Optional - Number. Default: 1*/\n\t],\n\tanimationName, /*String*/\n\tparticleType, /*String - Enum: Billboard, SpaceObject*/\n\ttimerPeriod, /*Number*/\n\tlifeTime, /*Number*/\n\tposition, /*3D Array of numbers as relative position to particleSource or (if object at index 18 is set) object. \n\t\t\tOr (if object at index 18 is set) String as memoryPoint of object.*/\n\tmoveVelocity, /*3D Array of numbers.*/\n\trotationVelocity, /*Number*/\n\tweight, /*Number*/\n\tvolume, /*Number*/\n\trubbing, /*Number*/\n\tsize, /*Array of Number*/\n\tcolor, /*Array of Array of RGBA Numbers*/\n\tanimationSpeed, /*Array of Number*/\n\trandomDirectionPeriod, /*Number*/\n\trandomDirectionIntensity, /*Number*/\n\tonTimerScript, /*String*/\n\tbeforeDestroyScript, /*String*/\n\tthis, /*Object*/\n\tangle, /*Optional Number - Default: 0*/\n\tonSurface, /*Optional Boolean*/\n\tbounceOnSurface, /*Optional Number*/\n\temissiveColor, /*Optional Array of Array of RGBA Numbers*/\n\tvectorDir /*Optional 3D Array Vector dir. Since Arma 3 v1.92 it is possible to set the initial direction of the SpaceObject */\n];\n```\n\n\n---\n*Syntaxes:*\n\nparticleSource `setParticleParams` array\n\n---\n*Example 1:*\n\nsee `ParticleArray`","commands\\setParticleRandom.md":"Sets randomization of particle source parameters. Correspondence between CfgCloudlets class param names and command array of params:\n\n```sqf\nparticleSource setParticleRandom\n[\n\tlifeTimeVar,\n\tpositionVar,\n\tmoveVelocityVar,\n\trotationVelocityVar,\n\tsizeVar,\n\tcolorVar,\n\trandomDirectionPeriodVar,\n\trandomDirectionIntensityVar,\n\tangleVar,\n\tbounceOnSurfaceVar\n];\n```\n\n\n---\n*Syntaxes:*\n\nparticleSource `setParticleRandom` [lifeTime, position, moveVelocity, rotationVelocity, size, color, directionPeriod, directionIntensity, angle, bounceOnSurface]\n\n---\n*Example 1:*\n\n```sqf\n_particleSource setParticleRandom [0, [0.1, 0.1, 0.1], [0, 0, 0.5], 0, 0.1, [0, 0, 0, 0], 0, 0, 45, 0];\n```","commands\\setPilotCameraDirection.md":"Sets the direction of object airplane or helicopter [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]] (vector in model space).\n\n\n---\n*Syntaxes:*\n\nobject `setPilotCameraDirection` Vector3D\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setPilotCameraDirection [0,1,0] // re-centers the camera\n```","commands\\setPilotCameraRotation.md":"Sets rotation (relative to the centered camera position) of the object airplane or helicopter [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]] .\n\n\n---\n*Syntaxes:*\n\nobject `setPilotCameraRotation` rotation\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setPilotCameraRotation [rad 90, rad 45];\n```","commands\\setPilotCameraTarget.md":"Sets an area or target to be tracked by the object airplane or helicopter [[A3_Targeting_config_reference#class_pilotCamera|pilotCamera]]. \nTo track an object the vehicle has to have appropriate sensors ([[A3_Targeting_config_reference#CfgVehicles|scanners]]) that can detect the given target type.\nUsing `objNull` will unlock the camera\n\n\n---\n*Syntaxes:*\n\nobject `setPilotCameraTarget` target\n\n---\n*Example 1:*\n\n```sqf\n_pilotCamTrack = vehicle player setPilotCameraTarget [2100,4200,4.2];\n```\n\n*Example 2:*\n\n```sqf\n_pilotCamTrack = vehicle player setPilotCameraTarget BIS_Edita;\n```","commands\\setPilotLight.md":"Switches headlights of a vehicle on/off. Note that the vehicle has to be `local`, for global variant use [[Arma 3 Actions]] \"[[Arma_3_Actions#LightOn|LightOn]]\"/\"[[Arma_3_Actions#LightOff|LightOff]]\"\n\n\n---\n*Syntaxes:*\n\nvehicle `setPilotLight` set\n\n---\n*Example 1:*\n\n```sqf\ncar setPilotLight true;\n```","commands\\setPiPEffect.md":"Sets Render Target's visual effect (Picture-in-Picture). \n* 0: Normal - [0]\n* 1: Night Vision - [1]\n* 2: Thermal - [2]\n* 3: `Color Correction` - [3, enabled, brightness, contrast, offset, blend [r,g,b,a], lerp [r,g,b,a], rgb [r,g,b,a]]\n* 4: Mirror - [4] `<currently not working>`\n* 5: `Chromatic Aberration` - [5, enabled, powerx, powery, (bool) aspectCorrection] `<currently not working>`\n* 6: ` Film Grain` - [6, enabled, intensity, sharpness, grainsize, intensityx1, intensityx2, (bool) monochromatic] `<currently not working>`\n* 7: Thermal Inverted [7]\n* 8: Green Thermal [8]\n\n\n---\n*Syntaxes:*\n\nname `setPiPEffect` [effect, optionalParam1, ..., optionalParamN]\n\n---\n*Example 1:*\n\n```sqf\n\"rendersurface\" setPiPEffect [0];\n```\n\n*Example 2:*\n\n```sqf\n\"rendertarget0\" setPiPEffect [3, 1.0, 1.0, 1.0, 0.0, [0.0, 1.0, 0.0, 0.25], [1.0, 0.0, 1.0, 1.0],  [0.199, 0.587, 0.114, 0.0]];\n```\n\n*Example 3:*\n\n```sqf\ncam = \"camera\" camCreate (player modelToWorld [0,-5,2]);\ncam cameraEffect [\"internal\",\"back\",\"rtt\"];\n\"rtt\" setPiPEffect [2];\nwith uiNamespace do {\n\tpic = findDisplay 46 ctrlCreate [\"RscPicture\", -1];\n\tpic ctrlSetPosition [0,0,1,1];\n\tpic ctrlCommit 0;\n\tpic ctrlSetText \"#(argb,512,512,1)r2t(rtt,1.0)\";\n};\n```\n\n*Example 4:*\n\nBlack & White:\n\n```sqf\n\"rtt\" setPiPEffect [3,1,1,0.4,0, [0,0,0,0], [1,1,1,0], [1,1,1,1]];\n```","commands\\setPiPViewDistance.md":"Set the PiP (Picture-in-Picture) view distance. This has no impact if PiP is disabled (see `isPiPEnabled`).\n\n\n---\n*Syntaxes:*\n\n`setPiPViewDistance` distance\n\n---\n*Example 1:*\n\n```sqf\nsetPiPViewDistance 100;\n```\n\n*Example 2:*\n\n```sqf\nsetPiPViewDistance viewDistance;\n```\n\n*Example 3:*\n\n```sqf\nsetPiPViewDistance getObjectViewDistance;\n```","commands\\setPitch.md":"Sets the pitch of a persons voice.\n\n\n---\n*Syntaxes:*\n\nperson `setPitch` pitch\n\n---\n*Example 1:*\n\n```sqf\nunit1 setPitch 0.5;\n```","commands\\setPlateNumber.md":"Change the license plates on any vehicle which has plates configured. Max 15 characters are allowed!\n\n\n---\n*Syntaxes:*\n\nvehicle `setPlateNumber` string\n\n---\n*Example 1:*\n\n```sqf\n    vehicle player setPlateNumber \"K2000\";\n```\n\n*Example 2:*\n\nReset plate to the world's randomized template:\n\n```sqf\nprivate _return = \"\";\nprivate _cfg = (configFile >> \"CfgWorlds\" >> worldName);\n\n{\n\t_return = _return + (call {\n\t\tif (_x == \"$\") exitWith {\n\t\t\tselectRandom (getText (_cfg >> \"plateLetters\") splitString \"\")\n\t\t};\n\t\tif (_x == \"#\") exitWith {\n\t\t\tselectRandom [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]\n\t\t};\n\t\t_x\n\t});\n} forEach (getText (_cfg >> \"plateFormat\") splitString \"\");\n\n_car setPlateNumber _return;\n```","commands\\setPlayable.md":"Create MP role for the unit. The roles created this way are used for `Join In Progress` and `Team Switch`.\n\n\n---\n*Syntaxes:*\n\n`setPlayable` unitName\n\n---\n*Example 1:*\n\n```sqf\nsetPlayable _aPerson;\n```","commands\\setPlayerRespawnTime.md":"Sets the time interval (in seconds) that the player must wait before respawn. It resets to mission default on mission start. In Single Player or when respawn type is GROUP or SIDE in Multiplayer, setting player respawn time has no effect, and `playerRespawnTime` will always return -1.\n\n\n---\n*Syntaxes:*\n\n`setPlayerRespawnTime` interval\n\n---\n*Example 1:*\n\n```sqf\nsetPlayerRespawnTime 5;\n```","commands\\setPlayerVoNVolume.md":"Sets provided player's Voice over Network (VoN) volume.\n\n\n---\n*Syntaxes:*\n\nunit `setPlayerVoNVolume` volume\n\n---\n*Example 1:*\n\n```sqf\n_loudPlayer setPlayerVoNVolume 0.5;\n```","commands\\setPos.md":"Sets object position to format `PositionAGLS` (over surface). The Z value is used to calculate the nearest surface below the provided position. If the surface is close, it uses the Z position of the surface. Otherwise, Z value becomes the offset from that surface.\n\n\n---\n*Syntaxes:*\n\nobject `setPos` pos\n\n---\n*Example 1:*\n\n```sqf\nplayer setPos [getPos player select 0, getPos player select 1, (getPos player select 2) +10];\n\n// the same as above using set (OFP:R v1.75)\n_pos = getPos player;\n_pos set [2, _pos select 2 + 10];\nplayer setPos _pos;\n\n// the same as above using modelToWorld (ArmA v1.00)\nplayer setPos (player modelToWorld [0,0,10]);\n\n// the same as above using vectorAdd (Arma 3 v1.22)\nplayer setPos (getPos player vectorAdd [0,0,10]);\n```\n\n*Example 2:*\n\n```sqf\n_obj setPos [getPos _obj select 0, getPos _obj select 1, -5];\n```\n\n*Example 3:*\n\n```sqf\nplayer setPos (getPos _obj);\n```","commands\\setPosASL.md":"Sets the object position above sea level. Given position must be in `PositionASL` format.\n\n\n---\n*Syntaxes:*\n\nobject `setPosASL` pos\n\n---\n*Example 1:*\n\n```sqf\nplayer setPosASL [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2];\n```\n\n*Example 2:*\n\n```sqf\n_position = getPosASL _object;\n_position set [2, 10]; // 10m above sea level\n_object setPosASL _position;\n```","commands\\setPosASL2.md":"Sets the object position. The pos array uses the `PositionASL` format. The version of the command does not offset based on object center.\n\n\n---\n*Syntaxes:*\n\nobj [[setPosASL2]] pos\n\n---\n*Example 1:*\n\n```sqf\nprivate _aslPos = getPosASL player;\n_aslPos set [1, _aslPos select 1 + 10];\nplayer setPosASL2 _aslPos;\n```","commands\\setPosASLW.md":"Sets the object position above sea surface. The pos array uses the `PositionASLW` format.\n\n\n---\n*Syntaxes:*\n\nobj `setPosASLW` pos\n\n---\n*Example 1:*\n\n```sqf\n_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];\n```","commands\\setPosATL.md":"Sets the position of an object relative to the terrain.\n\n\n---\n*Syntaxes:*\n\nobject `setPosATL` pos\n\n---\n*Example 1:*\n\n```sqf\nplayer setPosATL [getPosATL player select 0, (getPosATL player select 1) - 10, getPosATL player select 2];\n```","commands\\setPosition.md":"Sets the position of a location.\n\n\n---\n*Syntaxes:*\n\nlocation `setPosition` pos\n\n---\n*Example 1:*\n\n```sqf\nmyLocation setPosition getPosATL player;\n```","commands\\setPosWorld.md":"Sets position of an object based on the model's centre position (see `getPosWorld`).\n\n\n---\n*Syntaxes:*\n\nobject `setPosWorld` position\n\n---\n*Example 1:*\n\n```sqf\n_obj setPosWorld getPosWorld _obj;\n```","commands\\setPylonLoadout.md":"Adds/overrides loadout to a vehicle pylon. **TransportPylonsComponent}} in vehicle config and {{hl|pylonWeapon** in the magazine config are required to run.\n\n\n---\n*Syntaxes:*\n\nvehicle `setPylonLoadout` [pylon, magazine, forced, turret]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setPylonLoadout [\"pylon1\", \"\"];\n```\n\n*Example 2:*\n\nMake all of your pylon weapons Twin Cannon 30 mm:\n\n```sqf\nfor \"_i\" from 1 to 100 do {\n\tvehicle player setPylonLoadout [_i, \"PylonWeapon_300Rnd_20mm_shells\", true];\n};\n```\n\n*Example 3:*\n\nShowcase all possible magazines:\n\n```sqf\n[] spawn {\n\t{\n\t\tfor \"_i\" from 1 to 100 do {\n\t\t\tvehicle player setPylonLoadout [_i, configName _x, true];\n\t\t};\n\t\thint configName _x;\n\t\tsleep 1.5;\n\t} forEach (\"getText (_x >> 'pylonWeapon') != ''\" configClasses (configFile >> \"CfgMagazines\"));\n};\n```","commands\\setPylonsPriority.md":"Overrides default pylons priorities.\n\n\n---\n*Syntaxes:*\n\nvehicle `setPylonsPriority` priorities\n\n---\n*Example 1:*\n\n```sqf\n(vehicle player) setPylonsPriority [0,1,2,3,4,5,5,4,3,2,1,0];\n```","commands\\setRadioMsg.md":"Sets radio trigger menu title text (0 -> 0 -> map radio). Use \"NULL\" to disable radio slot. Use \"\" to restore default title\n\n\n---\n*Syntaxes:*\n\nindex `setRadioMsg` text\n\n---\n*Example 1:*\n\n```sqf\n1 setRadioMsg \"Click meeeeeeeeee\"; //changes title of radio Alpha\n```","commands\\setRain.md":"Sets rain density smoothly over the given transition time. A transition time of zero means an immediate change.\nA rain density of zero is no rain, one is maximum rain. Rain is not possible when `overcast` is less than 0.7.\n\n\n---\n*Syntaxes:*\n\ntime `setRain` rain\n\n*(Reference Icon \"32\" at localeffect)* `setRain` rainParams\n\n*(Reference Icon \"32\" at localeffect)* `setRain` config\n\n---\n*Example 1:*\n\n```sqf\n60 setRain 1;\n```\n\n*Example 2:*\n\nForce no rain:\n\n```sqf\n0 setRain 0;\nforceWeatherChange;\n999999 setRain 0;\n```\n\n*Example 3:*\n\nSnow like effect (Since {{arma3}} v2.08):\n\n```sqf\n0 setOvercast 1;\n0 setRain 1;\n0 setFog 0.1;\t\t// snow affects visibility at distance\nsetHumidity 0.9;\t// don't want to see dust clouds\nenableEnvironment [false, true]; // don't want to see snakes and butterflies either\nforceWeatherChange;\nsetRain [\n\t\"a3\\data_f\\rainnormal_ca.paa\",\t// rainDropTexture\n\t1,\t\t// texDropCount\n\t0.01,\t// minRainDensity\n\t15,\t\t// effectRadius\n\t0.1,\t// windCoef\n\t2,\t\t// dropSpeed\n\t0.5,\t// rndSpeed\n\t0.5,\t// rndDir\n\t0.02,\t// dropWidth\n\t0.02,\t// dropHeight\n\t[0.1, 0.1, 0.1, 1],\t// dropColor\n\t0.1,\t// lumSunFront\n\t0.1,\t// lumSunBack\n\t5.5,\t// refractCoef\n\t0.3,\t// refractSaturation\n\ttrue,\t// snow\n\tfalse\t// dropColorStrong\n];\n```\n\n*Example 4:*\n\nAfter 2.10\n\n```sqf\n0 setOvercast 1;  \n0 setRain 1; \n0 setFog 0.1;  \nsetHumidity 0.95; \nenableEnvironment [false, true]; \nforceWeatherChange;\n[  \n\t\"a3\\data_f\\snowflake4_ca.paa\", // rainDropTexture  \n\t4, // texDropCount  \n\t0.01, // minRainDensity  \n\t25, // effectRadius  \n\t0.05, // windCoef  \n\t2.5, // dropSpeed  \n\t0.5, // rndSpeed  \n\t0.5, // rndDir  \n\t0.07, // dropWidth  \n\t0.07, // dropHeight  \n\t[1, 1, 1, 0.5], // dropColor  \n\t0.0, // lumSunFront  \n\t0.2, // lumSunBack  \n\t0.5, // refractCoef  \n\t0.5, // refractSaturation  \n\ttrue, // snow  \n\tfalse // dropColorStrong  \n] \ncall BIS_fnc_setRain;\n```","commands\\setRainbow.md":"Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\n\n\n---\n*Syntaxes:*\n\ntime `setRainbow` value\n\n---\n*Example 1:*\n\n```sqf\n360 setRainbow 1;\n```","commands\\setRandomLip.md":"Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it is talking.\n\n\n---\n*Syntaxes:*\n\nunit `setRandomLip` bool\n\n---\n*Example 1:*\n\n```sqf\nplayer setRandomLip true;\n```","commands\\setRank.md":"Sets rank of given unit.\n\nPossible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL. <br><br>\n\n\n---\n*Syntaxes:*\n\nunitName `setRank` rank\n\n---\n*Example 1:*\n\n```sqf\nplayer setRank \"COLONEL\";\n```","commands\\setRectangular.md":"Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical.\n\n\n---\n*Syntaxes:*\n\nlocation `setRectangular` set\n\n---\n*Example 1:*\n\n```sqf\nmyLocation setRectangular true;\n```","commands\\setRepairCargo.md":"Set amount of repair resources in cargo space of repair vehicle.\nAmount 1 is full cargo.\n\n\n---\n*Syntaxes:*\n\nvehicleName `setRepairCargo` amount\n\n---\n*Example 1:*\n\n```sqf\n_repairTruck1 setRepairCargo 0;\n```","commands\\setRotorBrakeRTD.md":"Toggles a helicopter's rotor brake.\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `setRotorBrakeRTD` enable\n\n---\n*Example 1:*\n\n```sqf\nmyHelicopterRTD setRotorBrakeRTD 1;\n```","commands\\setShadowDistance.md":"Sets the shadows rendering distance.\n\n\n---\n*Syntaxes:*\n\n`setShadowDistance` value\n\n---\n*Example 1:*\n\n```sqf\nsetShadowDistance 200;\n```","commands\\setShotParents.md":"Sets vehicle and instigator pair for the given projectile.\n\n\n---\n*Syntaxes:*\n\nprojectile `setShotParents` [vehicle, instigator]\n\n---\n*Example 1:*\n\n```sqf\nmyProjectile setShotParents [vehicle bob, bob];\n```\n\n*Example 2:*\n\n```sqf\ntank addEventHandler [\"Fired\", {_this select 6 setShotParents [tank, commander tank]}];\n```","commands\\setSide.md":"Sets a location's `side`. The default side is Unknown.\n\n\n---\n*Syntaxes:*\n\nlocation `setSide` side\n\n---\n*Example 1:*\n\n```sqf\n_myLocation setSide resistance;\n```","commands\\setSimpleTaskAlwaysVisible.md":"Sets task's visibility.\n\n\n---\n*Syntaxes:*\n\ntaskID `setSimpleTaskAlwaysVisible` state\n\n---\n*Example 1:*\n\n`currentTask` `player` `setSimpleTaskAlwaysVisible` `true`;","commands\\setSimpleTaskCustomData.md":"Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.\n\n\n---\n*Syntaxes:*\n\ntask `setSimpleTaskCustomData` [IconPath, tooltip, description]\n\n---\n*Example 1:*\n\n```sqf\n_task setSimpleTaskCustomData [\"\\A3\\Ui_f\\data\\IGUI\\Cfg\\simpleTasks\\letters\\h_ca.paa\", \"This is the tooltip\", \"This is the description\"];\n```","commands\\setSimpleTaskDescription.md":"Attach descriptions to the simple task.\n\n\n---\n*Syntaxes:*\n\ntask `setSimpleTaskDescription` [description, descriptionShort, descriptionHUD]\n\n---\n*Example 1:*\n\n```sqf\nmyTask setSimpleTaskDescription [\"Today you have to kill Spongebob\", \"Kill Spongebob\", \"There he is!\"];\n```","commands\\setSimpleTaskDestination.md":"Attach a destination to the simple task.<br>Overrides `setSimpleTaskTarget`\n\n\n---\n*Syntaxes:*\n\ntask `setSimpleTaskDestination` pos\n\n---\n*Example 1:*\n\n```sqf\n_tskGoHere setSimpleTaskDestination (getMarkerPos \"obj1\");\n```","commands\\setSimpleTaskTarget.md":"Attach a target to the simple task.<br>Overrides `setSimpleTaskDestination`.\n\n\n---\n*Syntaxes:*\n\ntask `setSimpleTaskTarget` [target, precisePosition]\n\n---\n*Example 1:*\n\n```sqf\ntask setSimpleTaskTarget [targetVehicle, true];\n```","commands\\setSimpleTaskType.md":"Attach type to the simple task. See [[Arma_3_Tasks_Overhaul#Default_Task_Types:_Actions|Default Task Types]].\n\n\n---\n*Syntaxes:*\n\ntask `setSimpleTaskType` taskType\n\n---\n*Example 1:*\n\n```sqf\n(currentTask player) setSimpleTaskType \"attack\";\n```","commands\\setSimulWeatherLayers.md":"Sets number of simul weather layers, affects quality of simul weather clouds.\n\n\n---\n*Syntaxes:*\n\n`setSimulWeatherLayers` layers\n\n---\n*Example 1:*\n\n```sqf\nsetSimulWeatherLayers 0; // Very flat clouds\n```","commands\\setSize.md":"Sets the size (radius)  of a location.\n\nThe width  is 2 * x, the height is 2 * y.\n\n\n---\n*Syntaxes:*\n\nlocation `setSize` size\n\n---\n*Example 1:*\n\n```sqf\nmyLocation setSize [10,30];\n```","commands\\setSkill.md":"Sets the skill level of given unit. The value of a `sub-skill` is interpolated into a range defined in `CfgAISkill`.\n\n\n---\n*Syntaxes:*\n\nunit `setSkill` skill\n\nunit `setSkill` [skillName, value]\n\n---\n*Example 1:*\n\n```sqf\n_hero setSkill 1;\n```\n\n*Example 2:*\n\n```sqf\n_finalBoss setSkill [\"reloadSpeed\", 0.8];\n_finalBoss setSkill [\"aimingSpeed\", 0.33];\n```","commands\\setSlingLoad.md":"Creates a sling loading from a helicopter to an entity if possible. To unload cargo, pass `objNull` as second param.\n\n\n---\n*Syntaxes:*\n\nheli `setSlingLoad` cargo\n\n---\n*Example 1:*\n\n```sqf\n_success = heli1 setSlingLoad veh1;\n```\n\n*Example 2:*\n\nTo unload cargo:\n\n```sqf\n_success = heli setSlingLoad objNull;\n```","commands\\setSoundEffect.md":"Defines the different sound effects. To stop any sound, deactivate the trigger (might take up to 0.5 seconds to stop) or delete the trigger (immediate).\n\n\n---\n*Syntaxes:*\n\ntrigger `setSoundEffect` [sound, voice, soundEnv, soundDet]\n\nwaypoint `setSoundEffect` [sound, voice]\n\n---\n*Example 1:*\n\n```sqf\n_trigger setSoundEffect [\"Alarm\", \"\", \"\", \"\"];\n```\n\n*Example 2:*\n\n```sqf\n[_group1,2] setSoundEffect [\"Alarm\", \"\"];\n```\n\n*Example 3:*\n\n```sqf\n_trigger setSoundEffect [\"\", \"Alarm\", \"\", \"\"];\n```\n\n*Example 4:*\n\n```sqf\n_trigger setSoundEffect [\"\", \"\", \"BattlefieldExplosions3\", \"\"];\n```\n\n*Example 5:*\n\n```sqf\n_trigger setSoundEffect [\"\", \"\", \"\", \"Owl\"];\n```","commands\\setSpeaker.md":"Sets the speaker of a person.\n\n\n---\n*Syntaxes:*\n\nperson `setSpeaker` speaker\n\n---\n*Example 1:*\n\n```sqf\nunit1 setSpeaker \"Male02GRE\";\n```","commands\\setSpeech.md":"Add speech to location.\n\n\n---\n*Syntaxes:*\n\nlocation `setSpeech` speech\n\n---\n*Example 1:*\n\n```sqf\n_location setSpeech \"SomeSpeech\";\n```","commands\\setSpeedMode.md":"Sets group speed mode. If unit is passed as param, unit's group is used. Mode may be one of: \n* `\"UNCHANGED\"` (unchanged)\n* `\"LIMITED\"` (half speed)\n* `\"NORMAL\"` (full speed, maintain formation)\n* `\"FULL\"` (do not wait for any other units in formation)\n\n\n---\n*Syntaxes:*\n\ngroupName `setSpeedMode` mode\n\n---\n*Example 1:*\n\n```sqf\n_groupOne setSpeedMode \"LIMITED\";\n```","commands\\setStamina.md":"Set units' stamina (seconds until depletion)\n\n\n---\n*Syntaxes:*\n\nunit `setStamina` stamina\n\n---\n*Example 1:*\n\n```sqf\nplayer setStamina 42;\n```","commands\\setStaminaScheme.md":"Sets the scheme used for the Stamina system.\n\n\n---\n*Syntaxes:*\n\n`setStaminaScheme` scheme\n\n---\n*Example 1:*\n\n```sqf\nsetStaminaScheme \"Default\";\n```","commands\\setStatValue.md":"Sets a value to a given stat. <br>\nA list of possible StatNames can be found here: [[Arma 3: Stat Names]]<br>\nIts important to note that most Stats are restricted to scripts and missions in certain paths.<br>\nFor example \"ExpWarlockDown\" is restricted to scripts in any subdirectory of **\"a3\\Missions_F_Exp\\Campaign\\Missions\\\"**\n\n\n---\n*Syntaxes:*\n\n`setStatValue` [name, value]\n\n---\n*Example 1:*\n\n```sqf\nsetStatValue [\"ExpWarlockDown\", 1]; // Unlocks the \"Warlock Down\" Steam achivement\n```","commands\\setSuppression.md":"Sets the given suppression value for the given unit.\n\n\n---\n*Syntaxes:*\n\nunit `setSuppression` value\n\n---\n*Example 1:*\n\n```sqf\nunit_1 setSuppression 1;\n```","commands\\setSystemOfUnits.md":"Set system of units. This will only impact gauges from advanced flight model.\n\n\n---\n*Syntaxes:*\n\n`setSystemOfUnits` value\n\n---\n*Example 1:*\n\n```sqf\nif (player in _myHelicopter) then { setSystemOfUnits 2; };\n```","commands\\setTargetAge.md":"Sets how the target is known to the other centers. They behave like the target was seen age seconds ago.\n\nPossible age values are: \"ACTUAL\", \"5 MIN\", \"10 MIN\", \"15 MIN\", \"30 MIN\", \"60 MIN\", \"120 MIN\" or \"UNKNOWN\".\n\n\n---\n*Syntaxes:*\n\nobject `setTargetAge` age\n\n---\n*Example 1:*\n\n```sqf\nplayer setTargetAge \"10 MIN\";\n```","commands\\setTaskMarkerOffset.md":"Sets the task marker position in model space.\n\n\n---\n*Syntaxes:*\n\nobj `setTaskState` position\n\n---\n*Example 1:*\n\n```sqf\nplayer setTaskMarkerOffset [0,0.5,1];\n```","commands\\setTaskResult.md":"Set a result of the task.\n\n\n---\n*Syntaxes:*\n\ntask `setTaskResult` [state,result]\n\n---\n","commands\\setTaskState.md":"Set the state of a given task.\n\n\n---\n*Syntaxes:*\n\ntask `setTaskState` state\n\n---\n*Example 1:*\n\n```sqf\n_tskKillSpongebob setTaskState \"Succeeded\";\n```","commands\\setTerrainGrid.md":"Sets the desired ` terrain resolution` in meters.\n\n\n---\n*Syntaxes:*\n\n`setTerrainGrid` grid\n\n---\n*Example 1:*\n\n```sqf\nsetTerrainGrid 12.5;\n```","commands\\setTerrainHeight.md":"Set the current terrain's altitude on provided location(s).\n\n\n---\n*Syntaxes:*\n\n`setTerrainHeight` [positionAndAltitudeArray, adjustObjects]\n\n---\n*Example 1:*\n\n```sqf\nprivate _fnc_flattenTerrain =\n{\n\tparams [\"_start\", \"_a\", \"_b\", \"_h\"];\n\tprivate _newPositions = [];\n\n\tfor \"_xStep\" from 0 to _a do\n\t{\n\t\tfor \"_yStep\" from 0 to _b do\n\t\t{\n\t\t\tprivate _newHeight = _start vectorAdd [_xStep, _yStep, 0];\n\t\t\t_newHeight set [2, _h];\n\t\t\t_newPositions pushBack _newHeight;\n\t\t};\n\t};\n\n\t_newPositions;\n};\n\nprivate _desiredTerrainHeight = 150;\nprivate _positionsAndHeights = [getPosWorld player, 50, 50, _desiredTerrainHeight] call _fnc_flattenTerrain;\nsetTerrainHeight [_positionsAndHeights, true];\n```\n\n*Example 2:*\n\nBad example:\n\n```sqf\n// first update\nsetTerrainHeight [[[1000, 1000, 25], [1005, 1000, 25], [1000, 1005, 25], [1005, 1005, 25]]];\n\n// second update - this will make the JIP queue keep both messages\nsetTerrainHeight [[[1005, 1000, 50]]];\n```\n\nGood example:\n\n```sqf\n// first update\nsetTerrainHeight [[[1000, 1000, 25], [1005, 1000, 25], [1000, 1005, 25], [1005, 1005, 25]]];\n\n// second update - this will update the JIP queue properly\nsetTerrainHeight [[[1000, 1000, 25], [1005, 1000, 50], [1000, 1005, 25], [1005, 1005, 25]]];\n```","commands\\setText.md":"Sets the text associated with a location. This text will be displayed on the game map at the location's position.\n\n\n---\n*Syntaxes:*\n\nlocation `setText` text\n\n---\n*Example 1:*\n\n```sqf\nmyLocation setText \"Rahmadi Village\";\n```","commands\\setTimeMultiplier.md":"Sets a time multiplier for in-game time. The command range is capped at 0.1 - 120 to avoid performance problems.\n\n\n---\n*Syntaxes:*\n\n`setTimeMultiplier` value\n\n---\n*Example 1:*\n\n```sqf\nsetTimeMultiplier 60;\n```\n\n*Example 2:*\n\n```sqf\nsetTimeMultiplier 0.5;\n```","commands\\setTIParameter.md":"Sets the provided Thermal Imaging parameter's value.\n\n\n---\n*Syntaxes:*\n\n`setTIParameter` [paramName, newValue]\n\n---\n*Example 1:*\n\n```sqf\nsetTIParameter [\"OutputRangeStart\", 0];\nsetTIParameter [\"OutputRangeWidth\", 1];\n```","commands\\setTitleEffect.md":"Defines the title effect to show on activation via [Type, Effect, Text] where\n\n'Type' \n\nThe title effect does not disappear on deactivation, this should be done manually if required.\n\n\n---\n*Syntaxes:*\n\ntriggerOrWaypoint `setTitleEffect` [type, effect, text]\n\n---\n*Example 1:*\n\n```sqf\n_trigger setTitleEffect [\"TEXT\", \"PLAIN DOWN\", \"Hello world.\"];\n```","commands\\setTowParent.md":"Allows `towedVehicle` to be towed by `towingVehicle`. This loosens the vehicle brakes of the `towedVehicle` and turned its steering wheels toward the `towingVehicle`.\nSupposed to be used together with a rope connecting both vehicles.\n\n\n---\n*Syntaxes:*\n\ntowedVehicle `{{PAGENAMEE}}` towingVehicle\n\n---\n*Example 1:*\n\n```sqf\n{ moveOut _x } forEach crew _towedVehicle; // make sure nobody is in the towed vehicle\n_towedVehicle lock true;\nropeCreate [_bobcat, [0,-5,0], _towedVehicle, [0,2,0]];\n_towedVehicle setTowParent _bobcat;\n```","commands\\setTrafficDensity.md":"Set the density of ambient cars in a rectangle (in cars per kilometer).\n\n\n---\n*Syntaxes:*\n\n`setTrafficDensity` [density, xMin, xMax, zMin, zMax]\n\n---\n*Example 1:*\n\n```sqf\nsetTrafficDensity [40, 31000, 32000, 30000, 32000];\n```","commands\\setTrafficDistance.md":"Set maximum ambient traffic draw distance (in 2D).\n\n\n---\n*Syntaxes:*\n\n`setTrafficDistance` distance\n\n---\n*Example 1:*\n\n```sqf\nsetTrafficDistance 1000;\n```","commands\\setTrafficGap.md":"Set the average gap between ambient cars in a rectangle (in meters).\n\n\n---\n*Syntaxes:*\n\n`setTrafficGap` [gap, xMin, xMax, zMin, zMax]\n\n---\n*Example 1:*\n\n```sqf\nsetTrafficGap [50, 31000, 32500, 28000, 32000];\n```","commands\\setTrafficSpeed.md":"Set ambient traffic speed in a rectangle (in kilometers per hour).\n\n\n---\n*Syntaxes:*\n\n`setTrafficSpeed` [speed, xMin, xMax, zMin, zMax]\n\n---\n*Example 1:*\n\n```sqf\nsetTrafficSpeed [50, _xMin, _xMax, _zMin, _zMax];\n```","commands\\setTriggerActivation.md":"Defines the trigger activation type. \n\nSee [[ArmA:_Mission_Editor#Triggers_Mode_.28F3.29|ArmA:Mission Editor - Triggers]] for a thorough overview of triggers and its fields for activation, effects, etc.   Since Arma 3 v1.67, \"ANYPLAYER\" activation can be used to detect any player.\n\n\n---\n*Syntaxes:*\n\ntrigger `setTriggerActivation` [by, type, repeating]\n\n---\n*Example 1:*\n\n```sqf\n_trigger setTriggerActivation [\"WEST\", \"EAST D\", true];\n```","commands\\setTriggerArea.md":"[[Image:setTriggerArea.jpg|thumb|300px|Trigger axis a, b and c (`half` of their x, y and z dimensions)]] Defines the area monitored by the given trigger. The area could be either rectangular or elliptical.\n\n\n---\n*Syntaxes:*\n\ntrigger `setTriggerArea` [a, b, angle, isRectangle, c]\n\n---\n*Example 1:*\n\n```sqf\n_trigger setTriggerArea [100, 50, 45, false];\n```\n\n*Example 2:*\n\n```sqf\n_trigger setTriggerArea [100, 50, 45, false, 100];\n```\n\n*Example 3:*\n\n```sqf\n_trg = createTrigger [\"EmptyDetector\", getPos player, false];\n_trg setTriggerArea [5, 5, 0, false];\n_trg setTriggerActivation [\"CIV\", \"PRESENT\", true];\n_trg setTriggerStatements [\"this\", \"hint 'Civilian near player'\", \"hint 'no civilian near'\"];\n```","commands\\setTriggerInterval.md":"Sets the interval in seconds for trigger condition check.<br><br>\n\n\n---\n*Syntaxes:*\n\ntrigger `setTriggerInterval` interval\n\n---\n*Example 1:*\n\n```sqf\n_trigger setTriggerInterval 5;\n```","commands\\setTriggerStatements.md":"Defines trigger condition, activation and deactivation statements. Trigger condition has to return `Boolean`. `true` will activate the trigger, `false` will deactivate it (only if activation is set to repeat). `thisList` returns the same result as `list` command, which includes all entities in the trigger area that are capable of activating the trigger. Dead entities are excluded as well as crew in vehicles, vehicles themselves are included.\n\n\n---\n*Syntaxes:*\n\ntrigger `setTriggerStatements` [condition, activation, deactivation]\n\n---\n*Example 1:*\n\n```sqf\n_trg setTriggerStatements [\"this\", \"hint 'trigger on'\", \"hint 'trigger off'\"];\n```","commands\\setTriggerText.md":"Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers.\n\n\n---\n*Syntaxes:*\n\ntrigger `setTriggerText` text\n\n---\n*Example 1:*\n\n```sqf\ntrigger setTriggerText \"Call for support\";\n```","commands\\setTriggerTimeout.md":"Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time. <br><br>\nFor a normal trigger, `min`, `mid` and `max` are used to generate random duration according to [Gaussian Distribution](https://en.wikipedia.org/wiki/Normal_distribution)<ref>Technically, it is a rescaled [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution) with n = 4. The distribution is split in two at its midpoint and scaled linearly such that its maximum lies at the specified midpoint.</ref>. For a \"Seized\" type of trigger, the duration value is generated using side ruling power\n\n\n---\n*Syntaxes:*\n\ntrigger `setTriggerTimeout` [min, mid, max, interruptable]\n\n---\n*Example 1:*\n\n```sqf\n_trigger setTriggerTimeout [5, 10, 7, false];\n```","commands\\setTriggerType.md":"Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission):\n\n* **\"NONE\"**\n* **\"EAST G\"** - Guarded by OPFOR - (It is better to use `createGuardedPoint` instead)\n* **\"WEST G\"** - Guarded by BLUFOR - (It is better to use `createGuardedPoint` instead)\n* **\"GUER G\"** - Guarded by Independent - (It is better to use `createGuardedPoint` instead)\n* **\"SWITCH\"** - Switch waypoints/break loop (see [[ArmA:_Mission_Editor#Triggers_Mode_.28F3.29|Triggers]])\n* **\"END1\"** - End #1\n* **\"END2\"** - End #2\n* **\"END3\"** - End #3\n* **\"END4\"** - End #4\n* **\"END5\"** - End #5\n* **\"END6\"** - End #6\n* **\"LOOSE\"** - (Meant to say LOSE but is misspelt in the game engine).\n* **\"WIN\"}} - (Not in editor. Valid enum name but when set, defaults to {{hl|\"END1\"**)\n\n\n---\n*Syntaxes:*\n\ntrigger `setTriggerType` action\n\n---\n*Example 1:*\n\n```sqf\n_trigger setTriggerType \"END1\";\n```","commands\\setTurretOpticsMode.md":"Set the current optics mode of the optics in the turret occupied by the specified unit. Alt syntax allows a vehicle and turret path to be specified instead of a unit.\n\n\n---\n*Syntaxes:*\n\nobj `setTurretOpticsMode` mode\n\nobj `setTurretOpticsMode` [turretPath, opticModeIndex]\n\n---\n*Example 1:*\n\n```sqf\nplayer setTurretOpticsMode 0;\n```\n\n*Example 2:*\n\n```sqf\nmyTank setTurretOpticsMode [[-1], 1];\n```\n\n*Example 3:*\n\n```sqf\nmyAircraft setTurretOpticsMode [[0, 0], 0];\n```","commands\\setType.md":"Changes a location to the specified class. Location classes are defined in CfgLocationTypes.\n\n\n---\n*Syntaxes:*\n\nlocation `setType` name\n\n---\n*Example 1:*\n\n```sqf\nmyLocation setType \"RockArea\";\n```","commands\\setUnconscious.md":"In {{arma2}} and since {{arma3}} v1.64, this command sets unit into incapacitated state.<br>\n`lifeState` results:\n* {{arma2}}: \"UNCONSCIOUS\"\n* {{arma3}}: \"INCAPACITATED\"\n\n\n---\n*Syntaxes:*\n\nunit `setUnconscious` set\n\n---\n*Example 1:*\n\n```sqf\n_unit setUnconscious true;\n```","commands\\setUnitAbility.md":"Sets skill of given unit. Unlike `setSkill`, `setUnitAbility` can set values > 1. Even though the `skill` command will correctly return set value, the actual unit ability will be capped to max available.\n\n\n---\n*Syntaxes:*\n\nunit `setUnitAbility` value\n\n---\n*Example 1:*\n\n```sqf\n_unit setUnitAbility 1;\n```\n\n*Example 2:*\n\n```sqf\nbob setUnitAbility -log 0;\nhint str skill bob; //1.#INF\n```","commands\\setUnitCombatMode.md":"Sets `unit's` combat mode (engagement rules). For AI group combat mode see `setCombatMode`. Mode may be one of the following: \n* **\"BLUE\"** : Never fire, keep formation\n* **\"GREEN\"** : Hold fire, keep formation\n* **\"WHITE\"** : Hold fire, engage at will/loose formation\n* **\"YELLOW\"** : Fire at will, keep formation\n* **\"RED\"** : Fire at will, engage at will/loose formation\nSee `Combat Modes` for more information on combat modes.\n\n\n---\n*Syntaxes:*\n\nunit `setUnitCombatMode` mode\n\n---\n*Example 1:*\n\n```sqf\n_unit setUnitCombatMode \"YELLOW\";\n```","commands\\setUnitFreefallHeight.md":"Sets minimum freefall height AGL per unit, at which the unit assumes HALO pose. Engine default is 100m. Use -1 to reset the height to default.\n\n\n---\n*Syntaxes:*\n\nunit `setUnitFreefallHeight` minHeight\n\n---\n*Example 1:*\n\n```sqf\nplayer setUnitFreefallHeight 1000;\n```","commands\\setUnitLoadout.md":"Creates a loadout from given inventory structure and applies it to a unit. When `String` for class name is supplied, the command will search **CfgVehicles** for the given class in order to extract the loadout from config. If `Config` is given, it will search given config (including ` mission config`) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\n```cpp\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = {\"V_PlateCarrier1_rgr\",\"H_HelmetB\",\"ItemCompass\",\"ItemWatch\",\"ItemRadio\",\"NVGoggles\"};\n\tweapons[] = {\"arifle_MX_ACO_pointer_F\",\"hgun_P07_F\"};\n\titems[] = {\"FirstAidKit\",\"FirstAidKit\",\"FirstAidKit\"};\n\tmagazines[] = {\"30Rnd_65x39_caseless_mag\",\"16Rnd_9x21_Mag\",\"SmokeShell\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\"};\n};\n```\n\n\n---\n*Syntaxes:*\n\nunit `setUnitLoadout` loadout\n\nunit `setUnitLoadout` [loadout, fullMagazines]\n\nunit `setUnitLoadout` name\n\nunit `setUnitLoadout` config\n\n---\n*Example 1:*\n\n```sqf\nplayer_2 setUnitLoadout (getUnitLoadout player_1); // Copies loadout from player_1 and applies it to player_2\n```\n\n*Example 2:*\n\n```sqf\nplayer_2 setUnitLoadout [getUnitLoadout player_1, true]; // Copies loadout from player_1 and applies it to player_2 while topping up all magazines\n```\n\n*Example 3:*\n\n```sqf\n_unit setUnitLoadout \"B_Soldier_F\";\n```\n\n*Example 4:*\n\n```sqf\n_unit setUnitLoadout (configFile >> \"CfgVehicles\" >> \"B_Soldier_F\");\n```\n\n*Example 5:*\n\n```sqf\n_unit setUnitLoadout (missionConfigFile >> \"MyLoadout\");\n```\n\n*Example 6:*\n\nStrip unit of everything:\n\n```sqf\n_unit setUnitLoadout (configFile >> \"EmptyLoadout\");\n```","commands\\setUnitPos.md":"Set unit position rules. This command will not change the stance of the human player, even though it will change the output of `unitPos` command. To change player stance use `playAction` or `playActionNow`:\n\n```sqf\nplayer playAction \"PlayerProne\"; // DOWN\nplayer playAction \"PlayerStand\"; // UP\nplayer playAction \"PlayerCrouch\"; // MIDDLE\n```\n\n\n---\n*Syntaxes:*\n\nunit `setUnitPos` mode\n\n---\n*Example 1:*\n\n```sqf\n_soldier setUnitPos \"UP\";\n```","commands\\setUnitPosWeak.md":"Set unit position rules. This command is the lowest level of priority for setting unit position and to be used in scripted\t\nFSM's. Priorities are:\n# Unit pos commanded (from the commanding menu, higher priority).\n# Unit pos scripted (from `setUnitPos` scripting command, medium priority).\n# Unit pos FSM / `setUnitPosWeak` (used in the formation FSM, lowest priority).\n\n\n---\n*Syntaxes:*\n\nunit `setUnitPosWeak` mode\n\n---\n*Example 1:*\n\n```sqf\n_soldier disableAI \"FSM\";\n_soldier setUnitPosWeak \"DOWN\";\n```","commands\\setUnitRank.md":"Sets rank of given unit.\n\nPossible rank values, and the associated `rating` that is `set` (not added, the value replaces previous rating) with it:\n\n\n---\n*Syntaxes:*\n\nunitName `setUnitRank` rank\n\n---\n*Example 1:*\n\n```sqf\nplayer setUnitRank \"COLONEL\";\n```","commands\\setUnitRecoilCoefficient.md":"Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil.\n\n\n---\n*Syntaxes:*\n\nunitName `setUnitRecoilCoefficient` coefficient\n\n---\n*Example 1:*\n\n```sqf\nplayer setUnitRecoilCoefficient 10;\n```","commands\\setUnitTrait.md":"Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a `bool`.<br><br>\nDefault traits are:\n* `Number` `audibleCoef` - A lower value means the unit is harder to hear\n* `Number` `camouflageCoef` - A lower value means the unit is harder to spot\n* `Number` `loadCoef` - Equipment weight multiplier affecting fatigue and stamina\n* `Boolean` `engineer` - Ability to partially repair vehicles with toolkit, equivalent to {{hl\n\n\n---\n*Syntaxes:*\n\nunit `setUnitTrait` [skillName, value, isCustom]\n\n---\n*Example 1:*\n\n```sqf\nplayer setUnitTrait [\"Medic\", true];\n```","commands\\setUnloadInCombat.md":"If cargo or turret units `should` get out of vehicle when in combat. If `true`, vehicle will stop and units will dismount. Vehicle must be local.\n\n\n---\n*Syntaxes:*\n\nvehicle `setUnloadInCombat` [allowCargo, allowTurrets]\n\n---\n*Example 1:*\n\n```sqf\n_veh setUnloadInCombat [true, false];\n```","commands\\setUserActionText.md":"[[Image:setUserActionText.jpg|right|350px]] Changes user added action (see `addAction`) menu item text. <br><br>\n\n\n---\n*Syntaxes:*\n\nobject `setUserActionText` [actionIndex, textMenu, textWindowBackground, textWindowForeground]\n\n---\n*Example 1:*\n\n```sqf\n_id = player addAction [\"Hello\", \"\"];\nplayer setUserActionText [_id, \"Good Bye\"];\n```\n\n*Example 2:*\n\n```sqf\n_id = billboard addAction [\"Some Action\", {}];\nbillboard setUserActionText [\n\t_id, \n\t\"Some Action\", \n\t\"<t color='#ff0000'>Background-----------------</t><br>Multiline<br>Multiline<br>Multiline<br>. . .\", \n\t\"<t color='#00ff00'>-----------------Foreground</t>\"\n];\n```","commands\\setUserMFDText.md":"Stored user text value in MFD, limit is 50, user0...user49\n\n\n---\n*Syntaxes:*\n\nvehicle `setUserMFDText` [index, value]\n\n---\n*Example 1:*\n\n```sqf\n_vehicle setUserMFDText [0, \"some text\"];\n```","commands\\setUserMFDValue.md":"When MFD is using user controllers, this command can set values on them. For example, MFD config for Blackfoot has an entry\n```cpp\n// ...\nclass Draw\n{\n\talpha = \"user3\";\n\tcolor[] = {\"user0\",\"user1\",\"user2\"};\n// ...\n```\nwhich could control color of the MFD. See Example 2-3-4 on how to set different colors of the Blackfoot MFD\n\n\n---\n*Syntaxes:*\n\nvehicle `setUserMFDValue` [index, value]\n\n---\n*Example 1:*\n\n```sqf\nBIS_Plane setUserMFDValue [0,1]; // user0 in MFD will return 1\n```\n\n*Example 2:*\n\nSet MFD Red:\n\n```sqf\nBlackfoot setUserMFDValue [0, 1];\t// \"user0\" - 1\nBlackfoot setUserMFDValue [1, 0];\t// \"user1\" - 0\nBlackfoot setUserMFDValue [2, 0];\t// \"user2\" - 0\nBlackfoot setUserMFDValue [3, 1];\t// \"user3\" - 1\n```\n\n*Example 3:*\n\nSet MFD pale Blue:\n\n```sqf\nBlackfoot setUserMFDValue [0, 0];\t// \"user0\" - 0\nBlackfoot setUserMFDValue [1, 0];\t// \"user1\" - 0\nBlackfoot setUserMFDValue [2, 1];\t// \"user2\" - 1\nBlackfoot setUserMFDValue [3, 0.1];\t// \"user3\" - 0.1\n```\n\n*Example 4:*\n\nHide MFD:\n\n```sqf\nBlackfoot setUserMFDValue [3, 0];\t// \"user3\" - 0\n```","commands\\setVariable.md":"Set variable to given value in the variable space of given element. Can be used to broadcast variables over the network. To remove a variable, set it to `nil` (see *(Reference HashLink \"#Example 5\")*).\n\n\n---\n*Syntaxes:*\n\nvarspace `setVariable` [name, value, public]\n\n---\n*Example 1:*\n\n```sqf\n_myTruck setVariable [\"TAG_myPublicVariable\", 123, true];\n```\n\n*Example 2:*\n\n```sqf\n_myTruck setVariable [\"TAG_myLocalVariable\", [\"321\", _var], owner driver _myTruck];\n```\n\n*Example 3:*\n\n```sqf\nmissionNamespace setVariable [\"TAG_myName\", \"Brian\"];\nhint TAG_myName; // hints \"Brian\"\n```\n\n*Example 4:*\n\nGet the current value of a variable or, if it is undefined, define it and then get the value:\n\n```sqf\nprivate _var = missionNamespace getVariable \"VarName\";\nif (isNil \"_var\") then {\n\t_var = 123;\n\tmissionNamespace setVariable [\"VarName\", _var];\n};\n// _var now contains the current value of the missionNamespace's variable varName\n```\n\n*Example 5:*\n\nRemove **TAG_myPublicVariable}} from {{hl|_myTruck** (globally):\n\n```sqf\n_myTruck setVariable [\"TAG_myPublicVariable\", nil, true];\n```","commands\\setVectorDir.md":"Set object's direction vector. Up vector will remain unchanged.\n\n\n---\n*Syntaxes:*\n\nobject `setVectorDir` vectorDir\n\n---\n*Example 1:*\n\n```sqf\nplayer setVectorDir [5,6,1];\n```\n\n*Example 2:*\n\n```sqf\n// provided _myMine is local\n_myMine setVectorDir [0.3, 1, 0];\n_myMine setPosWorld getPosWorld _myMine; // synchronises the mine's direction over the network (special case)\n```","commands\\setVectorDirAndUp.md":"Sets orientation of an object.\nThe command takes 2 vector arrays, one for `vectorDir` and one for `vectorUp`.\nDefault object orientation will always have `vectorDir` pointing forward (North) along Y axis and `vectorUp` pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below (see also `BIS_fnc_transformVectorDirAndUp`).<br>\n\nWhen attaching object to an object the axes are relative to the object that gets the attachment.\nIf it is player object for example, then X goes from left to right, Y goes from back to front, and Z goes from down up.<br>\n\nThe `setDir` command is incompatible with `setVectorDirAndUp` and should not be used together on the same object.\nUsing `setVectorDirAndUp` alone should be sufficient for any orientation.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVectorDirAndUp` [vectorDir, vectorUp]\n\n---\n*Example 1:*\n\n```sqf\n// set exact yaw, pitch, and roll\n_y = 45; _p = -80; _r = 0;\nBRICK setVectorDirAndUp [\n\t[sin _y * cos _p, cos _y * cos _p, sin _p],\n\t[[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D\n];\n```\n\n*Example 2:*\n\nTo rotate BRICK on Z axis 90 degrees clockwise, change its `vectorDir` but leave `vectorUp` unchanged.\n\n```sqf\nBRICK setVectorDirAndUp [[1,0,0], [0,0,1]];\n```\n\n*Example 3:*\n\nTo rotate BRICK on Y axis 90 degrees clockwise, change its `vectorUp` but leave `vectorDir` unchanged.\n\n```sqf\nBRICK setVectorDirAndUp [[0,1,0], [1,0,0]];\n```\n\n*Example 4:*\n\nTo rotate BRICK on X axis 90 degrees (tilt forward), change both `vectorDir` and `vectorUp` accordingly.\n\n```sqf\nBRICK setVectorDirAndUp [[0,0,-1], [0,1,0]];\n```\n\n*Example 5:*\n\nMore complex orientations\n\n```sqf\n// tilt forward 90 + rotate left 90\nBRICK setVectorDirAndUp [[1,0,0], [0,1,0]];\n// tilt backward 45 degrees\nBRICK setVectorDirAndUp [[0,0.5,0.5], [0,-0.5,0.5]];\n// tilt forward 30 degrees\nBRICK setVectorDirAndUp [[0,0.66,-0.33], [0,0.33,0.66]];\n```","commands\\setVectorUp.md":"Set object's up vector. Direction of the object remain unchanged. Default object's `vectorUp` is [0,0,1].\n\n\n---\n*Syntaxes:*\n\nobject `setVectorUp` vectorUp\n\n---\n*Example 1:*\n\nTurn object upside down:\n\n```sqf\n_obj setVectorUp [0,0,-1];\n```\n\n*Example 2:*\n\nAlign object with the terrain underneath:\n\n```sqf\n_obj setVectorUp surfaceNormal position _obj;\n```","commands\\setVehicleAmmo.md":"Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has. Note that the ammo will be added only to `local` turrets. To check locality of turret use `turretLocal`.\n\nThe value ranges from 0 to 1.\n\n\n---\n*Syntaxes:*\n\nvehicleName `setVehicleAmmo` value\n\n---\n*Example 1:*\n\n```sqf\nplayer setVehicleAmmo 0;\n```\n\n*Example 2:*\n\n```sqf\n_vehicle setVehicleAmmo 1;\n```","commands\\setVehicleAmmoDef.md":"Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to `local` turrets. To check the locality of turret use `turretLocal`.\n\n\n---\n*Syntaxes:*\n\nunit `setVehicleAmmoDef` value\n\n---\n*Example 1:*\n\n```sqf\nplayer setVehicleAmmoDef 0;\n```","commands\\setVehicleArmor.md":"Sets the armor (or health for men) state of the vehicle (a value from 0 to 1). \n\nWorks like `setDamage`, but the other way around: 1 is full health - see *(Reference HashLink \"#Example 2\")*.\n\n\n---\n*Syntaxes:*\n\nvehicleName `setVehicleArmor` value\n\n---\n*Example 1:*\n\n```sqf\nplayer setVehicleArmor 0.5;\n```\n\n*Example 2:*\n\n```sqf\nplayer setVehicleArmor 1;\n// is the same as\nplayer setDamage 0;\n\nplayer setVehicleArmor 0;\n// is the same as\nplayer setDamage 0.97;\n```","commands\\setVehicleCargo.md":"Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded.  Can also be used to unload a specific loaded vehicle or all loaded vehicles.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVehicleCargo` cargo\n\n---\n*Example 1:*\n\nBlackfish with no vehicle cargo loaded\n\n```sqf\nprivate _success = blackfish setVehicleCargo offroad; // true\n```\n\n*Example 2:*\n\nBlackfish with full cargo already loaded\n\n```sqf\nprivate _success = blackfish setVehicleCargo offroad; // false\n```\n\n*Example 3:*\n\nUnload specific loaded vehicle (will paradrop if dropped from high altitude)\n\n```sqf\nprivate _success = objNull setVehicleCargo offroad;\n```\n\n*Example 4:*\n\nUnload all vehicles (will paradrop if dropped from high altitude)\n\n```sqf\nprivate _success = blackfish setVehicleCargo objNull;\n```","commands\\setVehicleId.md":"Sets ID to vehicle. By this ID vehicle is referenced by triggers and waypoints.\n\n\n---\n*Syntaxes:*\n\nvehicleName `setVehicleId` id\n\n---\n*Example 1:*\n\n```sqf\nplayer setVehicleId 1;\n```","commands\\setVehicleLock.md":"Sets vehicle lock. Possible values:\n<br> \n* \"UNLOCKED\" \n* \"DEFAULT\"\n* \"LOCKED\"\n* \"LOCKEDPLAYER\"\n\n\n---\n*Syntaxes:*\n\nvehicleName `setVehicleLock` lockState\n\n---\n*Example 1:*\n\n```sqf\n_veh1 setVehicleLock \"LOCKED\";\n```","commands\\setVehiclePosition.md":"Moves the object to a given position (same as `createVehicle` placement algorithm). Uses either the position that's defined by the `position` param, or one of the marker positions from the markers array. The object is placed inside a circle with `position` as its center and `placement` as its radius. The type of placement could also be controlled with `special`.<br><br>\nIf position is in water and the vehicle can float, it is placed on water surface, otherwise it is placed on the ground, even if the ground is under water. If roof surfaces support walking, units will be placed on roofs if such position is given.\n\n\n---\n*Syntaxes:*\n\nobject `setVehiclePosition` [position, markers, placement, special]\n\n---\n*Example 1:*\n\n```sqf\n// place the player at either [1000,2000], or one of the three markers positions\nplayer setVehiclePosition [[1000,2000], [\"Pos1\",\"Pos2\",\"Pos3\"], 0, \"CAN_COLLIDE\"];\n```\n\n*Example 2:*\n\n```sqf\nheli setVehiclePosition [player, [], 0, \"FLY\"];\n```\n\n*Example 3:*\n\n```sqf\n_cam = \"camera\" camCreate [0,0,0];\n_cam setDir random 360;\n_cam setVehiclePosition]] [[5000,5000], [], 1000, \"NONE\"];\n_cam setPosWorld (getPosWorld _cam vectorAdd [0,0,1.8]);\n_cam cameraEffect [\"Internal\", \"Back\"];\n```\n\n*Example 4:*\n\n```sqf\nprivate _tablePos = player getRelPos [3, 0];\nprivate _table = \"Land_CampingTable_F\" createVehicle [0,0,0];\nprivate _laptop = \"Land_Laptop_unfolded_F\" createVehicle [0,0,0];\n_table setPos _tablePos;\n_laptop setVehiclePosition [_tablePos vectorAdd [0.5, 0.2, 10], [], 0, \"CAN_COLLIDE\"];\n_laptop attachTo [_table];\n```","commands\\setVehicleRadar.md":"Sets the AI rule of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVehicleRadar` rule\n\n---\n*Example 1:*\n\n```sqf\n_vehicle setVehicleRadar 1;\n```","commands\\setVehicleReceiveRemoteTargets.md":"Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the `Side` center.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVehicleReceiveRemoteTargets` bool\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setVehicleReceiveRemoteTargets true;\n```","commands\\setVehicleReportOwnPosition.md":"Sets that the vehicle will share its own position via datalink to the `Side` center.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVehicleReportOwnPosition` report\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setVehicleReportOwnPosition true;\n```","commands\\setVehicleReportRemoteTargets.md":"Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the `Side` center.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVehicleReportRemoteTargets` bool\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setVehicleReportRemoteTargets true;\n```","commands\\setVehicleTIPars.md":"Sets the \"heat\" state of different vehicle parts for Thermal Imaging detection.\nThis allows simulation of heated up parts of a vehicle without it actually having to utilize them - on a 0..1 range - 0 being cold, 1 being hot.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVehicleTIPars` [engine, wheels, weapon]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setVehicleTIPars [1, 1, 1];\t\t\t// set all parts hot\nvehicle player setVehicleTIPars [0, 0, 0];\t\t\t// set all parts cold\nvehicle player setVehicleTIPars [0.5, 0.5, 0.5];\t// set all parts warm\n```\n\n*Example 2:*\n\n```sqf\nvehicle player setVehicleTIPars [1, 0, 0]; // set the engine warm, perfect for winter\n```","commands\\setVehicleVarName.md":"Sets string representation of an object to a custom string.<br>\nWhen a vehicle is created and named in the editor, the name becomes both the variable containing the vehicle object and the string representation of the vehicle object.\nIn scripts an extra step is needed to achieve the same effect. See [[{{PAGENAME}}#Example 1|Example 1]].\n\n\n---\n*Syntaxes:*\n\nobject `setVehicleVarName` name\n\n---\n*Example 1:*\n\n```sqf\nprivate _playersCar = vehicle player;\nsystemChat str _playersCar; // displays e.g \"ce06b00# 164274: offroad_01_unarmed_f.p3d\"\n\n_playersCar setVehicleVarName \"MyOffroad\";\nsystemChat str _playersCar;\t// displays \"MyOffroad\"\n\nisNil \"MyOffroad\"; \t\t\t// true - the MyOffroad variable is not set\nMyOffroad = _playersCar;\t// now it is\npublicVariable \"MyOffroad\";\t// broadcasts it over the network\n```\n\n*Example 2:*\n\n```sqf\n_offroad setVehicleVarName \"\"; // Reset string representation to the default value\n```","commands\\setVelocity.md":"Sets `velocity` vector of an object in m/s.\n\n\n---\n*Syntaxes:*\n\nobject `setVelocity` vector\n\n---\n*Example 1:*\n\n```sqf\n_truck1 setVelocity [20, 0, 0];\n```\n\n*Example 2:*\n\nAdvanced method used for relative acceleration:\n\n```sqf\n_vel = velocity _vehicle;\n_dir = direction _vehicle;\n_speed = 10; comment \"Added speed\";\n_vehicle setVelocity [\n\t(_vel select 0) + (sin _dir * _speed), \n\t(_vel select 1) + (cos _dir * _speed), \n\t(_vel select 2)\n];\n```","commands\\setVelocityModelSpace.md":"Sets the velocity (speed vector) of the given vehicle relative to its model.\n\n\n---\n*Syntaxes:*\n\nvehicle `setVelocityModelSpace` velocity\n\n---\n*Example 1:*\n\n```sqf\ncar setVelocityModelSpace [0, 10, 0]; // pushes car forward\n```","commands\\setVelocityTransformation.md":"`thumb`Interpolates and applies `PositionASL`, `velocity`, `vectorDir` and `vectorUp` to the given object based on the interval value.<br>\nWhen interval is 0 the \"fromXXX\" values are used for the beginning of the interpolation. When interval is 1, the \"toXXX\" values are used for the end of interpolation. When interval value is in between, interpolated values are used (see diagram below). The interpolation is linear and along straight line between \"from\" and \"to\" positions. If curve is needed, then it should be constructed from multiple straight sections or by dynamically changing value of position params during the interpolation cycle, similar to [Quadratic Curve animation](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_curves) (see Example 3).\n<br>\nThe `velocity` param doesn't do much in SP, but in MP, provided the velocity component is set correctly, it helps the engine to figure out what the next position of the moving object should be on other clients.<br><br>\nThe actual approximate interpolation formula for this command is:\n\n```sqf\n_vecCurrent = _vecFrom vectorAdd (_vecTo vectorDiff _vecFrom vectorMultiply _interval);\n```\n\n\n---\n*Syntaxes:*\n\nobject `setVelocityTransformation` [fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval, customCenter]\n\n---\n*Example 1:*\n\n```sqf\n_tracker setVelocityTransformation \n[\n\t_currentPos,\n\t_nextPos,\n\t_currentVelocity,\n\t_nextVelocity,\n\t_currentVectorDir,\n\t_nextVectorDir,\n\t_currentVectorUp,\n\t_nextVectorUp,\n\t_interval\n];\n```\n\n*Example 2:*\n\nBob on imaginary stairway to heaven:\n\n```sqf\nbob = createAgent [\"C_man_1\", player getRelPos [5, 0], [], 0, \"CAN_COLLIDE\"];\nbob switchMove \"ladderCivilUpLoop\";\npos1 = getPosASL bob;\npos2 = pos1 vectorAdd [0,0,0.75];\nbob addEventHandler [\"AnimDone\", \n{\n\tpos1 = pos2;\n\tpos2 = pos2 vectorAdd [0,0,0.75]\n}];\nonEachFrame\n{\n\tif (!alive bob) then \n\t{\n\t\tonEachFrame {};\n\t\tbob switchMove \"\";\n\t\tbob removeAllEventHandlers \"AnimDone\";\n\t};\n\tbob setVelocityTransformation [\n\t\tpos1, \n\t\tpos2, \n\t\t[0,0,0], \n\t\t[0,0,0], \n\t\t[0,1,0], \n\t\t[0,1,0], \n\t\t[0,0,1], \n\t\t[0,0,1],\n\t\tmoveTime bob\n\t];\n};\n```\n\n*Example 3:*\n\nAdvanced trickery with curved movement. The curve is controlled with one control point (controlPointASL), just like quadratic Bézier curve:\n\n```sqf\ndisableSerialization;\nplayer setDir 0;\ninterval = 0;\n_disp = findDisplay 46 createDisplay \"RscDisplayEmpty\";\n_ctrl = _disp ctrlCreate [\"RscSlider\", -1];\n_ctrl ctrlSetPosition [safeZoneX + 0.1, 1, safeZoneW - 0.2, 0.1];\n_ctrl ctrlSetActiveColor [1,0,0,1];\n_ctrl ctrlCommit 0;\n_ctrl sliderSetPosition 0;\n_ctrl sliderSetRange [0,1];\n_ctrl sliderSetSpeed [0.1,0.5];\n_ctrl ctrlAddEventHandler [\"SliderPosChanged\", {interval = _this select 1}];\nctrlSetFocus _ctrl;\nbox = \"Land_VR_Shape_01_cube_1m_F\" createVehicle [0,0,0];\ncontrolPointASL = AGLToASL (player getRelPos [70, -30]) vectorAdd [0, 0, 30];\nfromPosASL = AGLToASL (player getRelPos [10, -45]);\ntoPosASL = AGLToASL (player getRelPos [10, 45]);\nfromControlPointOffset = controlPointASL vectorDiff fromPosASL;\ntoControlPointOffset = toPosASL vectorDiff controlPointASL;\nonEachFrame\n{\n\thintSilent format [\"Interval: %1\", interval];\n\tbox setVelocityTransformation\n\t[\n\t\tfromPosASL vectorAdd (fromControlPointOffset vectorMultiply interval),\n\t\tcontrolPointASL vectorAdd (toControlPointOffset vectorMultiply interval),\n\t\t[0,0,0],\n\t\t[0,0,0],\n\t\t[0,1,0],\n\t\t[1,0,0],\n\t\t[0,0,1],\n\t\t[0,1,0],\n\t\tinterval\n\t];\n};\n```","commands\\setViewDistance.md":"Set rendering distance. Setting view distance to <{{=}} 0 resets the value to the client's options (set in **Options → Video → General → Visibility → Overall**).\n\n\n---\n*Syntaxes:*\n\n`setViewDistance` distance\n\n---\n*Example 1:*\n\n```sqf\nsetViewDistance 2250;\n```\n\n*Example 2:*\n\n```sqf\nsetViewDistance -1; // reset view distance in Arma 3\n```","commands\\setVisibleIfTreeCollapsed.md":"Sets whether or not the object is visible even if the tree is collapsed.\n\n\n---\n*Syntaxes:*\n\nmap `setVisibleIfTreeCollapsed` [object, visible]\n\n---\n*Example 1:*\n\n```sqf\n_map setVisibleIfTreeCollapsed [\"_unit_0\", true];\n```","commands\\setWantedRPMRTD.md":"Tell the helicopter engine RPMs to reach the given value within a period of time. The simulation will try to reach the RPMs, but it does not guarantee it will reach the precise value!\n* engine index 0: engine #1\n* engine index 1: engine #2\n* engine index 2: engine #3\n* engine index -1: all engines\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `setWantedRPMRTD` [value, time, engineIndex]\n\n---\n*Example 1:*\n\n```sqf\nvehicle player setWantedRPMRTD [2500, 30, 0];\n```","commands\\setWaves.md":"Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.<br><br>\n`NOTE`: This command will have no effect (even though the value of `waves` changes) unless **Manual Override** option is selected in the editor in the Intel, which is normally off.<br><br>\n[[Image:setWaves.jpg|left|600px]]\n\n\n---\n*Syntaxes:*\n\ntime `setWaves` value\n\n---\n*Example 1:*\n\n```sqf\n180 setWaves .5;\n```\n\n*Example 2:*\n\n```sqf\n0 setWaves 1;\n```","commands\\setWaypointBehaviour.md":"Switches the unit behaviour when the waypoint becomes active.\n<br>\n<br>\nPossible values are:\n* \"UNCHANGED\"\n* \"CARELESS\"\n* \"SAFE\"\n* \"AWARE\"\n* \"COMBAT\"\n* \"STEALTH\"\n\nSee the `AIBehaviour` page for details of the effect of this command on AI units.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointBehaviour` mode\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointBehaviour \"AWARE\";\n```","commands\\setWaypointCombatMode.md":"Changes a group's combat mode when the waypoint becomes active.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointCombatMode` mode\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointCombatMode \"RED\";\n```","commands\\setWaypointCompletionRadius.md":"The completion radius allows units to call the waypoint completed once they are inside of the given circle. However, `fleeing` units that are not in `player`'s `Group` will ignore the completion radius.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointCompletionRadius` radius\n\n---\n*Example 1:*\n\n```sqf\n[grp, 2] setWaypointCompletionRadius 30;\n```","commands\\setWaypointDescription.md":"Sets the description shown in the HUD while the waypoint is active.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointDescription` text\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointDescription \"Move here.\";\n```","commands\\setWaypointForceBehaviour.md":"Forces the behavior of waypoint, disables AUTOCOMBAT.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointForceBehaviour` state\n\n---\n*Example 1:*\n\n```sqf\n[grp, 2] setWaypointForceBehaviour true;\n```","commands\\setWaypointFormation.md":"Switches the group formation when the waypoint becomes active.\n<br>\n<br>\nPossible values are: \n* \"NO CHANGE\"\n* \"COLUMN\"\n* \"STAG COLUMN\"\n* \"WEDGE\"\n* \"ECH LEFT\"\n* \"ECH RIGHT\"\n* \"VEE\"\n* \"LINE\"\n* \"FILE\"\n* \"DIAMOND\"\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointFormation` formation\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointFormation \"LINE\";\n```","commands\\setWaypointHousePosition.md":"For waypoints attached to a house, this defines the target `buildingPos` index.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointHousePosition` pos\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointHousePosition 1;\n```","commands\\setWaypointLoiterAltitude.md":"Assigns loiter altitude to the provided waypoint.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointLoiterAltitude` loiterAltitude\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointLoiterAltitude 100;\n```","commands\\setWaypointLoiterRadius.md":"Assignes loiter radius to waypoint\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointLoiterRadius` radius\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointLoiterRadius 200;\n```","commands\\setWaypointLoiterType.md":"Sets the waypoint loiter type.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointLoiterType` type\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointLoiterType \"CIRCLE\";\n```\n\n*Example 2:*\n\n```sqf\n[_grp, 2] setWaypointLoiterType \"CIRCLE_L\";\n```","commands\\setWaypointName.md":"Changes the waypoint name.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointName` name\n\n---\n*Example 1:*\n\n```sqf\n[_grp,2] setWaypointName \"myName\";\n```","commands\\setWaypointPosition.md":"Attempts to move given waypoint to a random position inside a circle with the given center and radius. \nThe waypoint will be placed similar to **\"NONE\"}} attribute in `setVehiclePosition`, even if the radius is 0, which means it could still be off center. In order to force waypoint to the exact position, similar to *(Reference hl \"\"CAN_COLLIDE\"\")* attribute, use a negative radius (see {{Link|#Example 2**).\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointPosition` [center, radius]\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointPosition [position player, 0];\n```\n\n*Example 2:*\n\nExact placement using a negative `radius` and `PositionASL`:\n\n```sqf\n_wp setWaypointPosition [getPosASL player, -1];\n```","commands\\setWaypointScript.md":"Attaches a script to a scripted waypoint. In early versions of Arma, command consisted of a script name and additional script arguments and the script had to use `SQS Syntax`. The script receives the following arguments in `_this` variable: [group, position, target] + [the optional passed arguments]. The optional arguments are `append`ed to the end of the arguments array.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointScript` command\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointScript \"find.sqs player\";\n```\n\n*Example 2:*\n\n```sqf\n[_grp, 2] setWaypointScript \"somescript.sqf [1,2,3,4,5,6,7,8]\";\n```","commands\\setWaypointSpeed.md":"Switches the group speed mode when the waypoint becomes active.\n<br>\n<br>\nPossible values are:\n* \"UNCHANGED\"\n* \"LIMITED\"\n* \"NORMAL\"\n* \"FULL\"\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointSpeed` mode\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointSpeed \"FULL\";\n```","commands\\setWaypointStatements.md":"The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.<br>\nWithin the Condition & Statement code string:\n* [[Magic Variables#this_2|this]] refers to the group leader\n* `thisList` refers to the group's units\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointStatements` [condition, statement]\n\n---\n*Example 1:*\n\n```sqf\n_waypoint setWaypointStatements [\"true\", \"hint 'hello'; hint 'goodbye'\"];\n```\n\n*Example 2:*\n\n```sqf\n_waypoint setWaypointStatements [\"true\", \"diag_log ['GroupLeader: ', this]; diag_log ['Units: ', thislist]\"];\n```","commands\\setWaypointTimeout.md":"Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid).\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointTimeout` [min, mid, max]\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] setWaypointTimeout [5, 10, 6];\n```","commands\\setWaypointType.md":"Sets the waypoint type of given waypoint. \n\nMore details at `Waypoints`.\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointType` type\n\n---\n*Example 1:*\n\n```sqf\n_myWaypoint setWaypointType \"HOLD\";\n```","commands\\setWaypointVisible.md":"Sets the visibility of the given waypoint in 3D HUD view (for map visibility see `showWaypoint`).\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWaypointVisible` visible\n\n---\n*Example 1:*\n\n```sqf\n[grp, 2] setWaypointVisible false;\n```\n\n*Example 2:*\n\n```sqf\n[group player, currentWaypoint group player] setWaypointVisible false;\n```","commands\\setWeaponReloadingTime.md":"Sets reloading `phase` on the given weapon's current ammo round.\n\n\n---\n*Syntaxes:*\n\nvehicle `setWeaponReloadingTime` [gunner, muzzleName, reloadTime]\n\n---\n*Example 1:*\n\n```sqf\n_success = _vehicle setWeaponReloadingTime [gunner vehicle player, currentMuzzle gunner vehicle player, 0.5];\n```\n\n*Example 2:*\n\nBoost RPM:\n\n```sqf\nunit addEventHandler [\"Fired\", {\n\t_this # 0 setWeaponReloadingTime [_this # 0, _this # 2, 1/3];\n}];\n```","commands\\setWeaponZeroing.md":"Sets zeroing of given weapon and muzzle for given unit or vehicle.\n\n\n---\n*Syntaxes:*\n\nobject `setWeaponZeroing` [weaponClass, muzzleClass, zeroingIndex]\n\n---\n*Example 1:*\n\n```sqf\nplayer setWeaponZeroing [\"arifle_MX_GL_F\", \"GL_3GL_F\", 8]; // Set zeroing for underbarrel grenade launcher to 400m\n```","commands\\setWind.md":"Set current or permanent wind vector.\n\n\n---\n*Syntaxes:*\n\n`setWind` [x, y, forced]\n\n---\n*Example 1:*\n\n```sqf\nsetWind [10, 10, true];\n```","commands\\setWindDir.md":"Changes the wind direction smoothly.\n\n\n---\n*Syntaxes:*\n\ntime `setWindDir` value\n\n`setWindDir` direction\n\n---\n*Example 1:*\n\n```sqf\n60 setWindDir 180;\n```\n\n*Example 2:*\n\n```sqf\nsetWindDir [1, -15];\n```","commands\\setWindForce.md":"Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.\n\n\n---\n*Syntaxes:*\n\ntime `setWindForce` wind\n\n---\n*Example 1:*\n\n```sqf\n1800 setWindForce 0.5;\n```","commands\\setWindStr.md":"Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\n\n\n---\n*Syntaxes:*\n\ntime `setWindStr` value\n\n---\n*Example 1:*\n\n```sqf\n60 setWindStr 0.8; // set the wind strength to 0.8 gradually over the next 60 seconds\n```","commands\\setWingForceScaleRTD.md":"Set effectivity of wings.\n\n\n---\n*Syntaxes:*\n\nhelicopterRTD `setWingForceScaleRTD` [leftHorizontal, rightHorizontal, vertical]\n\n---\n","commands\\setWPPos.md":"Sets waypoint position <br><br>\n*(Reference  Feature  \" Informative | This command is identical to **`setWaypointPosition` [pos, -1]\")* (see command description for more info)**\n\n\n---\n*Syntaxes:*\n\nwaypoint `setWPPos` pos\n\n---\n*Example 1:*\n\n```sqf\n[_groupOne, 1] setWPPos markerPos \"MarkerOne\";\n```","commands\\show3DIcons.md":"Toggle the drawing of 3D icons.\n\n\n---\n*Syntaxes:*\n\nmap [[show3DIcons]] bool\n\n---\n*Example 1:*\n\n-","commands\\showChat.md":"Shows/hides the whole chat window.\n\n\n---\n*Syntaxes:*\n\n`showChat` bool\n\n---\n*Example 1:*\n\n```sqf\nshowChat false;\n```","commands\\showCinemaBorder.md":"Forces drawing of cinema borders when using custom camera `camCreate`. This is normally used in cutscenes to indicate player has no control.\n\n\n---\n*Syntaxes:*\n\n`showCinemaBorder` show\n\n---\n*Example 1:*\n\n```sqf\nshowCinemaBorder false;\n```","commands\\showCommandingMenu.md":"Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.<br><br>\nIf commanding menu has \"expression\" set up, the expression will receive the following arguments when user activated the menu item:\n* Local variable  **_target**: `Object` - Target under the cursor. This works in both 3D and 2D (when cursor is over the unit icon on the map).\n* Local variable **_pos**: `Array` - Cursor position.\n* Local variable **_is3D**: `Boolean` - `false` if cursor is over the map, otherwise `true`.\n\n\n---\n*Syntaxes:*\n\n`showCommandingMenu` name\n\n---\n*Example 1:*\n\n```sqf\nshowCommandingMenu \"\";\n```\n\n*Example 2:*\n\n```sqf\nshowCommandingMenu \"MyClassName\";\n```\n\n*Example 3:*\n\n```sqf\nshowCommandingMenu \"#USER:Tag_Menu_myMenu_0\";\n```\n\n*Example 4:*\n\n```sqf\nshowCommandingMenu \"RscMainMenu\";\n```","commands\\showCompass.md":"Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default `true`)\n\n\n---\n*Syntaxes:*\n\n`showCompass` show\n\n---\n*Example 1:*\n\n```sqf\nshowCompass false;\n```","commands\\showCuratorCompass.md":"Hides or shows compass in curator interface.\n\n\n---\n*Syntaxes:*\n\n`showCuratorCompass` bool\n\n---\n*Example 1:*\n\n```sqf\nshowCuratorCompass true;\n```","commands\\showGPS.md":"Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default `false`).\n\n\n---\n*Syntaxes:*\n\n`showGPS` show\n\n---\n*Example 1:*\n\n```sqf\nshowGPS true;\n```","commands\\showHUD.md":"Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with [[drawIcon3D]].\n\n\n---\n*Syntaxes:*\n\n`showHUD` enable\n\n`showHUD` [scriptedHUD, info radar, compass, direction, menu, group, cursors, panels, kills, showIcon3D]\n\n---\n*Example 1:*\n\n```sqf\nshowHUD false;\n```\n\n*Example 2:*\n\nHide vehicle radar and compass:\n\n```sqf\nshowHUD [\n  true, // scriptedHUD\n  true, // info\n  true, // radar\n  true, // compass\n  true, // direction\n  true, // menu\n  true, // group\n  true, // cursors\n  true, // panels\n  true, // kills\n  true  // showIcon3D\n];\n```\n\n*Example 3:*\n\nCheck if HUD visibility is hardcoded in mission config and `showHUD` command is overriden:\n\n```sqf\nprivate _disabledShowHUD = isArray (missionConfigFile >> \"showHUD\");\n```","commands\\showLegend.md":"Show/hide map legend.\n\n\n---\n*Syntaxes:*\n\nmap `showLegend` bool\n\n---\n*Example 1:*\n\n-","commands\\showMap.md":"Enable Map (default `true`)\n\n\n---\n*Syntaxes:*\n\n`showMap` show\n\n---\n*Example 1:*\n\n```sqf\nshowMap false;\n```","commands\\shownArtilleryComputer.md":"Checks whether the player has the artillery computer currently open.\n\n\n---\n*Syntaxes:*\n\n`shownArtilleryComputer`\n\n---\n*Example 1:*\n\n```sqf\nif (shownArtilleryComputer) then { hint \"Artillery Computer shown on screen\"; };\n```","commands\\shownChat.md":"Returns `true` if chat window is enabled. Chat window can be disabled with `showChat` command.\n\n\n---\n*Syntaxes:*\n\n`shownChat`\n\n---\n*Example 1:*\n\n```sqf\n_bool = shownChat;\n```","commands\\shownCompass.md":"Checks if client has Compass enabled in `description.ext` (`showCompass` param) or force enabled with `showCompass` command.\n\n\n---\n*Syntaxes:*\n\n`shownCompass`\n\n---\n*Example 1:*\n\n```sqf\nif (shownCompass) then {hint \"You have Compass enabled\"};\n```","commands\\shownCuratorCompass.md":"Returns true if compass is shown.\n\n\n---\n*Syntaxes:*\n\n`shownCuratorCompass`\n\n---\n*Example 1:*\n\n```sqf\n_isShown = shownCuratorCompass;\n```","commands\\showNewEditorObject.md":"Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.\n\n\n---\n*Syntaxes:*\n\nmap `showNewEditorObject` [type,class,side,position]\n\n---\n*Example 1:*\n\n-","commands\\shownGPS.md":"Checks if client has GPS reciever enabled in `description.ext` (`showGPS` param) or force enabled with `showGPS` command.\n\n\n---\n*Syntaxes:*\n\n`shownGPS`\n\n---\n*Example 1:*\n\n```sqf\nif (shownGPS) then {hint \"You have GPS reciever enabled\"};\n```","commands\\shownHUD.md":"Returns array of `Boolean`s corresponding to the visibility of various HUD elements (see extended `showHUD`).\n\n\n---\n*Syntaxes:*\n\n`shownHUD`\n\n---\n*Example 1:*\n\n```sqf\n_hudStatus = shownHUD;\n```","commands\\shownMap.md":"Checks if client has Map enabled in `description.ext` (`showMap` param) or force enabled with `showMap` command.\n\n\n---\n*Syntaxes:*\n\n`shownMap`\n\n---\n*Example 1:*\n\n```sqf\nif (shownMap) then {hint \"You have Map enabled\"};\n```","commands\\shownPad.md":"Checks if client has Notepad enabled.\n\n\n---\n*Syntaxes:*\n\n`shownPad`\n\n---\n*Example 1:*\n\n```sqf\nif (shownPad) then {hint \"You have Notepad enabled.\"};\n```","commands\\shownRadio.md":"Check if player has Radio enabled.\n\n\n---\n*Syntaxes:*\n\n`shownRadio`\n\n---\n*Example 1:*\n\n```sqf\nif (shownRadio) then {hint \"You have Radio enabled.\"};\n```","commands\\shownScoretable.md":"Returns the state of the score table set with `showScoretable` command.\n\n\n---\n*Syntaxes:*\n\n`shownScoretable`\n\n---\n*Example 1:*\n\n```sqf\n_state = shownScoretable;\n```","commands\\shownSubtitles.md":"A getter for `showSubtitles`.\n\n\n---\n*Syntaxes:*\n\n`shownSubtitles`\n\n---\n*Example 1:*\n\n```sqf\nprivate _setToShow = shownSubtitles;\n```","commands\\shownUAVFeed.md":"Returns `true` if video feed transmitted from UAV is shown. A getter for `showUAVFeed`.\n\n\n---\n*Syntaxes:*\n\n`shownUAVFeed`\n\n---\n*Example 1:*\n\n```sqf\n_bool = shownUAVFeed;\n```","commands\\shownWarrant.md":"Check if player has ID card enabled. Obsolete command.\n\n\n---\n*Syntaxes:*\n\n`shownWarrant`\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"Your ID is %1\", [\"off\", \"on\"] select shownWarrant];\n```","commands\\shownWatch.md":"Checks if client has Watch enabled in `description.ext` (`showWatch` param) or force enabled with `showWatch` command.\n\n\n---\n*Syntaxes:*\n\n`shownWatch`\n\n---\n*Example 1:*\n\n```sqf\nif (shownWatch) then {hint \"You have Watch enabled\"};\n```","commands\\showPad.md":"Shows or hides the notebook on the map screen, if enabled for the mission. (default `true`). It is no longer relevant to Arma 2.\n\n\n---\n*Syntaxes:*\n\n`showPad` show\n\n---\n*Example 1:*\n\n```sqf\nshowPad false;\n```","commands\\showRadio.md":"Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default `true`).\n\n\n---\n*Syntaxes:*\n\n`showRadio` show\n\n---\n*Example 1:*\n\n```sqf\nshowRadio false;\n```","commands\\showScoretable.md":"Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be  closed manually, when it is force closed, it cannot be opened manually.\n\n\n---\n*Syntaxes:*\n\n`showScoretable` force\n\n---\n*Example 1:*\n\n```sqf\nshowScoretable 1;\n```","commands\\showSubtitles.md":"Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected. Returns the previous state.\n\n\n---\n*Syntaxes:*\n\n`showSubtitles` enable\n\n---\n*Example 1:*\n\n```sqf\nshowSubtitles false;\n```","commands\\showUAVFeed.md":"Shows/hides video feed transmitted from UAV in [[Arma 3 Custom Info|its custom info panel]].\n\n\n---\n*Syntaxes:*\n\n`showUAVFeed` show\n\n---\n*Example 1:*\n\n```sqf\nshowUAVFeed true;\n```","commands\\showWarrant.md":"Enable ID card.\n\n\n---\n*Syntaxes:*\n\n`showWarrant` show\n\n---\n*Example 1:*\n\n```sqf\nshowWarrant true;\n```","commands\\showWatch.md":"Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default `true`)\n\n\n---\n*Syntaxes:*\n\n`showWatch` show\n\n---\n*Example 1:*\n\n```sqf\nshowWatch false;\n```","commands\\showWaypoint.md":"Defines how waypoints are shown to the player in map view. For 3D HUD visibility see `setWaypointVisible`.\n\n\n---\n*Syntaxes:*\n\nwaypoint `showWaypoint` show\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] showWaypoint \"ALWAYS\";\n```","commands\\showWaypoints.md":"Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings.\n\n\n---\n*Syntaxes:*\n\n`showWaypoints` enabled\n\n---\n*Example 1:*\n\n```sqf\nshowWaypoints true;\n```","commands\\side.md":"Returns the side of a unit, vehicle, object or location.\n* side of a renegade soldier is `sideEnemy`\n* side of an empty vehicle is `civilian`\n* side of a crewed vehicle is, if present, commander's > gunner's > driver's or > cargo's side, in this order\n* side of a captive or dead unit is `civilian`. Use <sqf inline>side group _unit\n``` to get the underlying side (see *(Reference Link \"#Example 2\")*)\n* you can use `playerSide` to know the real player's side\n\n\n---\n*Syntaxes:*\n\n`side` target\n\n---\n*Example 1:*\n\n```sqf\nif (side player == west) then { hint \"Player is on the West side\" };\n```\n\n*Example 2:*\n\n```sqf\n_sideAlsoWorkingForDead = side group _deadUnit;\n```\n\n*Example 3:*\n\n```sqf\n_sideLocation = side myLocation;\n```\n\n*Example 4:*\n\n```sqf\nif (side player != playerSide) then { hint \"player is renegade or dead\"; };\n```\n\n*Example 5:*\n\nCheck the `side` of the vehicle:\n\n```sqf\n_vehicleSide = side group _vehicle; // sideUnknown (CIV for Arma 3) if empty or dead crew, otherwise the appropriate side\n```","commands\\sideAmbientLife.md":"Returns side of ambient life, for example ambient life placed in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n`sideAmbientLife`\n\n---\n*Example 1:*\n\n```sqf\n_sideAmbientLife = sideAmbientLife;\n```","commands\\sideChat.md":"Types text to the side radio channel by the specified unit.\n\n\n---\n*Syntaxes:*\n\nunit `sideChat` chatText\n\n[side, identity] `sideChat` chatText\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne sideChat \"Show this text\";\n```\n\n*Example 2:*\n\n```sqf\n[west, \"HQ\"] sideChat \"Hi there\";\n```\n\n*Example 3:*\n\n```sqf\ndriver vehicle player sideChat \"sideChat\";\ndriver vehicle player globalChat \"globalChat\";\ndriver vehicle player groupChat \"groupChat\";\nvehicle player vehicleChat \"vehicleChat\";\ndriver vehicle player commandChat \"commandChat\";\ndriver vehicle player customChat [1, \"customChat\"];\nsystemChat \"systemChat\";\n```\n\n*Example 4:*\n\n```sqf\n[[blufor, \"BLU\"], \"message\"] remoteExec [\"sideChat\"]; // shows the message to all players\n```\n\n*Example 5:*\n\n```sqf\nunit setGroupId [\"Cpt. Miller\"]; // changes the group's callsign\nunit sideChat \"Hello ladies!\";\n```","commands\\sideEmpty.md":"Returns empty side, for example static buildings in `Eden Editor`.\n\n\n---\n*Syntaxes:*\n\n`sideEmpty`\n\n---\n*Example 1:*\n\n```sqf\n_sideEmpty = sideEmpty;\n```","commands\\sideEnemy.md":"The enemy `side` which is used for renegades. Units of this side are hostile to everyone.\n* To join `sideEnemy`, you can attack members of your own side or use `addRating`.\n* When below a `rating` of -2000 units switch automatically to this side.\n\n\n---\n*Syntaxes:*\n\n`sideEnemy`\n\n---\n*Example 1:*\n\n```sqf\nif (side player == sideEnemy) then\n{\n\thint \"We've got a renegade!\";\n};\n```","commands\\sideFriendly.md":"The Friendly side - friendly to all, see `Side relations`.\n\n\n---\n*Syntaxes:*\n\n`sideFriendly`\n\n---\n*Example 1:*\n\n```sqf\nif (side player == sideFriendly) then { hint \"I feel friendly today!\"; };\n```","commands\\sideLogic.md":"The Logic `side`. Side of `Game Logic`s and `Modules`.\n\n\n---\n*Syntaxes:*\n\n`sideLogic`\n\n---\n*Example 1:*\n\n```sqf\nif (side _obj == sideLogic) then\n{\n\thint \"It is a logic!\";\n};\n```","commands\\sideRadio.md":"Sends the audio message to the side radio channel. The message is defined in CfgRadio in the `description.ext` file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\nunit `sideRadio` radioName\n\n[side, identity] `sideRadio` radioName\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne sideRadio \"messageOne\";\n```\n\n*Example 2:*\n\n```sqf\nplayer sideRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```\n\n*Example 3:*\n\n```sqf\n[west, \"Base\"] sideRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```","commands\\sideUnknown.md":"The unknown `side`.\n<br>Used when the side of a unit is unknown, e.g. for spotted targets with insufficient information.\n\n\n---\n*Syntaxes:*\n\n`sideUnknown`\n\n---\n*Example 1:*\n\n```sqf\n//soldier1 and soldier2 of different sides and out of sight\nsoldier1 reveal soldier2;\nhint str (soldier1 nearTargets 1000);\n//returns: [[[1557.96,5047.4,1.32402],\"SoldierWB\",UNKNOWN,0.0155183,soldier2,5]]\nsoldier1 reveal [soldier2,1.5];\n//returns: [[[1556.52,5050.08,1.32402],\"SoldierWB\",WEST,0.0211193,soldier2,5]]\n```","commands\\simpleTasks.md":"Return all simple tasks assigned to given unit.\n\n\n---\n*Syntaxes:*\n\n`simpleTasks` unit\n\n---\n*Example 1:*\n\n```sqf\n_tasks = simpleTasks player;\n```","commands\\simulationEnabled.md":"Check if the entity has enabled simulation.\n\n\n---\n*Syntaxes:*\n\n`simulationEnabled` entity\n\n---\n*Example 1:*\n\n```sqf\nsimulationEnabled player;\n```","commands\\simulCloudDensity.md":"Returns density of clouds at given position.\n\n\n---\n*Syntaxes:*\n\n`simulCloudDensity` pos\n\n---\n*Example 1:*\n\n```sqf\nsimulCloudDensity getPos player;\n```","commands\\simulCloudOcclusion.md":"Returns clouds occlusion between two given points.\n\n\n---\n*Syntaxes:*\n\n`simulCloudOcclusion` [pos1, pos2]\n\n---\n*Example 1:*\n\n```sqf\nprivate _posPlayer = getPos player;\nprivate _posAbovePlayer = +_posPlayer; _posAbovePlayer set [2,200];\nsimulCloudOcclusion [_posPlayer, _posAbovePlayer];\n```","commands\\simulInClouds.md":"Returns if given position is in clouds.\n\n\n---\n*Syntaxes:*\n\n`simulInClouds` pos\n\n---\n*Example 1:*\n\n```sqf\nsimulInClouds getPos player;\n```","commands\\simulSetHumidity.md":"Sets simul cloud cover. This command does not affect overcast value.\n\n\n---\n*Syntaxes:*\n\n`simulSetHumidity` humidity\n\n---\n*Example 1:*\n\n```sqf\nsimulSetHumidity 1;\n```\n\n*Example 2:*\n\nWhen combined with `setOvercast` 1 this command will also start random strength rain.\n```sqf\nskipTime -24;\n86400 setOvercast 1;\nskipTime 24;\nsimulSetHumidity 1;\n```Creates rainy looking weather, followed by thunder in about 10 seconds and rain in about 20.","commands\\simulWeatherSync.md":"Synchronizes Simul Weather with Arma weather, generates all keyframes.\n\n\n---\n*Syntaxes:*\n\n`simulWeatherSync`\n\n---\n*Example 1:*\n\n```sqf\nsimulWeatherSync;\n```","commands\\sin.md":"Sine of x.\n\n\n---\n*Syntaxes:*\n\n`sin` x\n\n---\n*Example 1:*\n\n```sqf\n_sine = sin 30; // result is 0.5\n```","commands\\size.md":"Returns a location's size.\n\n\n---\n*Syntaxes:*\n\n`size` location\n\n---\n*Example 1:*\n\n```sqf\n_locSize = size myLocation;\n```","commands\\sizeOf.md":"Returns the diameter of bounding sphere of the object of given classname in meters. If you need to estimate the size of the object more precisely, use `boundingBox` or `boundingBoxReal`.\n\n\n---\n*Syntaxes:*\n\n`sizeOf` classname\n\n---\n*Example 1:*\n\n```sqf\n_dimension = sizeOf \"M1Abrams\"; // Returns 10.7833\n```","commands\\skill.md":"Returns current skill of a unit, in range between 0 to 1, 1 being the highest level of skill.\n\n\n---\n*Syntaxes:*\n\n`skill` unit\n\nunitName `skill` skillName\n\n---\n*Example 1:*\n\n```sqf\n_skill = skill unit1;\n```\n\n*Example 2:*\n\n```sqf\n_myCourage = player skill \"courage\";\n```","commands\\skillFinal.md":"Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).\n\n\n---\n*Syntaxes:*\n\nunit `skillFinal` skillName\n\n---\n*Example 1:*\n\n```sqf\n_unitTrueCourage = unit1 skillFinal \"courage\";\n```","commands\\skipTime.md":"Jumps the specified number of hours forward or backward.<br>The time of day and tides are adjusted, but no changes are made to any units. If present, the lower level of clouds instantly jump to the position they would be in if time had passed normally.\n\n\n---\n*Syntaxes:*\n\n`skipTime` duration\n\n---\n*Example 1:*\n\n```sqf\nskipTime 5;\n```\n\n*Example 2:*\n\n```sqf\nskipTime (5/60); // be sure to use parentheses, otherwise here (skipTime 5)/60 will happen\n```\n\n*Example 3:*\n\n```sqf\nwhile {true} do \n{\n\tskipTime 0.00333;\n\tsleep 0.1; // smooth time transition\n};\n```\n\n*Example 4:*\n\n```sqf\nskipTime ((_timeToSkipTo - dayTime + 24) % 24); // skip forward to a specific time, irrespective of the current mission time\n```","commands\\sleep.md":"Suspends code execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected. Must be called inside of a context which is interruptible, i.e. a `script` executed by `execVM` or `spawn`.\n\n\n---\n*Syntaxes:*\n\n`sleep` delay\n\n---\n*Example 1:*\n\n```sqf\n0 spawn {\n\tsleep 5;\n\thint \"after (at least) 5 seconds...\";\n};\n```\n\n*Example 2:*\n\n```sqf\nsleep 5 + random 10;\t// incorrect - will only sleep for 5 seconds, as it will be interpreted as (sleep 5) (+(random 10))\nsleep (5 + random 10);\t// correct\n```","commands\\sliderPosition.md":"Returns current thumb position of `CT_SLIDER` or `CT_XSLIDER` with given idc of topmost user `dialog`.\n\n\n---\n*Syntaxes:*\n\n`sliderPosition` idc\n\n`sliderPosition` control\n\n---\n*Example 1:*\n\n```sqf\n_slidepos1 = sliderPosition 105;\n```","commands\\sliderRange.md":"Returns limits of `CT_SLIDER` or `CT_XSLIDER`.\n\n\n---\n*Syntaxes:*\n\n`sliderRange` idc\n\n`sliderRange` control\n\n---\n*Example 1:*\n\n```sqf\nsliderRange _ctrlSlider params [\"_minValue\", \"_maxValue\"];\n```","commands\\sliderSetPosition.md":"Sets current thumb position of `CT_SLIDER` or `CT_XSLIDER`.\n\n\n---\n*Syntaxes:*\n\n`sliderSetPosition` [idc, pos]\n\ncontrol `sliderSetPosition` pos\n\n---\n*Example 1:*\n\n```sqf\n_ctrlSlider sliderSetPosition 50;\n```","commands\\sliderSetRange.md":"Sets limits of `CT_SLIDER` or `CT_XSLIDER`.\n\n\n---\n*Syntaxes:*\n\n`sliderSetRange` [idc, min, max]\n\ncontrol `sliderSetRange` [min, max]\n\n---\n*Example 1:*\n\n```sqf\nsliderSetRange [101, 0, 100];\n```","commands\\sliderSetSpeed.md":"Sets slider line step and page step delta amount as well as optional step amount of `CT_SLIDER` or `CT_XSLIDER` with given idc of topmost user `dialog`. \n* Click to arrow - move by line\n* Click to scale outside thumb - move by page.\n\n\n---\n*Syntaxes:*\n\n`sliderSetSpeed` [idc, line, page, step]\n\ncontrol `sliderSetSpeed` [line, page, step]\n\n---\n*Example 1:*\n\n```sqf\nsliderSetSpeed [101, 0.5, 2];\n```","commands\\sliderSpeed.md":"Returns slider step value for line and page movement of `CT_SLIDER` or `CT_XSLIDER`.\n\n\n---\n*Syntaxes:*\n\n`sliderSpeed` idc\n\n`sliderSpeed` control\n\n---\n*Example 1:*\n\n```sqf\nsliderSpeed _ctrlSlider params [\"_min\", \"_max\"];\n```\n\n*Example 2:*\n\nSince Arma 3 v2.07.148151:\n\n```sqf\nsliderSpeed _ctrlSlider params [\"_min\", \"_max\", \"_step\"];\n```","commands\\slingLoadAssistantShown.md":"Returns `true` if Sling Load Assistant is open.\n\n\n---\n*Syntaxes:*\n\n`slingLoadAssistantShown`\n\n---\n*Example 1:*\n\n```sqf\nwaitUntil { slingLoadAssistantShown };\nhint \"You lack rudimentary motor skills and basic eye-hand coordination.\"; // scold user for unethical practices\n```","commands\\soldierMagazines.md":"Get array with all magazines of the given unit.\n\n\n---\n*Syntaxes:*\n\n`soldierMagazines` unit\n\n---\n*Example 1:*\n\n```sqf\nsoldierMagazines player;\n// returns:\n[\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](5x)\",\n\t\"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\",\n\t\"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\",\n\t\"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\",\n\t\"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\",\n\t\"Chemlight (Green)(1/1)[id/cr:14/0](2x)\",\n\t\"Titan AT Missile(1/1)[id/cr:16/0](2x)\"\n]\n```","commands\\someAmmo.md":"Check if unit has some ammo.\n\n\n---\n*Syntaxes:*\n\n`someAmmo` unitName\n\n---\n*Example 1:*\n\n<sqs>? not (someAmmo _loon1) : hint \"Loon1 is out of ammo!\"</sqs>","commands\\sort.md":"Attempts to sort given array either in ascending (`true`) or descending (`false`) order.\n\n\n---\n*Syntaxes:*\n\narray `sort` order\n\n---\n*Example 1:*\n\n```sqf\n_arr = [5.21725,1.30859,4,5.03028,1];\n_arr sort true;\nhint str _arr; //[1,1.30859,4,5.03028,5.21725]\n```\n\n*Example 2:*\n\n```sqf\n_dev = [\"ja\",\"pa\",\"pa\",\"tram\",\"tara\"];\n_dev sort false;\nhint str _dev; //[\"tram\",\"tara\",\"pa\",\"pa\",\"ja\"]\n```\n\n*Example 3:*\n\n```sqf\n#define ASC true\n#define DESC false\n_scores = [[123,\"bob\",15],[123,\"bill\",20],[200,\"dave\",21],[200,\"steve\",11]];\n_scores sort DESC;\nhint str _scores; //[[200,\"steve\",11],[200,\"dave\",21],[123,\"bob\",15],[123,\"bill\",20]]\n```\n\n*Example 4:*\n\nSort buildings by distance and return position of the most distant building:\n\n```sqf\n_buildings = player nearObjects [\"Land_Cargo_Patrol_V1_F\", 500];\n_buildings = _buildings apply { [_x distance player, _x] };\n_buildings sort false;\nhint format [\n\t\"Most distant building is at %1, distance %2 m\", \n\tgetPos (_buildings select 0 select 1),\n\tround (_buildings select 0 select 0)\n];\n```","commands\\soundVolume.md":"Returns the current sound volume (set by `fadeSound`).\n\n\n---\n*Syntaxes:*\n\n`soundVolume`\n\n---\n*Example 1:*\n\n```sqf\nhint str soundVolume;\n```","commands\\spawn.md":"Adds given set of compiled instructions to the `scheduler`.\nExactly when the code will be executed is unknown, it depends on how busy is the engine and how filled up is the `scheduler`.\nTherefore `spawn` does not wait for the supplied code to finish, instead, `spawn` returns a `Script` handle to the `scheduler` task.\n`scriptDone` command can be used to check the code completion. Additional arguments are passed to the code in local variable `_this`.\nSince {{GVI|arma3|1.56\n\n\n---\n*Syntaxes:*\n\narguments `spawn` code\n\n---\n*Example 1:*\n\n```sqf\n_handle = 0 spawn { player globalChat \"Hello world!\" };\n```\n\n*Example 2:*\n\nThere is no guarantee that spawned scripts will be executed in the same order they spawned: \n\n```sqf\nfor \"_i\" from 0 to 100 do\n{\n\t_i spawn\n\t{\n\t\tdiag_log _this;\n\t};\n}; // Result: 51,1,2...49,50,0,52,53...100\n```\n\n*Example 3:*\n\nLocal variables declared in the main scope are not available in the spawned code. You have to pass them as parameters:\n\n```sqf\nprivate _localVariable = 1234;\n[_localVariable] spawn \n{\n\tsystemChat format [\"_localVariable does not exist: %1\", isNil \"_localVariable\"]; // _localVariable does not exist: true\n\tparams [\"_localVariable\"];\n\tsystemChat format [\"_localVariable is now: %1\", _localVariable]; // _localVariable is now: 1234\n};\n```","commands\\speaker.md":"Returns the speaker class name of a unit.\n\n\n---\n*Syntaxes:*\n\n`speaker` unit\n\n---\n*Example 1:*\n\n```sqf\nspeaker player; // Can return \"male09eng\"\n```","commands\\speechVolume.md":"Returns the current speech volume (set by `fadeSpeech`)\n\n\n---\n*Syntaxes:*\n\n`speechVolume`\n\n---\n*Example 1:*\n\n```sqf\nhint str speechVolume;\n```","commands\\speed.md":"Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to: <sqf inline>3.6 * (velocityModelSpace _obj select 1)\n```\n\n\n---\n*Syntaxes:*\n\n`speed` object\n\n---\n*Example 1:*\n\n```sqf\nif (speed _truck1 >= 100) then { hint \"You're going too fast!\" };\n```","commands\\speedMode.md":"Returns speed mode of the group, which can be any of the following: \n* `\"LIMITED\"`\n* `\"NORMAL\"`\n* `\"FULL\"`\n\n\n---\n*Syntaxes:*\n\n`speedMode` groupName\n\n---\n*Example 1:*\n\n```sqf\n_speed = speedMode group player;\n```","commands\\splitString.md":"Splits the provided `ANSI` string into an array of tokens according to given delimiters.\n\n\n---\n*Syntaxes:*\n\nstr `splitString` delimiters\n\n---\n*Example 1:*\n\n```sqf\n_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"]\n_str joinString \"#\"; // \"This#is#a#sample#string\"\n```\n\n*Example 2:*\n\n```sqf\n\"\\A3\\ui_f\\data\\map\\vehicleicons\\iconLogic_ca.paa\" splitString \"\\.\"; // [\"A3\",\"ui_f\",\"data\",\"map\",\"vehicleicons\",\"iconLogic_ca\",\"paa\"]\n```\n\n*Example 3:*\n\n```sqf\n\"1:2:3\" splitString \":\"; // [\"1\",\"2\",\"3\"]\n```\n\n*Example 4:*\n\n```sqf\n\"Japa is the best!\" splitString \"\" joinString \" \"; // \"J a p a   i s   t h e   b e s t !\"\n```\n\n*Example 5:*\n\n```sqf\n_cmd = currentMagazineDetail player; // \"9mm 16Rnd Mag(13/16)[id/cr:10000011/0]\"\n_cmd splitString \"([ ]/:)\"; // [\"9mm\",\"16Rnd\",\"Mag\",\"13\",\"16\",\"id\",\"cr\",\"10000011\",\"0\"]\n```\n\n*Example 6:*\n\nRemove all \\r\\n from file:\n\n```sqf\nloadFile \"somefile.txt\" splitString toString [13,10] joinString \" \";\n```","commands\\sqrt.md":"Returns square root of x.\n\n\n---\n*Syntaxes:*\n\n`sqrt` x\n\n---\n*Example 1:*\n\n```sqf\nprivate _squareRoot = sqrt 9;  // returns 3\n```","commands\\squadParams.md":"Returns data about squad of given unit loaded from squad.xml as well as about unit itself.<br>\nAll items in returned array are `String`.\n\n\n---\n*Syntaxes:*\n\n`squadParams` unit\n\n---\n*Example 1:*\n\n```sqf\n_info = squadParams player;\n```","commands\\stance.md":"Returns the stance of the given unit.\n\n\n---\n*Syntaxes:*\n\n`stance` unit\n\n---\n*Example 1:*\n\n```sqf\nif (stance player == \"STAND\") then {hint \"I am standing!\"};\n```","commands\\startLoadingScreen.md":"Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed (50ms per frame instead of 3ms per frame for `Scheduled Scripts`).<br>\n\n{{Feature|informative\n\n\n---\n*Syntaxes:*\n\n`startLoadingScreen` [text, resource]\n\n---\n*Example 1:*\n\n```sqf\nstartLoadingScreen [\"Loading My Mission, please wait...\"];\n```\n\n*Example 2:*\n\n```sqf\nstartLoadingScreen [\"Can't skip loading time...\", \"MyLoadingRsc\"];\n```\n\n*Example 3:*\n\n```sqf\nstartLoadingScreen [\"Loading My Mission\"];\n// code\nprogressLoadingScreen 0.5;\n// code\nendLoadingScreen;\n```\n\n*Example 4:*\n\n```sqf\n// this structure prevents error-prone or lengthy code to miss endLoadingScreen.\nprivate _maxTime = diag_tickTime + 30; // max 30s of loading\n\nstartLoadingScreen [\"Loading\"];\nprivate _handle = [] spawn {\n\t// code that may crash or take too long\n};\n\nwaitUntil { uiSleep .1; scriptDone _handle || diag_tickTime > _maxTime };\nendLoadingScreen;\n```","commands\\step.md":"Optional step value. A countdown can be made with a negative value. If not set, the default step is 1.\n\n\n---\n*Syntaxes:*\n\nfor `step` stepSize\n\n---\n*Example 1:*\n\n```sqf\nfor \"_i\" from 20 to 10 step -2 do\n{\n\t// ...\n};\n```","commands\\stop.md":"Stop AI unit.<br>Stopped unit will not be able to move, fire, or change its orientation to follow a watched object.<br>It may still change the stance if deemed appropriate (e.g. under fire).<br>Use `disableAI` to disable specific AI capabilities.\n\n\n---\n*Syntaxes:*\n\nunitName `stop` toggle\n\n---\n*Example 1:*\n\n```sqf\nloon1 stop true;\n```","commands\\stopEngineRTD.md":"Instant engines stop.\n\n\n---\n*Syntaxes:*\n\n`stopEngineRTD` heli\n\n---\n*Example 1:*\n\n`stopEngineRTD` myHeli","commands\\stopped.md":"Check if unit is stopped by `stop` command.\n\n\n---\n*Syntaxes:*\n\n`stopped` unitName\n\n---\n*Example 1:*\n\n<sqs>? (stopped _loon1) : hint \"Loon1 is stopped\"</sqs>","commands\\str.md":"Converts any value into a string by placing \" and \" around the argument. When used on object, object debug name is returned.\n\n\n---\n*Syntaxes:*\n\n`str` value\n\n---\n*Example 1:*\n\n```sqf\n_s = str (5 + 2); // The value of _s is the string \"7\"\n```\n\n*Example 2:*\n\n```sqf\na = [];\nac = 0;\nwhile { ac < 5 } do\n{\n\tac = count a;\n\ta set [ac, format [\"Index %1\", ac]];\n};\nhintSilent str a; // hints all of [\"Index 0\",\"Index 1\",\"Index 2\",\"Index 3\",\"Index 4\"] including brackets, quotes and commas\n```\n\n*Example 3:*\n\n```sqf\nstr [0, 0, 0] == \"[0, 0, 0]\";\t// false\nstr [0, 0, 0] == \"[0,0,0]\";\t\t// true\n\nstr \"\";\t\t\t\t// \"\"\"\"\"\"\ncount str \"\";\t\t// 2\nstr text \"\";\t\t// \"\"\ncount str text \"\";\t// 0\n```\n\n*Example 4:*\n\n```sqf\nstr objNull;\t\t// \"<NULL-object>\"\nstr player;\t\t\t// e.g \"B Alpha 1-1:1 (PlayerName)\"\nplayer setVehicleVarName \"PlayerUnit\";\nstr player;\t\t\t// e.g \"PlayerUnit\"\n```","commands\\sunOrMoon.md":"<code style{{=}}\"float: right; font-size: 0.85em; margin: 0 0 0.5em 1.5em\">12:00 - 1\n(...) - 1\n18:39 - 0.911201\n18:42 - 0.576303\n18:45 - 0.240862\n18:48 - 0\n(...) - 0\n06:00 - 0.0695308\n06:03 - 0.404731\n06:06 - 0.739519\n06:09 - 1\n(...) - 1</code>\nReturns the sun to moon transition state in range 0..1.<br>\nThe return value is either 0 or 1 most of the time, the in-between values only returned during a few minutes in the morning and in the evening, depending on the `date`, and could be similar to shown here:\n\n<div>\n\n<div style{{=}}\"float: left\"></div>\n</div>\n\n\n---\n*Syntaxes:*\n\n`sunOrMoon`\n\n---\n*Example 1:*\n\n```sqf\nprivate _transitionState = sunOrMoon;\n```","commands\\supportInfo.md":"Creates a list of supported operators and type. Each field of array has the format: \"x:name\" Where x can be:\n*'t' - type\n*'n' - `nullar` operator\n*'u' - `unary` operator\n*'b' - `binary` operator.\n\n'name' is the operator or type name (in case operator, type of input operands is included). \n`mask` parameter can be an empty string, or one of field. In this case, function returns empty array, if operator is not included in the list. Limited wildcard support is available. Type `x` may be replaced with `*`, meaning all types. For the `mask` partial match may be used, like `abc*`, meaning any operators starting with 'abc' are reported, for example: \n* **\"\"** - list all types and commands\n* **\"t:*\"** - list all types\n* **\"*:<command>*\"** - list all entries for script `<command>`\n* {{GVI|arma3|2.00\n\n\n---\n*Syntaxes:*\n\n`supportInfo` mask\n\n---\n*Example 1:*\n\n```sqf\nsupportInfo \"b:select*\"; // returns [\"b:ARRAY select SCALAR\",\"b:ARRAY select BOOL\",\"b:CONFIG select SCALAR\"]\n```\n\n*Example 2:*\n\nReturn all available commands:\n\n```sqf\n_commands = supportInfo \"\";\n```","commands\\suppressFor.md":"Force `suppressive fire` from the unit.\n\n\n---\n*Syntaxes:*\n\nunit `suppressFor` duration\n\n---\n*Example 1:*\n\n```sqf\n_soldier1 suppressFor 10; // Will force soldier1 to do suppressive fire to known enemies for 10 seconds\n```","commands\\surfaceIsWater.md":"Returns whether there is water at given position. In Arma 3, it also detects pond objects, but only if they are loaded in memory (normally only true if the objects are within the `object view distance`)\n\n\n---\n*Syntaxes:*\n\n`surfaceIsWater` position\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = surfaceIsWater [1000, 3000];\n```\n\n*Example 2:*\n\n```sqf\n_isWater = surfaceIsWater position player;\n```","commands\\surfaceNormal.md":"Returns terrain's [surface normal](https://en.wikipedia.org/wiki/Normal (geometry)) on given position.\n\n\n---\n*Syntaxes:*\n\n`surfaceNormal` position\n\n---\n*Example 1:*\n\n```sqf\n_normal = surfaceNormal [300, 500];\n```\n\n*Example 2:*\n\n```sqf\n_normal = surfaceNormal position player;\n```","commands\\surfaceTexture.md":"Same as `surfaceType`, but returns texture path to ground texture as string.\n\n\n---\n*Syntaxes:*\n\n`surfaceTexture` position\n\n---\n*Example 1:*\n\n```sqf\nprivate _groundTexture = surfaceTexture getPosATL player;\n```","commands\\surfaceType.md":"Returns what surface type is at the given position. For surface texture see `surfaceTexture` command.<br>\n<br>\n\n</spoiler>\n\n\n---\n*Syntaxes:*\n\n`surfaceType` position\n\n---\n*Example 1:*\n\n```sqf\nprivate _surface = surfaceType [4500, 4500];\n```\n\n*Example 2:*\n\n```sqf\nhint surfaceType position player;\n```","commands\\swimInDepth.md":"Sets the target depth level for swimming soldier. Depth should be a negative number.\n\n\n---\n*Syntaxes:*\n\nunit `swimInDepth` value\n\n---\n*Example 1:*\n\n```sqf\nsoldier swimInDepth -20;\n```\n\n*Example 2:*\n\n```sqf\nbob swimInDepth -10;\nbob doMove ASLToAGL getPosASL player;\n```","commands\\switch.md":"Checks if the given parameter matches any `case`. If so, the code block of that case will be executed. After that the switch ends so no further cases will be checked.<br>\nIf a case has no code block the code of the next case will automatically be executed, making it possible to formulate a logical \"or\" for cases which would otherwise contain the exact same code (see *(Reference HashLink \"#Example 2\")*).<br>\nThe `default` block will be executed `only` if no case matches, no matter its position inside the code block. It is not a `case`, and will `never` be entered by fallthrough.\n\n\n---\n*Syntaxes:*\n\n`switch` value\n\n---\n*Example 1:*\n\n```sqf\nswitch (floor random 5) do\n{\n\tcase 1: { hint \"one\"; };\n\tcase 2: { hint \"two\"; };\n\tdefault { hint \"zero, three or four\" };\n};\n```\n\n*Example 2:*\n\n<!-- this example is referenced in Description -->\n\n```sqf\nswitch (_condition) do\n{\n\tcase \"string1\";\n\tcase \"string2\": { hint \"string1 or string2\" };\n\tcase \"string3\";\n\tcase \"string4\": { hint \"string3 or string4\" };\n\tcase \"string5\"; // will never enter default's code\n\tdefault { hint \"default\" };\n};\n```\n\n*Example 3:*\n\n```sqf\nprivate _color = switch (side player) do\n{\n\tcase west: { \"ColorGreen\" };\n\tcase east: { \"ColorRed\" };\n};\n```\n\n*Example 4:*\n\n```sqf\nprivate _fn_moveForward =\t{ /*...code...*/ };\nprivate _fn_moveBackward =\t{ /*...code...*/ };\nprivate _fn_invalidKey =\t{ /*...code...*/ };\n\nswitch true do\n{\n\tcase (_dikCode in actionKeys \"MoveForward\"):\t_fn_moveForward;\n\tcase (_dikCode in actionKeys \"MoveBackward\"):\t_fn_moveBackward;\n\tdefault _fn_invalidKey;\n};\n```\n\n*Example 5:*\n\n```sqf\nswitch _var do\n{\n\tcase \"0\";\n\tdefault { hint str [\"default\", _var] };\n\tcase \"3\": { hint str [\"3\", _var] };\n\tcase \"1\";\n\tcase \"4\";\n\tcase \"2\": { hint str [\"2\", _var] };\n};\n\n_var = \"0\"; // -> [\"3\", \"0\"]\n_var = \"1\"; // -> [\"2\", \"1\"]\n_var = \"2\"; // -> [\"2\", \"2\"]\n_var = \"3\"; // -> [\"3\", \"3\"]\n_var = \"4\"; // -> [\"2\", \"4\"]\n_var = \"5\"; // -> [\"default\", \"5\"]\n```","commands\\switchableUnits.md":"Returns a list of playable units available for switching to\n* Command is relative to the client on which it is executed and will only show playable units for the same `side` as `player`'s `group` + `player` himself\n* In singleplayer where playable units from all sides will be accessible via this command\n* Dead and player-controlled units are automatically removed from the resulting array\n* In order to get all `playable` units regardless of their `side`, see the `playableUnits` command\n\n\n---\n*Syntaxes:*\n\n`switchableUnits`\n\n---\n*Example 1:*\n\n```sqf\n_availableUnits = switchableUnits;\n```","commands\\switchAction.md":"When used on a person, the given action is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.\n\n\n---\n*Syntaxes:*\n\nsoldier `switchAction` action\n\n---\n*Example 1:*\n\n```sqf\nsoldierOne switchAction \"SitDown\";\n```","commands\\switchCamera.md":"Switch camera to given vehicle / camera. Mode is one of:\n* `\"INTERNAL\"`: 1st person\n* `\"GUNNER\"`: optics / sights\n* `\"EXTERNAL\"`: 3rd person\n* `\"GROUP\"`: group\n* `\"CARGO\"`: same as \"INTERNAL\"\n\nIf you switch to a unit in a vehicle, this command uses the correct turret.\n\n\n---\n*Syntaxes:*\n\ntarget `switchCamera` mode\n\n`switchCamera` target\n\n---\n*Example 1:*\n\n```sqf\nplayer switchCamera \"Gunner\";\n```\n\n*Example 2:*\n\n```sqf\nvehicle player switchCamera \"External\";\n```","commands\\switchGesture.md":"When used on a person,the given move is started immediately (without transition).\n\n\n---\n*Syntaxes:*\n\nsoldier `switchGesture` moveName\n\n---\n*Example 1:*\n\n```sqf\nsoldierOne switchGesture \"Wave\";\n```","commands\\switchLight.md":"Controls whether a lamp is lit or not.\n\n\n---\n*Syntaxes:*\n\nlamp `switchLight` mode\n\n---\n*Example 1:*\n\n```sqf\n(object 12345) switchLight \"OFF\";\n```\n\n*Example 2:*\n\n```sqf\nnearestObject [player, \"Streetlamp\"] switchLight \"OFF\";\n```\n\n*Example 3:*\n\n```sqf\ncursorObject switchLight \"ON\";\n```","commands\\switchMove.md":"Immediately applies given animation to the unit. For a smooth transition from the current animation, use `playMove`.\n\n\n---\n*Syntaxes:*\n\nperson `switchMove` moveName\n\n---\n*Example 1:*\n\nProne:\n\n```sqf\nplayer switchMove \"AmovPpneMstpSrasWrflDnon\";\n```\n\n*Example 2:*\n\nSit player immediately and globally:\n\n```sqf\n[player, \"AmovPsitMstpSlowWrflDnon\"] remoteExec [\"switchMove\"];\n```\n\n*Example 3:*\n\nResets unit's animation:\n\n```sqf\n_unit switchMove \"\";\n```","commands\\synchronizedObjects.md":"Return the list of objects synchronized with the given unit.\n\n\n---\n*Syntaxes:*\n\n`synchronizedObjects` unit\n\n---\n*Example 1:*\n\n```sqf\n_objects = synchronizedObjects _logic;\n```","commands\\synchronizedTriggers.md":"Returns the list of triggers synchronized with a given waypoint.\n\n\n---\n*Syntaxes:*\n\n`synchronizedTriggers` waypoint\n\n---\n*Example 1:*\n\n```sqf\nsynchronizedTriggers _someWaypoint;\n```","commands\\synchronizedWaypoints.md":"Returns the list of waypoints synchronized with a given trigger or waypoint.\n\n\n---\n*Syntaxes:*\n\n`synchronizedWaypoints` obj\n\n---\n*Example 1:*\n\n```sqf\nsynchronizedWaypoints _someTrigger;\n```","commands\\synchronizeObjectsAdd.md":"Add given objects to the unit's list of synchronized objects.\n\n\n---\n*Syntaxes:*\n\nunit `synchronizeObjectsAdd` objects\n\n---\n*Example 1:*\n\n```sqf\n_acm = _groupLogic createUnit [\"AmbientCombatManager\", position player, [], 0, \"NONE\"];\n_acm synchronizeObjectsAdd [player];\n```","commands\\synchronizeObjectsRemove.md":"Removes given objects from the unit's list of synchronized objects.\n\n\n---\n*Syntaxes:*\n\nunit `synchronizeObjectsRemove` objects\n\n---\n*Example 1:*\n\n```sqf\nplayer synchronizeObjectsRemove [_object1, _object2, _object3];\n```","commands\\synchronizeTrigger.md":"[[ArmA:_Mission_Editor#Synchronize_Mode_.28F5.29|Synchronizes]] the trigger with zero or more waypoints.\n\n\n---\n*Syntaxes:*\n\ntrigger `synchronizeTrigger` waypoints\n\n---\n*Example 1:*\n\n```sqf\n_trigger synchronizeTrigger [];\n```\n\n*Example 2:*\n\n```sqf\n_trigger synchronizeTrigger [_waypoint1];\n```\n\n*Example 3:*\n\n```sqf\n_trigger synchronizeTrigger [_waypoint1, [_group5, 7], _waypoint3];\n```","commands\\synchronizeWaypoint.md":"Synchronizes the trigger or the waypoint with an array of waypoints.\n\n\n---\n*Syntaxes:*\n\ntriggerOrWaypoint `synchronizeWaypoint` waypoints\n\n---\n*Example 1:*\n\n```sqf\n_myTrigger synchronizeWaypoint [[_group2, 3]];\n```\n\n*Example 2:*\n\n```sqf\n[_group1, 2] synchronizeWaypoint [[_group2, 3]];\n```","commands\\systemChat.md":"Types text to the system radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\n`systemChat` text\n\n---\n*Example 1:*\n\n```sqf\nsystemChat \"Hello world!\";\n```\n\n*Example 2:*\n\n```sqf\ndriver vehicle player sideChat \"sideChat\";\ndriver vehicle player globalChat \"globalChat\";\ndriver vehicle player groupChat \"groupChat\";\nvehicle player vehicleChat \"vehicleChat\";\ndriver vehicle player commandChat \"commandChat\";\ndriver vehicle player customChat [1, \"customChat\"];\nsystemChat \"systemChat\";\n```","commands\\systemOfUnits.md":"Returns the currently selected system of units.\n* 0: Metric\n* 1: Mixed (ground vehicles use Metric / air vehicles use Imperial)\n* 2: Imperial\n\n\n---\n*Syntaxes:*\n\n`systemOfUnits`\n\n---\n*Example 1:*\n\n```sqf\n_system = systemOfUnits;\n```","commands\\systemTime.md":"Returns system time.\n\n\n---\n*Syntaxes:*\n\n`systemTime`\n\n---\n*Example 1:*\n\n```sqf\nprivate _currentTime = systemTime;\n```\n\n*Example 2:*\n\n```sqf\nsystemTime apply {if (_x < 10) then {\"0\" + str _x} else {str _x}}; // [\"2021\",\"05\",\"03\",\"14\",\"09\",\"37\",\"593\"]\n```\n\n*Example 3:*\n\n```sqf\nsystemTime params [\"_year\", \"_month\", \"_day\", \"_hour\", \"_minute\", \"_second\", \"_millisecond\"];\n```","commands\\systemTimeUTC.md":"Returns `systemTime` according to `U`niversal `T`ime `C`oordinated time scale.\n\n\n---\n*Syntaxes:*\n\n`systemTimeUTC`\n\n---\n*Example 1:*\n\n```sqf\nprivate _UKTime = systemTimeUTC;\n```\n\n*Example 2:*\n\n```sqf\nsystemTimeUTC apply { if (_x < 10) then { \"0\" + str _x } else { str _x } }; // [\"2021\",\"05\",\"03\",\"14\",\"09\",\"37\",\"593\"]\n```\n\n*Example 3:*\n\n```sqf\nprivate _timeUTC = systemTimeUTC;\nprivate _time = systemTime;\nprivate _timeDiffH = (_time select 3) - (_timeUTC select 3);\nprivate _timeDiffM = (_time select 4) - (_timeUTC select 4);\nif (_timeDiffM < 0) then\n{\n\t_timeDiffH = _timeDiffH - 1;\n\t_timeDiffM = _timeDiffM + 60;\n};\nif (_timeDiffH < -12) then\n{\n\t_timeDiffH = _timeDiffH + 24;\n};\nif (_timeDiffH > 12) then\n{\n\t_timeDiffH = _timeDiffH - 24;\n};\nprivate _timeZone = [_timeDiffH, _timeDiffM]; // hour (_timeDiffH) is in range -12..+12\n```","commands\\tan.md":"Tangent of x, argument in `Degrees`.\n\n\n---\n*Syntaxes:*\n\n`tan` x\n\n---\n*Example 1:*\n\n```sqf\n_tangent = tan 45;\n``` \nResult is 1","commands\\targetKnowledge.md":"Returns unit's knowledge about target.\n\n\n---\n*Syntaxes:*\n\nunit `targetKnowledge` target\n\n---\n*Example 1:*\n\n```sqf\nprivate _allInfo = _soldierOne targetKnowledge _jeepOne;\n_allInfo params [\"_knownByGroup\", \"_knownByUnit\", \"_lastSeen\", \"_lastThreat\", \"_side\", \"_errorMargin\", \"_position\"];\n```\n\n*Example 2:*\n\n```sqf\nprivate _posError = (_soldierOne targetKnowledge _jeepOne) select 5;\n```","commands\\targets.md":"Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.\n\n\n---\n*Syntaxes:*\n\nunit `targets` [enemyOnly, maxDistance, sides, maxAge, alternateCenter]\n\n---\n*Example 1:*\n\n```sqf\nprivate _targets = _unit targets [false, 300, [east,sideEnemy]]; // all targets of east or renegade side in 300m\n```\n\n*Example 2:*\n\n```sqf\nprivate _targets = _unit targets [true, 300]; // enemy targets in 300m\n```\n\n*Example 3:*\n\n```sqf\nprivate _targets = _unit targets []; // all targets\n```","commands\\targetsAggregate.md":"Aggregate candidates.\n\n\n---\n*Syntaxes:*\n\n[speaker, side, classname, position, timeMax] `targetsAggregate` candidates\n\n---\n*Example 1:*\n\n```sqf\n_aggregation = [player, sideEnemy, \"\", [], 0] targetsAggregate (player targetsQuery [objNull, sideUnknown, \"\", [], 0]);\n/*\n\treturns e.g\n\t[\n\t\t[\n\t\t\t[\"COUNT0\", 1],\n\t\t\t[\"SIDE0\", WEST],\n\t\t\t[\"UNIT0\", \"B_Soldier_F\"],\n\t\t\t[\"PLACE0\", [[<null>,<null>], 0, <null>]],\n\t\t\t[\"TIME0\", [-0.9, -0.9]],\n\t\t\t[\"UCOUNT0\", 1],\n\t\t\t[\"UTYPE0\", ...\n\t\t]\n\t]\n*/\n```\nwith e.g\n* one Orca Helicopter\n* one T-100 Varsuk tank\n* one T-140K Angara tank\n* one MBT-52 Kuma tank (independent, set as enemy to blufor)\n\n```sqf\n/*\n\t[\n\t\t[[\"COUNT0\",1],[\"SIDE0\",EAST],[\"UNIT0\",\"O_Heli_Light_02_dynamicLoadout_F\"],[\"PLACE0\",[[<null>,<null>],0,<null>]],[\"TIME0\",[-0.982,-0.982]],[\"UCOUNT0\",1],[\"UTYPE0\",\"O_Heli_Light_02_dynamicLoadout_F\"]],\n\t\t[[\"COUNT1\",1],[\"SIDE1\",GUER],[\"UNIT1\",\"I_MBT_03_cannon_F\"],[\"PLACE1\",[[<null>,<null>],0,<null>]],[\"TIME1\",[-0.982,-0.982]],[\"UCOUNT1\",1],[\"UTYPE1\",\"I_MBT_03_cannon_F\"]],\n\t\t[[\"COUNT2\",2],[\"SIDE2\",EAST],[\"UNIT2\",\"*Tank_F\"],[\"PLACE2\",[[<null>,<null>],4.34554,<null>]],[\"TIME2\",[-0.982,-0.982]],[\"UCOUNT2\",2],[\"UTYPE2\",\"*O_MBT_02_cannon_F\"]]]\n\t[\n\t\t[[\"COUNT0\",1],[\"SIDE0\",EAST],[\"UNIT0\",\"O_Heli_Light_02_dynamicLoadout_F\"],[\"PLACE0\",[[<null>,<null>],0,<null>]],[\"TIME0\",[-1,-1]],[\"UCOUNT0\",1],[\"UTYPE0\",\"O_Heli_Light_02_dynamicLoadout_F\"]],\n\t\t[[\"COUNT1\",1],[\"SIDE1\",GUER],[\"UNIT1\",\"I_MBT_03_cannon_F\"],[\"PLACE1\",[[<null>,<null>],0,<null>]],[\"TIME1\",[-1,-1]],[\"UCOUNT1\",1],[\"UTYPE1\",\"I_MBT_03_cannon_F\"]],\n\t\t[[\"COUNT2\",2],[\"SIDE2\",EAST],[\"UNIT2\",\"*Tank_F\"],[\"PLACE2\",[[<null>,<null>],4.34565,<null>]],[\"TIME2\",[-1,-1]],[\"UCOUNT2\",2],[\"UTYPE2\",\"*O_MBT_02_cannon_F\"]]\n\t]\n*/\n```","commands\\targetsQuery.md":"Returns sorted array of targets, `known` to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches the query. This command could be CPU intensive.\n\n\n---\n*Syntaxes:*\n\nenquirer `targetsQuery` [targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]\n\n---\n*Example 1:*\n\nReturn all known targets for player:\n\n```sqf\n_targets = player targetsQuery [objNull, sideUnknown, \"\", [], 0];\n```\n\n*Example 2:*\n\nPrioritise all known OPFOR targets and return targets less than 10 seconds old:\n\n```sqf\n_targets = player targetsQuery [objNull, east, \"\", [], 10];\n```","commands\\taskAlwaysVisible.md":"Returns true if the task is flagged to be always visible or false if not.\n\n\n---\n*Syntaxes:*\n\n`taskAlwaysVisible` task\n\n---\n*Example 1:*\n\n```sqf\n_isAlwaysVisible = taskAlwaysVisible (currentTask player);\n```","commands\\taskChildren.md":"Return the child tasks of the specified task.\n\n\n---\n*Syntaxes:*\n\n`taskChildren` task\n\n---\n*Example 1:*\n\n```sqf\n_children = taskChildren \"someTask\";\n```","commands\\taskCompleted.md":"Return if task is completed. (state Succeeded, Failed or Canceled)\n\n\n---\n*Syntaxes:*\n\n`taskCompleted` task\n\n---\n*Example 1:*\n\n```sqf\n_task = createSimpleTask [\"task_1\"];\n_done = taskCompleted _task;\n```","commands\\taskCustomData.md":"Returns custom data attached to the local task or an empty array if there are no custom data attached.\n\n\n---\n*Syntaxes:*\n\n`taskCustomData` task\n\n---\n*Example 1:*\n\n```sqf\n_data = taskCustomData \"someTask\";\n```","commands\\taskDescription.md":"Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description].\n\n\n---\n*Syntaxes:*\n\n`taskDescription` task\n\n---\n*Example 1:*\n\n```sqf\n_taskDescArray = taskDescription _task;\n```","commands\\taskDestination.md":"Returns the position of the task (as specified by destination parameter in config).\n\n\n---\n*Syntaxes:*\n\n`taskDestination` task\n\n---\n*Example 1:*\n\n```sqf\nif (!isNull currentTask player) then {taskDestination currentTask`player`}; //return Position (Array)\n```","commands\\taskHint.md":"Shows info about new, changed or failed task. The text can contain several lines. **\\n** is used to set a line return.\n\n\n---\n*Syntaxes:*\n\n`taskHint` [text, colour, icon]\n\n---\n*Example 1:*\n\n```sqf\ntaskHint [\"Task failed.\\nBad job!\", [1, 0, 0, 1], \"taskFailed\"];\n```","commands\\taskMarkerOffset.md":"Returns model space position for the task marker\n\n\n---\n*Syntaxes:*\n\n`taskMarkerOffset` unit\n\n---\n*Example 1:*\n\n```sqf\n_offset = taskMarkerOffset player;\n```","commands\\taskName.md":"Returns the name of the given task.\n\n\n---\n*Syntaxes:*\n\n`taskName` task\n\n---\n*Example 1:*\n\n```sqf\nprivate _taskName = taskName _mytask;\n```","commands\\taskNull.md":"A non-existing `Task`. To compare non-existent tasks use `isNull` or `isEqualTo`:\n\n```sqf\ntaskNull == taskNull;\t\t\t// false\nisNull taskNull;\t\t\t\t// true\ntaskNull isEqualTo taskNull;\t// true\n```\n\n\n---\n*Syntaxes:*\n\n`taskNull`\n\n---\n*Example 1:*\n\n```sqf\n!isNull taskNull; // false\n```\n\n*Example 2:*\n\n```sqf\nstr taskNull; // no task\n```","commands\\taskParent.md":"Returns the parent task of the specified task.\n\n\n---\n*Syntaxes:*\n\n`taskParent` task\n\n---\n*Example 1:*\n\n```sqf\n_parent = taskParent \"someTask\";\n```","commands\\taskResult.md":"Send a result of the task to the task sender.\n\n\n---\n*Syntaxes:*\n\n`taskResult` task\n\n---\n*Example 1:*\n\n```sqf\ntaskResult (player createSimpleTask [\"NewTask\"]);\n```","commands\\taskState.md":"Returns the current state of a task.\n\n\n---\n*Syntaxes:*\n\n`taskState` task\n\n---\n*Example 1:*\n\n```sqf\ntskSomeTask = player createSimpleTask [\"NewTask\"];\nhint format[\"Taskstate: %1\", taskState tskSomeTask];\n```","commands\\taskType.md":"Returns the type of the given task. A new task returns \"Default\" for the type.\n\n\n---\n*Syntaxes:*\n\n`taskType` task\n\n---\n*Example 1:*\n\n```sqf\n_type = taskType (currentTask player);\n```","commands\\teamMember.md":"Return an agent for given person.\n\n\n---\n*Syntaxes:*\n\n`teamMember` person\n\n---\n*Example 1:*\n\n```sqf\n_agent = teamMember player;\n```","commands\\teamMemberNull.md":"A non-existent `Team Member`. To compare non-existent team members use `isNull` or `isEqualTo`:\n\n```sqf\nteamMemberNull == teamMemberNull;\t\t\t// false\nisNull teamMemberNull;\t\t\t\t\t\t// true\nteamMemberNull isEqualTo teamMemberNull;\t// true\n```\n\n\n---\n*Syntaxes:*\n\n`teamMemberNull`\n\n---\n*Example 1:*\n\n```sqf\n!isNull teamMemberNull; // false\n```\n\n*Example 2:*\n\n```sqf\nstr teamMemberNull; // <NULL - team member>\n```\n\n*Example 3:*\n\n```sqf\nif (_teamMember isEqualTo teamMemberNull) then\n{\n\thint \"team member is null\";\n};\n```","commands\\teamName.md":"Return a name of given `team`.\n\n\n---\n*Syntaxes:*\n\n`teamName` team\n\n---\n*Example 1:*\n\n```sqf\n_name = teamName _team;\n```","commands\\teams.md":"Return a list of teams in the current mission.\n\n\n---\n*Syntaxes:*\n\n`teams`\n\n---\n*Example 1:*\n\n```sqf\n_teams = teams;\n```","commands\\teamSwitch.md":"Invoke the `Team Switch` dialog (force it even when conditions are not met).\nThere has to be at least one playable unit for team switch to work, and for this command to work in MP, respawn type in `description.ext` should be 5 (SIDE).\n\n\n---\n*Syntaxes:*\n\n`teamSwitch`\n\n---\n*Example 1:*\n\n```sqf\nteamSwitch;\n```","commands\\teamSwitchEnabled.md":"Check if `Team Switch` is currently enabled.\nTeam Switch is enabled by default.\n\n\n---\n*Syntaxes:*\n\n`teamSwitchEnabled`\n\n---\n*Example 1:*\n\n```sqf\n_isTeamSwitchEnabled = teamSwitchEnabled;\n```","commands\\teamType.md":"Returns a type of given team.\n\n\n---\n*Syntaxes:*\n\n`teamType` team\n\n---\n*Example 1:*\n\n```sqf\n_type = teamType _team;\n```","commands\\terminate.md":"Terminates (aborts) `spawn`ed or `execVM`ed script.\n\n\n---\n*Syntaxes:*\n\n`terminate` scriptHandle\n\n---\n*Example 1:*\n\n```sqf\n_script = [] execVM \"script.sqf\";\nsleep 5;\nterminate _script;\n```","commands\\terrainIntersect.md":"Checks for intersection of terrain between two AGL positions. Returns `true` if intersects with terrain. For ASL variant see `terrainIntersectASL`.\n\n\n---\n*Syntaxes:*\n\n`terrainIntersect` [start, end]\n\n---\n*Example 1:*\n\n```sqf\n_intersects = terrainIntersect [getPos player, getPos chopper];\n```\n\n*Example 2:*\n\n```sqf\n_intersects = terrainIntersect [position player, position enemy1];\n```","commands\\terrainIntersectASL.md":"Checks for intersection of terrain between two ASL positions. Returns `true` if intersects with terrain.\nFor AGL variant, see `terrainIntersect`.\n\n\n---\n*Syntaxes:*\n\n`terrainIntersectASL` [start, end]\n\n---\n*Example 1:*\n\n```sqf\n_intersects = terrainIntersectASL [getPosASL player, getPosASL chopper];\n```\n\n*Example 2:*\n\n```sqf\n_intersects = terrainIntersectASL [eyePos player, eyePos enemy1];\n```","commands\\terrainIntersectAtASL.md":"Checks for intersection of terrain between two ASL positions. Same as `terrainIntersectASL` but returns the intersection ASL position.\n\n\n---\n*Syntaxes:*\n\n`terrainIntersectAtASL` [start, end]\n\n---\n*Example 1:*\n\n```sqf\n_posASL = terrainIntersectAtASL [eyePos player, getPosASL chopper];\n```","commands\\text.md":"Creates a structured text containing the given plain text if argument is `String`. Use `setAttributes` to set additional ` attributes` on the text. If the argument is `location`, returns location's text value (see Alt Syntax).\n\n\n---\n*Syntaxes:*\n\n`text` string\n\n`text` location\n\n---\n*Example 1:*\n\n```sqf\n_stxt2 = text \"Hello world.\";\n```\n\n*Example 2:*\n\n```sqf\n_townName = text myTownLocation;\n```\n\n*Example 3:*\n\n```sqf\n_loc = text nearestLocation [position player, \"NameMarine\"]; //\"Marina Bay\"\n```","commands\\textLog.md":"Dump argument value to debugging output. <br>\n\n\n---\n*Syntaxes:*\n\n`textLog` anything\n\n---\n*Example 1:*\n\n```sqf\ntextLog player;\n```","commands\\textLogFormat.md":"Debugging output.\n\n\n---\n*Syntaxes:*\n\n`textLogFormat` [format, arg1, arg2, ...]\n\n---\n*Example 1:*\n\n-","commands\\tg.md":"Identical to `tan`\n\n\n---\n*Syntaxes:*\n\n`tg` x\n\n---\n*Example 1:*\n\n```sqf\n_tangent = tg 45; // Result is 1\n```","commands\\then.md":"Links an `If Type` with `Code` to be executed if said `If Type`'s condition is `true`; otherwise, \"`else`\" code is executed if provided.<br>\nThe alternative syntax allows to set \"`then`\" code and \"`else`\" code in one array.\n\n\n---\n*Syntaxes:*\n\nifType `then` thenCode\n\n---\n*Example 1:*\n\n```sqf\nif (a > b) then { hint \"a is greater than b!\"; };\n```\n\n*Example 2:*\n\n```sqf\nprivate _c = 0;\nif (a > b) then\n{\n\t_c = 1;\n}\nelse\n{\n\t_c = 2;\n};\n```\n\n*Example 3:*\n\n```sqf\nif (alive player) then [{ hint \"player is alive\"; }, { hint \"player is dead\"; }];\n```\n\n*Example 4:*\n\n```sqf\nprivate _value = if (alive player) then { 1 } else { 0 };\n```","commands\\throw.md":"Throws an exception. The exception is processed by first `catch` block. This command will terminate further execution of the code.\n\n\n---\n*Syntaxes:*\n\n`throw` expression\n\nif (condition) `throw` exception\n\n---\n*Example 1:*\n\n```sqf\ntry {throw \"invalid argument\"} catch {hint str _exception};\n```\n\n*Example 2:*\n\n```sqf\n123 try {if (_this != 123) throw \"invalid argument\"} catch {hint str _exception};\n```\n\n*Example 3:*\n\nThe correct usage of shorthand alt syntax:\n\n```sqf\ntry {\n\tif (a > b) throw \"Error: some error\"; // OK\n\t// The command argument is static\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) throw (call _someFunc); // NOT OK\n\t// The command argument is dynamic\n\t// _someFunc is called first to get the value regardless of (a > b) outcome\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) then {throw (call _someFunc)}; /// OK\n\t// The command argument is dynamic\n\t// _someFunc is only called when (a > b) is true\n} catch {\n\thint str _exception;\n};\n```","commands\\time.md":"Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use `serverTime`.\n\n\n---\n*Syntaxes:*\n\n`time`\n\n---\n*Example 1:*\n\n```sqf\nprivate _future = time + 30;\nwaitUntil { time >= _future };  // continue after 30 seconds\n```\n\n*Example 2:*\n\nWait until mission fully started:\n\n```sqf\nwaitUntil { time > 0 };\n```","commands\\timeMultiplier.md":"Returns the value set with `setTimeMultiplier`.\n\n\n---\n*Syntaxes:*\n\n`timeMultiplier`\n\n---\n*Example 1:*\n\n```sqf\n_multiplier = timeMultiplier;\n```","commands\\titleCut.md":"Displays text on screen.\n\n\n---\n*Syntaxes:*\n\n`titleCut` [text, type, speed]\n\n---\n*Example 1:*\n\n```sqf\ntitleCut [\"Hello, how are you?\",\"Plain Down\",3];\n```","commands\\titleFadeOut.md":"Terminate the title effect and set duration of the fade out phase to the given time. Same as `cutFadeOut` but for the title layer.\n\n\n---\n*Syntaxes:*\n\n`titleFadeOut` duration\n\n---\n*Example 1:*\n\n```sqf\ntitleText [\"Hi\", \"plain\"];\ntitleFadeOut 2;\n```","commands\\titleObj.md":"Shows object defined in global config in CfgTitles\n\n\n---\n*Syntaxes:*\n\n`titleObj` [class, type, speed, showInMap]\n\n---\n*Example 1:*\n\n```sqf\ntitleObj [\"BISLogo\", \"PLAIN\"];\n```","commands\\titleRsc.md":"Displays a resource defined in RscTitles. Also see `cutRsc`, with these two commands you can show two different resources at once.\n\n\n---\n*Syntaxes:*\n\n`titleRsc` [text, type, speed, showInMap]\n\n---\n*Example 1:*\n\n```sqf\ntitleRsc [\"BIS\", \"PLAIN\"];\n```","commands\\titleText.md":"Displays text across the screen. If used along with `cutText` two different texts (in different type styles) can be shown at once.\nThe text can be displayed on multiple lines by using \"\\n\" new line characters (see *(Reference HashLink \"#Example 3\")*).\n\n\n---\n*Syntaxes:*\n\n`titleText` [text, type, speed,  showInMap, isStructuredText]\n\n---\n*Example 1:*\n\n```sqf\ntitleText [\"Show this text\", \"PLAIN\"];\n```\n\n*Example 2:*\n\n```sqf\ntitleText [\"Your message\", \"BLACK\", 2];\n```\n\n*Example 3:*\n\n```sqf\ntitleText [\"line1\\nline2\\nline3\", \"PLAIN\"];\n```\n\n*Example 4:*\n\n```sqf\ntitleText [\"<t color='#ff0000' size='5'>RED ALERT!</t><br/>***********\", \"PLAIN\", -1, true, true];\n```","commands\\to.md":"Continue sequence of `for` construct. It sets the end value of the index variable.\n\n\n---\n*Syntaxes:*\n\nforType `to` b\n\n---\n*Example 1:*\n\n```sqf\nfor \"_i\" from 10 to 20 do\n{\n\thint str _i; // will hint from 10 to 20, spaced by 1 second\n\tsleep 1;\n};\n```","commands\\toArray.md":"Converts the supplied `String` into an `Array` of `Number`s. The numbers in the created array are the decimal [Unicode](https://en.wikipedia.org/wiki/Unicode) representations of characters.\n\n\n---\n*Syntaxes:*\n\n`toArray` string\n\n`toArray` hashMap\n\nhashMap `toArray` splitArrays\n\n---\n*Example 1:*\n\n```sqf\nhint format [\"%1\", toArray \"AaŒ\"];// Returns \"[65,97,338]\"\n```\n\n*Example 2:*\n\n```sqf\ntoArray _hashMap params [\"_keys\", \"_values\"];\n```","commands\\toFixed.md":"Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed toFixed()]<br><br>\nThe alternative syntax acts as keyword and switches engine's `Number` to `String` global conversion into desired format, from the moment it is applied until the end of script.\nTo reset output back to default at any time, use **toFixed -1}} - see {{HashLink|#Example 5**.\n\n\n---\n*Syntaxes:*\n\nnumber `toFixed` decimals\n\n`toFixed` decimals\n\n---\n*Example 1:*\n\n```sqf\n123 toFixed 2; // \"123.00\"\n```\n\n*Example 2:*\n\n```sqf\n2.34 toFixed 1; // \"2.3\"\n2.35 toFixed 1; // \"2.4\"\n```\n\n*Example 3:*\n\nConvert position to string preserving position precision:\n\n```sqf\nfn_posToString = \n{\n\tformat [\n\t\t\"[%1,%2,%3]\", \n\t\t_this select 0 toFixed 8, \n\t\t_this select 1 toFixed 8, \n\t\t_this select 2 toFixed 8\n\t]\n};\nstr getPos player;\t\t\t\t\t// \"[3231.05,171.802,0.00143862]\"\ngetPos player call fn_posToString;\t// \"[3231.04882813,171.80192566,0.00143862]\"\n```\n\n*Example 4:*\n\nSame as `Example 3` only using new alternative syntax:\n\n```sqf\nstr getPos player; // \"[3231.05,171.802,0.00143862]\"\ntoFixed 8;\nstr getPos player; // \"[3231.04882813,171.80192566,0.00143862]\"\n```\n\n*Example 5:*\n\n```sqf\nsystemChat str position player;\t\t// [11580.3,11797.7,0.00146675]\ncall\n{\n\ttoFixed 6;\n\tsystemChat str position player;\t// [11580.341797,11797.737305,0.001467]\n};\nsystemChat str position player;\t\t// [11580.341797,11797.737305,0.001467]\ntoFixed -1;\nsystemChat str position player;\t\t// [11580.3,11797.7,0.00146675]\n```\nIdeal to be used when saving data to a database when more precise positioning is required.\n\n*Example 6:*\n\n```sqf\nstr (pi/100000);\t\t// \"3.14159e-005\" - scientific notation\n(pi/100000) toFixed 10;\t// \"0.0000314159\" - no scientific notation\nstr pi;\t\t\t\t\t// \"3.14159\" - 6 significant figures (default)\npi toFixed 6;\t\t\t// \"3.141593\" - forced to 7 significant figures\npi toFixed 7;\t\t\t// \"3.1415927\" - forced to 8 significant figures\n```","commands\\toLower.md":"Converts the supplied Unicode string to all lowercase characters. If the string doesn't have characters with `codes` > 255, use `toLowerANSI`.\n\n\n---\n*Syntaxes:*\n\n`toLower` string\n\n---\n*Example 1:*\n\n```sqf\nhint toLower \"AaBb1\"; // returns \"aabb1\"\n```","commands\\toLowerANSI.md":"Converts the supplied string to all lower case characters fast (could be 3&times; faster than `toLower`).\n[https://stackoverflow.com/questions/701882/what-is-ansi-format/701920 ANSI] in this case refers to *(Reference Wikipedia \"ISO/IEC_8859-1|ISO-8859-1\")* code page.\nThe command is primary designed to convert characters with ` codes` 0...127 however it will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage.\nFor Unicode alternative see `toLower`.\n\n\n---\n*Syntaxes:*\n\n`toLowerANSI` string\n\n---\n*Example 1:*\n\n```sqf\nhint toLowerANSI \"AaBb1\"; // returns \"aabb1\"\n```","commands\\toString.md":"Converts the supplied `Array` of `Number`s into a `String` through *(Reference Wikipedia \"Unicode\")* characters representation conversion, or provided `Code` to `compilable` `String`.\n\n\n---\n*Syntaxes:*\n\n`toString` array\n\n`toString` code\n\n---\n*Example 1:*\n\n```sqf\nhint toString [65,97,338]; // returns \"AaŒ\"\n```\n\n*Example 2:*\n\n```sqf\n[\"test\", \"test\"] joinString toString [12345] splitString toString [12345]; // [\"test\", \"test\"]\n```\n\n*Example 3:*\n\n```sqf\nprivate _compilableString = toString { hint \"it works!\" };\nhint _compilableString; // hints ' hint \"it works!\" '\nsleep 2;\ncall compile _compilableString; // hints ' it works! '\n```","commands\\toUpper.md":"Converts the supplied Unicode string to all uppercase characters. If the string doesn't have characters with `codes` > 255, use `toUpperANSI`.\n\n\n---\n*Syntaxes:*\n\n`toUpper` string\n\n---\n*Example 1:*\n\n```sqf\nhint toUpper \"AaBb1\"; // returns \"AABB1\"\n```","commands\\toUpperANSI.md":"Converts the supplied string to all upper case characters fast (could be 3x faster than `toUpper`).\n[https://stackoverflow.com/questions/701882/what-is-ansi-format/701920 ANSI] in this case refers to *(Reference Wikipedia \"ISO/IEC_8859-1|ISO-8859-1\")* code page.\nThe command is primary designed to convert characters with ` codes` 0...127 however will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage.\nFor Unicode alternative see `toUpper`.\n\n\n---\n*Syntaxes:*\n\n`toUpperANSI` string\n\n---\n*Example 1:*\n\n```sqf\nhint toUpperANSI \"AaBb1\"; // returns \"AABB1\"\n```","commands\\triggerActivated.md":"Returns true if the trigger has been activated.\n\n\n---\n*Syntaxes:*\n\n`triggerActivated` trigger\n\n---\n*Example 1:*\n\n```sqf\nif (triggerActivated trg1) then {\n\t// code\n};\n```","commands\\triggerActivation.md":"Returns trigger activation in the form [by, type, repeating].\n\n\n---\n*Syntaxes:*\n\n`triggerActivation` trigger\n\n---\n*Example 1:*\n\n```sqf\n_activation = triggerActivation someTrigger;\n```","commands\\triggerAmmo.md":"Triggers a munition such as shells, bullets, missiles, rockets and bombs (`shotSubmunition/shotShell/shotBullet/shotMissile/shotRocket`) as if it did hit.\nIf ammo uses submunition, then creation of submunition will be triggered.\n\n\n---\n*Syntaxes:*\n\n`triggerAmmo` munition\n\n---\n*Example 1:*\n\n```sqf\ntriggerAmmo bomb1;\n```","commands\\triggerArea.md":"Returns currently monitored trigger area. Since Arma 3 v1.60, the command returns 3rd dimension for the monitored area. If height is not set, the value for it would be -1.\n\n\n---\n*Syntaxes:*\n\n`triggerArea` trigger\n\n---\n*Example 1:*\n\n```sqf\n_area = triggerArea sensor1; // result is [200, 120, 45, false, -1];\n```","commands\\triggerAttachedVehicle.md":"Returns vehicle attached to the trigger (for example using `triggerAttachVehicle`).\n\n\n---\n*Syntaxes:*\n\n`triggerAttachedVehicle` trigger\n\n---\n*Example 1:*\n\n```sqf\n_result = triggerAttachedVehicle triggerName;\n```","commands\\triggerAttachObject.md":"Assigns a static object to the trigger. The activation source is changed to \"STATIC\".\n\n\n---\n*Syntaxes:*\n\ntriggerName `triggerAttachObject` objectId\n\n---\n*Example 1:*\n\n```sqf\n_trigger triggerAttachObject 1234;\n```","commands\\triggerAttachVehicle.md":"Specifies the entity which will activate the selected trigger.<br>\n*If `[]` is given, the trigger is decoupled from the assigned vehicle (example 2).\n*If the activation source is `\"VEHICLE\"`, `\"GROUP\"`, `\"LEADER\"` or `\"MEMBER\"`, it is changed to `\"NONE\"`. \n*If `[vehicle]` is given, the trigger is coupled to the vehicle or its group. \n*When the source is `\"GROUP\"`, `\"LEADER\"` or `\"MEMBER\"`, it is coupled to the group, otherwise it is coupled to the vehicle and the source is changed to `\"VEHICLE\"`.\n\n\n---\n*Syntaxes:*\n\ntriggerName `triggerAttachVehicle` objects\n\n---\n*Example 1:*\n\n```sqf\ntrigger triggerAttachVehicle [player];\n```\n\n*Example 2:*\n\n```sqf\ntrigger triggerAttachVehicle [];\n```","commands\\triggerDynamicSimulation.md":"Controls the ability of given unit to activate entities with disabled [[Arma 3: Dynamic Simulation]]. If `false` dynamically disabled entities will not be activated by this unit's presence. This command has the same effect as the `Eden Editor` attribute `Wake-Up Dynamic Simulation`.\n\n\n---\n*Syntaxes:*\n\nunit `triggerDynamicSimulation` trigger\n\n---\n*Example 1:*\n\n```sqf\nplayer triggerDynamicSimulation false;\n```","commands\\triggerInterval.md":"Returns trigger condition check frequency in seconds. <br><br>\n\n\n---\n*Syntaxes:*\n\n`triggerInterval` trigger\n\n---\n*Example 1:*\n\n```sqf\n_interval = triggerInterval someTrigger;\n```","commands\\triggerStatements.md":"Returns trigger statements.\n\n\n---\n*Syntaxes:*\n\n`triggerStatements` trigger\n\n---\n*Example 1:*\n\n```sqf\n_statements = triggerStatements someTrigger;\n```","commands\\triggerText.md":"Returns trigger text.\n\n\n---\n*Syntaxes:*\n\n`triggerText` trigger\n\n---\n*Example 1:*\n\n```sqf\n_text = triggerText triggerName;\n```","commands\\triggerTimeout.md":"Returns trigger timeout in the form [min, mid, max, interruptable].\n\n\n---\n*Syntaxes:*\n\n`triggerTimeout` trigger\n\n---\n*Example 1:*\n\n```sqf\n_timeOut = triggerTimeout someTrigger;\n```","commands\\triggerTimeoutCurrent.md":"Returns current timeout of the given trigger or -1 if countdown is not in progress.\n\n\n---\n*Syntaxes:*\n\n`triggerTimeoutCurrent` trigger\n\n---\n*Example 1:*\n\n```sqf\nprivate _remaining = triggerTimeoutCurrent _trigger;\n```","commands\\triggerType.md":"Returns trigger type (see `setTriggerType`).\n\n\n---\n*Syntaxes:*\n\n`triggerType` trigger\n\n---\n*Example 1:*\n\n```sqf\n_type = triggerType tr1;\n```","commands\\trim.md":"Trims a `string`.\n\n\n---\n*Syntaxes:*\n\n`trim` stringValue\n\nstring `trim` [chars, where]\n\n---\n*Example 1:*\n\n```sqf\ntrim \"\t\thello, how are you?  \"; // returns \"hello, how are you?\"\n```\n\n*Example 2:*\n\n```sqf\n\"hewosentence!123\" trim [\"3e1o2hw\", 0]; // returns \"sentence!\"\n```","commands\\true.md":"Always true\n\n\n---\n*Syntaxes:*\n\n`true`\n\n---\n*Example 1:*\n\n```sqf\n_var = true;\nsystemChat str _var; // true\n\nif (_var) then\n{\n\thint \"_var is true!\";\n};\n```","commands\\try.md":"Defines a try-catch structure. This sets up an `exception handling` block. Any thrown exception in a try block is caught in a `catch` block. The structured exception block has the following form:\n\n```sqf\ntry\n{ /* block that can throw exception */ }\ncatch\n{ /* block that processes the exception. Exception is described in the _exception variable */ };\n```\n\n\n---\n*Syntaxes:*\n\n`try` code\n\nargs `try` code\n\n---\n*Example 1:*\n\n```sqf\ntry {throw \"invalid argument\"} catch {hint str _exception};\n```\n\n*Example 2:*\n\n```sqf\n123 try {if (_this != 123) throw \"invalid argument\"} catch {hint str _exception};\n```\n\n*Example 3:*\n\n```sqf\ntry {\n\tif (a > b) throw \"Error: some error\"; // OK\n\t// The command argument is static\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) throw (call _someFunc); // NOT OK\n\t// The command argument is dynamic\n\t// _someFunc is called first to get the value regardless of (a > b) outcome\n} catch {\n\thint str _exception;\n};\n\ntry {\n\t_someFunc = {\n\t\t.....\n\t};\n\tif (a > b) then {throw (call _someFunc)}; // OK\n\t// The command argument is dynamic\n\t// _someFunc is only called when (a > b) is true\n} catch {\n\thint str _exception;\n};\n```","commands\\turretLocal.md":"Checks if a turret is `local`.\n\n\n---\n*Syntaxes:*\n\nvehicle `turretLocal` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_isLocal = vehicle player turretLocal [0];\n```\n\n*Example 2:*\n\n```sqf\nif (heli turretLocal [1]) then { heli setVehicleAmmo 1 };\n```\n\n*Example 3:*\n\n```sqf\nif (isNil { heli turretLocal [5] }) then { hint \"Turret 5 is non-existent\" };\n```","commands\\turretOwner.md":"Returns id of the turret's `owner`. Returns 0 on non-server and SP.\n\n\n---\n*Syntaxes:*\n\nvehicle `turretOwner` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_ownerId = vehicle player turretOwner [0];\n```","commands\\turretUnit.md":"Returns the unit in the vehicle turret. To find turret path of known unit, see `unitTurret`.\n\n\n---\n*Syntaxes:*\n\nvehicle `turretUnit` turretpath\n\n---\n*Example 1:*\n\n```sqf\n_vehicle turretUnit _thisTurret;\n```\n\n*Example 2:*\n\n```sqf\nvehicle player turretUnit [0];\n```","commands\\tvAdd.md":"Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See `Tree View Path` for more information.\n\n\n---\n*Syntaxes:*\n\n`tvAdd` [idc, pathParent, text]\n\ncontrol `tvAdd` [pathParent, text]\n\n---\n*Example 1:*\n\n```sqf\n_index = _ctrl tvAdd [[], \"Parent Item\"];\n```\n\n*Example 2:*\n\n```sqf\n_index = tvAdd [101, [0], \"First item\"];\n```","commands\\tvClear.md":"Removes all items from Tree View with given idc.\n\n\n---\n*Syntaxes:*\n\n`tvClear` idc\n\n`tvClear` control\n\n---\n*Example 1:*\n\n```sqf\ntvClear 101;\n```","commands\\tvCollapse.md":"Collapses tree item pointed to by the path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvCollapse` [idc, path]\n\ncontrol `tvCollapse` path\n\n---\n*Example 1:*\n\n```sqf\ntvCollapse [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvCollapse [0];\n```","commands\\tvCollapseAll.md":"Collapses all tree items for the given Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvCollapseAll` idc\n\n`tvCollapseAll` control\n\n---\n*Example 1:*\n\n```sqf\ntvCollapseAll 101;\n```\n\n*Example 2:*\n\n```sqf\ntvCollapseAll _ctrl;\n```","commands\\tvCount.md":"Returns children count on given path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvCount` [idc, path]\n\nctrl `tvCount` path\n\n---\n*Example 1:*\n\n```sqf\ntvCount [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvCount [1,0];\n```","commands\\tvCurSel.md":"Returns path to currently selected item. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvCurSel` idc\n\n`tvCurSel` control\n\n---\n*Example 1:*\n\n```sqf\ntvCurSel 101;\n```\n\n*Example 2:*\n\n```sqf\ntvCurSel _ctrl;\n```","commands\\tvData.md":"Returns string data from item on given path. IDC means id of parent `CT_TREE`.\n\n\n---\n*Syntaxes:*\n\n`tvData` [idc, path]\n\ncontrol `tvData` path\n\n---\n*Example 1:*\n\n```sqf\ntvData [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n(_display displayCtrl 101) tvData [0];\n```","commands\\tvDelete.md":"Removes an item with given `Tree View Path` from Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvDelete` [idc, path]\n\ncontrol `tvDelete` path\n\n---\n*Example 1:*\n\n```sqf\ntvDelete [101, [0, 0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvDelete [0, 0];\n```","commands\\tvExpand.md":"Expands tree item pointed to by the path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvExpand` [idc, path]\n\ncontrol `tvExpand` path\n\n---\n*Example 1:*\n\n```sqf\ntvExpand [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvExpand [1];\n```","commands\\tvExpandAll.md":"Expands all tree items for the given Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvExpandAll` idc\n\n`tvExpandAll` control\n\n---\n*Example 1:*\n\n```sqf\ntvExpandAll 101;\n```\n\n*Example 2:*\n\n```sqf\ntvExpandAll _ctrl;\n```","commands\\tvIsSelected.md":"Returns true if given treeview item is selected.\n\n\n---\n*Syntaxes:*\n\ncontrol `tvIsSelected` path\n\n---\n*Example 1:*\n\n```sqf\n_control tvIsSelected [0];\n```","commands\\tvPicture.md":"Returns name of picture from item pointed to by path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvPicture` [idc, path]\n\nctrl `tvPicture` path\n\n---\n*Example 1:*\n\n```sqf\ntvPicture [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvPicture [0,0,0];\n```","commands\\tvPictureRight.md":"Returns the right picture of a `CT_TREE` on given path.\n\n\n---\n*Syntaxes:*\n\n`tvPictureRight` [idc, path]\n\nctrl `tvPictureRight` path\n\n---\n*Example 1:*\n\n```sqf\nprivate _result = _controlTV tvPictureRight [0, 0];\n```","commands\\tvSelection.md":"Returns array of paths to selected items.\n\n\n---\n*Syntaxes:*\n\n`tvSelection` control\n\n---\n*Example 1:*\n\n```sqf\nprivate _selection = tvSelection _ctrlTV;\n```","commands\\tvSetColor.md":"Sets text color on given Tree View Item\n\n\n---\n*Syntaxes:*\n\n`tvSetColor` [idc, path, color]\n\ncontrol `tvSetColor` [path, color]\n\n---\n*Example 1:*\n\n```sqf\ntvSetColor [101, [0,0], [1,0,0,1]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetColor [[0,0], [1,0,0,1]];\n```","commands\\tvSetCurSel.md":"Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (`available since Arma 3 v1.56`)\n\n\n---\n*Syntaxes:*\n\n`tvSetCurSel` [idc, path]\n\ncontrol `tvSetCurSel` path\n\n---\n*Example 1:*\n\n```sqf\ntvSetCurSel [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetCurSel [0,0,0];\n```\n\n*Example 3:*\n\n```sqf\n[] spawn\n{\n\tdisableSerialization;\n\t_CT_TREE = findDisplay 46 ctrlCreate [\"RscTree\", -1];\n\t_CT_TREE ctrlSetPosition [0,0,0.3,1];\n\t_CT_TREE ctrlCommit 0;\n\t_CT_TREE tvAdd [[],\"Parent_A\"];\n\t_CT_TREE tvAdd [[0],\"Child_A\"];\n\t_CT_TREE tvAdd [[0,0],\"Grandchild_A\"];\n\t_CT_TREE tvAdd [[],\"Parent_B\"];\n\t_CT_TREE tvAdd [[1],\"Child_B\"];\n\tsleep 1;\n\thint \"SELECT [0,0,0]\";\n\t_CT_TREE tvSetCurSel [0,0,0];\n\tsleep 2;\n\thint \"DESELECT ALL\";\n\t_CT_TREE tvSetCurSel [-1];\n};\n```","commands\\tvSetData.md":"Sets string data to item on given path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvSetData` [idc, path, data]\n\nctrl `tvSetData` [path, data]\n\n---\n*Example 1:*\n\n```sqf\ntvSetData [101, [0], \"Test data\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetData [[0,0,0], \"Test data\"];\n```","commands\\tvSetPicture.md":"Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.\n\n\n---\n*Syntaxes:*\n\n`tvSetPicture` [idc, path, name]\n\ncontrol `tvSetPicture` [path, name]\n\n---\n*Example 1:*\n\n```sqf\ntvSetPicture [101, [0], \"picture\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetPicture [[0,0,0], getText (configFile >> \"CfgWeapons\" >> \"optic_NVS\" >> \"picture\")];\n```","commands\\tvSetPictureColor.md":"Sets the colour of the picture (set via `tvSetPicture`) under the specified tree view path.\n\n\n---\n*Syntaxes:*\n\n`tvSetPictureColor` [idc, path, color]\n\nctrl `tvSetPictureColor` [path, color]\n\n---\n*Example 1:*\n\n```sqf\ntvSetPictureColor [101, [0,2], [1,0,1,1]];\n```\n\n*Example 2:*\n\n```sqf\n_tree tvSetPictureColor [[0,2], [1,0,1,1]];\n```","commands\\tvSetPictureColorDisabled.md":"Sets the color of left picture of a tree item defined by path when that item is disabled.\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSetPictureColorDisabled` [path, color]\n\n---\n*Example 1:*\n\n```sqf\n_control tvSetPictureColorDisabled [[0], [1,0,1,1]];\n```","commands\\tvSetPictureColorSelected.md":"Sets the color of the left picture of a tree item defined by path when item is selected\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSetPictureColorSelected` [path, color]\n\n---\n*Example 1:*\n\n```sqf\n_control tvSetPictureColorSelected [[0], [1,0,1,1]];\n```","commands\\tvSetPictureRight.md":"Sets right picture on the tree view item defined by path.\n\n\n---\n*Syntaxes:*\n\n`tvSetPictureRight` [idc, path, name]\n\ncontrol `tvSetPictureRight` [path, name]\n\n---\n*Example 1:*\n\n```sqf\ntvSetPictureRight [101, [0], \"picture\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetPictureRight [[0], \"picture\"];\n```","commands\\tvSetPictureRightColor.md":"Sets color of the right picture on the tree view item defined by path\n\n\n---\n*Syntaxes:*\n\n`tvSetPictureRightColor` [idc, path, color]\n\ncontrol `tvSetPictureRightColor` [path, color]\n\n---\n*Example 1:*\n\n```sqf\ntvSetPictureRightColor [101, [0], [1,0,1,1]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetPictureRightColor [[0], [1,0,1,1]];\n```","commands\\tvSetPictureRightColorDisabled.md":"Sets the color of the right picture of a tree item defined by path when item is disabled\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSetPictureRightColorDisabled` [path, color]\n\n---\n*Example 1:*\n\n```sqf\n_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]];\n```","commands\\tvSetPictureRightColorSelected.md":"Sets the color of the right picture of a tree item defined by path when item is selected\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSetPictureRightColorSelected` [path, color]\n\n---\n*Example 1:*\n\n```sqf\n_control tvSetPictureRightColorSelected [[0], [1,0,1,1]];\n```","commands\\tvSetSelectColor.md":"Sets the select color of given path.\n\n\n---\n*Syntaxes:*\n\nctrl `tvSetSelectColor` [path, color]\n\n---\n*Example 1:*\n\n```sqf\n_control tvSetSelectColor [[0, 0], [1,1,1,0.5]];\n```","commands\\tvSetSelected.md":"Sets the selection state of given treeview item in multi-select control.\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSetSelected` [path, selected]\n\n---\n*Example 1:*\n\n```sqf\n_control tvSetSelected [[0], true];\n```","commands\\tvSetText.md":"Sets string text to item on given path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvSetText` [idc, path, text]\n\ncontrol `tvSetText` [path, text]\n\n---\n*Example 1:*\n\n```sqf\ntvSetText [101, [0], \"Test data\"];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetText [[0,0,0], \"Test data\"];\n```","commands\\tvSetTooltip.md":"Sets the tooltip text associated with the specified tree view path.\n\n\n---\n*Syntaxes:*\n\n`tvSetTooltip` [idc, path, text]\n\nctrl `tvSetTooltip` [path, text]\n\n---\n*Example 1:*\n\n```sqf\ntvSetTooltip [101, [0,2], \"This is a tooltip\"];\n```\n\n*Example 2:*\n\n```sqf\n_tree tvSetTooltip [[0,2], \"This is a tooltip\"];\n```","commands\\tvSetValue.md":"Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer\n\n\n---\n*Syntaxes:*\n\n`tvSetValue` [idc, path, val]\n\nctrl `tvSetValue` [path, val]\n\n---\n*Example 1:*\n\n```sqf\ntvSetValue [101, [0], 555];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvSetValue [[0,0,0], 14];\n```","commands\\tvSort.md":"Sorts all children of given path. Text of `Tree View` entries is used for sorting.\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSort` [path, reversed]\n\n`tvSort` [idc, path, reversed]\n\n---\n*Example 1:*\n\n```sqf\ncontrol tvSort [[0], true];\n```\n\n*Example 2:*\n\n```sqf\ntvSort [102, [0], true];\n```","commands\\tvSortAll.md":"Sorts all children, including trees deriving from given path. Text of `Tree View` entries is used for sorting.\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSortAll` [path, reversed]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl tvSortAll [[], false]; // sorts the complete Tree View\n```","commands\\tvSortByValue.md":"Sorts all children of given path. Value of `Tree View` entries is used for sorting. `tvSetValue` can be used to set the value for a given path.\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSortByValue` [path, ascending]\n\n`tvSortByValue` [idc, path, ascending]\n\n---\n*Example 1:*\n\n```sqf\ncontrol tvSortByValue [[0], false];\n```\n\n*Example 2:*\n\n```sqf\ntvSortByValue [102, [0], false];\n```","commands\\tvSortByValueAll.md":"Sorts all children, including trees deriving from given path.  Value of `Tree View` entries is used for sorting.\n\n\n---\n*Syntaxes:*\n\ncontrol `tvSortByValueAll` [path, reversed]\n\n---\n*Example 1:*\n\n```sqf\n_ctrl tvSortByValueAll [[], false]; // Sorts the complete Tree View\n```","commands\\tvText.md":"Returns shown text in the item on given path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvText` [idc, path]\n\ncontrol `tvText` path\n\n---\n*Example 1:*\n\n```sqf\ntvText [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvText [0,0,0];\n```","commands\\tvTooltip.md":"Gets the tooltip text associated with the specified tree view path.\n\n\n---\n*Syntaxes:*\n\n`tvTooltip` [idc, path]\n\nctrl `tvTooltip` path\n\n---\n*Example 1:*\n\n```sqf\n_text = tvTooltip [101, [0,2]];\n```\n\n*Example 2:*\n\n```sqf\n_text = _treeCtrl tvTooltip [0,2];\n```","commands\\tvValue.md":"Returns scalar data from item on given path. IDC means id of parent Tree View.\n\n\n---\n*Syntaxes:*\n\n`tvValue` [idc, path]\n\nctrl `tvValue` path\n\n---\n*Example 1:*\n\n```sqf\ntvValue [101, [0]];\n```\n\n*Example 2:*\n\n```sqf\n_ctrl tvValue [0,0,0];\n```","commands\\type.md":"Returns a string of a `Location`'s class name or `Task`'s name (same as `taskName`).\n\n\n---\n*Syntaxes:*\n\n`type` location\n\n`type` task\n\n---\n*Example 1:*\n\n```sqf\n_locationType = type myLocation;\n```\n\n*Example 2:*\n\n```sqf\n_taskName = type myTask;\n```","commands\\typeName.md":"Returns the `Data Type` of an expression. \n\nThe type is returned as on of the following all-uppercase strings:\n{{Columns|5|\n* \"`ARRAY`\"\n* \"`BOOL`\"\n* \"`CODE`\"\n* \"`CONFIG`\"\n* \"`CONTROL`\"\n* \"`DISPLAY`\"\n* \"`GROUP`\"\n* \"`LOCATION`\"\n* \"`OBJECT`\"\n* \"`SCALAR`\"\n* \"`SCRIPT`\"\n* \"`SIDE`\"\n* \"`STRING`\"\n* \"`TEXT`\"\n* \"`TEAM_MEMBER`\"\n* \"`NAMESPACE`\"\n* \"`DIARY_RECORD`\"\n* \"`TASK`\"\n* \"`HASHMAP`\"\n\n\n---\n*Syntaxes:*\n\n`typeName` anything\n\n---\n*Example 1:*\n\n```sqf\n_msg = \"hello\"; _result = typeName _msg;  //_result will be \"STRING\"\n```\n\n*Example 2:*\n\n```sqf\n_unit = player; _result = typeName _unit; //_result becomes \"OBJECT\"\n```\n\n*Example 3:*\n\nValues representing direct ` Data Types`:\n\n```sqf\nhint typeName 0;\t\t\t\t\t// SCALAR\nhint typeName \"\";\t\t\t\t\t// STRING\nhint typeName true;\t\t\t\t\t// BOOL\nhint typeName [];\t\t\t\t\t// ARRAY\nhint typeName {};\t\t\t\t\t// CODE\nhint typeName objNull;\t\t\t\t// OBJECT\nhint typeName grpNull;\t\t\t\t// GROUP\nhint typeName controlNull;\t\t\t// CONTROL\nhint typeName teamMemberNull;\t\t// TEAM_MEMBER\nhint typeName displayNull;\t\t\t// DISPLAY\nhint typeName taskNull;\t\t\t\t// TASK\nhint typeName locationNull;\t\t\t// LOCATION\nhint typeName sideUnknown;\t\t\t// SIDE\nhint typeName text \"\";\t\t\t\t// TEXT\nhint typeName configFile;\t\t\t// CONFIG\nhint typeName configNull;\t\t\t// CONFIG (Since Arma 3 v1.54)\nhint typeName missionNamespace;\t\t// NAMESPACE\nhint typeName diaryRecordNull;\t\t// DIARY_RECORD (Since Arma 3 v2.00)\nhint typeName createHashMap;\t\t// HASHMAP (Since Arma 3 v2.02)\n```\n\n*Example 4:*\n\n```sqf\nif (typeName _this != \"ARRAY\") exitWith { hint \"_this is not an array!\" };\n// is the same as\nif (typeName _this != typeName []) exitWith { hint \"_this is not an array!\" };\n// same result but faster in Arma 3\nif !(_this isEqualType []) exitWith { hint \"_this is not an array!\" };\n```","commands\\typeOf.md":"Returns the class name of a given object.\n\n\n---\n*Syntaxes:*\n\n`typeOf` obj\n\n---\n*Example 1:*\n\n```sqf\nif (typeOf vehicle player == \"B_Heli_Light_01_armed_F\") then { hint \"Player is in a AH-9 Pawnee\"; };\n```","commands\\UAVControl.md":"Returns array with current operator of UAV and his vehicle role in UAV. If nobody is controlling the UAV, the command tries to find any person with connected terminal to this UAV, in which case the vehicle role is an empty string. If command cannot find anyone, output is **<nowiki>[</nowiki>`objNull`, \"\"]**.\n<br><br>\nSince Arma 3 v1.96 this command returns both driver and gunner units if the UAV is controlled by 2 players. Here is the list of all expected outputs:\n* **[player1, \"DRIVER\"]** - player1 is controlling the UAV and is the pilot\n* **[player2, \"GUNNER\"]** - player2 is controlling the UAV and is the gunner\n* **[player1, \"DRIVER\", player2, \"GUNNER\"]** - player1 is controlling the UAV and is the pilot, player2 is controlling UAV and is the gunner\n* **[player3, \"\"]** - no one is controlling the UAV, player3 is connected to the UAV via terminal, but not controlling it yet\n* **<nowiki>[</nowiki>`objNull`, \"\"]** - nobody is controlling or connected to the UAV\n<br>\n\n\n---\n*Syntaxes:*\n\n`UAVControl` uav\n\n---\n*Example 1:*\n\n```sqf\nUAVControl uav;\n```","commands\\uiNamespace.md":"Returns the global namespace attached to user interface.\n\n\n---\n*Syntaxes:*\n\n`uiNamespace`\n\n---\n*Example 1:*\n\n```sqf\n    uiNamespace setVariable [\"LIB_interruptDisplay\", _display];\n```\n\n*Example 2:*\n\n```sqf\nuiNamespace setVariable [\"myVar\", 46];\nwith uiNamespace do\n{\n\thint str myVar; // 46\n};\n```","commands\\uiSleep.md":"Suspend execution of script for given uitime.  uiSleep is a sleep method to delay script execution where script time/simulation time is stopped.\n`uiSleep` is basically using the system time (uiTime more specifically) and not simulation time.\nSo in the cases where `sleep` would get stuck indefinitely, `uiSleep` can still be used to effectively delay script execution for example in pause or in a mission briefing or an editor or when simulation is paused in general.\n\n\n---\n*Syntaxes:*\n\n`uiSleep` delay\n\n---\n*Example 1:*\n\n```sqf\nuiSleep 0.5;\n```","commands\\unassignCurator.md":"Unassign curator (will destroy both sides of connection).\n\n\n---\n*Syntaxes:*\n\n`unassignCurator` curatorObj\n\n---\n*Example 1:*\n\n```sqf\nunassignCurator myCurator;\n```","commands\\unassignItem.md":"Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.\n\n\n---\n*Syntaxes:*\n\nunit `unassignItem` item\n\n---\n*Example 1:*\n\n```sqf\n_bluforUnit unassignItem \"NVGoggles\";\n_bluforUnit removeItem \"NVGoggles\";\n_opforUnit unassignItem \"NVGoggles_OPFOR\";\n_opforUnit removeItem \"NVGoggles_OPFOR\";\n_independentUnit unassignItem \"NVGoggles_INDEP\";\n_independentUnit removeItem \"NVGoggles_INDEP\";\n```\n\n*Example 2:*\n\n```sqf\n{\n   _x unassignItem hmd _x; // Unassign (not remove) NVGs from all units. The class name of the NVG is not needed\n} forEach allUnits;\n```","commands\\unassignTeam.md":"Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit `assignTeam` \"MAIN\".\n\n\n---\n*Syntaxes:*\n\n`unassignTeam` vehicleName\n\n---\n*Example 1:*\n\n```sqf\nunassignTeam _soldier2;\n```","commands\\unassignVehicle.md":"Unassigns individual unit from a vehicle, usually previously assigned with `assignAsXXX` command, i.e removes `assignedVehicleRole` of the unit.\nIf the unit is currently in that vehicle, the group leader will issue an order to disembark.\n\n\n---\n*Syntaxes:*\n\n`unassignVehicle` unitName\n\n---\n*Example 1:*\n\n```sqf\nunassignVehicle player;\n```\n\n*Example 2:*\n\n```sqf\n{ unassignVehicle _x } forEach crew _vehiclenNme;\n``` Will make all the occupants of a vehicle disembark\n\n*Example 3:*\n\n```sqf\n{ unassignVehicle _x } forEach crew _vehicleName; crew _vehiclename allowGetIn false;\n``` Will make all the occupants of a vehicle disembark and stop them from getting back in","commands\\underwater.md":"Returns whether the object is fully underwater.\n\n\n---\n*Syntaxes:*\n\n`underwater` object\n\n---\n*Example 1:*\n\n```sqf\nprivate _isUnderwater = underwater vehicle player;\n```\n\n*Example 2:*\n\n```sqf\nprivate _isHeadUnderwater = eyePos player select 2 < 0;\n```","commands\\uniform.md":"Returns name of uniform.\n\n\n---\n*Syntaxes:*\n\n`uniform` unit\n\n---\n*Example 1:*\n\n```sqf\n_uniform = uniform _unit;\n```","commands\\uniformContainer.md":"Returns a cargo container of a unit's uniform.\n\n\n---\n*Syntaxes:*\n\n`uniformContainer` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d\n```\n\n*Example 2:*\n\n```sqf\nhint str getMagazineCargo uniformContainer player;\n/*\n\treturns e.g\n\t[\n\t\t[\"30Rnd_65x39_caseless_mag\"],\n\t\t[3]\n\t]\n*/\n```","commands\\uniformItems.md":"Get array with all items (of any kind, even weapons) from uniform.\n\n\n---\n*Syntaxes:*\n\n`uniformItems` unit\n\n---\n*Example 1:*\n\n```sqf\nuniformItems player;\n// returns e.g\n/*\n[\n\t\"FirstAidKit\",\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"30Rnd_65x39_caseless_mag\"\n]\n*/\n```","commands\\uniformMagazines.md":"Get array with all magazines from uniform of the given unit.\n\n\n---\n*Syntaxes:*\n\n`uniformMagazines` unit\n\n---\n*Example 1:*\n\n```sqf\nuniformMagazines player;\n// returns e.g\n/*\n[\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](3x)\"\n]\n*/\n```","commands\\uniqueUnitItems.md":"Returns hashmap of all items in units inventory as [classname, count] pairs.\n\n\n---\n*Syntaxes:*\n\n`uniqueUnitItems` unit\n\n`uniqueUnitItems` [unit, weaponsItems, uniformItems, vestItems, backpackItems, assignedItems]\n\n---\n*Example 1:*\n\n```sqf\nprivate _unitUniqueItems = uniqueUnitItems [player, 0, 2, 2, 2, true];\nif (_unitUniqueItems getOrDefault [\"FirstAidKit\", 0] > 5) then { hint \"I'm rich of FAK to give!\"; };\n```\n\n*Example 2:*\n\n```sqf\nprivate _unitUniqueItems = uniqueUnitItems [cursorObject];\n```","commands\\unitAddons.md":"Returns list with addons the unit belongs to.\n\n\n---\n*Syntaxes:*\n\n`unitAddons` className\n\n---\n*Example 1:*\n\n```sqf\nhint str unitAddons typeOf player; //[\"A3_Characters_F_BLUFOR\"]\n```","commands\\unitAimPosition.md":"Returns the position on the unit other units can aim at. Same as `aimPos` only returns position in `PositionAGL` format and has render scope alternative `unitAimPositionVisual`.\n\n\n---\n*Syntaxes:*\n\n`unitAimPosition` unit\n\n---\n*Example 1:*\n\n```sqf\nunitAimPosition player;\n```","commands\\unitAimPositionVisual.md":"Returns the position on the unit other units can aim at in render scope. See also `aimPos`, `unitAimPosition`.\n\n\n---\n*Syntaxes:*\n\n`unitAimPositionVisual` unit\n\n---\n*Example 1:*\n\n```sqf\nunitAimPositionVisual player;\n```","commands\\unitBackpack.md":"Returns unit's backpack\n\n\n---\n*Syntaxes:*\n\n`unitBackpack` unit\n\n---\n*Example 1:*\n\n```sqf\nprivate _myBackpack = unitBackpack player;\n```\n\n*Example 2:*\n\n```sqf\nclearMagazineCargo unitBackpack player;\n```\n\n*Example 3:*\n\n```sqf\nplayer action [\"gear\", unitBackpack player];\n```","commands\\unitCombatMode.md":"Gets individual unit's `combat mode`. For more information see `setUnitCombatMode`.\n\n\n---\n*Syntaxes:*\n\n`unitCombatMode` unit\n\n---\n*Example 1:*\n\n```sqf\nunitCombatMode _unit;\n```","commands\\unitIsUAV.md":"Returns whether or not the given object is an UAV, UGV (drone). Command will also return `true` for empty drones. Corresponding to transport parameter **isUAV**.\n\n\n---\n*Syntaxes:*\n\n`unitIsUAV` object\n\n---\n*Example 1:*\n\n```sqf\n_isUAV = unitIsUAV _vehicle;\n```","commands\\unitPos.md":"Return the unit position rules.\n\n<br>The return value is always \"Auto\" unless the unit has gotten a `setUnitPos` command. In that case the value is the last stance the unit was ordered to.\n<br>Available modes are listed at `setUnitPos`.\n\n\n---\n*Syntaxes:*\n\n`unitPos` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str unitPos _unit;\n```","commands\\unitReady.md":"Check if the unit is ready. Unit is busy when it is given some command like `move`, until the command is finished.\n\n\n---\n*Syntaxes:*\n\n`unitReady` unitName\n\n---\n*Example 1:*\n\n```sqf\nprivate _it = unitReady _soldierOne;\n```","commands\\unitRecoilCoefficient.md":"Returns recoil coefficient of a soldier.\n\n\n---\n*Syntaxes:*\n\n`unitRecoilCoefficient` soldier\n\n---\n*Example 1:*\n\n```sqf\n_myRecoil = unitRecoilCoefficient player;\n```","commands\\units.md":"Returns an array with all the units in the group or group of the unit. <br>\nSince {{arma3}} v2.02 the command can also return all units belonging to a certain side.\n\n\n---\n*Syntaxes:*\n\n`units` type\n\n---\n*Example 1:*\n\n```sqf\n_myUnitCount = count units player;\n```\n\n*Example 2:*\n\n```sqf\n_isInMyGroup = _soldier1 in units player;\n```\n\n*Example 3:*\n\n```sqf\n_unitsEast = units opfor;\n```\n\n*Example 4:*\n\n```sqf\n// Both methods are the same, the latter is preferred\nunits group player; \t// [B Alpha 1-1:1 (R3vo),B Alpha 1-1:2,B Alpha 1-1:3,B Alpha 1-1:4,B Alpha 1-1:5,B Alpha 1-1:6,B Alpha 1-1:7,B Alpha 1-1:8]\nunits player; \t\t\t// [B Alpha 1-1:1 (R3vo),B Alpha 1-1:2,B Alpha 1-1:3,B Alpha 1-1:4,B Alpha 1-1:5,B Alpha 1-1:6,B Alpha 1-1:7,B Alpha 1-1:8]\n```","commands\\unitsBelowHeight.md":"Returns units in group/array below given Above Terrain Level (ATL) altitude.\n\n\n---\n*Syntaxes:*\n\nunits `unitsBelowHeight` height\n\ngroup `unitsBelowHeight` height\n\n---\n*Example 1:*\n\n```sqf\n_allOnGroudUnits = group player unitsBelowHeight 10;\n```\n\n*Example 2:*\n\n```sqf\n_units = allUnits unitsBelowHeight 30;\n```","commands\\unitTurret.md":"Returns the turret path the given vehicle's gunner is in.\nTo get the turret's unit see `turretUnit`.\n\n\n---\n*Syntaxes:*\n\nvehicle `unitTurret` gunner\n\n---\n*Example 1:*\n\n```sqf\n_vehicle unitTurret _gunner;\n```\n\n*Example 2:*\n\n```sqf\nvehicle player unitTurret player;\n```","commands\\unlinkItem.md":"Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.\n\n\n---\n*Syntaxes:*\n\nunit `unlinkItem` item\n\n---\n*Example 1:*\n\n```sqf\nbluforUnit unlinkItem \"NVGoggles\";\nopforUnit unlinkItem \"NVGoggles_OPFOR\";\nindependentUnit unlinkItem \"NVGoggles_INDEP\";\n```","commands\\unlockAchievement.md":"Unlocks the given achievement. The achievements are listed in CfgAchievements, however none of the currently listed achievements is used in Arma 3, hence the command always returns `false`.<br><br>\n\n Xbox 360 version as stated\n{{ExternalLink\n\n\n---\n*Syntaxes:*\n\n`unlockAchievement` name\n\n---\n*Example 1:*\n\n```sqf\n_isUnlocked = unlockAchievement \"Hunter\";\n```","commands\\unregisterTask.md":"Unregisters a task type from given agent. The task type is the name given in **CfgTasks}} classes in {{hl|name** property. Also available from `registeredTasks` array.\n\n\n---\n*Syntaxes:*\n\nteamMember `unregisterTask` name\n\n---\n*Example 1:*\n\n```sqf\nteamMember _agent unregisterTask (registeredTasks select 0);\n```","commands\\updateDrawIcon.md":"Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.\n\n\n---\n*Syntaxes:*\n\nmap `updateDrawIcon` [object,string identifier,color,offset,width,height,maintain size?,angle,shadow]\n\n---\n*Example 1:*\n\n-","commands\\updateMenuItem.md":"Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.\n\n\n---\n*Syntaxes:*\n\nmap `updateMenuItem` [menu item index,text,command]\n\n---\n*Example 1:*\n\n-","commands\\updateObjectTree.md":"Update the editor object tree.\n\n\n---\n*Syntaxes:*\n\n`updateObjectTree` map\n\n---\n*Example 1:*\n\n```sqf\nupdateObjectTree _ctrlMap;\n```","commands\\useAIOperMapObstructionTest.md":"Toggle secondary obstruction test on road paths.\n\n\n---\n*Syntaxes:*\n\n`useAIOperMapObstructionTest` state\n\n---\n*Example 1:*\n\n```sqf\nuseAIOperMapObstructionTest true;\n```","commands\\useAISteeringComponent.md":"Enable the new {{ExternalLink\n\n\n---\n*Syntaxes:*\n\n`useAISteeringComponent` state\n\n---\n*Example 1:*\n\n```sqf\nuseAISteeringComponent true;\n```","commands\\useAudioTimeForMoves.md":"Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization.\n\n\n---\n*Syntaxes:*\n\nsoldier `useAudioTimeForMoves` toggle\n\n---\n*Example 1:*\n\n```sqf\nplayer useAudioTimeForMoves true;\n```","commands\\userInputDisabled.md":"Returns true if user input is disabled\n\n\n---\n*Syntaxes:*\n\n`userInputDisabled`\n\n---\n*Example 1:*\n\nToggles user input\n```sqf\ndisableUserInput !userInputDisabled;\n```","commands\\values.md":"Returns all values stored in the given `HashMap`. The order of the returned Array corresponds to the order of the Array returned by the `keys` command.\n\n\n---\n*Syntaxes:*\n\n`values` hashmap\n\n---\n*Example 1:*\n\n```sqf\nprivate _values = values _myHashMap;\n```","commands\\vectorAdd.md":"Adds two 3D vectors. Replaces `BIS_fnc_vectorAdd`.\n\n\n---\n*Syntaxes:*\n\nvector1 `vectorAdd` vector2\n\n---\n*Example 1:*\n\n```sqf\nhint str (velocity unit1 vectorAdd velocity unit2);\n```\n\n*Example 2:*\n\n```sqf\n[5,10,5] vectorAdd [5,5,10]; //  returns [10,15,15]\n```\n\n*Example 3:*\n\n```sqf\n[0,0] vectorAdd [1,-2]; //  returns [1,-2,0]\n```","commands\\vectorCos.md":"Cosine of angle between two 3D vectors.\n\n\n---\n*Syntaxes:*\n\nvector1 `vectorCos` vector2\n\n---\n*Example 1:*\n\n```sqf\n_cos = getPos player vectorCos [0,0,2];\n```","commands\\vectorCrossProduct.md":"Cross product of two 3D vectors. \n<br>In layman's terms, if you have a polygon (surface) defined by 3 points, you can find a normal to it (just like terrain `surfaceNormal`). To invert direction of the normal, swap arguments around.\n\n\n---\n*Syntaxes:*\n\nvector1 `vectorCrossProduct` vector2\n\n---\n*Example 1:*\n\n```sqf\n_vector = [1,1,1] vectorCrossProduct [2,2,2];\n```\n\n*Example 2:*\n\n```sqf\n_vectorUp = [0,1,0] vectorCrossProduct [-1,0,0]; //[0,-0,1]\n```\n\n*Example 3:*\n\n```sqf\n_vectorSide = (vectorDir player) vectorCrossProduct (vectorUp player);\n```","commands\\vectorDiff.md":"Subtracts one 3D vector from another. (vector1 - vector2)\n\n\n---\n*Syntaxes:*\n\nvector1 `vectorDiff` vector2\n\n---\n*Example 1:*\n\n```sqf\nhint str (velocity car vectorDiff velocity bike);\n```","commands\\vectorDir.md":"Returns object direction vector in world space (**[x,y,z]**).\n\n\n---\n*Syntaxes:*\n\n`vectorDir` object\n\n---\n*Example 1:*\n\n```sqf\n_dirVector = vectorDir _unit;\n```","commands\\vectorDirVisual.md":"Return object's normalized direction vector in world space (**[x,y,z]**) in render time scope. \n* A unit facing North would return **[0,1,0]**\n* A unit facing East would return **[1,0,0]**\n* A unit facing South would return **[0,-1,0]**\n* A unit facing West would return **[-1,0,0]**\n\n\n---\n*Syntaxes:*\n\n`vectorDirVisual` objectName\n\n---\n*Example 1:*\n\n```sqf\n_dirVector = vectorDirVisual _unit;\n```","commands\\vectorDistance.md":"Returns [Euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance) between two points.\n\n\n---\n*Syntaxes:*\n\npoint1 `vectorDistance` point2\n\n---\n*Example 1:*\n\n```sqf\n_euclideanDist = getPosASL player vectorDistance [0,0,0];\n```\n\n*Example 2:*\n\n```sqf\n(getPosASL _a) vectorDistance (getPosASL _b);\n// same as\n(getPosATL _a) distance (getPosATL _b);\n```","commands\\vectorDistanceSqr.md":"Squared distance between two 3D vectors.\n\n\n---\n*Syntaxes:*\n\nvector1 `vectorDistanceSqr` vector2\n\n---\n*Example 1:*\n\n```sqf\n_distSqr = getPos player vectorDistanceSqr [0,0,2];\n```","commands\\vectorDotProduct.md":"Dot product of two 3D vectors.\n\n\n---\n*Syntaxes:*\n\nvector1 `vectorDotProduct` vector2\n\n---\n*Example 1:*\n\n```sqf\n_dot = [1,0,1] vectorDotProduct [0,0,2];\n```","commands\\vectorFromTo.md":"Unit vector, equal to direction from vector1 to vector2. In other words this command produces ` normalised vector` between given 2 points.<br>\nTo get a non-normalised vector, use `vectorDiff`.\n\n\n---\n*Syntaxes:*\n\nvector1 `vectorFromTo` vector2\n\n---\n*Example 1:*\n\n```sqf\n[1,2,3] vectorFromTo [4,5,6];\n// is the same as\nvectorNormalized ([4,5,6] vectorDiff [1,2,3]);\n```","commands\\vectorLinearConversion.md":"Interpolates vector between the given `vectorFrom` and `vectorTo` value according to the given range value.\n\n\n---\n*Syntaxes:*\n\n`vectorLinearConversion` [rangeFrom, rangeTo, rangeValue, vectorFrom, vectorTo, clip]\n\n---\n*Example 1:*\n\n```sqf\nvectorLinearConversion [0, 1, 0.5, [0,0,0], [25,50,100], false];\t// [12.5,25,50]\n```\n\n*Example 2:*\n\n```sqf\nvectorLinearConversion [0, 1, 100, [0,0,0], [25,50,100], true];\t// [25,50,100]\n```\n\n*Example 3:*\n\n```sqf\nvectorLinearConversion [0, 1, 100, [0,0,0], [25,50,100], false];\t// [2500,5000,10000]\n```","commands\\vectorMagnitude.md":"Magnitude of a 3D vector.\n\n\n---\n*Syntaxes:*\n\n`vectorMagnitude` vector\n\n---\n*Example 1:*\n\n```sqf\n_size = vectorMagnitude [0,3,4]; // returns 5\n```\n\n*Example 2:*\n\n```sqf\n_speed = vectorMagnitude velocity player;\t\t\t\t// return velocity of player in m/s\n_speed = (vectorMagnitude velocity player) * 3.6;\t\t// return velocity of player in km/h\n_speed = (vectorMagnitude velocity player) * 2.23694;\t// return velocity of player in mph\n```","commands\\vectorMagnitudeSqr.md":"Squared magnitude of a 3D vector.\n\n\n---\n*Syntaxes:*\n\n`vectorMagnitudeSqr` vector\n\n---\n*Example 1:*\n\n```sqf\n_sizeSqr = vectorMagnitudeSqr [0,3,4]; // returns 25\n```","commands\\vectorModelToWorld.md":"Converts vector direction from model to world space.\n\n\n---\n*Syntaxes:*\n\nobject `vectorModelToWorld` modelDir\n\n---\n*Example 1:*\n\nConvert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: \n\n```sqf\n_airplane vectorModelToWorld [0,-10,4];\n```","commands\\vectorModelToWorldVisual.md":"Converts vector from model to world space in render time scope.\n\n\n---\n*Syntaxes:*\n\nobject `vectorModelToWorldVisual` modelDir\n\n---\n*Example 1:*\n\nConvert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: \n\n```sqf\n_airplane vectorModelToWorldVisual [0,-10,4];\n```","commands\\vectorMultiply.md":"Multiplies 3D vector by a scalar.\n\n\n---\n*Syntaxes:*\n\nvector `vectorMultiply` scalar\n\n---\n*Example 1:*\n\n```sqf\n_newVector = [1,2,3] vectorMultiply 3; // returns [3,6,9]\n```\n\n*Example 2:*\n\n```sqf\n \nprivate _eyePos = eyePos player;\nprivate _eyeDir = getCameraViewDirection player;    // this is a normalized vector, i.e. its magnitude is 1\nprivate _100mFurther = _eyeDir vectorMultiply 100;  // since _eyeDir is normalized, multiplying it by 100 means 100 m in that direction\nprivate _lookPos = _eyePos vectorAdd _100mFurther;  // the position where player is looking 100m ahead\n```","commands\\vectorNormalized.md":"Returns normalized vector (unit vector, `vectorMagnitude` {{=}}{{=}} 1) of given vector. If given vector is 0 result is a 0 vector as well.\n\n\n---\n*Syntaxes:*\n\n`vectorNormalized` vector\n\n---\n*Example 1:*\n\n```sqf\nvectorNormalized [12345,7890,38383]; // [0.300481,0.192045,0.934254]\nvectorMagnitude [0.300481,0.192045,0.934254]; // 1\n```","commands\\vectorUp.md":"Returns up vector of the given object in format [[Vector3D]].\n\n\n---\n*Syntaxes:*\n\n`vectorUp` object\n\n---\n*Example 1:*\n\n```sqf\n_objUpVector = vectorUp myObject;\n```","commands\\vectorUpVisual.md":"Return object's up vector in world `Position` coordinates ( [x, y, z] ) in render time scope.\n\n\n---\n*Syntaxes:*\n\n`vectorUpVisual` objectName\n\n---\n*Example 1:*\n\n```sqf\n_vUp = vectorUpVisual vehicle player;\n```","commands\\vectorWorldToModel.md":"Converts vector direction from world to model space.\n\n\n---\n*Syntaxes:*\n\nobject `vectorWorldToModel` worldDir\n\n---\n*Example 1:*\n\nConvert world space vector [0,-10,4] to model space of object _airplane: \n\n```sqf\n_airplane vectorWorldToModel [0,-10,4];\n```","commands\\vectorWorldToModelVisual.md":"Converts vector direction from world to model space in `render time scope`.\n\n\n---\n*Syntaxes:*\n\nobject `vectorWorldToModelVisual` worldDir\n\n---\n*Example 1:*\n\nConvert world space vector [0,-10,4] to model space of object _airplane:\n\n```sqf\nprivate _vector = _airplane vectorWorldToModelVisual [0,-10,4];\n```","commands\\vehicle.md":"Vehicle in which given unit is mounted. If none, unit is returned. Alternatively, use `objectParent`\n\n\n---\n*Syntaxes:*\n\n`vehicle` unitName\n\n---\n*Example 1:*\n\nSQS\n<sqs>? vehicle player != player : hint \"Player is in a vehicle\"</sqs>\n\n*Example 2:*\n\nSQF\n\n```sqf\nif (vehicle player != player) then { hint \"Player is in a vehicle\" };\n```","commands\\vehicleCargoEnabled.md":"Check if the vehicle has enabled transporting other vehicles or not.\n\n\n---\n*Syntaxes:*\n\n`vehicleCargoEnabled` vehicle\n\n---\n*Example 1:*\n\nBlackfish (Vehicle Transport) with given variable name blackfish\n\n```sqf\n_canTransportVehicles = vehicleCargoEnabled blackfish; //returns true\n```","commands\\vehicleChat.md":"Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally, see `remoteExec`.\n\n\n---\n*Syntaxes:*\n\nvehicleName `vehicleChat` chatText\n\n---\n*Example 1:*\n\n```sqf\nvehicle player vehicleChat \"Show this text\";\n```\n\n*Example 2:*\n\n```sqf\ndriver vehicle player sideChat \"sideChat\";\ndriver vehicle player globalChat \"globalChat\";\ndriver vehicle player groupChat \"groupChat\";\nvehicle player vehicleChat \"vehicleChat\";\ndriver vehicle player commandChat \"commandChat\";\ndriver vehicle player customChat [1, \"customChat\"];\nsystemChat \"systemChat\";\n```","commands\\vehicleMoveInfo.md":"Returns current vehicle move/turn info (a getter for `sendSimpleCommand`) in format [moveInfo, turnInfo]. Possible values:\n\n} - keyboard pilot is used, i.e. player is in the vehicle and is the `effectiveCommander` pressing any driving key (WASD or arrows). \n{{!}} width=\"50%\" {{!}}\n* **\"LEFT\"** - vehicle is turning left (use ` \"STOPTURNING\"` to cancel)\n* **\"RIGHT\"** - vehicle is turning right (use ` \"STOPTURNING\"` to cancel)\n* **\"NONE\"** - vehicle is not turning (when script command is used)\n* **\"ABS\"** - vehicle is not turning (when keyboard pilot is used)\n{{!}}}\n\n\n---\n*Syntaxes:*\n\n`vehicleMoveInfo` vehicle\n\n---\n*Example 1:*\n\n```sqf\nonEachFrame { hintSilent str vehicleMoveInfo vehicle player };\n```","commands\\vehicleRadio.md":"Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the `description.ext` file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see `remoteExec`).\n\n\n---\n*Syntaxes:*\n\nunit `vehicleRadio` radioName\n\n---\n*Example 1:*\n\n```sqf\n_soldierOne vehicleRadio \"messageOne\";\n```\n\n*Example 2:*\n\n```sqf\nplayer vehicleRadio configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));\n```","commands\\vehicleReceiveRemoteTargets.md":"Gets whether the vehicle can acquire targets via datalink from the `Side` center.\n\n\n---\n*Syntaxes:*\n\n`vehicleReceiveRemoteTargets` vehicle\n\n---\n*Example 1:*\n\n```sqf\nvehicleReceiveRemoteTargets vehicle player;\n```","commands\\vehicleReportOwnPosition.md":"Gets whether the vehicle shares its own position via datalink with the `Side` center.\n\n\n---\n*Syntaxes:*\n\n`vehicleReportOwnPosition` vehicle\n\n---\n*Example 1:*\n\n```sqf\nvehicleReportOwnPosition vehicle player;\n```","commands\\vehicleReportRemoteTargets.md":"Gets whether the vehicle shares acquired targets via datalink with the `Side` center.\n\n\n---\n*Syntaxes:*\n\n`vehicleReportRemoteTargets` vehicle\n\n---\n*Example 1:*\n\n```sqf\nvehicleReportRemoteTargets vehicle player;\n```","commands\\vehicles.md":"Returns an array of all vehicles available to current client. This command returns both empty and crewed vehicles <u>but not soldiers</u>. It will also return \"WeaponHolderSimulated\" of dead bodies (weapon on the ground). Vehicles created with `createVehicleLocal` will only be returned on the client that created them.\n\n\n---\n*Syntaxes:*\n\n`vehicles`\n\n---\n*Example 1:*\n\n```sqf\n_vehicles = vehicles;\n```","commands\\vehicleVarName.md":"Returns the variable name that contains a primary editor reference to this object. This is the variable given in the `Insert Unit dialog / name field` in the editor. It can be changed using `setVehicleVarName`.\n\n\n---\n*Syntaxes:*\n\n`vehicleVarName` object\n\n---\n*Example 1:*\n\n```sqf\nhint vehicleVarName player;\n```","commands\\velocity.md":"Returns the velocity of the object as vector in m/s.\n\n\n---\n*Syntaxes:*\n\n`velocity` object\n\n---\n*Example 1:*\n\n```sqf\n_vector = velocity jeep;\n```\n\n*Example 2:*\n\n```sqf\nif ((velocity _plane1 select 2) > 50) then { hint \"Aircraft is climbing up too fast!\"; };\n```","commands\\velocityModelSpace.md":"Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.\n\n\n---\n*Syntaxes:*\n\n`velocityModelSpace` vehicle\n\n---\n*Example 1:*\n\n```sqf\nvelocityModelSpace _chopper;\ncomment \"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]\";\n```","commands\\verifySignature.md":"Check if file is signed by any key present in game keys folders. On clients, it does not check against the keys accepted by server.\n\n\n---\n*Syntaxes:*\n\n`verifySignature` filename\n\n---\n*Example 1:*\n\n```sqf\nverifySignature \"@MyAddon\\Addons\\SomeAddon.pbo\";\n```\n\n*Example 2:*\n\n```sqf\nverifySignature \"@MyAddon\\Somefnc.dll\";\n```","commands\\vest.md":"nameof vest.\n\n\n---\n*Syntaxes:*\n\n`vest` unit\n\n---\n*Example 1:*\n\n```sqf\n_myVest = vest player;\n```","commands\\vestContainer.md":"Returns a cargo container of a unit's vest.\n\n\n---\n*Syntaxes:*\n\n`vestContainer` unit\n\n---\n*Example 1:*\n\n```sqf\nhint str vestContainer player; // 2df7d600# 163942: dummyweapon.p3d\n```\n\n*Example 2:*\n\n```sqf\nhint str getMagazineCargo vestContainer player;\n/*\n\treturns e.g\n\t[\n\t\t[\n\t\t\t\"30Rnd_65x39_caseless_mag\",\n\t\t\t\"16Rnd_9x21_Mag\",\n\t\t\t\"HandGrenade\",\n\t\t\t\"APERSMine_Range_Mag\",\n\t\t\t\"SmokeShell\",\n\t\t\t\"SmokeShellGreen\",\n\t\t\t\"Chemlight_green\"\n\t\t],[\n\t\t\t2,\n\t\t\t2,\n\t\t\t2,\n\t\t\t3,\n\t\t\t1,\n\t\t\t1,\n\t\t\t2\n\t\t]\n\t]\n*/\n```","commands\\vestItems.md":"Get array with all items (of any kind, even weapons) from vest.\n\n\n---\n*Syntaxes:*\n\n`vestItems` unit\n\n---\n*Example 1:*\n\n```sqf\nvestItems player;\n// returns e.g\n/*\n[\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"30Rnd_65x39_caseless_mag\",\n\t\"16Rnd_9x21_Mag\",\n\t\"16Rnd_9x21_Mag\",\n\t\"HandGrenade\",\n\t\"HandGrenade\",\n\t\"SmokeShell\",\n\t\"SmokeShellGreen\",\n\t\"Chemlight_green\",\n\t\"Chemlight_green\"\n]\n*/\n```","commands\\vestMagazines.md":"Get array with all magazines from vest of the given unit.\n\n\n---\n*Syntaxes:*\n\n`vestMagazines` unit\n\n---\n*Example 1:*\n\n```sqf\nvestMagazines player;\n// returns e.g\n/*\n[\n\t\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:4/0](2x)\",\n\t\"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\",\n\t\"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\",\n\t\"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\",\n\t\"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\",\n\t\"Chemlight (Green)(1/1)[id/cr:14/0](2x)\"\n]\n*/\n```","commands\\viewDistance.md":"Returns the rendering distance.\n\n\n---\n*Syntaxes:*\n\n`viewDistance`\n\n---\n*Example 1:*\n\n```sqf\nhint (\"my view distance is \" + str viewDistance + \" meters\");\n```","commands\\visibleCompass.md":"Checks if the player has compass opened and visible. Keep in mind that the GPS minimap in Arma 3 also shows the direction.\n\n\n---\n*Syntaxes:*\n\n`visibleCompass`\n\n---\n*Example 1:*\n\n```sqf\nif (visibleCompass) then {hint \"Compass is visible\"};\n```","commands\\visibleGPS.md":"Checks if the player has GPS receiver (minimap) opened and visible.\n\n\n---\n*Syntaxes:*\n\n`visibleGPS`\n\n---\n*Example 1:*\n\n```sqf\nif (visibleGPS) then {hint \"GPS is visible\"};\n```","commands\\visibleMap.md":"Return true if the main map is shown (active).\n\n\n---\n*Syntaxes:*\n\n`visibleMap`\n\n---\n*Example 1:*\n\n```sqf\nif (visibleMap) then {hint \"You're showing the map !\"};\n```","commands\\visiblePosition.md":"Returns an object's rendered position (z value above surface underneath) in render time scope. Same as `getPosVisual`.\n\n\n---\n*Syntaxes:*\n\n`visiblePosition` object\n\n---\n*Example 1:*\n\n```sqf\nplayerRenderedPos = visiblePosition player;\n```","commands\\visiblePositionASL.md":"Returns an object's rendered `ASL position` (z value above sea level) in render time scope.\n\n\n---\n*Syntaxes:*\n\n`visiblePositionASL` object\n\n---\n*Example 1:*\n\n```sqf\n_playerRenderedPosASL = visiblePositionASL player;\n```","commands\\visibleScoretable.md":"Checks whether the score table is visible.\n\n\n---\n*Syntaxes:*\n\n`visibleScoretable`\n\n---\n*Example 1:*\n\n```sqf\n_visible = visibleScoretable;\n```","commands\\visibleWatch.md":"Checks if the player has watch opened and visible. Keep in mind that the GPS minimap in {{arma3}} also shows the time.\n\n\n---\n*Syntaxes:*\n\n`visibleWatch`\n\n---\n*Example 1:*\n\n```sqf\nif (visibleWatch) then {hint \"Watch is visible\"};\n```","commands\\waitUntil.md":"Suspends execution of `scheduled` script until the given condition satisfied. \n* This command will loop and call the code inside <sqf inline>{}\n``` `mostly every frame`, depends on complexity of the condition and the overall engine load, until the `code` returns `true`\n* If the very first execution of the code returns `true` the command will exit immediately, therefore it will not produce any \"Suspending not allowed in this context\" error when used inside `non-scheduled` script. For all other uses it must be executed in environment that allows `suspension` (`canSuspend`), such as `spawn`ed or `execVM`ed code\n* Avoid doing <sqf inline>waitUntil { time > 20 };\n``` and use <sqf inline>sleep 20;\n``` instead!\n* If you can, add a `sleep` to the condition to save some cpu cycles <sqf inline>waitUntil { sleep 1; !alive player };\n```\n\n\n---\n*Syntaxes:*\n\n`waitUntil` condition\n\n---\n*Example 1:*\n\n```sqf\nwaitUntil { not alive player };\n```\n\n*Example 2:*\n\n```sqf\n_i = 0; waitUntil { _i = _i + 1; _i >= 100 };\n```\n\n*Example 3:*\n\n`waitUntil` can lead to performance loss if used improperly:\n\n```sqf\nwaitUntil { not alive player };\t\t\t// bad\nwaitUntil { sleep 1; not alive player };\t// good - checks every 1 second\nplayer addEventHandler [\"Killed\", {  }];\t// best - don't forget about Event Handlers\n```\n\n*Example 4:*\n\nAn on-the-fly custom [[Arma 3: Event Handlers|event handler]]:\n\n```sqf\n_myEH = [\"ZoomIn\"] spawn {\n\twhile { true } do\n\t{\n\t\twaitUntil { inputAction (_this select 0) == 1 };\n\t\tdiag_log format [\"%1 @ %2\", _this select 0, diag_tickTime];\n\t};\n};\n```\nAlthough it may be better to use `onEachFrame` (`stacked`) [[Arma_3:_Mission_Event_Handlers#EachFrame|mission Event Handler]], depending on the application.\n\n*Example 5:*\n\nUse `getVariable` with default value to prevent unexcepted script errors:\n\n```sqf\nwaitUntil { bank getVariable [\"money\", 0] > 0 };\nwaitUntil { missionNamespace getVariable [\"isready\", false] };\n```\n\n*Example 6:*\n\nAlways return `Boolean`:\n\n```sqf\nwaitUntil { sleep 1; if (not alive player) exitWith {}; _time = _time + 1 };\t\t\t\t// bad\nwaitUntil { sleep 1; if (not alive player) exitWith { true }; _time = _time + 1; false };\t// good\nwaitUntil { sleep 1; not alive player };\t\t\t\t\t\t\t\t\t\t\t\t\t// perfect\n```","commands\\waves.md":"Return waves value.\n\n\n---\n*Syntaxes:*\n\n`waves`\n\n---\n*Example 1:*\n\n```sqf\nwaveIntensity = waves;\n```","commands\\waypointAttachedObject.md":"Gets the object attached to the waypoint.\n\n\n---\n*Syntaxes:*\n\n`waypointAttachedObject` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointAttachedObject [groupOne,1];\n```","commands\\waypointAttachedVehicle.md":"Gets the vehicle attached to the waypoint.\n<br>A vehicle can be attached to a waypoint by\n* creating the waypoint on top of the vehicle in the [[2D Editor]]\n* using `waypointAttachVehicle`\n\n\n---\n*Syntaxes:*\n\n`waypointAttachedVehicle` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointAttachedVehicle [groupOne, 1];\n```\n\n*Example 2:*\n\n```sqf\nwaypointAttachedVehicle [group player, currentWaypoint group player];\n```","commands\\waypointAttachObject.md":"Attaches a static object via it is numeric ID to the given waypoint.\n\n\n---\n*Syntaxes:*\n\nwaypoint `waypointAttachObject` objectID\n\nwaypoint `waypointAttachObject` object\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] waypointAttachObject 1234;\n```\n\n*Example 2:*\n\n```sqf\nprivate _wp = group player addWaypoint [[1907.5, 5746.5, 0.00144196], 0];\n_wp waypointAttachObject ((waypointPosition _wp) nearestObject 66220);\n```","commands\\waypointAttachVehicle.md":"Attaches the `Waypoint` to the provided vehicle `Object`.\n\n\n---\n*Syntaxes:*\n\nwaypoint `waypointAttachVehicle` vehicleName\n\n---\n*Example 1:*\n\n```sqf\n[_grp, 2] waypointAttachVehicle vehicle player;\n```\n\n*Example 2:*\n\n```sqf\n((waypoints player) select 0) waypointAttachVehicle _soldier1;\n```","commands\\waypointBehaviour.md":"Gets the waypoint behavior.\n\n\n---\n*Syntaxes:*\n\n`waypointBehaviour` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointBehaviour [groupOne,1];\n```","commands\\waypointCombatMode.md":"Gets the waypoint's combat mode setting.\n\n\n---\n*Syntaxes:*\n\n`waypointCombatMode` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointCombatMode [groupOne, 1];\n```","commands\\waypointCompletionRadius.md":"Gets the radius around the waypoint where the waypoint is completed.\n\n\n---\n*Syntaxes:*\n\n`waypointCompletionRadius` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_radius = waypointCompletionRadius [groupOne, 1];\n```","commands\\waypointDescription.md":"Gets the waypoint description.\n\n\n---\n*Syntaxes:*\n\n`waypointDescription` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointDescription [groupOne,1];\n```","commands\\waypointForceBehaviour.md":"Returns true if the waypoint behavior is forced.\n\n\n---\n*Syntaxes:*\n\n`waypointForceBehaviour` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_isForced = waypointForceBehaviour [groupOne, 1];\n```","commands\\waypointFormation.md":"Gets the waypoint formation.\n\nPossible values are: \n* \"NO CHANGE\"\n* \"COLUMN\"\n* \"STAG COLUMN\"\n* \"WEDGE\"\n* \"ECH LEFT\"\n* \"ECH RIGHT\"\n* \"VEE\"\n* \"LINE\"\n* \"FILE\"\n* \"DIAMOND\"\n\n\n---\n*Syntaxes:*\n\n`waypointFormation` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointFormation [groupOne,1];\n```","commands\\waypointHousePosition.md":"Returns `buildingPos` index assigned to the waypoint.\n\n\n---\n*Syntaxes:*\n\n`waypointHousePosition` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointHousePosition [groupOne,1];\n```","commands\\waypointLoiterAltitude.md":"Gets the waypoint loiter altitude.\n\n\n---\n*Syntaxes:*\n\n`waypointLoiterAltitude` waypoint\n\n---\n*Example 1:*\n\n```sqf\nprivate _loiterAlt = waypointLoiterAltitude [groupOne, 1];\n```","commands\\waypointLoiterRadius.md":"Gets the waypoint loiter radius. Waypoint uses format `Waypoint`.\n\n\n---\n*Syntaxes:*\n\n`waypointLoiterRadius` Waypoint\n\n---\n*Example 1:*\n\n```sqf\n_radius = waypointLoiterRadius [groupOne, 1];\n```","commands\\waypointLoiterType.md":"Gets the waypoint loiter type. Waypoint uses format `Waypoint`.\n\n\n---\n*Syntaxes:*\n\n`waypointLoiterType` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_type = waypointLoiterType [groupOne, 1];\n```","commands\\waypointName.md":"Gets the waypoint name.\n\n\n---\n*Syntaxes:*\n\n`waypointName` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_wpName = waypointName [_grp,2];\n```","commands\\waypointPosition.md":"Get provided waypoint's position.\n\n\n---\n*Syntaxes:*\n\n`waypointPosition` [groupOrUnit, index]\n\n---\n*Example 1:*\n\n```sqf\n_wPos = waypointPosition [_groupOne, 1];\n```","commands\\waypoints.md":"Returns an array of waypoints for the specified unit/group.\n\n\n---\n*Syntaxes:*\n\n`waypoints` groupName\n\n---\n*Example 1:*\n\n```sqf\nwaypoints player;\n```\n\n*Example 2:*\n\n```sqf\n_wPosArray = waypoints group10; // returns e.g [[EAST 1-1-A,0],[EAST 1-1-A,1],[EAST 1-1-A,2]]\n```","commands\\waypointScript.md":"Gets the waypoint script.\n\n\n---\n*Syntaxes:*\n\n`waypointScript` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointScript [groupOne,1];\n```","commands\\waypointsEnabledUAV.md":"Checks if the UAV has waypoints enabled.\n\n\n---\n*Syntaxes:*\n\n`waypointsEnabledUAV` uav\n\n---\n*Example 1:*\n\n```sqf\n_uav enableUAVWaypoints false;\nhint str waypointsEnabledUAV _uav; // returns false\n```","commands\\waypointShow.md":"A getter for `showWaypoint` command.\n\n\n---\n*Syntaxes:*\n\n`waypointShow` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_wpShow = waypointShow [groupOne, 1];\n```","commands\\waypointSpeed.md":"Gets the waypoint speed.\n\nPossible values are:\n* \"UNCHANGED\"\n* \"LIMITED\"\n* \"NORMAL\"\n* \"FULL\"\n\n\n---\n*Syntaxes:*\n\n`waypointSpeed` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_speed = waypointSpeed [groupOne,1];\n```","commands\\waypointStatements.md":"Gets the waypoint statements.\n\n\n---\n*Syntaxes:*\n\n`waypointStatements` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointStatements [groupOne,1];\n```","commands\\waypointTimeout.md":"Gets the waypoint timeout values.\n\n\n---\n*Syntaxes:*\n\n`waypointTimeout` waypoint\n\n---\n*Example 1:*\n\n```sqf\nwaypointTimeout [groupOne,1];\n```","commands\\waypointTimeoutCurrent.md":"Gets the current timeout for `currentWaypoint` of a `group` or -1 if countdown is not in progress.\n\n\n---\n*Syntaxes:*\n\n`waypointTimeoutCurrent` group\n\n---\n*Example 1:*\n\n```sqf\n_timeout = waypointTimeoutCurrent group player;\n```","commands\\waypointType.md":"Gets the waypoint type.\n\n\n---\n*Syntaxes:*\n\n`waypointType` waypoint\n\n---\n*Example 1:*\n\n```sqf\nprivate _type = waypointType [groupOne, 1];\n```","commands\\waypointVisible.md":"A getter for `setWaypointVisible` command.\n\n\n---\n*Syntaxes:*\n\n`waypointVisible` waypoint\n\n---\n*Example 1:*\n\n```sqf\n_visible = waypointVisible [groupOne, 1];\n```\n\n*Example 2:*\n\n```sqf\n_visible = waypointVisible [group player, currentWaypoint group player];\n```","commands\\weaponAccessories.md":"Get array with all items linked to a given weapon.\n\n\n---\n*Syntaxes:*\n\nunit `weaponAccessories` weapon\n\n---\n*Example 1:*\n\n```sqf\nplayer weaponAccessories primaryWeapon player; //[\"\",\"acc_pointer_IR\",\"optic_Aco\",\"\"]\n```","commands\\weaponAccessoriesCargo.md":"Returns array with all items assigned to the given weapon in given cargo container.\n\n\n---\n*Syntaxes:*\n\ncontainer `weaponAccessoriesCargo` [weaponId, creatorId]\n\n---\n*Example 1:*\n\n-","commands\\weaponCargo.md":"Get array with weapons from ammo box (or any general weapon holder container).\n\n\n---\n*Syntaxes:*\n\n`weaponCargo` box\n\n---\n*Example 1:*\n\n```sqf\nhint str weaponCargo backpackContainer player;\n```","commands\\weaponDirection.md":"Returns the direction that the vehicle weapon is aiming in. For addons the weapon name must be an entry in `CfgWeapons`.\n\n\n---\n*Syntaxes:*\n\nvehicleName `weaponDirection` weaponName\n\n---\n*Example 1:*\n\n```sqf\n_weaponVectorDir = player weaponDirection currentWeapon player;\n```\n\n*Example 2:*\n\nDraw AI eye direction (green) and weapon direction (red) in 3D:\n\n```sqf\nbob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"];\nbob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"];\nonEachFrame\n{\n\t_beg = ASLToAGL eyePos bob;\n\t_endE = _beg vectorAdd (eyeDirection bob vectorMultiply 100);\n\tdrawLine3D [_beg, _endE, [0,1,0,1]];\n\t_endW = _beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100);\n\tdrawLine3D [_beg, _endW, [1,0,0,1]];\n};\n```","commands\\weaponInertia.md":"Returns current rate of how much the weapon view is distorted because of quick aiming.\n\n\n---\n*Syntaxes:*\n\n`weaponInertia` unit\n\n---\n*Example 1:*\n\n```sqf\n_inertia = weaponInertia player; //[-0.0126307,0.038023]\n```","commands\\weaponLowered.md":"Returns `true` if given soldier's weapon is lowered.\n\n\n---\n*Syntaxes:*\n\n`weaponLowered` unit\n\n---\n*Example 1:*\n\n```sqf\nisWeaponLowered = weaponLowered player;\n```","commands\\weaponReloadingTime.md":"Returns current ammo round reloading phase. For a magazine reloading phase see `weaponState` command.\n\n\n---\n*Syntaxes:*\n\nvehicle `weaponReloadingTime` <nowiki>[gunner, muzzleName]</nowiki>\n\n---\n","commands\\weapons.md":"Returns array of names of all unit's weapons.\n\n\n---\n*Syntaxes:*\n\n`weapons` unit\n\n---\n*Example 1:*\n\n```sqf\n_wArray = weapons player;\n```","commands\\weaponsInfo.md":"Returns entity's weapons information including weapon index and firemode.\n\n\n---\n*Syntaxes:*\n\nunit `weaponsInfo` [weaponOrMuzzle, onlyLoaded]\n\n---\n*Example 1:*\n\nFind weapon with FullAuto firemode and switch to it: \n```sqf\nprivate _weapons = player weaponsInfo [currentMuzzle player, true];\nprivate _found = _weapons findIf { _x select 4 == \"FullAuto\" };\nif (_found > -1) then { action [\"SwitchWeapon\", player, player, _weapons select _found select 0] };\n```","commands\\weaponsItems.md":"[[Image:Weaponsitems.jpg|150px|right|border]]Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons. \n\n* Since Arma 3 v1.22 it is possible to query weapon holders and ammo crates with this command. If the argument is a vehicle, the command will return vehicle's weapons. If the argument is a container, the command will act identical to `weaponsItemsCargo`.\n* Since Arma 3 v1.96 the returned array always contains secondary muzzle magazine info and consistent with `getUnitLoadout` format for weapon items.\n* Since Arma 3 v2.02 the returned array can contains binocular weapon items.\n\n\n---\n*Syntaxes:*\n\n`weaponsItems` vehicle\n\n---\n*Example 1:*\n\n```sqf\nhint str weaponsItems player;\n// returns e.g\n/*\n[\n\t[\"arifle_MX_ACO_pointer_F\",\"muzzle_snds_H\",\"acc_pointer_IR\",\"optic_Aco\",[\"30Rnd_65x39_caseless_mag\",30],[],\"bipod_01_F_blk\"],\n\t[\"launch_NLAW_F\",\"\",\"\",\"\",[\"NLAW_F\",1],[],\"\"],\n\t[\"hgun_P07_F\",\"muzzle_snds_L\",\"\",\"\",[\"16Rnd_9x21_Mag\",11],[],\"\"]\n]\n*/\n```\n\n*Example 2:*\n\n```sqf\nhint str weaponsItems vehicle player;\n// returns e.g\n/*\n[\n\t[\"gatling_30mm\",\"\",\"\",\"\",[\"250Rnd_30mm_HE_shells\",250],[],\"\"],\n\t[\"missiles_SCALPEL\",\"\",\"\",\"\",[\"8Rnd_LG_scalpel\",8],[],\"\"],\n\t[\"rockets_Skyfire\",\"\",\"\",\"\",[\"38Rnd_80mm_rockets\",38],[],\"\"]\n]\n*/\n```","commands\\weaponsItemsCargo.md":"Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in `weaponsItems` format. If weapon has no magazine, an empty array [] is returned instead of magazine info. If the argument is a vehicle with weapons, vehicles cargo is searched, unlike with `weaponsItems` command, which will return vehicle's weapons instead. \n* Since Arma 3 v1.96 the returned array always contains secondary muzzle magazine info and consistent with `getUnitLoadout` format for weapon items.\n\n\n---\n*Syntaxes:*\n\n`weaponsItemsCargo` vehicle\n\n---\n*Example 1:*\n\n```sqf\nweaponsItemsCargo vehicle player;\n```\n\n*Example 2:*\n\n```sqf\nweaponsItemsCargo _weaponholder;\n```","commands\\weaponState.md":"Returns the given or currently selected weapon state for unit or vehicle. With syntax 2, if no optional arguments are present, currently selected weapon is queried.\n\n\n---\n*Syntaxes:*\n\n`weaponState` unit\n\n`weaponState` [vehicle, turretPath, weapon, muzzle, firemode]\n\nunit `weaponState` weaponOrMuzzle\n\n---\n*Example 1:*\n\n```sqf\n_wsPlayer = weaponState player;\t\t\t\t\t// [\"arifle_MXC_ACO_F\",\"arifle_MXC_ACO_F\",\"Single\",\"30Rnd_65x39_caseless_mag\",30,0,0]\n```\n\n*Example 2:*\n\nQuery currently selected gunner weapon:\n\n```sqf\n_wsVehicle = weaponState [_apc, [0]];\t\t\t// [\"autocannon_40mm_CTWS\",\"HE\",\"player\",\"60Rnd_40mm_GPR_Tracer_Red_shells\",60,0,0]\n```\n\n*Example 3:*\n\n```sqf\n_wsVehicle = weaponState [_apc, [0], \"AP\"];\t// [\"autocannon_40mm_CTWS\",\"AP\",\"player\",\"40Rnd_40mm_APFSDS_Tracer_Red_shells\",40,0,0]\n```\n\n*Example 4:*\n\n```sqf\n_wsPlayer = player weaponState \"GL_3GL_F\"; \t\t// [\"arifle_MX_GL_ACO_F\",\"GL_3GL_F\",\"Single\",\"1Rnd_HE_Grenade_shell\",1,0,0]\n```","commands\\weaponsTurret.md":"Returns all weapons of a given turret. Use turret path [-1] for driver's turret.\n\n\n---\n*Syntaxes:*\n\nvehicle `weaponsTurret` turretPath\n\n---\n*Example 1:*\n\n```sqf\n_weapons = vehicle player weaponsTurret [0,0];\n```\n\n*Example 2:*\n\n```sqf\n_weapons = _tank weaponsTurret [0];\n```\n\n*Example 3:*\n\n```sqf\n_driverWeapon = _ka50pilot weaponsTurret [-1];\n```\n\n*Example 4:*\n\n```sqf\n_weaponsForAnyTurrentPosition = (vehicle player) weaponsTurret ((assignedVehicleRole player) select 1);\n```","commands\\weightRTD.md":"Returns weight of RTD helicopter.\n\n\n---\n*Syntaxes:*\n\n`weightRTD` helicopter\n\n---\n*Example 1:*\n\n```sqf\n_taruWeight = weightRTD taru// Returns [7000,300,1990.56,0,0]\n```","commands\\west.md":"West (BLUFOR) `side`.\n\n\n---\n*Syntaxes:*\n\n`west`\n\n---\n*Example 1:*\n\n`SQS Syntax`:\n<sqs>? side _unit == west : hint \"This is a western unit!\"</sqs>\n\n*Example 2:*\n\n`SQF Syntax`:\n\n```sqf\nif (side _unit == west) then\n{\n\thint \"This is a western unit!\";\n};\n```","commands\\WFSideText.md":"Returns the `unlocalized` text value of a side or an object's/group's side.\n\n\n---\n*Syntaxes:*\n\n`WFSideText` value\n\n---\n*Example 1:*\n\n```sqf\nWFSideText player;\n```\n\n*Example 2:*\n\n```sqf\nWFSideText group player;\n```\n\n*Example 3:*\n\n```sqf\nWFSideText west;\n```","commands\\while.md":"Repeats `Code` while the given condition is `true`. A part of `while`-`do` construct.\n\n\n---\n*Syntaxes:*\n\n`while` condition\n\n---\n*Example 1:*\n\n```sqf\nwhile { a < b } do { a = a + 1 };\n```\n\n*Example 2:*\n\nA practical example: Repair all members of a group to such a level that they are able to stand up:\n\n```sqf\n{\n\tif (alive _x) then\n\t{\n\t\twhile { not canStand _x } do\n\t\t{\n\t\t\t_x setDamage (damage _x - 0.01);\n\t\t};\n\t};\n} forEach units group unitname;\n```\n\n*Example 3:*\n\n```sqf\n[] spawn {\n\t// warning: while loop without suspension executes multiple times per frame\n\tprivate _counter = 0;\n\tprivate _endTime = diag_tickTime + 5;\n\tprivate _frameNo = diag_frameNo;\n\twhile { diag_tickTime < _endTime } do\n\t{\n\t\t_counter = _counter + 1;\n\t};\n\t// in an empty mission, the _counter may go well over 2000 times per frame!\n\thint format [\"Average Execution: %1 times per frame\", _counter / (diag_frameNo - _frameNo)];\n\n\t// with suspension\n\tprivate _counter = 0;\n\tprivate _endTime = diag_tickTime + 5;\n\tprivate _frameNo = diag_frameNo;\n\twhile { diag_tickTime < _endTime } do\n\t{\n\t\t_counter = _counter + 1;\n\t\tuiSleep 0.001; // waits at least 1 frame\n\t};\n\t// _counter says one per frame, as expected\n\thint format [\"Average Execution: %1 times per frame\", _counter / (diag_frameNo - _frameNo)];\n};\n```","commands\\wind.md":"Returns the current wind vector (in m/s) as array [x, y, z].<br>\n\n\n---\n*Syntaxes:*\n\n`wind`\n\n---\n*Example 1:*\n\n```sqf\n_windArray = wind;\n```","commands\\windDir.md":"Returns the current wind azimuth.\n\n\n---\n*Syntaxes:*\n\n`windDir`\n\n---\n*Example 1:*\n\n```sqf\nif (windDir < 45 || windDir > 315) then {\n\thint \"I feel a southern wind\"; // wind going from South to North\n};\n```","commands\\windRTD.md":"Returns wind strength and direction.\n\n\n---\n*Syntaxes:*\n\n`windRTD`\n\n---\n*Example 1:*\n\n```sqf\n_wind = windRTD;\n```","commands\\windStr.md":"Returns the current wind strength.\n\n\n---\n*Syntaxes:*\n\n`windStr`\n\n---\n*Example 1:*\n\n```sqf\n10 setWindStr (0.5 * windStr);\n```","commands\\wingsForcesRTD.md":"Returns force produced by wings.\n\n\n---\n*Syntaxes:*\n\n`wingsForcesRTD` RTD_helicopter\n\n---\n*Example 1:*\n\n```sqf\n_wingForce = wingsForcesRTD _rtdHelo;\n```","commands\\with.md":"Creates a `With Type` that is used inside a `do` construct in order to execute code inside a given namespace.\n\n\n---\n*Syntaxes:*\n\n`with` namespace\n\n---\n*Example 1:*\n\n```sqf\n_myWithType = with uiNamespace;\n```\n\n*Example 2:*\n\n```sqf\nwith missionNamespace do { global = global + 1 };\n```","commands\\worldName.md":"Return the name of the currently loaded world.\n\n\n---\n*Syntaxes:*\n\n`worldName`\n\n---\n*Example 1:*\n\n```sqf\nprivate _name = worldName;\n```","commands\\worldSize.md":"Returns the engine calculated size (terrain side length) of the current world (`BIS_fnc_mapSize` may return the same value, but is just a simple look up in ` config`).\n\n\n---\n*Syntaxes:*\n\n`worldSize`\n\n---\n*Example 1:*\n\n```sqf\nprivate _size = worldSize;\n```\n\n*Example 2:*\n\n```sqf\n// A round marker that should cover the whole map, placed in the center of the map, should have the following radius (a, b)\nprivate _radius = sqrt 2 / 2 * worldSize;\n```\n\n*Example 3:*\n\n```sqf\nprivate _axis = worldSize / 2;\nprivate _center = [_axis, _axis , 0];\nprivate _radius = sqrt 2 * _axis;\n```","commands\\worldToModel.md":"Converts position from world space to object model space.\n\n\n---\n*Syntaxes:*\n\nmodel `worldToModel` position\n\n---\n*Example 1:*\n\n```sqf\n_relPos = myObject worldToModel [0,0,0];\n```\n\n*Example 2:*\n\n```sqf\n_relPos = player worldToModel ASLToAGL getPosASL car;\n```\n\n*Example 3:*\n\n```sqf\n_relPos = car worldToModel [12000,5000];\n```","commands\\worldToModelVisual.md":"Converts position from world space to object model space in `render time scope`.\n\n\n---\n*Syntaxes:*\n\nobject `worldToModelVisual` worldPosition\n\n---\n*Example 1:*\n\n```sqf\n_relPos = myObject worldToModelVisual [0,0,0];\n```\n\n*Example 2:*\n\n```sqf\n_relPos = player worldToModelVisual position car;\n```\n\n*Example 3:*\n\n```sqf\n_relPos = car worldToModelVisual [12000, 5000];\n```\n\n*Example 4:*\n\n```sqf\n_relPos = unit worldToModelVisual position tank;\n```","commands\\worldToScreen.md":"Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned.\n\n\n---\n*Syntaxes:*\n\n`worldToScreen` position\n\n---\n*Example 1:*\n\n```sqf\n_screenPos = worldToScreen ASLToAGL getPosASL soldier1;\n```\n\n*Example 2:*\n\n```sqf\n_screenPos = worldToScreen (player modelToWorld [0,10,0]);\n```","KISKA Functions\\KISKA_fnc_AAAZone.md":"#### Description:\nSets up a zone that when entered by an enemy aircraft, the provided vehicle will engage. Otherwise, vehicle will stay the same.\n\n#### Parameters:\n0: **_vehicle** : *(OBJECT)* - The AAA piece\r\n\n1: **_radius** : *(NUMBER)* - How far out the turret is alerted to\r\n\n2: **_checkTime** : *(NUMBER)* - How often does the AAA scan the area for targets\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[myVehicle] spawn KISKA_fnc_AAAZone;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ACEX_setHCTransfer.md":"#### Description:\nSimply sets the blacklist variable of a given unit from being transferred by the ACEX headless client module. Variable is set on the server.\n\n#### Parameters:\n0: **_unit** *(GROUP or OBJECT)* - The unit to blacklist\r\n\n1: **_setting** *(BOOL)* - The blacklist value to set (true to blacklist, false to allow transfer)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// disable transfer\r\n[someGroup,true] call KISKA_fnc_ACEX_setHCTransfer;\r\n```\n```sqf\n// enable transfer\r\n[someGroup,false] call KISKA_fnc_ACEX_setHCTransfer;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ACE_addSupportMenuAction.md":"#### Description:\nAdds the ACE action to a player object that allows them to self interact and pull up the support menu.\n\n#### Parameters:\n0: **_player** *(OBJECT)* - The player object\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT Function\r\n```\n\n","KISKA Functions\\KISKA_fnc_ACE_deployFastRope.md":"#### Description:\nAn edit of the ACE function to allow for custom drop of units.\n\n#### Parameters:\n0: **_vehicle** *(OBJECT)* - The vehicle to fastrope from\r\n\n1: **_unitsToDeploy** *(ARRAY)* - An array of units to drop from the _vehicle.\rThis function has a destructive effect on this array (deletes entries)\r\n\n2: **_ropeOrigins** *(ARRAY)* - An array of either relative (to the vehicle) attachment\rpoints for the ropes or a memory point to attachTo\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    _vehicle,\r\n    (fullCrew [_vehicle,\"cargo\"]) apply {\r\n        _x select 0\r\n    }\r\n] call KISKA_fnc_ACE_deployFastRope;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ACE_deployRopes.md":"#### Description:\nAn edit of ace_fastroping_fnc_deployRopes to allow for custom drop of units.\n\n#### Parameters:\n0: **_vehicle** *(OBJECT)* - The vehicle to fastrope from\r\n\n1: **_ropeOrigins** *(ARRAY)* - An array of either relative (to the vehicle) attachment\rpoints for the ropes or a memory point to attachTo\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[heli] call KISKA_fnc_ACE_deployRopes;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ACE_fastRope.md":"#### Description:\r\nSends a vehicle to a given point and fastropes the given units from the helicopter. Pilots should ideally be placed in \"CARELESS\" behaviour when around enemies.\r\n\r\n#### Parameters:\r\n0: **_vehicle** *(OBJECT)* - The vehicle to fastrope from\r\n\r\n1: **_dropPosition** *(ARRAY or OBJECT)* - The positionASL to drop the units off at; Z coordinate\r\nmatters\r\n\r\n2: **_unitsToDeploy** *(ARRAY, GROUP, or OBJECT)* - An array of units to drop from the _vehicle.\r\n\r\n3: **_afterDropCode** *(CODE or STRING or ARRAY)* - Code to execute after the drop is complete, see KISKA_fnc_callBack\r\nParameters:\r\n\r\n0. *(OBJECT)* - The drop vehicle\r\n\r\n\r\n4: **_hoverHeight** *(NUMBER)* - The height the helicopter should hover above the drop position\r\nwhile units are fastroping. Max is 28, min is 5\r\n\r\n5: **_ropeOrigins** *(ARRAY)* - An array of: either relative (to the vehicle) attachment\r\npoints for the ropes and/or memory points to attachTo\r\n\r\n#### Returns:\r\nNOTHING\r\n\r\n#### Examples:\r\n```sqf\r\n[\r\n    _vehicle,\r\n    _position,\r\n    (fullCrew [_vehicle,\"cargo\"]) apply {\r\n        _x select 0\r\n    },\r\n    {hint \"fastrope done\"},\r\n    28,\r\n    [[0,0,0]]\r\n] call KISKA_fnc_ACE_fastRope;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_ACE_setOnPrepareFastrope.md":"#### Description:\nSets the onprepare function of a specific vehicle when it conducts fastroping with KISKA_fnc_fastRope (not any other implementation of ACE fastroping). By default, ACE uses a config value (on the vehicle's class) of a string that is the name of the function to call. This function will overwrite that config function or add support for vehicles that do not have an onPrepare function defined. The onPrepare function is what happens just prior to the helicopter dropping its ropes. You may want to do something like openning the vehicles doors before the units fastrope, for example. Your new onPrepare function can return a number that will then be used as the time it takes for the ropes to be lowered down from the helicopter (the default is 4 seconds).\n\n#### Parameters:\n0: **_vehicle** *(OBJECT)* - The vehicle to fastrope from\r\n\n1: **_onPrepare** *(CODE, ARRAY, or STRING)* - A function that returns a number\rbeing the time it takes for the ropes to deploy from the given vehicle\r(SEE KISKA_fnc_callBack for array syntax).\rArgs:\r\n    0. *(OBJECT)* - The helicopter conducting a fastrope\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    _vehicle,\r\n    {4} // takes 4 seconds to lower ropes\r\n] call KISKA_fnc_ACE_setOnPrepareFastrope;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ACE_unconsciousIsCaptive.md":"#### Description:\nAdds a CBA event that hooks into when a player becomes unconcious, making them turn captive in order to keep the AI from shooting downed players.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPOST-INIT Function\r\n```\n\n","KISKA Functions\\KISKA_fnc_addArsenal.md":"#### Description:\nAdds both BIS and ACE arsenals to several or a single object. This has a global effect.\n\n#### Parameters:\n0: **_arsenals** *(ARRAY or OBJECT)* - An array of objects or a single one to add arsenals to\n\n#### Returns:\n*(BOOL)* - True if arsenal added, false if not\n\n#### Examples:\n```sqf\n[[arsenal1, arsenal2]] call KISKA_fnc_addArsenal;\r\n```\n\n","KISKA Functions\\KISKA_fnc_addCommMenuItem.md":"#### Description:\nThis is an alias of sorts of Bohemia's BIS_fnc_addCommMenuItem. It is mostly made with the purpose of using default values and specifically passing a -1 by default to _expressionArguments. Also initializes/adds entries to the KISKA_playersSupportMap which is used for keeping track of the number of uses left on a support if they are passed between the Support Manager.\n\n#### Parameters:\n0: **_owner** *(OBJECT)* - The person to add the support to\r\n\n1: **_itemClass** *(STRING)* - The class as defined in the CfgCommunicationMenu\r\n\n2: **_textArguements** *(ANY)* - Any arguements to pass to the text displayed in the menu\r\n\n3: **_expressionArguments** *(ANY)* - Any arguements to pass to the expression\r\n\n4: **_notification** *(STRING)* - The class of notification to display when added\r\n\n5: **_addToHash** *(BOOL)* - Add to KISKA_playersSupportMap\n\n#### Returns:\n*(NUMBER)* - The comm menu ID\n\n#### Examples:\n```sqf\n_id = [player,\"myClass\"] call KISKA_fnc_addCommMenuItem;\r\n```\n\n","KISKA Functions\\KISKA_fnc_addKiskaDiaryEntry.md":"#### Description:\nUsed as a unified point of adding diary entries for KISKA.\n\n#### Parameters:\n0: **_textEntry** *(STRING or ARRAY)* - The text entry in createDiaryRecord.\rIf array, format is [title,description,icon].\r\n\n1: **_task** *(TASK)* - A task attached to the diary record\r\n\n2: **_taskState** *(STRING)* - The state of the task\r\n\n3: **_showTitle** *(BOOL)* - Whether or not to show title in the description section as well\n\n#### Returns:\n*(DIARY-RECORD)* - An entry in the users diary\n\n#### Examples:\n```sqf\n[[\"test title\",\"test text\"]] call KISKA_fnc_addKiskaDiaryEntry;\r\n```\n\n","KISKA Functions\\KISKA_fnc_addMagRepack.md":"#### Description:\nAdds a mag repack to the player via Ctrl+R. To remove see KISKA_fnc_removeMagRepack.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_addMagRepack;\r\n```\n\n","KISKA Functions\\KISKA_fnc_addProximityPlayerAction.md":"#### Description:\nAdds an action to the player that will be activated and deactivated when within a certain radius of a given position.\n\n#### Parameters:\n0: **_center** : *(OBJECT or ARRAY)* - The position the player needs to be close to.\rIf array, format as Postion2D or PositionAGL.\r\n\n1: **_radius** : *(NUMBER)* - The max distance the player can be from the _center to\rget the action.\r\n\n2: **_action** : *(ARRAY)* - The action array used with \"addAction\" command\r\n\n3: **_refreshInterval** : *(NUMBER)* - How often to look to update action visibility\n\n#### Returns:\n*(NUMBER)* - The porximity action id to be used with KISKA_fnc_removeProximityPlayerAction\r\n    (-1 if failure)\n\n#### Examples:\n```sqf\n[\r\n    cursorObject,\r\n    15,\r\n    [\"test\",{hint \"action\"},[]]\r\n] call KISKA_fnc_addProximityPlayerAction\r\n```\n\n","KISKA Functions\\KISKA_fnc_addRallyPointDiaryEntry.md":"#### Description:\nAdds a rally point diary entry to the local player. Pressing it enables the player to drop a rally point if their group is registered as allowed to and they are the leader of the group.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT Function\r\n```\n\n","KISKA Functions\\KISKA_fnc_addTeleportAction.md":"#### Description:\nAdds a hold action to an object to teleport to a desired location.\n\n#### Parameters:\n0: **_objectToAddTo** *(OBJECT)* - The object the action will be attached to\r\n\n1: **_teleportPosition** *(ARRAY OR OBJECT)* - The position to be teleported to upon completion\r\n\n2: **_text** *(STRING)* - The action text, can be structured text\r\n\n3: **_conditionShow** *(STRING)* - A string that will compile into an expression that\revals to a boolean. True means that the action will be shown.\n\n#### Returns:\n*(NUMBER)* - action id, -1 if not added\n\n#### Examples:\n```sqf\n[player,[0,0,0],\"go to the Zero\"] call KISKA_fnc_addTeleportAction;\r\n```\n\n","KISKA Functions\\KISKA_fnc_alivePlayers.md":"#### Description:\nFInds all alive players with or without headless clients\n\n#### Parameters:\n0: **_noHeadless** *(BOOL)* - Seperate Headless Clients\n\n#### Returns:\n_alivePlayers *(ARRAY)* - All alive players\n\n#### Examples:\n```sqf\n[true] call KISKA_fnc_alivePlayers;\r\n```\n\n","KISKA Functions\\KISKA_fnc_allowGroupRally.md":"#### Description:\nAdds group's ability to place rally points by setting \"KISKA_canRally\" in the group space to true.\n\n#### Parameters:\n0: **_groupToAdd** *(GROUP or OBJECT)* - The group or the unit whose group to add\n\n#### Returns:\n*(BOOL)* - True if allowed, false if not allowed or error\n\n#### Examples:\n```sqf\n// allows player's group to drop a rally point (if they're the server)\r\n[player] call KISKA_fnc_allowGroupRally;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ambientAnim.md":"#### Description:\nProvides an updated version of BIS_fnc_ambientAnim in a tighter package that allows for more customization.\n\n#### Parameters:\n0: **_units** *(ARRAY or OBJECT)* - An array of units or a single unit to animate\r\n\n1: **_animSet** *(ARRAY or STRING)* - An array of animation set names (strings) that are located in the\r_animationMap or a single animation set. The array can be weighted or unweighted.\r(see selectRandomWeighted single array syntax)\r\n\n2: **_exitOnCombat** *(BOOL)* - True for unit to return to the state it was in prior to\rKISKA_fnc_ambientAnim being called when they are enter combat behaviour.\r\n\n3: **_equipmentLevel** *(STRING)* - A quick means of temporarily adjusting a unit's equipment\rto match a scene. Options:\r\r- \"\": no changes\r- \"NONE\": no goggles, headgear, vest, weapon, nvgs, backpack\r- \"LIGHT\": no goggles, headgear, vest, backpack\r- \"MEDIUM\": no goggles, headgear\r- \"FULL\": no goggles\r\r\n\n4: **_snapToRange** *(NUMBER)* - Certain animations (such as sitting in a chair) can\rbe configured to orient the unit onto certain object types. This is how far\rwill be searched around the unit to find an object to \"snap\" onto. Cannot be more then 10m.\r\n\n5: **_fallbackFunction** *(CODE, ARRAY, or STRING)* - (See KISKA_fnc_callBack) In the event that\ra unit is not able to find an object to snap to, this function will be called with the\rfollowing params. If you still want the unit to be animated in this case, pass {}, \"\", or [].\r\r\n    0. _animSetSelection *(STRING)* - The animation that failed to find a snap to object\r\n    1. _unit *(OBJECT)* - The unit\r\n    // the rest of these params are exactly as passed to the initial KISKA_fnc_ambientAnim call\r\n    2. _animSet *(ARRAY or STRING)*\r\n    3. _exitOnCombat *(BOOL)*\r\n    4. _equipmentLevel *(ARRAY or STRING)*\r\n    5. _snapToRange *(NUMBER)*\r\n    6. _fallbackFunction *(CODE, ARRAY, or STRING)*\r\n    7. _animationMap *(HASHMAP or CONFIG)*\r\r\n\n6: **_animationMap** *(HASHMAP or CONFIG)* - See KISKA_fnc_ambientAnim_createMapFromConfig\rThis is a hashmap that will searched for information for a specific _animSet\r_animset. A config can be passed and will be parsed/cached.\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// exits on combat\r\n[\r\n    someUnit,\r\n    \"SIT_GROUND_ARMED\",\r\n    true\r\n] call KISKA_fnc_ambientAnim;\r\n```\n```sqf\n[\r\n    someUnit,\r\n    \"SIT_GROUND_UNARMED\"\r\n] call KISKA_fnc_ambientAnim;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ambientAnim_createMapFromConfig.md":"#### Description:\nParses a given config into a hashmap that can be used by KISKA_fnc_ambientAnim. This config will then be the hashmap KISKA_ambientAnim_configAnimationSetMap with the config as the key. See configFile >> \"KISKA_AmbientAnimations\" for an example of a configed map. class ambientAnimsConfig { class someAnimSet { animations[] = {\"myAnimation\"}; // the only required property of an anim set }; };\n\n#### Parameters:\n0: **_config** *(CONFIG)* - A config to parse into a hashmap\n\n#### Returns:\n*(HASHMAP)* - A map of the animation sets and their properties.\n\n#### Examples:\n```sqf\nprivate _map = [\r\n    configFile >> \"KISKA_AmbientAnimations\"\r\n] call KISKA_fnc_ambientAnim_createMapFromConfig;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ambientAnim_isAnimated.md":"#### Description:\nReturns whether or not a unit is currently using Kiska's ambient animation system.\n\n#### Parameters:\n0: **_unit** *(OBJECT)* - A unit to check if they are using KISKA ambient anim system\n\n#### Returns:\n*(BOOL)* - Whether or not the unit is using KISKA's ambient animation system\n\n#### Examples:\n```sqf\nprivate _isAnimated = [someUnit] call KISKA_fnc_ambientAnim_isAnimated;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ambientAnim_play.md":"#### Description:\nStarts animations for KISKA_fnc_ambientAnim. This should not be directly called and is instead handled in events defined in KISKA_fnc_ambientAnim.\n\n#### Parameters:\n0: **_unit** *(OBJECT)* - The unit to animate\r\n\n1: **_previousAnim** *(STRING)* - The previous animation the unit played\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n(SHOULD NOT BE DIRECTLY CALLED)\r\n```\n\n","KISKA Functions\\KISKA_fnc_ambientAnim_stop.md":"#### Description:\nStops a unit's use of KISKA_fnc_ambientAnim and returns them to the state they were in before it ran.\n\n#### Parameters:\n0: **_unit** *(OBJECT)* - The unit who is running KISKA ambient anims\r\n\n1: **_triggeredByDeletion** *(BOOL)* - If this stop was initiated by the delete\rEventhandler\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[someUnit] call KISKA_fnc_ambientAnim_stop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ambientNewsRadio.md":"#### Description:\nPlays a selection of news sounds from the vanilla game at a given position.\n\n#### Parameters:\n0: **_origin** *(OBJECT or ARRAY)* - The position the sound will play at. If array\rposition is format ASL\r\n\n1: **_duration** *(NUMBER)* - How long should this broadcast last. Negative value\rwill go on forever.\r\n\n2: **_distance** *(NUMBER)* - How far away the sound can be heard\r\n\n3: **_volume** *(NUMBER)* - The volume of the sounds (0-5).\r\n\n3: **_isInside** *(BOOL)* - Are these sounds being played indoors\n\n#### Returns:\n*(NUMBER)* - The KISKA_fnc_playRandom3dSoundLoop Handler ID for stopping the sound \r\nwith KISKA_fnc_stopRandom3dSoundLoop\n\n#### Examples:\n```sqf\n[myRadio] call KISKA_fnc_ambientNewsRadio;\r\n```\n\n","KISKA Functions\\KISKA_fnc_arsenalSupplyDrop.md":"#### Description:\nSpawns in an aircraft that flies over a DZ to drop off an arsenal.\n\n#### Parameters:\n0: **_dropPosition** : *(ARRAY)* - The position (area) to drop the arsenal\r  1: **_vehicleClass** : *(STRING)* - The class of the vehicle to drop the arsenal\r\n\n2: **_dropAlt** : *(NUMBER)* - The flyInHeight of the drop vehicle\r\n\n3: **_flyDirection** : *(NUMBER)* - The compass bearing for the aircraft to apporach from (if < 0, it's random)\r\n\n4: **_flyInRadius** : *(NUMBER)* - How far out the drop vehicle will spawn and then fly in\r\n\n5: **_lifeTime** : *(NUMBER)* - How long until the arsenal is deleted\r\n\n6: **_side** : *(SIDE)* - The side of the drop vehicle\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[position player] call KISKA_fnc_arsenalSupplyDrop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_arty.md":"#### Description:\nFires a number of rounds from artillery piece at target with random disperstion values\n\n#### Parameters:\n0: **_gun** : *(OBJECT)* - The artillery piece\r\n\n1: **_target** : *(OBJECT or ARRAY)* - Self Expllanitory\r\n\n2: **_rounds** : *(NUMBER)* - Number of rounds to fire\r\n\n3: **_randomDistance** : *(NUMBER)* - max distance error margin (0 will be directly on target for all rounds)\r\n\n4: **_randomDirection** : *(NUMBER)* - 360 direction within rounds can land\r\n\n5: **_fireTime** : *(ARRAY)* - Array of random time between shots for bell curve\n\n#### Returns:\nNothing\n\n#### Examples:\n```sqf\n[vehicle, target, 2, 100, 360, [9,10,11]] spawn KISKA_fnc_arty;\r\n```\n\n","KISKA Functions\\KISKA_fnc_assignUnitLoadout.md":"#### Description:\nSearches a config class for an array that matches the units classname. This array is filled with potential loadout arrays for the unit.\n\n#### Parameters:\n0: **_config** *(CONFIG)* - The config to search for the array of loadouts in\r\n\n1: **_units** *(ARRAY, GROUP, or OBJECT)* - The unit(s) to apply the function to\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\nmissionConfigFile >> \"KISKA_loadouts\" >> ONL,\r\nunit1\r\n] spawn KISKA_fnc_assignUnitLoadout\r\n\r\n```\n\n","KISKA Functions\\KISKA_fnc_attack.md":"#### Description:\nModified version of CBA_fnc_taskAttack. Now allows setting of different behaviour and combatMode.\n\n#### Parameters:\n0: **_group** *(GROUP or OBJECT)* - Unit(s) to attack\r\n\n1: **_position** *(OBJECT, LOCATION, GROUP, or ARRAY)* - The position to attack\r\n\n2: **_radius** *(NUMBER)* - Radius for waypoint placement\r\n\n3: **_behaviour** *(STRING)* - What behaviour will the attacker(s) have\r\n\n4: **_combatMode** *(STRING)* - What combatMode will the attacker(s) have\r\n\n5: **_override** *(BOOL)* - Clear units current waypoints\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[group1,attackPosition,100,\"COMBAT\",\"RED\"] call KISKA_fnc_attack;\r\n```\n\n","KISKA Functions\\KISKA_fnc_balanceHeadless.md":"#### Description:\nBalances AI among all logged Headless Clients in a very simple fashion. Designed to be run once and also should only be done when all HC are logged onto the server. Excluded groups and units can be added to the array KISKA_hcExcluded.\n\n#### Parameters:\n0: **_checkInterval** *(NUMBER)* - How often to redistribute, if -1, will not loop\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] spawn KISKA_fnc_balanceHeadless;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_createFromConfig.md":"#### Description:\nSpawns a configed KISKA base.\n\n#### Parameters:\n0: **_baseConfig** *(STRING or CONFIG)* - The config path of the base config or if\rin missionConfigFile >> \"KISKA_bases\" config, its class\n\n#### Returns:\n*(HASHMAP)* - see KISKA_fnc_bases_getHashmap\n\n#### Examples:\n```sqf\nprivate _baseMap = [\"SomeBaseConfig\"] call KISKA_fnc_bases_createFromConfig;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_createFromConfig_agents.md":"#### Description:\nSpawns a configed KISKA bases' agents.\n\n#### Parameters:\n0: **_baseConfig** *(CONFIG)* - The config path of the base config\n\n#### Returns:\n*(HASHMAP)* - see KISKA_fnc_bases_getHashmap\n\n#### Examples:\n```sqf\n[\r\n    \"SomeBaseConfig\"\r\n] call KISKA_fnc_bases_createFromConfig_agents;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_createFromConfig_infantry.md":"#### Description:\nSpawns a configed KISKA bases' infantry.\n\n#### Parameters:\n0: **_baseConfig** *(CONFIG)* - The config path of the base config\n\n#### Returns:\n*(HASHMAP)* - see KISKA_fnc_bases_getHashmap\n\n#### Examples:\n```sqf\n[\r\n    \"SomeBaseConfig\"\r\n] call KISKA_fnc_bases_createFromConfig_infantry;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_createFromConfig_landVehicles.md":"#### Description:\nSpawns a configed KISKA bases' land vehicles.\n\n#### Parameters:\n0: **_baseConfig** *(CONFIG)* - The config path of the base config\n\n#### Returns:\n*(HASHMAP)* - see KISKA_fnc_bases_getHashmap\n\n#### Examples:\n```sqf\n[\r\n    \"SomeBaseConfig\"\r\n] call KISKA_fnc_bases_createFromConfig_landVehicles;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_createFromConfig_patrols.md":"#### Description:\nSpawns a configed KISKA bases' patrols.\n\n#### Parameters:\n0: **_baseConfig** *(CONFIG)* - The config path of the base config\n\n#### Returns:\n*(HASHMAP)* - see KISKA_fnc_bases_getHashmap\n\n#### Examples:\n```sqf\n[\r\n    \"SomeBaseConfig\"\r\n] call KISKA_fnc_bases_createFromConfig_patrols;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_createFromConfig_simples.md":"#### Description:\nSpawns a configed KISKA bases' simple objects.\n\n#### Parameters:\n0: **_baseConfig** *(CONFIG)* - The config path of the base config\n\n#### Returns:\n*(HASHMAP)* - see KISKA_fnc_bases_getHashmap\n\n#### Examples:\n```sqf\n[\r\n    \"SomeBaseConfig\"\r\n] call KISKA_fnc_bases_createFromConfig_simples;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_createFromConfig_turrets.md":"#### Description:\nSpawns a configed KISKA bases' turrets.\n\n#### Parameters:\n0: **_baseConfig** *(CONFIG)* - The config path of the base config\n\n#### Returns:\n*(HASHMAP)* - see KISKA_fnc_bases_getHashmap\n\n#### Examples:\n```sqf\n[\r\n    \"SomeBaseConfig\"\r\n] call KISKA_fnc_bases_createFromConfig_turrets;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_getHashmap.md":"#### Description:\nReturns a KISKA bases' hashmap data and initializes it did not exist.\n\n#### Parameters:\n0: **_baseConfig** *(CONFIG)* - The config path of the base config\n\n#### Returns:\n*(HASHMAP)* - a hashmap containing data about the base:\r\n    \"unit list\": *(ARRAY of OBJECTs)* - All spawned units (includes turret units)\r\n    \"group list\": *(ARRAY of GROUPs)* - All spawned groups (does NOT include turret units)\r\n    \"turret gunners\": *(ARRAY of OBJECTs)* - All turret units\r\n    \"infantry units\": *(ARRAY of OBJECTs)* - All infantry spawned units\r\n    \"infantry groups\": *(ARRAY of GROUPs)* - All infantry spawned groups\r\n    \"patrol units\": *(ARRAY of OBJECTs)* - All patrol spawned units\r\n    \"patrol groups\": *(ARRAY of GROUPs)* - All patrol spawned groups\r\n    \"land vehicles\": *(ARRAY of OBJECTs)* - All land spawned vehicles\r\n    \"land vehicle groups\": *(ARRAY of GROUPs)* - All land vehicle crew groups\r\n    \"agent list\": *(ARRAY of OBJECTs)* - All spawned agents\n\n#### Examples:\n```sqf\n[\r\n    \"SomeBaseConfig\"\r\n] call KISKA_fnc_bases_getHashmap;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_getInfantryClasses.md":"#### Description:\nSelects the most specific config's infantryClasses property and returns its value.\n\n#### Parameters:\n0: **_configClasses** *(ARRAY)* - An array of CONFIGs to select the \"infantryClasses\"\rproperty from. If a string, value is found, it will be treated as a function\rthat should return an array of classnames.\n\n#### Returns:\n*(ARRAY)* - An array of STRING class names\n\n#### Examples:\n```sqf\n[\r\n    [\r\n        missionConfigFile >> \"KISKA_Bases\" >> \"myBase\"\r\n        missionConfigFile >> \"KISKA_Bases\" >> \"myBase\" >> \"Infantry\",\r\n        missionConfigFile >> \"KISKA_Bases\" >> \"myBase\" >> \"Infantry\" >> \"myInfantryClass\"\r\n    ]\r\n] call KISKA_fnc_bases_getInfantryClasses;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_getSide.md":"#### Description:\nSelects the most specific config's infantryClasses property and returns its value.\n\n#### Parameters:\n0: **_configClasses** *(ARRAY)* - An array of CONFIGs to select the \"side\" property from\rThat will be converted from a number in the side\n\n#### Returns:\n*(SIDE)* - The returned side for the given configs\n\n#### Examples:\n```sqf\n[\r\n    [\r\n        missionConfigFile >> \"KISKA_Bases\" >> \"myBase\"\r\n        missionConfigFile >> \"KISKA_Bases\" >> \"myBase\" >> \"Infantry\",\r\n        missionConfigFile >> \"KISKA_Bases\" >> \"myBase\" >> \"Infantry\" >> \"myInfantryClass\"\r\n    ]\r\n] call KISKA_fnc_bases_getSide;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_setupReactivity.md":"#### Description:\nSpawns a configed KISKA base.\n\n#### Parameters:\n0: **_group** *(GROUP)* - The group to add setup reactions for\r\n\n1: **_reinforceId** *(NUMBER or STRING)* - A globally unqiue identifier for this group (or a collection of groups)\r\n\n2: **_canCallIds** *(ARRAY)* - An array of _reinforceIds denoting groups that will respond to\rdistress calls from this group\r\n\n3: **_priority** *(NUMBER)* - a number signifying how important this group's call will be\r(if a group is responding to another call, they will break away from it for this call if higher)\r\n\n4: **_onEnteredCombat** *(CODE or STRING)* - Code that will be executed when the group enters combat.\rMust return a boolean that denotes whether to execute default functionality that happens\rwith the event (see KISKA_fnc_bases_triggerReaction).\rPARAMS:\r\r\n    0. *(GROUP)* - The group the event is triggering for\r\n    1. *(ARRAY)* - An array of GROUPs that can respond to the call (based on _canCallIds)\r\n    2. *(NUMBER)* - The same _priority\n\n#### Returns:\n*(NUMBER)* - The event id of the combatBehaviour eventhandler\n\n#### Examples:\n```sqf\n[\r\n    aGroup,\r\n    123,\r\n    [\"anotherGroupsId\"],\r\n    1,\r\n    {\r\n        hint str _this;\r\n        false // continue with default reaction behaviour\r\n    }\r\n] call KISKA_fnc_bases_setupReactivity;\r\n```\n\n","KISKA Functions\\KISKA_fnc_bases_triggerReaction.md":"#### Description:\nActs as the default event for the reactive bases when a group calls for reinforcements.\n\n#### Parameters:\n0: **_group** *(GROUP)* - The group the event is triggering for\r\n\n1: **_combatBehaviour** *(STRING)* - The group's current behviour\r\n\n2: **_eventConfig** *(CONFIG)* - The eventhandler config (OPTIONAL)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    someGroup,\r\n    \"combat\"\r\n] call KISKA_fnc_bases_triggerReaction\r\n```\n\n","KISKA Functions\\KISKA_fnc_battleSound.md":"#### Description:\nCreate ambient battlefield sounds for a specified duration\n\n#### Parameters:\n0: **_source** *(OBJECT or ARRAY)* - Where the sound is coming from. Can be an object or positions array (ASL)\r\n\n1: **_distance** *(NUMBER or ARRAY)* - Distance at which the sounds can be heard,\rif an array, will be used with the \"random\" command (random _distance)\rfor getting a random value between the numbers.\r\n\n2: **_duration** *(NUMBER)* - How long the sounds should play for in seconds\r\n\n3: **_intensity** *(NUMBER)* - Value between 1-5 that determines how frequent these sounds are played (5 being the fastest)\n\n#### Returns:\n*(NUMBER)* - The Handler ID for stopping the sound with KISKA_fnc_stopBattleSound\n\n#### Examples:\n```sqf\n[player,20,10] call KISKA_fnc_battleSound;\r\n```\n```sqf\n// distance will be between 10-30m, leaning towards 20m\r\n[player,[10,20,30],10] call KISKA_fnc_battleSound;\r\n```\n\n","KISKA Functions\\KISKA_fnc_buildCommandMenu.md":"#### Description:\nCreates a showCommandingMenu compatible menu global array to be used with KISKA_fnc_commandMenuTree. This will be saved as a missionNamespace global var.\n\n#### Parameters:\n0: **_menuName** : *(STRING)* - The name of the menu global variable\r\n\n1: **_menuTitle** : *(STRING)* - The title of the menu that will appear when it is openned\r\n\n2: **_menuParams** : *(ARRAY)* - An array of arrays formatted as:\r\r0. *(STRING)* - The name of the menu option\r1. *(NUMBER)* - The key code for quick menu select (key 1 is code 2, 2 is 3, etc. use 0 for no key)\r2. *(ANY)* - The value to assign to this menu option\n\n#### Returns:\n*(ARRAY)* - The created menu array\n\n#### Examples:\n```sqf\n_createdMenu = [] call KISKA_fnc_buildCommandMenu\r\n```\n\n","KISKA Functions\\KISKA_fnc_callBack.md":"#### Description:\nStanderdizes a meanes of passing a callback function to another function along with custom arguments.\n\n#### Parameters:\n0: **_defaultArgs** *(ARRAY)* - Default arguements. These would be what a function\rwriter would put inside of their code as arguements that will always be passed\rin the _this magic variable\r\n\n1: **_callBackFunction** *(CODE, STRING, ARRAY)* - Code to call, compile and call, and/or\rarguements to pass to the code (in _thisArgs variable). Array is formatted as\r[*(args array)*,code or string (to compile)]\r\n\n2: **_runInScheduled** *(BOOL)* - Spawns the code in a scheduled thread\n\n#### Returns:\n*(ANY)* - Whatever the callback function returns or scripthandle if run in scheduled\n\n#### Examples:\n```sqf\n[\r\n    [],\r\n    [\r\n        // hint player\r\n        [player],\r\n        {hint (_thisArgs select 0)}\r\n    ]\r\n] call KISKA_fnc_callBack\r\n```\n\n","KISKA Functions\\KISKA_fnc_callingForArsenalSupplyDrop.md":"#### Description:\nUsed as a means of expanding on the \"expression\" property of the CfgCommunicationMenu. This is essentially just another level of abrstraction to be able to more easily reuse code between similar supports and make things easier to read instead of fitting it all in the config.\n\n#### Parameters:\n0: **_supportClass** *(STRING)* - The class as defined in the CfgCommunicationMenu\r\n\n1: **_commMenuArgs** *(ARRAY)* - The arguements passed by the CfgCommunicationMenu entry\r\r0. _caller *(OBJECT)* - The player calling for support\r1. _targetPosition *(ARRAY)* - The position (AGLS) at which the call is being made\r(where the player is looking or if in the map, the position where their cursor is)\r2. _target *(OBJECT)* - The cursorTarget object of the player\r3. _is3d *(BOOL)* - False if in map, true if not\r4. _commMenuId *(NUMBER)* - The ID number of the Comm Menu added by BIS_fnc_addCommMenuItem\r5. _supportType *(NUMBER)* - The Support Type ID\r\r\n\n2: **_count** *(NUMBER)* - Used for keeping track of how many of a count a support has left (such as rounds)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] call KISKA_fnc_callingForArsenalSupplyDrop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_callingForArty.md":"#### Description:\nUsed as a means of expanding on the \"expression\" property of the CfgCommunicationMenu. This is essentially just another level of abrstraction to be able to more easily reuse code between similar supports and make things easier to read instead of fitting it all in the config.\n\n#### Parameters:\n0: **_supportClass** *(STRING)* - The class as defined in the CfgCommunicationMenu\r\n\n1: **_commMenuArgs** *(ARRAY)* - The arguements passed by the CfgCommunicationMenu entry\r0: **_caller** *(OBJECT)* - The player calling for support\r1: **_targetPosition** *(ARRAY)* - The position (AGLS) at which the call is being made\r(where the player is looking or if in the map, the position where their cursor is)\r2: **_target** *(OBJECT)* - The cursorTarget object of the player\r3: **_is3d** *(BOOL)* - False if in map, true if not\r4: **_commMenuId** *(NUMBER)* The ID number of the Comm Menu added by BIS_fnc_addCommMenuItem\r5: **_supportType** *(NUMBER)* - The Support Type ID\r\n\n2: **_roundCount** *(NUMBER)* - Used for keeping track of how many of a count a support has left (such as rounds)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] call KISKA_fnc_callingForArty;\r\n```\n\n","KISKA Functions\\KISKA_fnc_callingForCAS.md":"#### Description:\nUsed as a means of expanding on the \"expression\" property of the CfgCommunicationMenu. This is essentially just another level of abrstraction to be able to more easily reuse code between similar supports and make things easier to read instead of fitting it all in the config.\n\n#### Parameters:\n0: **_supportClass** *(STRING)* - The class as defined in the CfgCommunicationMenu\r\n\n1: **_commMenuArgs** *(ARRAY)* - The arguements passed by the CfgCommunicationMenu entry\r\r0. _caller *(OBJECT)* - The player calling for support\r1. _targetPosition *(ARRAY)* - The position (AGLS) at which the call is being made\r(where the player is looking or if in the map, the position where their cursor is)\r2. _target *(OBJECT)* - The cursorTarget object of the player\r3. _is3d *(BOOL)* - False if in map, true if not\r4. _commMenuId *(NUMBER)* The ID number of the Comm Menu added by BIS_fnc_addCommMenuItem\r5. _supportType *(NUMBER)* - The Support Type ID\r\r\n\n2: **_useCount** *(NUMBER)* - Used for keeping track of how many of a count a support has left (such as rounds)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] call KISKA_fnc_callingForCAS;\r\n```\n\n","KISKA Functions\\KISKA_fnc_callingForHelicopterCAS.md":"#### Description:\nUsed as a means of expanding on the \"expression\" property of the CfgCommunicationMenu. This is essentially just another level of abrstraction to be able to more easily reuse code between similar supports and make things easier to read instead of fitting it all in the config.\n\n#### Parameters:\n0: **_supportClass** *(STRING)* - The class as defined in the CfgCommunicationMenu\r\n\n1: **_commMenuArgs** *(ARRAY)* - The arguements passed by the CfgCommunicationMenu entry\r\r0. _caller *(OBJECT)* - The player calling for support\r1. _targetPosition *(ARRAY)* - The position (AGLS) at which the call is being made\r(where the player is looking or if in the map, the position where their cursor is)\r2. _target *(OBJECT)* - The cursorTarget object of the player\r3. _is3d *(BOOL)* - False if in map, true if not\r4. _commMenuId *(NUMBER)* - The ID number of the Comm Menu added by BIS_fnc_addCommMenuItem\r5. _supportType *(NUMBER)* - The Support Type ID\r\r\n\n2: **_count** *(NUMBER)* - Used for keeping track of how many of a count a support has left (such as rounds)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] call KISKA_fnc_callingForHelicopterCAS;\r\n```\n\n","KISKA Functions\\KISKA_fnc_callingForSupplyDrop_aircraft.md":"#### Description:\nUsed as a means of expanding on the \"expression\" property of the CfgCommunicationMenu. This is essentially just another level of abrstraction to be able to more easily reuse code between similar supports and make things easier to read instead of fitting it all in the config.\n\n#### Parameters:\n0: **_supportClass** *(STRING)* - The class as defined in the CfgCommunicationMenu\r\n\n1: **_commMenuArgs** *(ARRAY)* - The arguements passed by the CfgCommunicationMenu entry\r\r0. _caller *(OBJECT)* - The player calling for support\r1. _targetPosition *(ARRAY)* - The position (AGLS) at which the call is being made\r(where the player is looking or if in the map, the position where their cursor is)\r2. _target *(OBJECT)* - The cursorTarget object of the player\r3. _is3d *(BOOL)* - False if in map, true if not\r4. _commMenuId *(NUMBER)* - The ID number of the Comm Menu added by BIS_fnc_addCommMenuItem\r5. _supportType *(NUMBER)* - The Support Type ID\r\r\n\n2: **_count** *(NUMBER)* - Used for keeping track of how many of a count a support has left (such as rounds)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] call KISKA_fnc_callingForSupplyDrop_aircraft;\r\n```\n\n","KISKA Functions\\KISKA_fnc_callingForSupportMaster.md":"#### Description:\nUsed as a means of expanding on the \"expression\" property of the CfgCommunicationMenu. This is essentially just another level of abrstraction to be able to more easily reuse code between similar supports and make things easier to read instead of fitting it all in the config.\n\n#### Parameters:\n0: **_supportClass** *(STRING)* - The class as defined in the CfgCommunicationMenu\r\n\n1: **_commMenuArgs** *(ARRAY)* - The arguements passed by the CfgCommunicationMenu entry\r\r0. _caller *(OBJECT)* - The player calling for support\r1. _targetPosition *(ARRAY)* - The position (AGLS) at which the call is being made\r(where the player is looking or if in the map, the position where their cursor is)\r2. _target *(OBJECT)* - The cursorTarget object of the player\r3. _is3d *(BOOL)* - False if in map, true if not\r4. _commMenuId *(NUMBER)* The ID number of the Comm Menu added by BIS_fnc_addCommMenuItem\r\r\n\n2: **_count** *(NUMBER)* - Used for keeping track of how many of a count a support has left (such as rounds)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"myClass\",_this] call KISKA_fnc_callingForSupportMaster;\r\n```\n\n","KISKA Functions\\KISKA_fnc_CAS.md":"#### Description:\nCompletes either a gun run, bomb run, rockets, or rocket and gun strike.\n\n#### Parameters:\n0: **_attackPosition** : *(OBJECT or ARRAY)* - ASL position or object to attack\r\n\n1: **_attackTypeID** : *(NUMBER or ARRAY)* - See CAS Type IDs.hpp .\rIf an array, format needs to be [attackTypeId,pylonMagazineClass].\rCustom mag classes, when used for napalm or UGB ids, will drop the ENTIRE payload\r of that mag. e.g. mag class \"vn_bomb_f4_out_500_blu1b_fb_mag_x1\" is 1 bomb dropped,\r \"vn_bomb_f4_out_500_blu1b_fb_mag_x4\" will be 4 dropped\r\n\n2: **_attackDirection** : *(NUMBER)* - The direction the aircraft should approach from relative to North\r\n\n3: **_planeClass** : *(STRING)* - The className of the aircraft\r\n\n4: **_side** : *(SIDE)* - The side of the plane\r\n\n5: **_spawnHeight** : *(NUMBER)* - At what height should the aircraft start firing\r\n\n6: **_spawnDistance** : *(NUMBER)* - How far away to spawn the aircraft\r\n\n7: **_breakOffDistance** : *(NUMBER)* - The distance to target at which the aircraft should definately disengage and fly away (to not crash)\r\n\n8: **_attackPositionOffset** : *(NUMBER)* - This will offset the _attackPosition in meters and in the direction of the attack.\rSo for instance, if I wanted a gun run to be aimed 20m further in the _attackDirection from the _attackPosition, I'd\r set this to 20\r\n\n9: **_attackDistance** : *(NUMBER)* - The distance to target at which the aircraft can start completeing its attack\r10: **_allowDamage** : *(BOOL)* - Allow damage of both the crew and aircraft\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[myTarget] spawn KISKA_fnc_CAS;\r\n```\n\n","KISKA Functions\\KISKA_fnc_CASAttack.md":"#### Description:\nFires off the various weapons of a CAS strike.\n\n#### Parameters:\n0: **_plane** : *(OBJECT)* -\r\n\n1: **_dummyTarget** : *(OBJECT)* -\r\n\n2: **_weaponsToUse** : *(OBJECT)* -\r\n\n3: **_attackTypeID** : *(NUMBER)* -\r\n\n4: **_attackPosition** : *(ARRAY)* -\r\n\n5: **_breakOffDistance** : *(NUMBER)* -\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nShould not be called on its own but in KISKA_fnc_CAS\r\n```\n\n","KISKA Functions\\KISKA_fnc_ciwsAlarm.md":"#### Description:\nSounds an alarm for the CIWS\n\n#### Parameters:\n0: **_turret** : *(OBJECT)* - The CIWS turret\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[turret1] spawn KISKA_fnc_ciwsAlarm;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ciwsInit.md":"#### Description:\nFires a number of rounds from AAA piece at target with random disperstion values. To stop, set the variable \"KISKA_runCIWS\" to false.\n\n#### Parameters:\n0: **_turret** : *(OBJECT)* - The CIWS turret\r\n\n1: **_searchDistance** : *(NUMBER)* - How far out will the CIWS be notified of a target\r\n\n2: **_engageAboveAltitude** : *(NUMBER)* - What altittiude (AGL) does the target need to be above to be engaged\r\n\n3: **_searchInterval** : *(NUMBER)* - Time between checks for targets in area\r\n\n4: **_doNotFireBelowAngle** : *(NUMBER)* - Below what angle should the turret NOT fire (keep it from firing at ground accidently)\r\n\n5: **_pitchTolerance** : *(NUMBER)* - if the turret's pitch is within this margin of degrees to the target, it can engage\r\n\n6: **_rotationTolerance** : *(NUMBER)* - if the turret's rotation is within this margin of degrees to the target, it can engage\r\n\n7: **_soundAlarm** : *(BOOL)* - Play air raid siren and sound alarm when incoming detected\r\n\n8: **_engageTypes** : *(ARRAY)* - This array decides what types of objects or entities should be engaged by the CIWS\r these are formatted as an array or string inside, using an array allows the\r decision to define a type as supported by nearEntities (which is much faster then the default nearObjects)\r simply by setting it as [\"myEntityType\",true]\n\n#### Returns:\nNothing\n\n#### Examples:\n```sqf\n[turret,3000,100] spawn KISKA_fnc_ciwsInit;\r\n```\n\n","KISKA Functions\\KISKA_fnc_ciwsSiren.md":"#### Description:\nSounds a siren for the CIWS\n\n#### Parameters:\n0: **_turret** : *(OBJECT)* - The CIWS turret\n\n#### Returns:\nNothing\n\n#### Examples:\n```sqf\n[turret1] spawn KISKA_fnc_ciwsSiren;\r\n```\n\n","KISKA Functions\\KISKA_fnc_classTurretsWithGuns.md":"#### Description:\nChecks a given vehicle class to see if it has turrets that have guns and returns those turret paths\n\n#### Parameters:\n0: **_classToCheck** *(STRING)* - The vehicle class to check\n\n#### Returns:\n*(ARRAY)* - The turret paths\n\n#### Examples:\n```sqf\n_turretPaths = [\"B_Heli_Transport_01_F\"] call KISKA_fnc_classTurretsWithGuns;\r\n```\n\n","KISKA Functions\\KISKA_fnc_clearCargoGlobal.md":"#### Description:\nDeletes all cargo from the specified object on all machines.\n\n#### Parameters:\n0: **_object** *(OBJECT)* - The object to delete all cargo from.\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[myVehicle] call KISKA_fnc_clearCargoGlobal;\r\n```\n\n","KISKA Functions\\KISKA_fnc_clearWaypoints.md":"#### Description:\nClears a group's waypoints and conditionally halts their previous movement.\n\n#### Parameters:\n0: **_group** *(GROUP or OBJECT)* - The group to clear the waypoints of.\r\n\n1: **_numberToRemove** *(NUMBER)* - The number of waypoints to remove (-1 will remove all)\r\n\n2: **_stopUnits** *(BOOL)* - Should the units stop in place after clear?\n\n#### Returns:\nNOTHING\r\n\r\nExample:\r\n(begin example)\r\n    [group player,-1,false] call KISKA_fnc_clearWaypoints\r\n(end)\n\n#### Examples:\n```sqf\n[group player,-1,false] call KISKA_fnc_clearWaypoints\r\n```\n\n","KISKA Functions\\KISKA_fnc_commandMenuTree.md":"#### Description:\nCreates a command menu tree dynamically instead of needing to define sub menus\n\n#### Parameters:\n0: **_menuPath** *(ARRAY)* - The menu global variable paths (in order)\r\n\n1: **_endExpression** *(STRING, CODE, or ARRAY)* - The code to be executed at the end of the path.\rIt receives all menu parameters in _this. (see KISKA_fnc_callBack)\r\n\n2: **_exitExpression** *(STRING, CODE, or ARRAY)* - The code to be executed in the event that\rthe menu is closed by the player. It gets all added params up to that point in _this.\r(see KISKA_fnc_callBack)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n[\"#USER:myMenu_1\",\"#USER:myMenu_2\"],\r\n\"hint str _this\"\r\n] spawn KISKA_fnc_commandMenuTree\r\n```\n\n","KISKA Functions\\KISKA_fnc_compass_addIcon.md":"#### Description:\nAdds and icon to the compass\n\n#### Parameters:\n0: **_iconId** *(STRING)* - A unique id for referencing the compass marker\r\n\n1: **_iconText** *(STRING)* - The icon's image path or text\r\n\n2: **_iconPos** *(ARRAY, OBJECT, MARKER, or LOCATION)* - The position of the icon\r\n\n3: **_color** *(ARRAY)* - The RGBa of the icon\r\n\n4: **_isActive** *(BOOL)* - Icon will use \"active\" scale of icon\n\n#### Returns:\n*(BOOL)* - false if new iconId, true if overwriting the icon id\n\n#### Examples:\n```sqf\n[\r\n    \"myMarkerID\"\r\n    \"images\\info_icon.paa\"\r\n] call KISKA_fnc_compass_addIcon;\r\n```\n\n","KISKA Functions\\KISKA_fnc_compass_configure.md":"#### Description:\nInitializes several display namespace variables for the compass and sets up their images for the compass.\n\n#### Parameters:\n0: **_display** *(DISPLAY)* - The display of the compass\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_compass_configure;\r\n```\n\n","KISKA Functions\\KISKA_fnc_compass_mainLoop.md":"#### Description:\nCreates and then continues to execute a loop controlling the compass.\n\n#### Parameters:\n0: **_display** *(DISPLAY)* - The display the compass will be on\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[findDisplay 46] spawn KISKA_fnc_compass_mainLoop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_compass_parseConfig.md":"#### Description:\nReturns an array formatted for CBA settings menu lists.\n\n#### Parameters:\n0: **_config** *(CONFIG)* - The config to parse\r\n\n1: **_varName** *(STRING)* - uiNamespace variable to save to and to check\n\n#### Returns:\n*(ARRAY)* - An array formatted as [[title name strings],[image path strings],0]\n\n#### Examples:\n```sqf\nprivate _array = [\r\n    configFile >> \"KISKA_compass\" >> \"compass\",\r\n    \"KISKA_compass_configs\"\r\n] call KISKA_fnc_compass_parseConfig;\r\n```\n\n","KISKA Functions\\KISKA_fnc_compass_refresh.md":"#### Description:\nResets the config global of the compass and then restarts the cutRSC for it.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)* - true if compass restarted\n\n#### Examples:\n```sqf\ncall KISKA_fnc_compass_refresh;\r\n```\n\n","KISKA Functions\\KISKA_fnc_compass_updateColors.md":"#### Description:\nUpdates the color of the ctrls for the KISKA compass.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_compass_updateColors;\r\n```\n\n","KISKA Functions\\KISKA_fnc_compass_updateConstants.md":"#### Description:\nUpdates a number of constant global variables used for the KISKA compass.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_compass_updateConstants;\r\n```\n\n","KISKA Functions\\KISKA_fnc_configureConvoy.md":"#### Description:\nCreates several convoy vehicles and/or configures their groups to be ready to act as a convoy.\n\n#### Parameters:\n0: **_side** *(SIDE)* - What side this convoy is on\r\n\n1: **_spawnInfo** *(ARRAY)* - An array of either or both option types:\rOption 1: *(ARRAY)* [spawnPosition (positionATL or OBJECT), spawnDirection, className] -\r\n    Vehicle will be created from from the class name and spawned at the given position\r\n    using KISKA_fnc_spawnVehicle\rOption 2: *(OBJECT)* -\r\n    Must be a land vehicle with a driver\r\rThese ideally will be in sequential order of how they line up to the lead vehicle\rwhich is the 0 index vehicle\n\n#### Returns:\n*(ARRAY)* -\r\n0: *(GROUP)* - The convoy group which includes all drivers\r\n1: *(ARRAY)* - The vehicles in the convoy (lead vehicle is index 0)\n\n#### Examples:\n```sqf\n[\r\n    BLUFOR,\r\n    [\r\n        leadVehicle,\r\n        [\"someVehicleClassToSpawn\",myPos,-1]\r\n    ]\r\n] call KISKA_fnc_configureConvoy;\r\n```\n\n","KISKA Functions\\KISKA_fnc_countdown.md":"#### Description:\nSleeps for a given time and eventually displays a certain amount on screen.\n\n#### Parameters:\n0: **_countDownTotal** : *(NUMBER)* - The amount to countdown from\r\n\n1: **_shownCountDown** : *(NUMBER)* - The number at which a print out of the\rcurrent countdown will show on screen.\r\n\n2: **_soundedCountDown** : *(NUMBER)* - The number at which a beep should play for each second\r\n\n3: **_soundName** : *(STRING)* - The cfgSournds entry to play for the sound portion of the countdown\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// print numbers when at 15 and play sound at 10\r\n[30,15,10] spawn KISKA_fnc_countdown;\r\n```\n```sqf\n// print numbers when at 15 and play no sound\r\n[30,15,-1] spawn KISKA_fnc_countdown;\r\n```\n\n","KISKA Functions\\KISKA_fnc_createTaskFromConfig.md":"#### Description:\nCreates a task from a config entry. Config should be placed inside KISKA_cfgTasks, just the string is needed to reference the config entry. Parameters from index 2 onwards will accept configNull as an alias for retrieving the configed value of the param if it is not changed (see example 2)\n\n#### Parameters:\n0: **_config** *(STRING or CONFIG)* - The config entry to convert to a task\r\n\n1: **_owner** *(BOOL, OBJECT, GROUP, SIDE, or ARRAY)* - Whom the task is assigned to\r\r(OPTIONAL)\r\n\n2: **_taskState** *(STRING, BOOL, or configNull)* - The state of the task, will overwrite config entry\r\n\n3: **_destination** *(OBJECT, ARRAY, or configNull)* The position of the task. Array can be either\r[x,y,z] or [OBJECT,precision] (see setSimpleTaskTarget). The destination can be a configed array, however, this will\roverwrite it if provided here.\r\n\n4: **_type** *(STRING or configNull)* - The task type (defined in CfgTaskTypes)\r\n\n5: **_notifyOnCreate** *(BOOL or configNull)* - Should a notification pop up when the task is created?\r\n\n6: **_visibleIn3D** *(BOOL or configNull)* - Show a 3D task icon\n\n#### Returns:\n*(STRING)* - Created Task Id\n\n#### Examples:\n```sqf\n// simple task from config\r\n[missionConfigFile >> MyTasks >> \"someTaskClass\",true] call KISKA_fnc_createTaskFromConfig;\r\n```\n```sqf\n[\r\n    \"someTaskClass\", // will search in missionConfigFile >> \"KISKA_cfgTasks\"\r\n    true,\r\n    \"ASSIGNED\",\r\n    configNull, // get configed destination value\r\n    \"ATTACK\"\r\n] call KISKA_fnc_createTaskFromConfig;\r\n```\n\n","KISKA Functions\\KISKA_fnc_createVehicleSelectMenu.md":"#### Description:\nCreates an array to be used with showCommandingMenu. Specifically, this is to provide class names to the command menu and then allow a player to select a class from the menu such as when requesting CAS.\n\n#### Parameters:\n0: **_classes** : *(ARRAY)* - The class names to add to the list (in the order to appear)\n\n#### Returns:\n*(ARRAY)* - The created array\n\n#### Examples:\n```sqf\n_menuArray = [\r\n[\"B_Heli_Transport_01_F\",\"B_Heli_Attack_01_dynamicLoadout_F\"]\r\n] call KISKA_fnc_createClassSelectMenu;\r\n```\n\n","KISKA Functions\\KISKA_fnc_cruiseMissileStrike.md":"#### Description:\nSpawns a cruise missile at designated \"launcher\" and then guides it to a target. If you need a missile that terrain follows, see KISKA_fnc_vlsFireAt.\n\n#### Parameters:\n0: **_target** *(OBJECT or ARRAY)* - Target to hit missile with, can also be a position (ASL)\r\n\n1: **_side** *(SIDE)* - The side that is launching the missile\r\n\n2: **_launchPos** *(OBJECT or ARRAY)* - An object or position ASL to spawn the missile at.\rIf empty array array (default), a random position is chosen 2000m away.\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[target_1] call KISKA_fnc_cruiseMissileStrike;\r\n```\n\n","KISKA Functions\\KISKA_fnc_dataLinkMsg.md":"#### Description:\nDisplays a message to the player and creates a diary entry of that message. Also can play a sound when the notification pops up.\n\n#### Parameters:\n0: **_message** : *(STRING or ARRAY)* - If string, the message to display as title.\rIf array:\r\r0. _text : *(STRING)* - Text to display or path to .paa or .jpg\rimage (may be passed directly if only text is required)\r1. _size : *(NUMBER)* - Scale of text\r2. _color : *(ARRAY)* - RGB or RGBA color (range 0-1). (optional, default: [1, 1, 1, 1])\r\r\n\n1: **_canSkip** : *(BOOL)* - Can the notification be skipped when another is in the queue\r\n\n2: **_lifetime** : *(NUMBER)* - How long the notification will be visible (min of 2 seconds)\r\n\n3: **_sound** : *(STRING)* - A sound\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"this is the message\", 5] call KISKA_fnc_datalinkMsg;\r\n```\n\n","KISKA Functions\\KISKA_fnc_defend.md":"#### Description:\nA function for a group to defend a parsed location. Should be ran locally. Units will mount nearby static machine guns and garrison in nearby buildings. 10% chance to patrol the radius unless specified differently (100% when no available building positions). 0% chance to hold defensive positions in combat unless specified differently. Modifications: Accounted for doMove command's inability to use z-axis\n\n#### Parameters:\n0: **_group** *(GROUP or OBJECT)* - The group to do the defending\r\n\n1: **_position** *(OBJECT, LOCATION, GROUP, or ARRAY)* - centre of area to defend *(ARRAY, OBJECT, LOCATION, GROUP)* (Default: _group)\r\n\n2: **_radius** *(NUMBER)* - radius of area to defend *(NUMBER)* (Default: 50)\r\n\n3: **_threshold** *(NUMBER)* - minimum building positions required to be considered for garrison *(NUMBER)* (Default: 3)\r\n\n4: **_patrol** *(NUMBER or BOOL)* - chance for each unit to patrol instead of garrison, true for default, false for 0% *(NUMBER, BOOLEAN)* (Default: 0.1)\r\n\n5: **_hold** *(NUMBER or BOOL)* - chance for each unit to hold their garrison in combat, true for 100%, false for 0% *(NUMBER, BOOLEAN)* (Default: 0)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[this] call KISKA_fnc_defend\r\n```\n\n","KISKA Functions\\KISKA_fnc_deleteAtArray.md":"#### Description:\nRemoves an index from a global array. This was used in lieu of creating a public variable to sync the array. In order to keep network traffic lower if the array becomes large.\n\n#### Parameters:\n0: **_arrayVariableName** : *(STRING)* - The global array in string format\r\n\n1: **_indexToRemove** : *(ANY)* - The index to remove\r\n\n2: **_namespace** : *(NAMESPACE,OBJECT,GROUP,LOCATION,CONTROL,DISPLAY)* - What namespace the array is in\n\n#### Returns:\n*(BOOL)* - True if done, false if not\n\n#### Examples:\n```sqf\n[\"myGlobalArrayVar\",someInfoHere] call KISKA_fnc_deleteAtArray;\r\n```\n\n","KISKA Functions\\KISKA_fnc_deleteAtArray_interface.md":"#### Description:\nRemoves an index from a global array. Checks if machine hasInterface before. This was used in lieu of creating a public variable to sync the array. In order to keep network traffic lower if the array becomes large.\n\n#### Parameters:\n0: **_arrayVariableName** : *(STRING)* - The global array in string format\r\n\n1: **_indexToRemove** : *(ANY)* - The index to remove\r\n\n2: **_namespace** : *(NAMESPACE,OBJECT,GROUP,LOCATION,CONTROL,DISPLAY)* - What namespace the array is in\n\n#### Returns:\n*(BOOL)* - True if done, false if not\n\n#### Examples:\n```sqf\n[\"myGlobalArrayVar\",someInfoHere] call KISKA_fnc_deleteAtArray;\r\n```\n\n","KISKA Functions\\KISKA_fnc_deleteRandomIndex.md":"#### Description:\nRemoves and returns a random item from an array\n\n#### Parameters:\n0: **_radio** *(ARRAY)* - The array to find a random index of.\n\n#### Returns:\n*(ANY)* - The random item removed from the array\n\n#### Examples:\n```sqf\nprivate _randomDeletedItem = [[1,2,3]] call KISKA_fnc_deleteRandomIndex;\r\n```\n\n","KISKA Functions\\KISKA_fnc_detectControlKeys.md":"#### Description:\nArma 3's support system currently has a bug that allows players to call in multiple supports by having the map open and holding down a ctrl key and left - clicking while in the support menu. Each click will call in a support.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT Function\r\n```\n\n","KISKA Functions\\KISKA_fnc_disallowGroupRally.md":"#### Description:\nRemoves a groups ability to rally an deletes its marker if requested.\n\n#### Parameters:\n0: **_groupToRemove** *(GROUP or OBJECT)* - The group or the unit whose group to remove\r\n\n1: **_deleteMarker** *(BOOL)* - Should the group's latest rally marker (if present) be deleted\n\n#### Returns:\n*(BOOL)* - True if no longer allowed or never was, false if error\n\n#### Examples:\n```sqf\n// disallows player's group to drop a rally point (if they're the server)\r\n[player] call KISKA_fnc_disallowGroupRally;\r\n```\n\n","KISKA Functions\\KISKA_fnc_doMagRepack.md":"#### Description:\nCompletes a repack on the units current weapon.\n\n#### Parameters:\n0: **_unit** : *(OBJECT)* - The person doing the repack\r\n\n1: **_doHint** : *(BOOL)* - Should the local client be informed of packs?\n\n#### Returns:\n*(BOOL)* - false if not completed, true if it was\n\n#### Examples:\n```sqf\n[player] call KISKA_fnc_doMagRepack;\r\n```\n\n","KISKA Functions\\KISKA_fnc_driveTo.md":"#### Description:\nUnits will drive to point and get out of vehicle.\n\n#### Parameters:\n0: **_crew** : *(GROUP, ARRAY, or OBJECT)* - The units to move into the vehicle and drive\r\n\n1: **_vehicle** : *(OBJECT)* - The vehicle to put units into\r\n\n2: **_dismountPoint** : *(OBJECT or ARRAY)* - The position to move to, can be object or position array\r\n\n3: **_completionRadius** : *(NUMBER)* - The radius at which the waypoint is complete and the units can disembark from the _dismountPoint, -1 for exact placement\r\n\n4: **_speed** : *(STRING)* - The for the driver group to move at\r\n\n5: **_codeOnComplete** : *(CODE, STRING, or ARRAY)* - Code to run upon completion of disembark. See KISKA_fnc_callBack\rParams:\r\r0. *(OBJECT)* - The vehicle, crew (ARRAY), and crew groups (ARRAY)\r1. *(ARRAY (of OBJECTs))* - The crew of the vehicle\r2. *(ARRAY (of GROUPs))* - All the groups that are in the vehicle crew\n\n#### Returns:\n*(BOOL)* - false if encountered error, true if success\n\n#### Examples:\n```sqf\n[_group1, _vehicle, myDismountPoint] call KISKA_fnc_driveTo;\r\n```\n\n","KISKA Functions\\KISKA_fnc_dropOff.md":"#### Description:\nTells a vehicle to move to a position and then drop off the specified units.\n\n#### Parameters:\n0: **_vehicle** : *(OBJECT)* - The vehicle that will drop of units\r\n\n1: **_dropOffPosition** : *(OBJECT or ARRAY)* - The position to drop units off, can be object or position array\r\n\n2: **_unitsToDropOff** : *(GROUP, ARRAY, or OBJECT)* - The units to drop off\r\n\n3: **_completionRadius** : *(NUMBER)* - The radius at which the waypoint is complete and the units can disembark from the _dropOffPosition, -1 for exact placement\r\n\n4: **_speed** : *(STRING)* - The for the driver group to move at\r\n\n5: **_codeOnComplete** : *(CODE, STRING, or ARRAY)* - Code to run upon completion of disembark. See KISKA_fnc_callBack\rParams:\r\r\n    0. *(OBJECT)* - The vehicle that will drop of units\r\n    1. *(ARRAY)* - The units dropped off at this location\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    myVehicle,\r\n    myPosition,\r\n    player\r\n] call KISKA_fnc_dropOff;\r\n```\n\n","KISKA Functions\\KISKA_fnc_endTask.md":"#### Description:\nEither completes, cancels, or ends a task and calls the task's onComplete event if it is defined in KISKA_cfgTasks. Meant to be paired with KISKA_fnc_createTaskFromConfig.\n\n#### Parameters:\n0: **_taskId** *(STRING)* - The task id/KISKA_cfgTasks class name\r\n\n1: **_state** *(NUMBER)* - 0 for SUCCEEDED, 1 for FAILED, 2 for CANCELED\r\n\n2: **_notify** *(BOOL)* - Should a nortification be shown\r\n\n4: **_owner** *(BOOL, OBJECT, GROUP, SIDE, or ARRAY)* - Whom the task is assigned to\r(this is only needed in the event that the task is ended without it having been created)\n\n#### Returns:\n*(BOOL)* - Whether or not the state of the task was set to the desired one\n\n#### Examples:\n```sqf\nprivate _taskIsSucceeded = [\"mytaskID\",0] call KISKA_fnc_endTask;\r\n```\n\n","KISKA Functions\\KISKA_fnc_engageHeliTurretsLoop.md":"#### Description:\nSets up a helicopter's turrets to be able to properly engage enemies without without the pilot going crazy. Starts a loop that will reveal targets within a given radius to gunners to engage. You can use variables in the _heli's namepsace to adjust params dynamically: \"KISKA_heliTurrets_endLoop\" - ends the function \"KISKA_heliTurrets_sleepTime\" - adjusts the _sleepTime param \"KISKA_heliTurrets_revealAccuracy\" - adjusts the _revealAccuracy param \"KISKA_heliTurrets_detectionRadius\" - adjusts the _detectionRadius param \"KISKA_heliTurrets_running\" - checks if the system is running\n\n#### Parameters:\n0: **_heli** : *(OBJECT)* - The helicopter to set up\r\n\n1: **_sleepTime** : *(NUMBER)* - Time in between each \"refresh\" of the targets gunners are revealed\r\n\n2: **_revealAccuracy** : *(NUMBER)* - The accuracy of the reveals of targets for gunners\r\n\n3: **_detectionRadius** : *(NUMBER)* - The radius within to search for targets for the gunners\r\n\n4: **_skill** : *(NUMBER)* - The skill of the vehicle crew\r\n\n5: **_makeInvulnerable** : *(BOOL)* - Makes vehicle crew invulnerable or not\r\n\n6: **_turretsWithWeapons** : *(ARRAY)* - If you've already found which turrets to regard as \"gunner\" turrets, pass their turret paths\ror the function will get them.\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    _vehicle,\r\n    5,\r\n    4,\r\n    250,\r\n    1,\r\n    true\r\n] spawn KISKA_fnc_engageHeliTurretsLoop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_errorNotification.md":"#### Description:\nPrints a simple KISKA Notify error notification on screen.\n\n#### Parameters:\n0: **_message** : *(STRING or ARRAY)* - The second line of the notification.\rFormatted the same as the parameters for CBA_fnc_notify:\r\n    _lineN - N-th content line (may be passed directly if only 1 line is required). *(ARRAY)*\r\n        _text  - Text to display or path to .paa or .jpg image (may be passed directly if only text is required). *(STRING, NUMBER)*\r\n        _size  - Text or image size multiplier. (optional, default: 1) *(NUMBER)*\r\n        _color - RGB or RGBA color (range 0-1). (optional, default: [1, 1, 1, 1]) *(ARRAY)*\r\n\n1: **_lifetime** : *(NUMBER)* - How long the notification lasts in seconds (at least 2)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"You made and error\"] call KISKA_fnc_errorNotification;\r\n```\n\n","KISKA Functions\\KISKA_fnc_eventHandler_addFromConfig.md":"#### Description:\nAdds a configed custom eventhandler.\n\n#### Parameters:\n0: **_entityToAddEventHandlerTo** *(ANY)* - The entity to add the eventhandler to\r\n\n1: **_config** *(CONFIG)* - The config of the eventhandler\r\n\n2: **_code** *(CODE or STRING)* - What to execute when the eventhandler is called\r_thisScriptedEventHandler is available with the event id\n\n#### Returns:\n*(NUMBER)* - The ID of the eventhandler\n\n#### Examples:\n```sqf\nprivate _eventID = [\r\n    player,\r\n    myConfig\r\n] call KISKA_fnc_eventHandler_addFromConfig\r\n```\n\n","KISKA Functions\\KISKA_fnc_eventHandler_createCBAStateMachine.md":"#### Description:\nAdds a configed custom eventhandler\n\n#### Parameters:\n0: **_config** *(CONFIG)* - The config of the statemachine\n\n#### Returns:\n*(LOCATION)* - The statemachine\n\n#### Examples:\n```sqf\n_statemachine = [myConfig] call KISKA_fnc_eventHandler_createCBAStateMachine\r\n```\n\n","KISKA Functions\\KISKA_fnc_eventHandler_remove.md":"#### Description:\nRemoves a configed custom eventhandler. Worth noting that this will still return true even after the event has been removed as BIS_fnc_removeScriptedEventHandler essentially checks that the event isn't one that never could have existed.\n\n#### Parameters:\n0: **_entity** *(ANY)* - The config of the eventhandler\r\n\n1: **_eventConfig** *(CONFIG)* - The eventhandler config path\r\n\n2: **_id** *(NUMBER)* - The event to remove\n\n#### Returns:\n*(BOOL)* - True if removed, false if it never existed\n\n#### Examples:\n```sqf\nprivate _removed = [\r\n    player,\r\n    configFile >> \"KISKA_EventHandlers\" >> \"KISKA_combatBehaviourChangedEvent\",\r\n    0\r\n] call KISKA_fnc_eventHandler_remove\r\n```\n\n","KISKA Functions\\KISKA_fnc_executeTimelineEvent.md":"#### Description:\nExecutes a recursive chain timeline events. This should not be executed on its own but begins from KISKA_fnc_startTimeline.\n\n#### Parameters:\n0: **_timeline** *(ARRAY)* - An array of timeline events that will happen. \rSee KISKA_fnc_startTimeline for formats\r\n\n1: **_timelineId** *(NUMBER)* - The id of the timeline to stop\r\n\n2: **_timelineMap** *(HASHMAP)* - The Individual map defined for a specific timeline of the given ID\r\n\n3: **_previousReturn** *(ANY)* - The returned value from the previous events function\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_timeline,123] call KISKA_fnc_executeTimelineEvent\r\n```\n\n","KISKA Functions\\KISKA_fnc_exportSpawnPositions.md":"#### Description:\nTakes a layer of objects and produces an array of arrays that are their 3d ATL position and current direction ([0,0,0,0]). Can also convert the arrays to config compatible format. This will copy its output to the clipboard if run on the server;\n\n#### Parameters:\n0: **_layer** *(STRING or NUMBER)* - The name of the layer or if in 3den, its layer id\r\n\n1: **_convertToConfig** *(BOOL)* - Change all square brackets ([]) to curly ({})\n\n#### Returns:\n*(STRING)* - The converted Array\n\n#### Examples:\n```sqf\n[\"someLayer\",true] call KISKA_fnc_exportSpawnPositions;\r\n```\n\n","KISKA Functions\\KISKA_fnc_findConfigAny.md":"#### Description:\nSearchs missionConfigFile, campaignConfigFile, and the configFile (in that order) to find a config based upon the sub paths provided. Returns the first one it finds. The BIS counterpart to this is BIS_fnc_loadClass and while it can be about 0.0005-0.0010ms faster if the path is short (about 2 entries). It can yield about 0.005ms faster in various cases.\n\n#### Parameters:\n0: **_pathArray** : *(ARRAY)* - The array in string format\n\n#### Returns:\n*(CONFIG)* - The first config path if found or configNull if not\n\n#### Examples:\n```sqf\n_configPath = [[\"CfgMusic\",\"Music_Intro_02_MissionStart\"]] call KISKA_fnc_findConfigAny;\r\n```\n\n","KISKA Functions\\KISKA_fnc_findIfBool.md":"#### Description:\nChecks if an array index satisfies the provided code, and returns a BOOL for whether or not one was found.\n\n#### Parameters:\n0: **_array** : *(ARRAY)* - The array to check\r\n\n1: **_codeToCheck** : *(CODE)* - The code to check against the array indexes.\rNeeds to return a BOOl.\rParams are passed within _thisArgs.\r\n\n2: **_thisArgs** : *(ARRAY)* - Any local arguements that can be passed\n\n#### Returns:\n*(BOOL)* - True if an index meets the condition, false if not\n\n#### Examples:\n```sqf\n// returns true if any player is alive\r\n[allPlayers,{alive _x}] call KISKA_fnc_findIfBool;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCHOnLoad.md":"#### Description:\nExecutes in the onload event for the KISKA's Group Changer Dislog\n\n#### Parameters:\n0: **_display** *(DISPLAY)* - The display of the dialog\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_display] call KISKA_fnc_GCHOnLoad;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_assignTeamCombo.md":"#### Description:\nAdds control event handler to the combo box for turning it on and off.\n\n#### Parameters:\n0: **_control** *(CONTROL)* - The control for the combo box\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_control] call KISKA_fnc_GCHOnLoad_assignTeamCombo;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_canBeDeletedCombo.md":"#### Description:\nAdds control event handler to the combo box for turning it on and off.\n\n#### Parameters:\n0: **_control** *(CONTROL)* - The control for the combo box\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_control] call KISKA_fnc_GCHOnLoad_canBeDeletedCombo;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_canRallyCombo.md":"#### Description:\nAdds control event handler to the combo box for turning it on and off.\n\n#### Parameters:\n0: **_control** *(CONTROL)* - The control for the combo box\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_control] call KISKA_fnc_GCHOnLoad_canRallyCombo;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_closeButton.md":"#### Description:\nAdds control event handler to the close buttont that will close the dialog.\n\n#### Parameters:\n0: **_control** *(CONTROL)* - The control for the close button\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_control] call KISKA_fnc_GCHOnLoad_closeButton;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_joinGroupButton.md":"#### Description:\r\nThe function that fires on the join group button click event. The Event is called from KISKA_fnc_GCHOnLoad.\r\n\r\n#### Parameters:\r\n0: **_control** *(CONTROL)* - The control of the button\r\n\r\n#### Returns:\r\nNOTHING\r\n\r\n#### Examples:\r\n```sqf\r\n[buttonControl] call KISKA_fnc_GCHOnLoad_joinGroupButton;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_leaveGroupButton.md":"#### Description:\r\nThe function that fires on the leave group button click event. The Event is added in KISKA_fnc_GCHOnLoad.\r\n\r\n#### Parameters:\r\nNONE\r\n\r\n#### Returns:\r\nNOTHING\r\n\r\n#### Examples:\r\n```sqf\r\n[buttonControl] call KISKA_fnc_GCHOnLoad_leaveGroupButton;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_setGroupIdButton.md":"#### Description:\r\nThe function that fires on the set group id button click event. This is called from KISKA_fnc_GCHOnLoad\r\n\r\n#### Parameters:\r\n0: **_control** *(CONTROL)* - The control of the button\r\n\r\n#### Returns:\r\nNOTHING\r\n\r\n#### Examples:\r\n```sqf\r\n[buttonControl] call KISKA_fnc_GCHOnLoad_setGroupIdButton;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_setLeaderButton.md":"#### Description:\r\nThe function that fires on the set leader button click event. The function is called in KISKA_fnc_GCHOnLoad.\r\n\r\n#### Parameters:\r\nNONE\r\n\r\n#### Returns:\r\nNOTHING\r\n\r\n#### Examples:\r\n```sqf\r\n[buttonControl] call KISKA_fnc_GCHOnLoad_setLeaderButton;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_showAiCheckbox.md":"#### Description:\nAdds control event handler to check box and sets its intial state.\n\n#### Parameters:\n0: **_control** *(CONTROL)* - The control for the checkbox\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_control] call KISKA_fnc_GCHOnLoad_showAiCheckbox;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCHOnLoad_sideGroupsList.md":"#### Description:\nAdds eventhandler to the listbox.\n\n#### Parameters:\n0: **_control** *(CONTROL)* - The control for the list box\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_control] call KISKA_fnc_GCHOnLoad_sideGroupsList;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_addDiaryEntry.md":"#### Description:\nCreates a diary entry in the map for the player to open the Group Manager\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT function\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_addGroupEventhandlers.md":"#### Description:\nAdds group eventhandlers that help the GCH GUI function.\n\n#### Parameters:\n0: **_group** *(GROUP)* - The Group to add the eventhandlers to\n\n#### Returns:\n*(HASHMAP)* - A map with all event ids contained within it\n\n#### Examples:\n```sqf\n[group player] call KISKA_fnc_GCH_addGroupEventhandlers\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_addMissionEvents.md":"#### Description:\nAdds mission event handlers for keeping track of groups.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT function\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_assignTeam.md":"#### Description:\nReassigns a unit's team\n\n#### Parameters:\n0: **_unit** *(OBJECT)* - The unit to reassign\r\n\n1: **_team** *(NUMBER)* - the team to assign\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[aUnit] remoteExec [\"KISKA_fnc_GCH_assignTeam\",LocalPlayerUnitOrLeaderOfGroup];\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_canPlayerChangeGroup.md":"#### Description:\nThe function that fires on the leave group button click event. The Event is added in KISKA_fnc_GCHOnLoad.\n\n#### Parameters:\n0: **_groupToJoin** : *(group)* - The group a player wants to join\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[someGroup] call KISKA_fnc_GCH_canPlayerChangeGroup;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_getPlayerSide.md":"#### Description:\nReturns the side of the player's group in order to avoid if the player is captive and the object is technically a part of the civ faction for instance.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(SIDE)* - The side of the player's group\n\n#### Examples:\n```sqf\nprivate _playerSide = call KISKA_fnc_GCH_getPlayerSide;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_getSelectedGroup.md":"#### Description:\nReturns the selected group in the group changer.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(GROUP)* - The currently selected group or grpNull if not found\n\n#### Examples:\n```sqf\nprivate _selectedGroup = [] call KISKA_fnc_GCH_getSelectedGroup;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_getSideGroups.md":"#### Description:\nGets all groups of a particular side and that are not exlcuded from the GCH\n\n#### Parameters:\n0: **_side** *(SIDE)* - The side to get the groups of\n\n#### Returns:\n*(ARRAY)* - List of all the groups\n\n#### Examples:\n```sqf\nprivate _playerSide = [] call KISKA_fnc_GCH_getPlayerSide;\r\n_groups = [_playerSide] call KISKA_fnc_GCH_getSideGroups;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_groupDeleteQuery.md":"#### Description:\nActs as a liason from a client to add a group to auto delete if necessary. Only works where the group is local and need to use groupOwner to get that which only works on the server.\n\n#### Parameters:\n0: **_group** *(GROUP)* - The group to change the auto-deletion on\r\n\n1: **_canDelete** *(BOOL)* - Set the group to be deleted or not\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[myGroup,false] call KISKA_fnc_GCH_groupDeleteQuery;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_isAllowedToEdit.md":"#### Description:\nChecks if a machine is allowed to edit a given property in the GCH dialog.\n\n#### Parameters:\n0: **_groupLeader** *(OBJECT or GROUP)* - The leader or group to edit the property on.\rIf provided, it will be assumed that even the group leader can edit the property\n\n#### Returns:\n*(BOOL)* - True if yes, false if no.\n\n#### Examples:\n```sqf\n_canEdit = [myGroup] call KISKA_fnc_GCH_isAllowedToEdit;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_isGroupExcluded.md":"#### Description:\nChecks if a group is excluded from the Group Changer menu.\n\n#### Parameters:\n0: **_group** *(GROUP)* - The group to check exclusion of\n\n#### Returns:\n*(BOOL)* - Returns true if the group is excluded or false if not\n\n#### Examples:\n```sqf\nprivate _isExcluded = [group player] call KISKA_fnc_GCH_isGroupExcluded;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_isOpen.md":"#### Description:\nChecks if the group changer is open or not.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)* - Returns true if the group changer is open and false if it is not\n\n#### Examples:\n```sqf\nprivate _isOpen = call KISKA_fnc_GCH_isOpen;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_openDialog.md":"#### Description:\nOpens KISKA Group Changer dialog.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_GCH_openDialog;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_setGroupExcluded.md":"#### Description:\nSets a group's exclusion from the Group Changer.\n\n#### Parameters:\n0: **_group** *(GROUP)* - The group to check exclusion of\r\n\n1: **_isExcluded** *(BOOL)* - True to exclude group, false to include\n\n#### Returns:\n*(BOOL)* - Returns true if the group is excluded or false if not\n\n#### Examples:\n```sqf\n// exclude group\r\nprivate _isExcluded = [group player,true] call KISKA_fnc_GCH_setGroupExcluded;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_setLeaderRemote.md":"#### Description:\nRemotely sets a leader of a group from the server. (Must be run on the server)\n\n#### Parameters:\n0: **_group** *(GROUP)* - The group to set the unit to leader\r\n\n1: **_unitToSet** *(OBJECT)* - The unit to set to leader of the group\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[group player, player] call KISKA_fnc_GCH_setLeaderRemote;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_updateCurrentGroupSection.md":"#### Description:\nUpdates the individual components of the current group section of the GUI.\n\n#### Parameters:\n0: **_updateUnitList** *(BOOL)* - Updates the list of units\r\n\n1: **_updateLeaderIndicator** *(BOOL)* - Updates the text that shows the leader's name\r\n\n2: **_updateGroupId** *(BOOL)* - Updates the group's ID name\r\n\n3: **_updateCanDeleteCombo** *(BOOL)* - Updates the state of the can delete combo list\r\n\n4: **_updateCanRallyCombo** *(BOOL)* - Updates the state of the can delete combo list\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// update just the unit list\r\n[true] call KISKA_fnc_GCH_updateCurrentGroupSection;\r\n```\n\n","KISKA Functions\\KISKA_fnc_GCH_updateSideGroupsList.md":"#### Description:\nUpdates the side's groups list for the GCH dialog.\n\n#### Parameters:\n0: **_queryForGroups** *(BOOL)* - Does a search for all groups that can appear in the \rGroup Changer need to be reconducted?\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[true] call KISKA_fnc_GCH_updateSideGroupsList;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getAmmoClassFromId.md":"#### Description:\nTakes a number (id) and translates it into the class name for that number\n\n#### Parameters:\n0: **_id** : *(NUMBER)* - The ammo type ID\n\n#### Returns:\n*(STRING)* - ClassName for the corresponding Id number, otherwise empty string\n\n#### Examples:\n```sqf\n_class = [0] call KISKA_fnc_getAmmoClassFromId\r\n```\n\n","KISKA Functions\\KISKA_fnc_getAmmoTitleFromId.md":"#### Description:\nTakes a number (id) and translates it into the title name for that number. Used to fill out menus with a consistent string for the corresponding round type.\n\n#### Parameters:\n0: **_id** : *(NUMBER)* - The ammo type ID\n\n#### Returns:\n*(STRING)* - ClassName for the corresponding Id number, otherwise empty string\n\n#### Examples:\n```sqf\n_title = [0] call KISKA_fnc_getAmmoClassFromId\r\n```\n\n","KISKA Functions\\KISKA_fnc_getCasTitleFromId.md":"#### Description:\nTakes a number (id) and translates it into the title name for that number. Used to fill out menus with a consistent string for the corresponding round type.\n\n#### Parameters:\n0: **_id** : *(NUMBER)* - The ammo type ID\n\n#### Returns:\n*(STRING)* - ClassName for the corresponding Id number, otherwise empty string\n\n#### Examples:\n```sqf\n_title = [0] call KISKA_fnc_getCasTitleFromId\r\n```\n\n","KISKA Functions\\KISKA_fnc_getContainerCargo.md":"#### Description:\nSaves the cargo of a container in a formatterd array to be used with KISKA_fnc_pasteContainerCargo for copying cargos of containers. Exact ammo counts will be preserved even inside of an item such as magazines inside of a vest or backpack.\n\n#### Parameters:\n0: **_primaryContainer** *(OBJECT)* - The container to save the cargo of\n\n#### Returns:\n*(ARRAY)* - Formatted array of all items in cargo space of a container.\r\nUsed with KISKA_fnc_setContainerCargo.\r\nWill return [] if no cargo is present.\n\n#### Examples:\n```sqf\n[container] call KISKA_fnc_getContainerCargo;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getCurrentWaypoint.md":"#### Description:\nReturns the units currentWaypoint\n\n#### Parameters:\n0: **_group** *(GROUP or OBJECT)* - The unit to get the currentWaypoint for.\n\n#### Returns:\n*(ARRAY)* - The waypoint\n\n#### Examples:\n```sqf\nprivate _waypoint = [myUnit] call KISKA_fnc_getCurrentWaypoint;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getFromNetId.md":"#### Description:\nGets an object or group from a netId.\n\n#### Parameters:\n0: **_id** *(STRING)* - The id of the object\r\n\n1: **_fromObject** *(BOOL)* - false for getting object, true for group\n\n#### Returns:\n*(OBJECT or GROUP)* - The Id of the entity\n\n#### Examples:\n```sqf\n_entity = [\"0:0\"] call KISKA_fnc_netId;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getLatestPlayedMusicID.md":"#### Description:\nReturns the latest track ID of music that played (each song played increments) the ID by one. This DOES NOT indicated whether or not this ID is still playing. See KISKA_fnc_getPlayingMusic to check what track is present (if any).\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(NUMBER)* - The highest incremented track \"ID\". -1 indicates no music has ever been played\n\n#### Examples:\n```sqf\nprivate _id = call KISKA_fnc_getLatestPlayedMusicID;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getMissionLayerObjects.md":"#### Description:\nSimply returns the objects of a mission layer.\n\n#### Parameters:\n0: **_layer** : *(STRING or NUMBER)* - The name or ID of the mission layer\n\n#### Returns:\n*(ARRAY)* - The layer's objects\n\n#### Examples:\n```sqf\n_objects = [\"myLayer\"] call KISKA_fnc_getMissionLayerObjects;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getMostSpecificCfgValue.md":"#### Description:\nPicks the most specific unitTypes property from a list of configs.\n\n#### Parameters:\n0: **_property** *(STRING)* - The config property to search for in all of the classes\r\n\n1: **_configs** *(ARRAY)* - An array of CONFIGs that you would like to look for the\rproperty. These should be within the same configHierarchy.\r\n\n2: **_ignoredValues** *(ARRAY of ARRAY, NUMBER, or STRING)* - A list of invalid values\rfor the property to have in order to be ignored. (strings should be lowercase)\r(NIL will always be ignored)\r\n\n3: **_ignoredTypes** *(ARRAY of ARRAY, NUMBER, or STRING)* - A list of invalid types for the property\n\n#### Returns:\n*(NIL, ARRAY, NUMBER, or STRING)* - The config value returned by the most specific config passed\r\n    that is valid.\n\n#### Examples:\n```sqf\nprivate _valueFromMostSpecificClass = [\r\n    \"myProperty\"\r\n    [\r\n        missionConfigFile >> \"SomeClass\",\r\n        missionConfigFile >> \"SomeClass\" >> \"SomeSubClass\",\r\n        missionConfigFile >> \"SomeClass\" >> \"SomeSubClass\" >> \"SomeFurtherSubClass\",\r\n    ],\r\n    [\"\"], // shouldn't be an empty string,\r\n    [123] // ignore number properties\r\n] call KISKA_fnc_getMostSpecificCfgValue;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getMusicDuration.md":"#### Description:\nReturns the duration of a track of music. Will return 0 if undefined duration or class.\n\n#### Parameters:\n0: **_track** *(STRING or CONFIG)* - a classname to check the duration of or its config path\n\n#### Returns:\n*(NUMBER)* - The duration of the requested track\n\n#### Examples:\n```sqf\n_duration = [\"LeadTrack01_F_Curator\"] call KISKA_fnc_getMusicDuration;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getMusicFromClass.md":"#### Description:\nReturns an array of track names for the given class of music.\n\n#### Parameters:\n0: **_musicClass** *(STRING)* - a class of music to search for (e.g. \"stealth\")\n\n#### Returns:\n*(ARRAY)* - list of tracks names from the class\n\n#### Examples:\n```sqf\n[\"stealth\"] call KISKA_fnc_getMusicFromClass;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getNearestIncriment.md":"#### Description:\nRounds off a number to the nearest incriment.\n\n#### Parameters:\n0: **_numberToCheck** : *(NUMBER)* - The number to round off\r\n\n1: **_incriment** : *(NUMBER)* - The incriment by which the number should be assessed\n\n#### Returns:\n*(NUMBER)* - The nearest incriment to the given number\n\n#### Examples:\n```sqf\n// -0.22\r\n_nearestIncriment = [-0.223,0.01] call KISKA_fnc_getNearestIncriment;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getOverallTimelineMap.md":"#### Description:\nReturns the global timeline map of IDs and the individual info for a timeline.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(HASHMAP)* - The overall timeline map to get info on certain timelines\n\n#### Examples:\n```sqf\nprivate _overallTimelineMap = call KISKA_fnc_getOverallTimelineMap;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getPlayingMusic.md":"#### Description:\nReturns the current playing tracks class name.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(STRING)* - The class name of music. Will be \"\" if nothing is playing.\n\n#### Examples:\n```sqf\nprivate _track = call KISKA_fnc_getPlayingMusic;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getRelativeVectorAndPos.md":"#### Description:\nReturns the relative vector dir and up and world position from one object to another.\n\n#### Parameters:\n0: **_parent** *(OBJECT)* - The object to make the coordinates relative to.\r\n\n1: **_child** *(OBJECT)* - The object to find coordinates for.\n\n#### Returns:\n*(ARRAY)* -\r\n    0: *(ARRAY)* - Relative world pos\r\n    1: *(ARRAY)* - Relative vector dir\r\n    2: *(ARRAY)* - Relative vector up\n\n#### Examples:\n```sqf\nprivate relativeArray = [\r\n    parentObject,\r\n    childObject\r\n] call KISKA_fnc_getRelativeVectorAndPos\r\n```\n\n","KISKA Functions\\KISKA_fnc_getSupportVehicleClasses.md":"#### Description:\nGets mission configed default vehicle types available for KISKA supports.\n\n#### Parameters:\n0: **_side** *(SIDE)* - The side to search for\r\n\n1: **_typeId** *(NUMBER)* - The type of vehicle to search for\n\n#### Returns:\n*(ARRAY)* - A list of vehicles listed under the relevant config\n\n#### Examples:\n```sqf\n_bluforCAS_types = [BLUFOR,SUPPORT_TYPE_CAS] call KISKA_fnc_getSupportVehicleClasses;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getTimelineMap.md":"#### Description:\nThe Individual map defined for a specific timeline of the given ID. This is the hashmap available in each timeline's event's code.\n\n#### Parameters:\n0: **_timelineId** *(NUMBER)* - The id of the timeline to get or less than 0\rfor the global timeline map\n\n#### Returns:\n*(HASHMAP)* - A hashmap containing information for the timeline events\n\n#### Examples:\n```sqf\nprivate _timelineMapForIdZero = [0] call KISKA_fnc_getTimelineMap;\r\n```\n\n","KISKA Functions\\KISKA_fnc_getVariableTarget.md":"#### Description:\nGets a variable from a remote target object, id, or string (uses remoteExec targets) Takes a bit of time and therefore needs to be scheduled.\n\n#### Parameters:\n0: **_variableName** : *(STRING)* - The string name of the varaible to get\r\n\n1: **_namespace** : *(NAMESPACE, OBJECT, STRING, CONTROL, GROUP, or LOCATION)* - The namespace to get the variable from\r\n\n2: **_defaultValue** : *(ANY)* - If the variable does not exist for the target, what should be returned instead\r\n\n3: **_target** : *(NUMBER, OBJECT, or STRING)* - Where the _target is local will be where the variable is taken from \r(the machine to get the variable from)\n\n#### Returns:\n*(ANY)* - Whatever the variable is, nil otherwise\n\n#### Examples:\n```sqf\n[] spawn {\r\n// need to call for direct return\r\nprivate _serversSomeVariable = [\r\n\"someVariable\",\r\nmissionNamespace,\r\n\"\",\r\n2\r\n] call KISKA_fnc_getVariableTarget;\r\n};\r\n```\n\n","KISKA Functions\\KISKA_fnc_getVariableTarget_sendBack.md":"#### Description:\nThe send back component of KISKA_fnc_getVariableTarget that is executed on the target. Shouldn't be called on its own.\n\n#### Parameters:\n0: **_namespace** : *(NAMESPACE, OBJECT, STRING, GROUP, CONTROL, or LOCATION)* - The namespace to get the variable from\r\n\n1: **_variableName** : *(STRING)* - The string name of the varaible to get\r\n\n2: **_saveVariable** : *(STRING)* - A unique string name for the variable to be saved in on the sender's machine\r\n\n3: **_defaultValue** : *(ANY)* - If the variable does not exist for the target, what should be returned instead\r\n\n4: **_sendBackTarget** : *(ANY)* - The clientOwner id of whoever sent the request\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n_namespace,\r\n_variableName,\r\n_saveVariable,\r\n_defaultValue,\r\nclientOwner\r\n] remoteExecCall [\"KISKA_fnc_getVariableTarget_sendBack\",_target];\r\n```\n\n","KISKA Functions\\KISKA_fnc_getVectorToTarget.md":"#### Description:\nReturns vectorDir and vectorUp that should angle the object towards the target. E.g. this will point the nose of a plane towards a target if paired with setVector commands.\n\n#### Parameters:\n0: **_object** : *(OBJECT, ARRAY)* - The object to set the vectors of or its ASL position\r\n\n1: **_target** : *(OBJECT, ARRAY)* - The target to angle towards or its ASL position\n\n#### Returns:\n*(ARRAY)* - An array of arrays formatted as [directionVector,upVector]\n\n#### Examples:\n```sqf\n// angles to player\r\nmyObject setVectorDirAndUp ([myObject,player] call KISKA_fnc_getVectorToTarget);\r\n```\n\n","KISKA Functions\\KISKA_fnc_hashmap_deleteAt.md":"#### Description:\nDeletes a key/value pair if it's in a hashmap, supports objects and groups as keys. Ideally, not something that should be used if the map is not intended to also hold groups and objects as keys.\n\n#### Parameters:\n0: **_map** *(HASHMAP)* - The map to search in\r\n\n1: **_key** *(ANY)* - The key to delete\n\n#### Returns:\n*(ANY)* - The deleted value, nil if not found\n\n#### Examples:\n```sqf\nprivate _value = [myMap,_key] call KISKA_fnc_hashmap_deleteAt;\r\n```\n\n","KISKA Functions\\KISKA_fnc_hashmap_get.md":"#### Description:\nGets a value from a hashmap but also supports objects and groups as keys. Ideally, not something that should be used if the map is not intended to also hold groups and objects as keys.\n\n#### Parameters:\n0: **_map** *(HASHMAP)* - The map to get the value from\r\n\n1: **_key** *(ANY)* - The key to find in the map\r\n\n2: **_default** *(ANY)* - The value to return if the map does not contain the value\n\n#### Returns:\n*(ANY)* - The saved value, default value, or nil if not found and no default provided\n\n#### Examples:\n```sqf\nprivate _value = [\r\n    myMap,\r\n    someObject,\r\n    \"Hello World\"\r\n] call KISKA_fnc_hashmap_get;\r\n```\n\n","KISKA Functions\\KISKA_fnc_hashmap_in.md":"#### Description:\nChecks if a key exists in a hashmap, supports objects and groups as keys. Ideally, not something that should be used if the map is not intended to also hold groups and objects as keys.\n\n#### Parameters:\n0: **_map** *(HASHMAP)* - The map to search in\r\n\n1: **_key** *(ANY)* - The key to find\n\n#### Returns:\n*(BOOL)* - True if the key is found, false if not\n\n#### Examples:\n```sqf\n[myMap,_key] call KISKA_fnc_hashmap_in;\r\n```\n\n","KISKA Functions\\KISKA_fnc_hashmap_set.md":"#### Description:\nSets a key/value pair in a hashmap but also supports objects and groups as keys. Ideally, not something that should be used if the map is not intended to also hold groups and objects as keys.\n\n#### Parameters:\n0: **_map** *(HASHMAP)* - The map to insert in to\r\n\n1: **_key** *(ANY)* - The key to associate with the value\r\n\n2: **_value** *(ANY)* - The value to associate witht the key\r\n\n3: **_insertOnly** *(BOOL)* - Can set overwrite an existing key\n\n#### Returns:\n*(BOOL)* - False if key is new, true if overwriting\n\n#### Examples:\n```sqf\nprivate _inserted = [\r\n    myMap,\r\n    someObject,\r\n    \"Hello World\"\r\n] call KISKA_fnc_hashmap_set;\r\n```\n\n","KISKA Functions\\KISKA_fnc_helicopterGunner.md":"#### Description:\r\nSpawns a helicopter (or uses an existing one) to partol a given area for a period of time and engage enemy targets in a given area.\r\n\r\n#### Parameters:\r\n0: **_centerPosition** : *(ARRAY(AGL), OBJECT)* - The position around which the helicopter will patrol\r\n\r\n1: **_radius** : *(NUMBER)* - The size of the radius to patrol around\r\n\r\n2: **_aircraftType** : *(STRING or OBJECT)* - The class of the helicopter to spawn\r\nIf object, it is expected that this is a helicopter with crew\r\n\r\n3: **_timeOnStation** : *(NUMBER)* - How long will the aircraft be supporting\r\n\r\n4: **_supportSpeedLimit** : *(NUMBER)* - The max speed the aircraft can fly while in the support radius\r\n\r\n5: **_flyinHeight** : *(NUMBER)* - The altittude the aircraft flys at\r\n\r\n6: **_approachBearing** : *(NUMBER)* - The bearing from which the aircraft will approach from (if below 0, it will be random). This has no effect if an object is used for _aircraftType\r\n\r\n7: **_side** : *(SIDE)* - The side of the created helicopter\r\n\r\n8: **_postSupportCode** : *(CODE, ARRAY, or STRING)* - Code to execute after the support completes.\r\nSee KISKA_fnc_callBack. The default behaviour is for the aircraft to move 2000 meters away and for its complete crew and self to be deleted.\r\nParams:\r\n\r\n0. *(OBJECT)* - The helicopter confucting support\r\n1. *(GROUP)* - The group the pilot belongs to\r\n2. *(ARRAY)* - The full vehicle crew\r\n3. *(ARRAY)* - The position the helicopter was supporting\r\n\r\n#### Returns:\r\nARRAY - The vehicle info\r\n0: *(OBJECT)* - The vehicle created\r\n1: *(ARRAY)* - The vehicle crew\r\n2: *(GROUP)* - The group the crew is a part of\r\n\r\n#### Examples:\r\n```sqf\r\n[\r\nplayer,\r\n250,\r\n\"B_Heli_Attack_01_dynamicLoadout_F\"\r\n] call KISKA_fnc_helicopterGunner;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_heliLand.md":"#### Description:\nMakes a helicopter land at a given position.\n\n#### Parameters:\n0: **_aircraft** *(OBJECT)* - The helicopter\r\n\n1: **_landingPosition** *(ARRAY or OBJECT)* - Where to land. If object, position ATL is used.\r\n\n2: **_landMode** *(STRING)* - Options are \"LAND\", \"GET IN\", and \"GET OUT\"\r\n\n3: **_createHelipad** *(BOOL)* - If true, and invisible helipad will be created. Helipads strongly encourage where a unit will land.\r\n\n4: **_afterLandCode** *(CODE, STRING, or ARRAY)* - Code to spawn after the helicopter has landed. See KISKA_fnc_callBack\rParams:\r\r0. *(OBJECT)* - The helicopter\n\n#### Returns:\n*(BOOL)* - True if helicopter can attempt, false if problem\n\n#### Examples:\n```sqf\n[myHeli,position player] call KISKA_fnc_heliLand;\r\n```\n\n","KISKA Functions\\KISKA_fnc_heliPatrol.md":"#### Description:\nHas a helicopter patrol looking for enemy men. If \"spotted\", the helicopter will land in a safe area and drop off infantry if onboard. It will then move to engage the units if it has weapons or just stalk them if not. The infantry will continually stalk the unit until dead.\n\n#### Parameters:\n0: **_helicopter** *(OBJECT)* - The patrolling helicopter\r\n\n1: **_patrolPoints** *(ARRAY)* - An Array of patrol points (OBJECTs or positions)\r\n\n2: **_spotDistance3D** *(NUMBER)* - How far away can the helicopter spot a player\r\n\n3: **_patrolHeight** *(NUMBER)* - What's the flying height of the helicopter\r\n\n4: **_patrolSpeed** *(STRING)* - setWaypointSpeed, takes \"UNCHANGED\", \"LIMITED\", \"NORMAL\", and \"FULL\"\r\n\n5: **_randomPatrol** *(BOOL)* - Should patrol points be randomized or followed in array order\n\n#### Returns:\n*(BOOL)* - True if helicopter will patrol, false if problem encountered\n\n#### Examples:\n```sqf\n[heli,[logic1,logic2,logic3],500,200,false] call KISKA_fnc_heliPatrol;\r\n```\n\n","KISKA Functions\\KISKA_fnc_hintDiary.md":"#### Description:\nDisplays a hint to the player and (always) creates a chronological diary entry and an entry in the defined subject if desired.\n\n#### Parameters:\n0: **_hintText** *(STRING)* - The actual text shown in the hint\r\n\n1: **_subject** *(STRING)* - The subject line in the journal for the hint (OPTIONAL)\r\n\n2: **_silent** *(BOOL)* - true for silent hint\n\n#### Returns:\n*(DIARY-RECORD)* - The created diary record.\n\n#### Examples:\n```sqf\n[\"this is the message\", \"Subject\"] call KISKA_fnc_hintDiary;\r\n```\n\n","KISKA Functions\\KISKA_fnc_idCounter.md":"#### Description:\nFor a given string id, return the latest \"index\" for that id. This increments the id by one each time it is called.\n\n#### Parameters:\n0: **_id** *(string)* - The id to increment\n\n#### Returns:\n*(NUMBER)* - the latest index of the given id\n\n#### Examples:\n```sqf\nprivate _latesIndexFor_myId = [\"myId\"] call KISKA_fnc_idCounter;\r\n```\n\n","KISKA Functions\\KISKA_fnc_isAdminOrHost.md":"#### Description:\nChecks if the machine is an admin or host's.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)* - True if is, false if not\n\n#### Examples:\n```sqf\n_isAdminOrHost = call KISKA_fnc_isAdminOrHost;\r\n```\n\n","KISKA Functions\\KISKA_fnc_isGroupAlive.md":"#### Description:\nChecks if any unit in the group is alive.\n\n#### Parameters:\n0: **_group** *(GROUP or OBJECT)* - The group or a unit in that group to check the status for\n\n#### Returns:\n*(BOOL)* - True if a unit in the group is alive, false otherwise\n\n#### Examples:\n```sqf\n[group player] call KISKA_fnc_isGroupAlive;\r\n```\n\n","KISKA Functions\\KISKA_fnc_isGroupRallyAllowed.md":"#### Description:\nChecks if a group is has KISKA_canRally saved to its namespace on the server which allows its members to place down rally points.\n\n#### Parameters:\n0: **_groupToCheck** *(GROUP or OBJECT)* - The group or the unit whose group you want to check\n\n#### Returns:\n*(BOOL)* - True if allowed, false if not or error\n\n#### Examples:\n```sqf\n// checks if player's group can use the rally system (if they're the server)\r\n[player] call KISKA_fnc_isGroupRallyAllowed;\r\n```\n\n","KISKA Functions\\KISKA_fnc_isMainMenu.md":"#### Description:\nChecks if loaded mission is main menu.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)*\n\n#### Examples:\n```sqf\nisMainMenu = call KISKA_fnc_isMainMenu;\r\n```\n\n","KISKA Functions\\KISKA_fnc_isMusicPlaying.md":"#### Description:\nReturns whether or not music is currently playing\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)* - false if nothing is playing, true if something is\n\n#### Examples:\n```sqf\n_isSomethingPlaying = call KISKA_fnc_isMusicPlaying;\r\n```\n\n","KISKA Functions\\KISKA_fnc_isPatchLoaded.md":"#### Description:\nSimply checks a config name to see if it is loaded under CFGPatches\n\n#### Parameters:\n0: **_configName** *(STRING)* - The patch config name to check for\n\n#### Returns:\n*(BOOL)* - False if not, true if is loaded\n\n#### Examples:\n```sqf\n\r\n[\"OPTRE_Core\"] call KISKA_fnc_isPatchLoaded;\r\n\r\n```\n\n","KISKA Functions\\KISKA_fnc_isTimelineRunning.md":"#### Description:\nChecks if a timeline has either fully been complete (_checkForFullCompletion = true) or is simply qued for end at the start of its next event (_checkForFullCompletion = false).\n\n#### Parameters:\n0: **_timelineId** *(NUMBER)* - The id of the timeline to check\r\n\n1: **_checkForFullCompletion** *(BOOL)* - Check if the timeline's onComplete function has \rcompleted and the timeline is fully done.\n\n#### Returns:\n*(BOOL)* - The state of the timeline\n\n#### Examples:\n```sqf\nprivate _isRunning = [123,false] call KISKA_fnc_isTimelineRunning;\r\n```\n```sqf\nprivate _timelineIsNotComplete = [123,true] call KISKA_fnc_isTimelineRunning;\r\n```\n\n","KISKA Functions\\KISKA_fnc_keepInGroup.md":"#### Description:\nAttempts to keep a player in the same group and team after they respawn.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT function\r\n```\n\n","KISKA Functions\\KISKA_fnc_log.md":"#### Description:\nPrints a log with a script name to console. Whether or not something is logged depends on whether the script is set in the KISKA_logScripts array. If the script name (or \"all\") is found in the array a log is printed.\n\n#### Parameters:\n0: **_message** *(ANY)* - The message to send. If array and _joinString is true, will be used with the joinString command\n\n1: **_logWithError** *(BOOL)* - Show error message on screen (BIS_fnc_error)\n\n2: **_forceLog** *(BOOL)* - Print log regardless of KISKA_logScripts content\n\n3: **_joinString** *(BOOL)* - Should this message joined into a string if an array\n\n4: **_scriptName** *(STRING)* - The name of the script from where this message is being called\n\n#### Returns:\n*(ANY)* - The message sent\n\n#### Examples:\n```sqf\nmissionNamespace setVariable [\"KISKA_doLog\",true];\nscriptName \"My Script\";\nprivate _myvar = 1;\n[[\"Hello Number\",_myvar]] call KISKA_fnc_log;\n\n// prints [\"My Script\"] \"Hello Number 1\" to console\n```\n\n","KISKA Functions\\KISKA_fnc_lookHere.md":"#### Description:\nTakes objects and sets their direction towards the nearest object or position within a set\n\n#### Parameters:\n0: **_objectsToRotate** *(OBJECT or ARRAY)* - The objects to setDir on \r\n\n1: **_positionsToLookAt** *(OBJECT or ARRAY)* - The positions or objects to search for nearest\r\n\n2: **_setDirection** *(BOOL)* - Also set objects direction relative to the look position\n\n#### Returns:\nBOOL\n\n#### Examples:\n```sqf\n[player,[[0,0,0]]] call KISKA_fnc_lookHere;\r\n```\n\n","KISKA Functions\\KISKA_fnc_markBorder.md":"#### Description:\nPlaces a number of objects around a given radius to mark an area.\n\n#### Parameters:\n0: **_centerPos** *(POSITION_ASL or OBJECT)* - The center of the area to mark\r\n\n1: **_radius** *(NUMBER)* - The distance from the center to place markers around\r\n\n2: **_markerCount** *(NUMBER)* - The number of markers to use for the area\r\n\n3: **_verticalOffset** *(NUMBER)* - Objects will be placed at Z axis of 0, this will offset that position\r\n\n4: **_markerObjectClass** *(STRING)* - The classname of the object to place to mark the area\n\n#### Returns:\n*(ARRAY)* - An array of simple objects created to mark the area\n\n#### Examples:\n```sqf\n_markers = [\r\n    player\r\n] call KISKA_fnc_markBorder;\r\n```\n\n","KISKA Functions\\KISKA_fnc_markPositions.md":"#### Description:\nSimply creates a 3d object helper marker on provided postitions. Works in 3den also.\n\n#### Parameters:\n0: **_positions** *(ARRAY)* - An array of positions to place the markers on\n\n#### Returns:\n_entities *(ARRAY)* - all created markers\n\n#### Examples:\n```sqf\n[[0,0,0],[0,0,0]] call KISKA_fnc_markPositions;\r\n```\n\n","KISKA Functions\\KISKA_fnc_monitorFPS.md":"#### Description:\nKeeps track of the local machine's FPS for a given duration and prints data to log file.\n\n#### Parameters:\n0: **_duration** *(NUMBER)* - How long the test will run\r\n\n1: **_frequency** *(NUMBER)* - Time between checks\r\n\n2: **_print** *(BOOL)* - Shows a hint on screen\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[60] call KISKA_fnc_monitorFPS;\r\n```\n\n","KISKA Functions\\KISKA_fnc_musicEventHandlers.md":"#### Description:\nA preInit function to create the required music event handlers for KISKA music functions\n\n#### Parameters:\nNONE\n\n#### Returns:\nNONE\n\n#### Examples:\n```sqf\nPREINIT FUNCTION\r\n```\n\n","KISKA Functions\\KISKA_fnc_musicStartEvent.md":"#### Description:\nThe function that should be activated when music starts playing.\n\n#### Parameters:\n0: **_trackClassname** *(STRING)* - The classname of the track that started playing\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"trackThatStarted\"] call KISKA_fnc_musicStartEvent;\r\n```\n\n","KISKA Functions\\KISKA_fnc_musicStopEvent.md":"#### Description:\nThe function that should be activated when music stops playing. It can also be manually triggered and a param is added to stop the music audio by playing an empty track (\"\").\n\n#### Parameters:\n0: **_stopAudio** *(BOOL)* - Play and empty track (\"\") to actually stop the audio\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] call KISKA_fnc_musicStopEvent;\r\n```\n\n","KISKA Functions\\KISKA_fnc_netId.md":"#### Description:\nGets a \"netId\" for singleplayer and a netId when in multiplayer.\n\n#### Parameters:\n0: **_entity** *(OBJECT or GROUP)* - The group or object to get the id of\n\n#### Returns:\n*(STRING)* - The Id of the entity\n\n#### Examples:\n```sqf\n_id = [player] call KISKA_fnc_netId;\r\n```\n\n","KISKA Functions\\KISKA_fnc_notification.md":"#### Description:\nPrints a simple KISKA Notify notification on screen.\n\n#### Parameters:\n0: **_message** : *(STRING or ARRAY)* - If string, the message to display as title.\rIf array:\r\r0. _text : *(STRING)* - Text to display or path to .paa or .jpg\rimage (may be passed directly if only text is required)\r1. _size : *(NUMBER)* - Scale of text\r2. _color : *(ARRAY)* - RGB or RGBA color (range 0-1). (optional, default: [1, 1, 1, 1])\r\r\n\n1: **_canSkip** : *(BOOL)* - Can the notification be skipped when another is in the queue\r\n\n2: **_lifetime** : *(NUMBER)* - How long the notification will be visible (min of 2 seconds)\r\n\n3: **_headerColor** : *(ARRAY)* - An array of [R,G,B,A] color values; defaults to green\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"Hello World\"] call KISKA_fnc_notification;\r\n```\n\n","KISKA Functions\\KISKA_fnc_notify.md":"#### Description:\nDisplay a text message. Multiple incoming messages are queued. Also controls the lifetime of a notification\n\n#### Parameters:\n0: **_titleLine** : *(STRING, STRUCTURED TEXT, or ARRAY)* - If string, the message to display as title.\rIf array:\r\n    \r\n    0. _text : *(STRING)* - Text to display or path to .paa or .jpg\r\n        image (may be passed directly if only text is required)\r\n    1. _size : *(NUMBER)* - Scale of text\r\n    2. _color : *(ARRAY)* - RGB or RGBA color (range 0-1). (optional, default: [1, 1, 1, 1])\r\r\n\n1: **_subLine** : *(STRING, STRUCTURED TEXT, or ARRAY)* - Formatted the same as _titleLine\r\n\n2: **_lifetime** : *(NUMBER)* - How long the notification lasts in seconds (at least 2)\r\n\n3: **_skippable** : *(BOOL)* - If there are more notifications behind in the queue and this notification\rcomes up, it will not be shown and thrown away\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    [\"Hello\",1.1,[0.75,0,0,1]],\r\n    \"World\",\r\n    5,\r\n    false\r\n] call KISKA_fnc_notify;\r\n```\n\n","KISKA Functions\\KISKA_fnc_paratroopers.md":"#### Description:\nTakes a set of units and moves them into aircraft to be dropped over a position via parachute from a spawned vehicle\n\n#### Parameters:\n0: **_dropZone** : *(OBJECT or ARRAY)* - Target of where to drop the units\r\n\n1: **_unitsThatCanDrop** : *(ARRAY)* - An array of units that can be dropped\r\n\n2: **_dropVehicleClass** : *(STRING)* - What vehicle class will drop the units\r\n\n3: **_numToDrop** : *(NUMBER)* - The number of units out of the array to drop\r(if -1, will resize to the amount of units in _unitsToDrop)\r\n\n4: **_flyDirection** : *(NUMBER)* - The direction that the aircraft will fly towards _dropZone\r(if -1, will be random direction)\r\n\n5: **_flyInHeight** : *(NUMBER)* - The flyInHeight of the aircraft\r\n\n6: **_side** : *(SIDE)* - What side is the drop aircraft\r\n\n7: **_spawnDistance** : *(NUMBER)* - How far away should the aircraft spawn\r\n\n8: **_invincibleOnDrop** : *(BOOL)* - Should the units be invincible while parachuting down\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] spawn KISKA_fnc_paratroopers;\r\n```\n\n","KISKA Functions\\KISKA_fnc_patrolSpecific.md":"#### Description:\nCreates a cycle of waypoints for a patrol using a predetermined set of possible points\n\n#### Parameters:\n0: **_group** *(GROUP or OBJECT)* - The group or unit to give waypoints to\r\n\n1: **_postions** *(ARRAY)* - An array of possible positions to patrol between, can be either positions or objects\r\n\n2: **_numWaypoints** *(NUMBER)* - The number of waypoints, use -1 to patrol all given positions\r\r(Optional)\r\n\n3: **_random** *(BOOL)* - Should waypoints be randomized from _positions array\r\n\n4: **_behaviour** *(STRING)* - setWaypointBehaviour, takes \"UNCHANGED\", \"SAFE\", \"COMBAT\", \"AWARE\", \"CARELESS\", and \"STEALTH\"\r\n\n5: **_speed** *(STRING)* - setWaypointSpeed, takes \"UNCHANGED\", \"LIMITED\", \"NORMAL\", and \"FULL\"\r\n\n6: **_combatMode** *(STRING)* - setWaypointCombatMode, takes \"NO CHANGE\", \"BLUE\", \"GREEN\", \"WHITE\", \"YELLOW\", and \"RED\"\r\n\n7: **_formation** *(STRING)* - setWaypointFormation, takes \"NO CHANGE\", \"COLUMN\", \"STAG COLUMN\", \"WEDGE\", \"ECH LEFT\", \"ECH RIGHT\", \"VEE\", \"LINE\", \"FILE\", and \"DIAMOND\"\n\n#### Returns:\n*(BOOL)* - True if units will patrol, false if problem encountered\n\n#### Examples:\n```sqf\n[_group,_positionsArray,5] call KISKA_fnc_patrolSpecific;\r\n```\n\n","KISKA Functions\\KISKA_fnc_playDrivePath.md":"#### Description:\nRecords an array of positons and speeds for use with setDriveOnPath command.\n\n#### Parameters:\n0: **_vehicle** *(OBJECT)* - The vehicle to use setDriveOnPath command on\r\n\n1: **_pathArray** *(ARRAY)* - An array of positions in [x,y,z] format or\r[x,y,z,speed-in-meters-per-second] for the vehicle to drive on.\r(see setDriveOnPath documentation)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    _vehicle,\r\n    _pathArray\r\n] call KISKA_fnc_playDrivePath;\r\n```\n\n","KISKA Functions\\KISKA_fnc_playMusic.md":"#### Description:\nPlays music with smooth fade between tracks. Must be run in scheduled environment (spawn)\n\n#### Parameters:\n0: **_track** *(STRING)* - Music to play\r\n\n1: **_startTime** *(NUMBER OR ARRAY)* - Starting time of music. -1 for random start time.\rIf array, duration of track can also be specified (SEE EXAMPLE 2).\rTHIS INCLUDES FADE TIME\r\n\n2: **_canInterrupt** *(BOOL)* - Interrupt playing music\r\n\n3: **_volume** *(NUMBER)* - Volume to play at\r\n\n4: **_fadeTime** *(NUMBER)* - Time to fade tracks down & up\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"track\", 0, true, 1, 3] spawn KISKA_fnc_playMusic;\r\n```\n```sqf\n[\r\n\"track\",\r\n[10,60]// start ten seconds into the song, and play for 60 seconds\r\n] spawn KISKA_fnc_playMusic;\r\n```\n\n","KISKA Functions\\KISKA_fnc_playRandom3dSoundLoop.md":"#### Description:\nRandomly plays sounds (or music) in 3d space from a given list at one or multiple origins. This function will produce synchronized audio on all machines.\n\n#### Parameters:\n0: **_origin** *(OBJECT or ARRAY)* - The position (ASL), object from which the sound comes from, \ror an array of any combination of the two (effectively multiple origins)\r\n\n1: **_sounds** *(ARRAY)* - An array of sounds to play randomly with any combination of three formats:\r- *(STRING)*: A config name of a sound in either CfgSounds and/or CfgMusic. This config Must\rhave a \"duration\" number property. \r- [*(STRING)*,*(NUMBER)*] ([*(configClassName)*,*(duration)*]): a config class name that is in CfgSounds \rand/or CfgMusic and the duration the sound lasts.\r- *(CONFIG)*: a config path to a class with a \"sound[]\" array property that has it's first entry\ras a sound file path, and has a \"duration\" number property.\r\n\n2: **_timeBetweenSounds** *(NUMBER or ARRAY)* - A buffer time between each sound once one completes. \rIf array, random syntax of random [min,mid,max] is used to get buffer each time a sound completes.\r\n\n3: **_soundParams** *(ARRAY)* - An array of parameters for playSound3D:\r\r0. _distance *(NUMBER)* - Distance at which the sound can be heard\r1. _volume *(NUMBER)* - Range from 0-5\r2. _isInside *(BOOL)* - Is _origin inside\r3. _pitch *(NUMBER)* - Range from 0-5\r\r\n\n4: **_onSoundPlayed** *(ARRAY, CODE, STRING)* - A callback function that executes each time a sound is played\r(See KISKA_fnc_callback). Parameters are:\r\r0. *(NUMBER)* - An id that can be used with KISKA_fnc_stopRandom3dSoundLoop to stop sounds\r1. *(OBJECT or ARRAY)* - The position the sound is playing at\r2. *(CONFIG)* - The config of the current sound being played\n\n#### Returns:\n*(NUMBER)* - An id that can be used with KISKA_fnc_stopRandom3dSoundLoop to stop\r\nthe sound loop.\n\n#### Examples:\n```sqf\n[\r\nplayer,\r\n[],\r\n5,\r\n[],\r\n{hint str _this}\r\n] call KISKA_fnc_playRandom3dSoundLoop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_playSound2D.md":"#### Description:\nPlays a 2D sound if a player is within a given area. Used due to say2D's broken \"maxTitlesDistance\".\n\n#### Parameters:\n0: **_sound** *(STRING)* - The sound name to play\r\n\n1: **_center** *(OBJECT or ARRAY)* - The center position of the radius to search around\r\n\n2: **_radius** *(NUMBER)* - How far can the player be from the _center and still \"hear\" the sound\r\n\n3: **_threeDimensional** *(BOOL)* - Whether to measure the distance to the player in 2d or 3d space\n\n#### Returns:\n*(BOOL)* - True if played, false if did not\n\n#### Examples:\n```sqf\n[\"alarm\",player,20] call KISKA_fnc_playSound2D;\r\n```\n\n","KISKA Functions\\KISKA_fnc_playSound3D.md":"#### Description:\nPlays a sound 3D but the function accepts the CFGSounds name rather then the file path.\n\n#### Parameters:\n0: **_sound** *(STRING or CONFIG)* - The sound to play. The classname of a CfgSounds entry (if string)\ror any config class that has a \"sound[]\" array and \"duration\" number property (such as CfgMusic classes)\r\n\n1: **_origin** *(OBJECT or ARRAY)* - The position (ASL), object from which the sound comes from, \ror an array of any combination of the two (effectively multiple origins)\r\n\n2: **_distance** *(NUMBER)* - Distance at which the sound can be heard\r\n\n3: **_volume** *(NUMBER)* - Range from 0-5\r\n\n4: **_isInside** *(BOOL)* - Is _origin inside\r\n\n5: **_pitch** *(NUMBER)* - Range from 0-5\n\n#### Returns:\n*(BOOL)* - True if sound found and played, false if error\n\n#### Examples:\n```sqf\n[\r\n\"BattlefieldJet1_3D\",\r\n(getPosASL player) vectorAdd [50,50,100],\r\n2000\r\n] call KISKA_fnc_playSound3D;\r\n```\n\n","KISKA Functions\\KISKA_fnc_pushBackToArray.md":"#### Description:\nPushes back a value to a global array. This was used in lieu of creating a public variable to sync the array. In order to keep network traffic lower if the array becomes large.\n\n#### Parameters:\n0: **_arrayVariableName** : *(STRING)* - The array in string format\r\n\n1: **_entryToAdd** : *(ANY)* - The value to pushBack\r\n\n2: **_namespace** : *(NAMESPACE,OBJECT,GROUP,LOCATION,CONTROL, or DISPLAY)* - What namespace the array is in\n\n#### Returns:\n*(BOOL)* - true if added, false if not\n\n#### Examples:\n```sqf\n[\"myGlobalArrayVar\",someInfoHere,missionNamespace] call KISKA_fnc_pushBackToArray;\r\n```\n\n","KISKA Functions\\KISKA_fnc_pushBackToArray_interface.md":"#### Description:\nPushes back a value to a global array. Checks if machine hasInterface before pushing. This was used in lieu of creating a public variable to sync the array. In order to keep network traffic lower if the array becomes large.\n\n#### Parameters:\n0: **_arrayVariableName** : *(STRING)* - The array in string format\r\n\n1: **_entryToAdd** : *(ANY)* - The value to pushBack\r\n\n2: **_namespace** : *(NAMESPACE,OBJECT,GROUP,LOCATION,CONTROL, or DISPLAY)* - What namespace the array is in\n\n#### Returns:\n*(BOOL)* - true if added, false if not\n\n#### Examples:\n```sqf\n[\r\n\"myGlobalArrayVar\",\r\nsomeInfoHere,\r\nmissionNamespace\r\n] call KISKA_fnc_pushBackToArray_interface;\r\n```\n\n","KISKA Functions\\KISKA_fnc_radioChatter.md":"#### Description:\nPlays a random radio ambient at the specified position. This has a global effect now and should be executed on one machine.\n\n#### Parameters:\n0: **_followSource** *(BOOL)* - Should the radio audio be attached to the _source object?\rThis will use say3D instead of playSound3d.\r\n\n1: **_soundParams** *(ARRAY)* - An array of parameters that are slightly different depending on the _followSource value\rIf _followSource is true:\r0: **_source** *(OBJECT)* - Where the sound is coming from\r1: **_distance** *(NUMBER)* - Max distance at which the sound can be heard\r2: **_offset** *(ARRAY)* - AttachTo coordinates that can be used to offset the sound\rIf _followSource is false:\r0: **_source** *(OBJECT or ARRAY)* - Where the sound is coming from.\rIf array format positionASL.\r1: **_distance** *(NUMBER)* - Max distance at which the sound can be heard\r2: **_volume** *(NUMBER)* - How loud the sound plays\n\n#### Returns:\n*(NUMBER)* - the \"chatter ID\" that can be used with KISKA_fnc_stopRadioChatter. -1 if error\n\n#### Examples:\n```sqf\n// radio sound follows player\r\n[\r\ntrue,\r\n[player]\r\n] call KISKA_fnc_radioChatter;\r\n```\n```sqf\n// radio sound follows front of player\r\n[\r\ntrue,\r\n[player,5,[0,1,0]]\r\n] call KISKA_fnc_radioChatter;\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomGear.md":"#### Description:\nRandomizes gear based upon input arrays for each slot. Designed with civillians in mind.\n\n#### Parameters:\n0: **_unit** : *(OBJECT)* - The unit to randomize gear\r\n\n1: **_uniforms** : *(ARRAY)* - Potential uniforms to wear, array can be formated as random or weighted random\r\n\n2: **_headgear** : *(ARRAY)* - Potential headgear to wear, array can be formated as random or weighted random\r\n\n3: **_facewear** : *(ARRAY)* - Potential facewear to wear, array can be formated as random or weighted random\r\n\n4: **_vests** : *(ARRAY)* - Potential vests to wear, array can be formated as random or weighted random\n\n#### Returns:\n*(BOOL)* - true if unit was given random clothes, false if error\n\n#### Examples:\n```sqf\n[_unit] call KISKA_fnc_randomGear;\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomIndex.md":"#### Description:\nReturns a random index of an array ~2x faster than BIS_fnc_randomIndex;\n\n#### Parameters:\n0: **_array** *(ARRAY)* - The array to find a random index of.\n\n#### Returns:\n*(NUMBER)* - The random index\n\n#### Examples:\n```sqf\nprivate _randomIndex = [[1,2,3]] call KISKA_fnc_randomIndex;\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomLoadout.md":"#### Description:\nRandomly assigns a loadout from the inputed array to the unit(s) provided.\n\n#### Parameters:\n0: **_units** *(OBJECT, GROUP, or ARRAY)* - The unit or units you want to select the\rrandom loadout for. If array, accepts and array of objects.\r\n\n1: **_loadoutArray** *(ARRAY)* - An array containing each loadout array.\rSame syntax as getUnitLoadout return.\n\n#### Returns:\n_unitsChanged *(ARRAY)* - All the units changed\n\n#### Examples:\n```sqf\n[guy,[globalLoadout1,globalLoadout2]] call KISKA_fnc_randomLoadout;\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomMusic.md":"#### Description:\nStarts playing a random assortment of curated music tracks to all players on a server. This is essentially a multiplayer jukebox. Should only be executed on the server. All songs will be played in a random order and then loop back to play in another random order infinitely. It will not interrupt music commanded to play by other means. You can define quiet time space between tracks.\n\n#### Parameters:\n0: **_tickId** *(NUMBER)* - Used to superceed another random music loop, passs -1 to start a new one\r\n\n1: **_musicTracks** *(ARRAY)* - An array of strings (music tracks) to use\r\n\n2: **_interval** *(ARRAY or NUMBER)* - A random or set time between tracks.\rFormats are [min,mid,max] & [max] for random numbers and\rjust a single number for a set time between (see example)\r\n\n3: **_usedMusicTracks** *(ARRAY)* - An array of already used music tracks, don't bother manually entering anyhting, this is for looping purposes\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// space tracks by 20 seconds exactly each\r\n[-1,arrayOfTracks,20] call KISKA_fnc_randomMusic;\r\n   ```\n```sqf\n// space tracks by UP TO 20 seconds each\r\n[-1,arrayOfTracks,[20]] call KISKA_fnc_randomMusic;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_getCurrentTrack.md":"#### Description:\nReturns the most recent track selected by the random music system. Will be an empty string \"\" if none is defined. This is regardless of whether the song is actually playing.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(STRING)* - The current randomly selected track\n\n#### Examples:\n```sqf\n_mostRecentRandomTrack = call KISKA_fnc_randomMusic_getCurrentTrack;\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_getTrackInterval.md":"#### Description:\nRetrieves the current tracks in the random music system that could play. Possible Values: [NUMBER,NUMBER,NUMBER] - used with the \"random\" command's [min,mid,max] to get a uniform random space between tracks. [NNUMBER] - used with denotes that the space between tracks can be UP TO this number. NUMBER - the exact time between tracks that will be the same every time.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(ARRAY or NUMBER)* - see Description for details\n\n#### Examples:\n```sqf\nprivate _interval = call KISKA_fnc_randomMusic_getTrackInterval;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_getUnusedTracks.md":"#### Description:\nRetrieves the current tracks in the random music system that could play.\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(ARRAY)* - An array of strings of the unused classnames of tracks\n\n#### Examples:\n```sqf\nprivate _arrayOfTracks = call KISKA_fnc_randomMusic_getUnusedTracks;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_getUsedTracks.md":"#### Description:\nRetrieves the tracks in the random music system that have already been played\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(ARRAY)* - An array of strings of the used classnames of tracks\n\n#### Examples:\n```sqf\nprivate _arrayOfTracks = call KISKA_fnc_randomMusic_getUsedTracks;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_getVolume.md":"#### Description:\nRetrieves the current volume that random music system plays tracks at\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(NUMBER)* - the volume\n\n#### Examples:\n```sqf\nprivate _volume = call KISKA_fnc_randomMusic_getVolume;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_isSystemRunning.md":"#### Description:\nRetrieves whether or not the random music system is currently running\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)* - True for running, false for not\n\n#### Examples:\n```sqf\nprivate _isRunning = call KISKA_fnc_randomMusic_isSystemRunning;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_setCurrentTrack.md":"#### Description:\nSets the current random track from the random music system.\n\n#### Parameters:\n0: **_trackClass** *(STRING)* - a classname to check the duration of or its config path\n\n#### Returns:\n*(BOOL)* - True when set\n\n#### Examples:\n```sqf\n[\"Some_Music_Track\"] call KISKA_fnc_randomMusic_setCurrentTrack;\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_setSystemRunning.md":"#### Description:\nSets the boolean for determining if the random music system is running.\n\n#### Parameters:\n0: **_setting** *(BOOL)* - True for running, false for not\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// set to running\r\n[true] call KISKA_fnc_randomMusic_setSystemRunning;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_setTrackInterval.md":"#### Description:\nSets the dwell time variable that handles the time between random music tracks being played.\n\n#### Parameters:\n0: **_interval** *(ARRAY or NUMBER)* - A random or set time between tracks.\rFormats are [min,mid,max] & [max] for random numbers and just a single\r number for a set time between.\n\n#### Returns:\n*(BOOL)* - true if updated, false if not\n\n#### Examples:\n```sqf\n[20] remoteExecCall [\"KISKA_fnc_randomMusic_setTrackInterval\",2];\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_setUnusedTracks.md":"#### Description:\nSets the current tracks in the random music system that could play.\n\n#### Parameters:\n0: **_musicTracks** *(ARRAY)* - An array of strings (music tracks) to use\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[[\"someTrack\",\"anotherTrack\"]] call KISKA_fnc_randomMusic_setUnusedTracks;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_setUsedTracks.md":"#### Description:\nSets the tracks in the random music system that have already been played\n\n#### Parameters:\n0: **_usedMusicTracks** *(ARRAY)* - An array of already used music tracks\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[[\"SomeTrack\",\"AnotherTrack\"]] call KISKA_fnc_randomMusic_setUsedTracks;\r\n   ```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_setVolume.md":"#### Description:\nChanges the volume at which random music specifically will play at (on all clients). Only executes on server.\n\n#### Parameters:\n0: **_volume** *(NUMBER)* - volume to set\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[1] remoteExecCall [\"KISKA_fnc_randomMusic_setVolume\",2];\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_stopClient.md":"#### Description:\nThe clientside part of stopping random music system. Ideally, should not be called on its own but used from KISKA_fnc_randomMusic_stopServer\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)* - True if done, false if nothing done\n\n#### Examples:\n```sqf\ncall KISKA_fnc_randomMusic_stopClient;\r\n```\n\n","KISKA Functions\\KISKA_fnc_randomMusic_stopServer.md":"#### Description:\nStops the random music system either abrubtly or allows the last song to play.\n\n#### Parameters:\n0: **_playLastSong** *(BOOL)* - Should the last song play or not\n\n#### Returns:\n*(BOOL)* - True if done, false if nothing done\n\n#### Examples:\n```sqf\ncall KISKA_fnc_randomMusic_stopServer;\r\n```\n\n","KISKA Functions\\KISKA_fnc_reassignCurator.md":"#### Description:\nReassigns a curator object to the local player.\n\n#### Parameters:\n0: **_curatorObject** : *(OBJECT or STRING)* - The curator object to reassign\r\n\n1: **_isManual** : *(BOOL)* - Was this called from the diary entry (keeps hints from showing otherwise)\n\n#### Returns:\n*(BOOL)* - true if added to player, false otherwise\n\n#### Examples:\n```sqf\n// show hint messages\r\n[myCuratorObject,true] call KISKA_fnc_reassignCurator;\r\n```\n\n","KISKA Functions\\KISKA_fnc_recordDrivePath.md":"#### Description:\nRecords an array of positons and speeds for use with setDriveOnPath command.\n\n#### Parameters:\n0: **_unit** *(OBJECT)* - The unit to record\r\n\n1: **_frequency** *(NUMBER)* - How often to record, 0 for every frame\r\n\n2: **_recordSpeed** *(BOOL)* - Should the speed of the _unit be recorded to\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    objectParent player,\r\n    0.25\r\n] call KISKA_fnc_recordDrivePath\r\n```\n\n","KISKA Functions\\KISKA_fnc_remoteReturn_receive.md":"#### Description:\nThe send back component of KISKAs remote returns. This catches what was sent in KISKA_fnc_remoteReturn_send and will send the variable back to the remoteExecutedOwner.\n\n#### Parameters:\n0: **_code** *(STRING)* - The code to execute to get a return\r\n\n1: **_args** : *(ARRAY)* - An array of arguements for the _code\r\n\n2: **_scheduled** : *(BOOL)* - Should _code be run in a scheduled environment\r\n\n3: **_uniqueId** *(STRING)* - The unique variable id used to send the return back to the requester\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n_code,\r\n_args,\r\n_scheduled,\r\n_uniqueId,\r\nclientOwner\r\n] remoteExecCall [\"KISKA_fnc_remoteReturn_receive\",_target];\r\n```\n\n","KISKA Functions\\KISKA_fnc_remoteReturn_send.md":"#### Description:\nGets a remote return from a scripting command on a target machine. Basically remoteExec but with a return. Needs to be run in a scheduled environment as it takes time to receive the return. This should not be abused to obtain large returns over the network. Be smart and use for simple types (not massive arrays).\n\n#### Parameters:\n0: **_code** *(STRING)* - The command to execute on the target machine\r\n\n1: **_defaultValue** : *(ANY)* - If the variable does not exist for the target, what should be returned instead\r\n\n2: **_target** : *(NUMBER, OBJECT, or STRING)* - The target to execute the _code on\r\n\n3: **_scheduled** : *(BOOL)* - Should _code be run in a scheduled environment (on target machine)\n\n#### Returns:\n*(ANY)* - Whatever the code returns\n\n#### Examples:\n```sqf\n[] spawn {\r\n// need to call for direct return but in scheduled environment\r\n_clientIdFromServer = [\"owner (_this select 0)\",[player],2] call KISKA_fnc_remoteReturn_send;\r\n};\r\n```\n\n","KISKA Functions\\KISKA_fnc_removeArsenal.md":"#### Description:\nRemoves both BIS and ACE arsenals from several or a single object. This has a global effect.\n\n#### Parameters:\n0: **_arsenals** *(ARRAY or OBJECT)* - An array of objects to add arsenals to\n\n#### Returns:\n*(BOOL)* - true if done, false if not\n\n#### Examples:\n```sqf\n[[arsenal1, arsenal2]] call KISKA_fnc_removeArsenal;\r\n```\n\n","KISKA Functions\\KISKA_fnc_removeBISArsenalAction.md":"#### Description:\nRemoves the BIS arsenal action from the given object.\n\n#### Parameters:\n0: **_arsenal** *(OBJECT)* - The arsenal to remove from\n\n#### Returns:\n*(BOOL)* - true if arsenal was removed, false if action does not currently exist\n\n#### Examples:\n```sqf\n_done = [arsenal] call KISKA_fnc_removeBISArsenalAction;\r\n```\n\n","KISKA Functions\\KISKA_fnc_removeMagRepack.md":"#### Description:\nAdds a mag repack to the player via Ctrl+R. To remove see KISKA_fnc_removeMagRepack.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_addMagRepack;\r\n```\n\n","KISKA Functions\\KISKA_fnc_removeProximityPlayerAction.md":"#### Description:\nStages an action added with KISKA_fnc_addProximityPlayerAction for removal. This happens within the loop logic of KISKA_fnc_addProximityPlayerAction so it is NOT instant.\n\n#### Parameters:\n0: **_id** : *(NUMBER)* - The proximity action id returned from KISKA_fnc_addProximityPlayerAction\n\n#### Returns:\n*(BOOL)* - False if not removed, true if removed\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_removeProximityPlayerAction;\r\n```\n\n","KISKA Functions\\KISKA_fnc_savePlayerLoadout.md":"#### Description:\nAdds a kill and respawn eventhandler to the player object that restores saves and restores the player loadout (if set in CBA menu settings).\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT function\r\n```\n\n","KISKA Functions\\KISKA_fnc_selectRandom.md":"#### Description:\nSelects randomly an entry from an array be it weighted or unweighted.\n\n#### Parameters:\n0: **_array** *(ARRAY)* - An array either formatted as [value, weight (number)], or\rjust values ([value1,value2])\r\n\n1: **_valueType** *(ANY)* - A variable that should have the same type as the value\rentries in the array e.g. \"\" for string, [] for array\r(only needed for possibly weighted arrays)\n\n#### Returns:\n*(ANY)* - Random entry from the array\n\n#### Examples:\n```sqf\nprivate _randomValue = [[\r\n    \"thing1\",\r\n    \"thing2\"\r\n]] call KISKA_fnc_selectRandom;\r\n```\n```sqf\nprivate _weight1 = 0.5;\r\nprivate _weight2 = 0.5;\r\n\r\nprivate _randomWeightedValue = [\r\n    [\"thing1\", _weight1,\r\n    \"thing2\", _weight2],\r\n    \"\"\r\n] call KISKA_fnc_selectRandom;\r\n```\n\n","KISKA Functions\\KISKA_fnc_setContainerCargo.md":"#### Description:\nTakes a cargo array formatted from KISKA_fnc_getContainerCargo and adds it to another container. Exact ammo counts will be preserved even inside of an item, such as magazines inside of a vest or backpack.\n\n#### Parameters:\n0: **_containerToLoad** *(OBJECT)* - The container to add the cargo to.\r\n\n1: **_cargo** *(ARRAY or OBJECT)* - An array of various items, magazines, and weapons formatted from \rKISKA_fnc_getContainerCargo or the object to copy from\n\n#### Returns:\n*(BOOL)* - True if cargo was set\n\n#### Examples:\n```sqf\n[container,otherContainer] call KISKA_fnc_setContainerCargo;\r\n```\n```sqf\nprivate _cargoToCopy = [otherContainer] call KISKA_fnc_getContainerCargo;\r\n[container,_cargoToCopy] call KISKA_fnc_setContainerCargo;\r\n```\n\n","KISKA Functions\\KISKA_fnc_setCrew.md":"#### Description:\nMoves units into a vehicle as crew and then as passengers.\n\n#### Parameters:\n0: **_crew** : *(GROUP, ARRAY, or OBJECT)* - The units to move into the vehicle\r\n\n1: **_vehicle** : *(OBJECT)* - The vehicle to put units into\r\n\n2: **_deleteCrewIfNull** : *(BOOL)* - If the vehicle turns out to be null, the provided crew will be deleted\n\n#### Returns:\n*(BOOL)* - True if crew was set, false if problem encountered\n\n#### Examples:\n```sqf\n[_group1,_vehicle] call KISKA_fnc_setCrew;\r\n```\n\n","KISKA Functions\\KISKA_fnc_setRelativeVectorAndPos.md":"#### Description:\nSets the position and vector dir and up of one object to another based on relative coordinates to the parent object.\n\n#### Parameters:\n0: **_parent** *(OBJECT)* - The object to make the coordinates relative to.\r\n\n1: **_child** *(OBJECT)* - The object to find coordinates for.\r\n\n2: **_relativeInfo** *(ARRAY)* - An array containing the relative coordinates to\rchange to worldspace:\r\r\n    0. *(ARRAY)* - Relative world pos\r\n    1. *(ARRAY)* - Relative vector dir\r\n    2. *(ARRAY)* - Relative vector up\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    parentObject,\r\n    childObject,\r\n    [[0,0,0],[0,1,0],[0,0,1]]\r\n] call KISKA_fnc_setRelativeVectorAndPos;\r\n```\n\n","KISKA Functions\\KISKA_fnc_setupMultiKillEvent.md":"#### Description:\nSets up an event that will fire when a percentage of objects are killed. Uses KILLED or MPKILLED eventhandlers. This should be called where the arguements are local if _useMPKilled is false or on the server if _useMPKilled is true;\n\n#### Parameters:\n0: **_objects** *(ARRAY)* - An array of objects to add some form of killed event handlers to\r\n\n1: **_onThresholdMet** *(CODE, ARRAY, or STRING)* - Code that executes once it has been determined\rthat the threshold has been met or exceeded. (See KISKA_fnc_callBack). If attempting\rto add more units to an existing event, use the event id here (see returned hashmap below for id)\rand preceed the event id with a \"#\" (see examples)\r\n    Params:\r\n        \r\n        0. *(ARRAY)* - the killed evenhandler params\r\n        1. *(HASHMAP)* - the hashmap described below in \"Returns\"\r\r// NOT USED if adding to existing event\r\n\n2: **_threshold** *(NUMBER)* - A number between 0 and 1 that denotes the percentage of objects that\rmust've been killed to trigger the _onThresholdMet.\r(e.g. 1 means 100% of them need to be killed, 0.5 means 50%, etc.)\r\n\n3: **_onKilled** *(CODE, ARRAY, or STRING)* - Code that executes each time a unit has been\r\n    killed (after the _onThresholdMet if threshold has been met). (See KISKA_fnc_callBack)\r\n        Params:\r\n            \r\n            0. *(ARRAY)* - the killed evenhandler params\r\n            1. *(HASHMAP)* - the hashmap described below in \"Returns\"\r\r\n\n4: **_useMPKilled** *(BOOL)* - Whether or not to use \"MPKILLED\" events instead of \"KILLED\".\rIF TRUE, MUST BE RUN ON THE SERVER\n\n#### Returns:\n*(HASHMAP)* - A hashmap containing info about the event\r\n    \"id\": *(STRING)* - A localNamespace variable name to access this hashmap\r\n    \"total\": *(NUMBER)* - The total number of objects that have this killed event\r\n    \"killed\": *(NUMBER)* - The total number of objects that have been killed with this event\r\n    \"threshold\": *(NUMBER)* - A number that indicates the percentage of objects that\r\n        must be killed (relative to the total) for this event to fire\r\n        (e.g. 1 means 100% of them need to be killed, 0.5 means 50%, etc.)\r\n    \"thresholdMet\": *(BOOL)* - Whether or not the threshold has been met and therefore\r\n        onThresholdMet has fired\r\n    \"onKilled\": *(CODE, ARRAY, or STRING)* - Code that executes each time a unit has been\r\n        killed (after the _onThresholdMet if threshold has been met). (See KISKA_fnc_callBack)\r\n            Params:\r\n                \r\n                0. *(ARRAY)* - the killed evenhandler params\r\n                1. *(HASHMAP)* - the hashmap described\r\n\r\n    \"onThresholdMet\": *(CODE, ARRAY, or STRING)* - Code that executes once it has been determined\r\n        that the threshold has been met or exceeded. (See KISKA_fnc_callBack)\r\n            Params:\r\n                \r\n                0. *(ARRAY)* - the killed evenhandler params\r\n                1. *(HASHMAP)* - the hashmap described\r\n\r\n    \"eventCode\": *(CODE)* - The code that is attached to the killed eventhandler\r\n    \"type\": *(STRING)* - Type of event, (\"KILLED\" or \"MPKILLED\")\r\n    \"objectToEventIdMap\": *(HASHMAP)* -  A hashmap that uses objects as keys (should use KISKA_fnc_hashmap_get)\r\n        to get the killed eventhandler id attached to an object.\n\n#### Examples:\n```sqf\nprivate _eventMap = [\r\n    [someObject, anotherObject],\r\n    {\r\n        params [\"_killedEventParams\",\"_eventMap\"];\r\n        _killedEventParams params [\"_killedObject\"];\r\n        hint str [_killedEventParams, _eventMap];\r\n    }\r\n] call KISKA_fnc_setupMultiKillEvent;\r\n```\n```sqf\nprivate _eventMap = [\r\n    [andAdditionalObject],\r\n    (\"#\" + (_eventMap get \"id\"))\r\n] call KISKA_fnc_setupMultiKillEvent;\r\n```\n\n","KISKA Functions\\KISKA_fnc_showHide.md":"#### Description:\nOn selected objects, will disable simulation and hide the object or the reverse.\n\n#### Parameters:\n0: **_objects** *(ARRAY, GROUP, or OBJECT)* - Units to show or hide\r\n\n1: **_show** *(BOOL)* - True to show and simulate, false to hide and disable simulation\r\n\n2: **_enableDynamicSim** *(BOOL)* - Should the object be dynamically simulated after shown\n\n#### Returns:\n*(BOOL)* - True if action performed, false otherwise\n\n#### Examples:\n```sqf\n[group1, true, true] call KISKA_fnc_showHide;\r\n```\n\n","KISKA Functions\\KISKA_fnc_slingLoad.md":"#### Description:\nTells AI helicopter to pick up a given object and drop it off at a given location.\n\n#### Parameters:\n0: **_heli** : *(OBJECT)* - Helicopter with pilot to perform slingload\r\n\n1: **_liftObject** : *(OBJECT)* - The object to sling load\r\n\n2: **_dropOffPoint** : *(ARRAY, OBJECT, LOCATION, or GROUP)* - Where to drop the _liftObject off at\r\n\n3: **_afterDropCode** : *(ARRAY, CODE, or STRING)* - Code to execute after the drop off waypoint is complete.\rThis is saved to the pilot's namespace in \"KISKA_postSlingLoadCode\" which is deleted after\rit is called. (See KISKA_fnc_callBack)\r\n    Parmeters:\r\r\n        0. *(OBJECT)* - The pilot of the helicopter\r\n        \r\n\n4: **_flightPath** : *(ARRAY)* - An array of sequential positions (*(ARRAY, OBJECT, LOCATION, or GROUP)*)\rthe aircraft must travel prior to droping off the _liftObject\n\n#### Returns:\n*(ARRAY)* -\r\n    0: *(OBJECT)* - The pilot\r\n    1: *(GROUP)* - Pilot's group\r\n    2: *(ARRAY)* - Generated waypoints\n\n#### Examples:\n```sqf\n[\r\n    heli,\r\n    someObject,\r\n    dropOff,\r\n    [\r\n        [heli],\r\n        {\r\n            hint str [_this,_thisArgs]\r\n        }\r\n    ]\r\n] call KISKA_fnc_slingLoad;\r\n```\n\n","KISKA Functions\\KISKA_fnc_spawn.md":"#### Description:\nRandomly spawns units on an array of positions. PositionATL is expected and arrays can have 4 indexes with a direction for the unit to face being the 4th. If no direction is specified, a random one is chosen. Using an object instead of a position will result in the unit facing the same way that the object is. This is destructive on the _spawnPositions array so be sure to copy (+_spawnPositions) if you need to reuse the array.\n\n#### Parameters:\n0: **_numberOfUnits** *(NUMBER)* - Number of units to spawn, if -1, all provided positions\rwill be filled\r\n\n1: **_numberOfUnitsPerGroup** *(NUMBER)* - Number of units per group\r\n\n2: **_unitTypes** *(ARRAY)* - Unit types to select randomly from (can be weighted or unweighted array)\r\n\n3: **_spawnPositions** *(ARRAY)* - List of positions at which units will randomly spawn, the array can be positions and/or objects.\rIf given an empty array, all units will spawn at [0,0,0]\r\r\n\n4: **_canUnitsMove** *(BOOL)* - Can units walk (optional)\r\n\n5: **_enableDynamic** *(BOOL)* - Should the units be dynamically simmed (Optional)\r\n\n6: **_side** *(SIDE)* - Side of units (optional)\n\n#### Returns:\n*(ARRAY)* - All units spawned by the function\n\n#### Examples:\n```sqf\n_spawnedUnits = [2, 2, _arrayOfTypes, [[0,0,0],spawnObject]] call KISKA_fnc_spawn;\r\n```\n\n","KISKA Functions\\KISKA_fnc_spawnGroup.md":"#### Description:\nSpawns a group, adds to curator, and sets to aware. Based on selected unit types\n\n#### Parameters:\n0: **_numberOfUnits** *(NUMBER)* - Number of units to spawn\r\n\n1: **_unitTypes** *(ARRAY)* - Unit types to select randomly from (can be weighted array)\r\n\n2: **_side** *(SIDE)* - ...\r\n\n3: **_position** *(ARRAY, OBJECT, GROUP)* - Position to spawn on\r\n\n4: **_enableDynamicSimulation** *(BOOL)* - ... (optional)\n\n#### Returns:\n*(GROUP)* - The group created by the function\n\n#### Examples:\n```sqf\n_spawnedGroup = [4, _listOfUnitTypes, OPFOR, [0,0,0], true] call KISKA_fnc_spawnGroup;\r\n```\n\n","KISKA Functions\\KISKA_fnc_spawnVehicle.md":"#### Description:\nA slightly altered/optimized version of BIS_fnc_spawnVehicle. Has support for CUP aircraft to spawn at velocity.\n\n#### Parameters:\n0: **_spawnPosition** *(ARRAY or OBJECT)* - 3D array in the format of PositionATL\r(PositionAGL if boat or amphibious). Objects can be used, however, this\r\n\n1: **_spawnDirection** *(NUMBER)* - The direction the vehicle is facing when created (relative to north)\rif _spawnPosition is an object and _spawnDirection == -1, _spawnDirection will be set to the\rdirection of the _spawnPosition object\r\n\n2: **_vehicleClass** *(STRING)* - The typeOf vehicle to spawn\r\n\n3: **_group** *(SIDE or GROUP)* - Either the side to create a group on or an\ralready existing group to add the units to\r\n\n4: **_forcePosition** *(BOOL)* - Force vehicle to spawn at exact coordinates\rDoes nothing when _spawnPosition is an object\r\n\n5: **_crewInstructions** *(ARRAY)* - An array of classnames of unit types and/or man objects\rfor the crew. Units are moved into the vehicle using moveInAny in the order provided\r\n\n6: **_deleteOverflow** *(BOOL)* - Delete any units from _crewInstructions that prexisted if they don't fit in the vehicle\n\n#### Returns:\n*(ARRAY)* -\r\n0: *(OBJECT)* - The created vehicle\r\n1: *(ARRAY)* - The vehicle crew (if soldier type, it will be the same as created vehicle)\r\n2: *(GROUP)* -  The group the crew is a part of\n\n#### Examples:\n```sqf\n[player,0,\"someclass\"] call KISKA_fnc_spawnVehicle;\r\n```\n\n","KISKA Functions\\KISKA_fnc_SR_addGrammarXml.md":"#### Description:\nAdds an xml grammar file to the speech recognizer.\n\n#### Parameters:\n0: **_name** *(STRING)* - The name of the grammar to add\r\n\n1: **_xml** *(STRING)* - The xml in string format\n\n#### Returns:\n*(BOOL)* - true if will be added, false if cannot be added\n\n#### Examples:\n```sqf\n[\"name\",loadFile \"myXmlFile.xml\"] call KISKA_fnc_SR_addGrammarXml;\r\n```\n\n","KISKA Functions\\KISKA_fnc_SR_callExtension.md":"#### Description:\nCalls to KISKA_speechRecognition(_x64).dll extension to run a function within it.\n\n#### Parameters:\n0: **_functionToRun** *(STRING)* - The name of the function to run\r\n\n1: **_args** *(ARRAY)* - Any arguments to pass to the extension\n\n#### Returns:\n*(STRING)* - Whatever the extension returns\n\n#### Examples:\n```sqf\nprivate _return = [\"kiska_ext_sr_startrecording\"] call KISKA_fnc_SR_callExtension;\r\n```\n```sqf\nprivate _return = [\r\n\"kiska_ext_sr_addgrammarxml\",\r\n[\"my grammar\",\"...gramarxml\"]\r\n] call KISKA_fnc_SR_callExtension;\r\n```\n\n","KISKA Functions\\KISKA_fnc_SR_startRecording.md":"#### Description:\nStarts KISKA Speech recognition's extension's listening to the the user's microphone to complete a speech recognition event.\n\n#### Parameters:\n0: **_timelineId** *(NUMBER)* - The id of the timeline to stop\n\n#### Returns:\n*(BOOL)* - true if recording started, false if recording is currently happening\n\n#### Examples:\n```sqf\nprivate _started = call KISKA_fnc_SR_startRecording;\r\n```\n\n","KISKA Functions\\KISKA_fnc_SR_stopRecording.md":"#### Description:\nManually stops KISKA's Speech Recognition extension from listening to the user's microphone. NOTE: Every complete recognition of a phrase after beginning a recording will automatically stop the extension from listening. The purpose of this function is to manually tell the extension you want to stop recording during the act of saying a phrase\n\n#### Parameters:\nNONE\n\n#### Returns:\n*(BOOL)* - true if a recording was stopped, false if recording was not happening \r\n when called\n\n#### Examples:\n```sqf\nprivate _stopped = call KISKA_fnc_SR_stopRecording;\r\n```\n\n","KISKA Functions\\KISKA_fnc_stalk.md":"#### Description:\nRewrite of BIS_fnc_stalk for optimizations and features. One provided group will continually be provided waypoints to another group's positions providing a \"stalking\" affect.\n\n#### Parameters:\n0: **_stalkerGroup** *(GROUP or OBJECT)* - The group to do the stalking\r\n\n1: **_stalkedGroup** *(GROUP or OBJECT)* - The group to be stalked\r\n\n2: **_refreshInterval** *(NUMBER)* - How often the _stalkerGroup will have their waypoint\rupdated with the position of the _stalkedGroup, and how often to check the _conditionToEndStalking\r\n\n3: **_postStalking** *(STRING, ARRAY, or CODE)* - Code that after stalking is complete\rwill be executed. (See KISKA_fnc_callBack _callBackFunction parameter)\r\n\n4: **_conditionToEndStalking** *(STRING, ARRAY, or CODE)* - Code that (if returns true)\rcan end the stalking. (See KISKA_fnc_callBack _callBackFunction parameter).\rThe stalking will automatically end if all units in one or both groups end\rup dead.\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n    someGroup,\r\n    group player,\r\n    15,\r\n    {hint str _this},\r\n    {false}\r\n] spawn KISKA_fnc_stalk\r\n```\n\n","KISKA Functions\\KISKA_fnc_startTimeline.md":"#### Description:\nCreates a timeline of events that can happen. Waits/executes in an unscheduled environment. There is a non-trivial amount of overhead to this, however, so do not use with the intention of needing precise events to happen but rather to not clog the scheduler or use a decent interface with smaller units of code. A timeline is made up of events: [ [], // event 1 [] // event 2 ] Each event is made up of code to execute when the event comes up in the timeline, and what to wait for when executing the NEXT event in the timeline AFTER the current event completes: [ [ { hint \"executed event #1\" }, 3 // wait 3 seconds AFTER current event to execute event 2 ], [ { hint \"executed event #2 3 seconds after event 1 completed\" }, 1 // wait 1 second to run _onTimelineStopped code ] ] Alternativeley, you can also wait for a condition before proceeeding to the next event: private _endTime = time + 10; [ [ {hint \"executed event #1\"}, 3 // wait 3 seconds AFTER current event to execute event 1 ], [ {hint \"executed event #2 3 seconds after event 1 completed\"}, [[_endTime],{ _thisArgs params [\"_endTime\"]; time >= (_endTime) // wait until current time is more than _endTime }], 1 // check condition every second ] ] Lastly, you can chain timeline events together by returning [ [ { hint \"executed event #1\"; time + 3 // return/send to the next event and current wait condition }, { params [\"\",\"\",\"\",\"_eventReturn\"]; private _timeAfterWait = _eventReturn; time >= _timeAfterWait // wait until current time is more than time + 3 }, ], [ {hint \"executed event #2 ~3 seconds after event 1 completed\"} ] ]\n\n#### Parameters:\n0: **_timeline** *(ARRAY)* - An array of timeline events that will happen. \rSee description above for formats\r\n\n1: **_onTimelineStopped** *(CODE, STRING, or ARRAY)* - (see KISKA_fnc_callBack),\rcode that will be executed once a timeline is stopped. Params:\r\r0. *(ARRAY)* - The timeline array in the state when the stoppage actually happens.\r1. *(HASHMAP)* - The Individual map defined for a specific timeline of the given ID\n\n#### Returns:\n*(NUMBER)* - The id of the new timeline\n\n#### Examples:\n```sqf\nprivate _timeline = [\r\n[\r\n{\r\nhint \"executed event #1\";\r\ntime + 3 // return/send to next and current wait condition\r\n},\r\n{\r\nparams [\"\",\"\",\"_eventReturn\"];\r\nprivate _timeAfterWait = _eventReturn;\r\ntime >= _timeAfterWait // wait until current time is more than time + 3\r\n},\r\n],\r\n[\r\n{hint \"executed event #2 ~3 seconds after event 1 completed\"}, 2\r\n]\r\n];\r\nprivate _timelineId = [_timeline,{hint \"timeline end\"}] call KISKA_fnc_startTimeline;\r\n```\n\n","KISKA Functions\\KISKA_fnc_staticLine.md":"#### Description:\nEjects units from vehicle and deploys chutes, will select CUP T10 chute if available. CAUTION: All units from a group THAT ARE IN THE SAME AIRCRAFT should be dropped with the same function call. Not doing so can see odd behaviour from the aircraft. This is tied to KISKA_fnc_staticLine_eject and the use of the leaveVehicle command. If there are units from the same group still in the aircraft when it is executed, the aircraft will ignore all commands and attempt to pickup those units that were dropped.\n\n#### Parameters:\n0: **_aircraft** *(OBJECT)* - The aircraft to drop units from\r\n\n1: **_dropArray** *(ARRAY, GROUP, OBJECT)* - Units to drop. If array, can be groups and/or objects (example 2)\r\n\n2: **_invincibleOnDrop** *(BOOL)* - Should the units be invincible while dropping?\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[plane,group] spawn KISKA_fnc_staticLine;\r\n```\n```sqf\n[plane,[group1,unit2]] spawn KISKA_fnc_staticLine;\r\n```\n\n","KISKA Functions\\KISKA_fnc_staticLine_eject.md":"#### Description:\nEjects the unit from their airecraft and Used to reduce network messages.\n\n#### Parameters:\n0: **_aircraft** *(OBJECT)* - The aircraft dropping off the unit\r\n\n1: **_unit** *(OBJECT)* - The unit to parachute\r\n\n2: **_chuteType** *(STRING)* - Class name of the chute\r\n\n3: **_index** *(NUMBER)* - index in drop order\r\n\n4: **_invincibleOnDrop** *(BOOL)* - Whether or not the unit is invincible on drop\n\n#### Returns:\nNOTHING\n\n#### Examples:\n\n\n","KISKA Functions\\KISKA_fnc_stopBattleSound.md":"#### Description:\nStops battle sounds playing for the given id.\n\n#### Parameters:\n0: **_chatterId** *(OBJECT)* - Where the sound is coming from\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_stopBattleSound;\r\n```\n\n","KISKA Functions\\KISKA_fnc_stopMusic.md":"#### Description:\nStops the currently playing music with a fade if desired.\n\n#### Parameters:\n0: **_fadeTime** *(NUMBER)* - How long to fade out\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[] spawn KISKA_fnc_stopMusic;\r\n```\n\n","KISKA Functions\\KISKA_fnc_stopRadioChatter.md":"#### Description:\nStops radio chatter playing for the given id.\n\n#### Parameters:\n0: **_chatterId** *(OBJECT)* - Where the sound is coming from\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_radioChatter;\r\n```\n\n","KISKA Functions\\KISKA_fnc_stopRandom3dSoundLoop.md":"#### Description:\nStops a 3d sound loop created with KISKA_fnc_playRandom3dSoundLoop;\n\n#### Parameters:\n0: **_id** *(NUMBER)* - The id returned from KISKA_fnc_playRandom3dSoundLoop\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_stopRandom3dSoundLoop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_stopTimeline.md":"#### Description:\nQues a timeline to end on the next execution of an event in it or at the very end of the timeline. This will immediately set KISKA_fnc_isTimelineRunning (where _isFullyComplete-is-false) to be true.\n\n#### Parameters:\n0: **_timelineId** *(NUMBER)* - The id of the timeline to stop\r\n\n1: **_onTimelineStopped** *(CODE, STRING, or ARRAY)* - (see KISKA_fnc_callBack),\rcode that will be executed once a timeline is stopped. Params:\r\r0. *(ARRAY)* - The timeline array in the state when the stoppage actually happens.\r1. *(HASHMAP)* - The Individual map defined for a specific timeline of the given ID\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[123] call KISKA_fnc_stopTimeline;\r\n```\n```sqf\n[123,{hint str [\"timeline stopped!\",_this]}] call KISKA_fnc_stopTimeline;\r\n```\n\n","KISKA Functions\\KISKA_fnc_str.md":"#### Description:\nGiven that str command produces triple quoted strings if used on a string (which can be incompatible with other commands) this function simply formats them as \"'string'\" instead, and all other types as normal with str.\n\n#### Parameters:\n0: **_value** *(ANY)* - The value to convert to a string\n\n#### Returns:\n*(STRING)* - The value as a string\n\n#### Examples:\n```sqf\n_asString = [_someValue] call KISKA_fnc_str;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supplyDrop.md":"#### Description:\nSpawns a supply drop near the requested position. Crates will parachute in.\n\n#### Parameters:\n0: **_classNames** *(ARRAY)* - Classnames of boxes you want dropped. Also determines the number of crates\r\n\n1: **_altittude** *(NUMBER)* - Start height of drop\r\n\n2: **_dropPosition** *(OBJECT, GROUP, ARRAY, LOCATION, TASK)* - Position you want the drop to be near\r\rOPTIONAL:\r\n\n3: **_stopAdjustingHeight** *(NUMBER)* - The height (ATL) at which the velocity of the crates should top being managed\r\n\n4: **_chuteVelocityFreq** *(NUMBER)* - The frequency in seconds at which the velocity of the crates should be managed\r\n\n5: **_stage_1_height** *(NUMBER)* - The height above which the _stage_1_velocityDiff is used to manage the downward velocity of the crates\r\n\n6: **_stage_1_velocityDiff** *(NUMBER)* - The downward velocity of the crates above _stage_1_height\r\n\n7: **_stage_2_velocityDiff** *(NUMBER)* - The downward velocity of the crates below _stage_1_height\n\n#### Returns:\n*(ARRAY)* - The containers dropped\n\n#### Examples:\n```sqf\n[[\"className1\",\"className2\"], 500, player] call KISKA_fnc_supplyDrop;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supplyDrop_aircraft.md":"#### Description:\nSpawns in an aircraft that flies over a DZ to drop off supplies.\n\n#### Parameters:\n0: **_dropPosition** : *(ARRAY or OBJECT)* - The position (area) to drop the arsenal\r  1: **_vehicleClass** : *(STRING)* - The class of the vehicle to drop the arsenal\r\n\n2: **_crates** : *(ARRAY)* - An array of strings that are the classnames of the crates to drop\r\n\n3: **_deleteCargo** : *(BOOL)* - Delete all the default cargo inside the crates\r\n\n4: **_addArsenal** : *(BOOL)* - add an arsenal to all the crates\r\r\n\n5: **_flyinHeight** : *(NUMBER)* - The flyInHeight of the drop vehicle\r\n\n6: **_flyDirection** : *(NUMBER)* - The compass bearing for the aircraft to apporach from (if < 0, it's random)\r\n\n7: **_flyInRadius** : *(NUMBER)* - How far out the drop vehicle will spawn and then fly in\r\n\n8: **_lifeTime** : *(NUMBER)* - How long until the arsenal is deleted\r\n\n9: **_side** : *(SIDE)* - The side of the drop vehicle\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[position player] call KISKA_fnc_supplyDrop_aircraft;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_addDiaryEntry.md":"#### Description:\nCreates a diary entry in the map for the player to open the support Manager\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPOST-INIT function\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_addToPool.md":"#### Description:\nAdds an entry into the local support manager pool.\n\n#### Parameters:\n0: **_entryToAdd** *(STRING or ARRAY)* - The support class or [support class,uses left]\r\n\n1: **_bypassChecks** *(BOOL)* - Decides whether or not to perform checks on _entryToAdd for errors\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"someClass\"] call KISKA_fnc_supportManager_addToPool;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_addToPool_global.md":"#### Description:\nAdds an entry into the global support manager pool. THIS FUNCTION HAS A GLOBAL EFFECT\n\n#### Parameters:\n0: **_entryToAdd** *(STRING or ARRAY)* - The support class or [support class,uses left]\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"someClass\"] call KISKA_fnc_supportManager_addToPool_global;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_onLoad.md":"#### Description:\nSets up uiNamespace globals for and intializes the Support Manager GUI.\n\n#### Parameters:\n0: **_display** *(DISPLAY)* - The loaded display\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// called from config\r\n[_this select 0] call KISKA_fnc_supportManager_onLoad;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_openDialog.md":"#### Description:\nOpens KISKA Support Manager dialog.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_supportManager_openDialog;\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_removeFromPool.md":"#### Description:\nRemoves the provided index from the pool.\n\n#### Parameters:\n0: **_index** *(NUMBER)* - The selected index\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_supportManager_removeFromPool;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_removeFromPool_global.md":"#### Description:\nRemoves the provided index from the support pool with GLOBAl EFFECT.\n\n#### Parameters:\n0: **_index** *(NUMBER)* - The selected index\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_supportManager_removeFromPool_global;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_store_buttonClickEvent.md":"#### Description:\nActivates when the take button is pressed and gives player the support.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_supportManager_store_buttonClickEvent;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_take_buttonClickEvent.md":"#### Description:\nActivates when the take button is pressed and gives player the support.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_supportManager_take_buttonClickEvent;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_updateCurrentList.md":"#### Description:\nActs as an event that will update the current supports list of a player in the GUI.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_supportManager_updateCurrentList;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportManager_updatePoolList.md":"#### Description:\nActs as an event that will update the available supports pool list in the Support Manager GUI.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_supportManager_updatePoolList;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportNotification.md":"#### Description:\nGives the player a sound or text notification that they called in a support from the KISKA systems. Just used for feedback to know a call was placed. Players can adjust the notifcation settings in the CBA addon menu.\n\n#### Parameters:\n0: **_supportTypeId** *(NUMBER)* - The support type that was called\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_supportNotification;\r\n```\n\n","KISKA Functions\\KISKA_fnc_supportRadio.md":"#### Description:\nDecides what radio message to play to provided targets.\n\n#### Parameters:\n0: **_messageType** *(STRING)* - The type of radio message to send\r\n\n1: **_caller** *(OBJECT)* - The person sending the call (default is local player)\r\n\n2: **_targets** *(NUMBER, OBJECT, STRING, GROUP, SIDE, ARRAY)* - The remoteExec targets for the radio call\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"artillery\"] call KISKA_fnc_supportRadio;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_addDiaryEntry.md":"#### Description:\nCreates a diary entry in the map for the player to open the trait Manager.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT function\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_addToPool.md":"#### Description:\nAdds an entry into the local trait manager pool.\n\n#### Parameters:\n0: **_entryToAdd** *(STRING)* - The trait to add\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"medic\"] call KISKA_fnc_traitManager_addToPool;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_addToPool_global.md":"#### Description:\nAdds an entry into the global trait manager pool.\n\n#### Parameters:\n0: **_entryToAdd** *(STRING)* - The trait to add\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\"medic\"] call KISKA_fnc_traitManager_addToPool_global;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_onLoad.md":"#### Description:\nSets up uiNamespace globals for and intializes the Trait Manager GUI.\n\n#### Parameters:\n0: **_display** *(DISPLAY)* - The loaded display\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// called from config\r\n[_this select 0] call KISKA_fnc_traitManager_onLoad;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_onLoad_traitPool.md":"#### Description:\nBegins the loop that syncs across the network and populates the pool list.\n\n#### Parameters:\n0: **_display** *(DISPLAY)* - The loaded display of the trait manager\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n// called from config\r\n[_display] spawn KISKA_fnc_traitManager_onLoad_traitPool;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_openDialog.md":"#### Description:\nOpens KISKA Trait Manager dialog.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_traitManager_openDialog;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_removeFromPool.md":"#### Description:\nRemoves the provided index from the pool.\n\n#### Parameters:\n0: **_index** *(NUMBER)* - The selected index\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_traitManager_removeFromPool;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_removeFromPool_global.md":"#### Description:\nRemoves the provided index from the trait pool with GLOBAl EFFECT.\n\n#### Parameters:\n0: **_index** *(NUMBER)* - The selected index\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[0] call KISKA_fnc_traitManager_removeFromPool_global;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_store_buttonClickEvent.md":"#### Description:\nActivates when the take button is pressed and gives player the support.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_traitManager_store_buttonClickEvent;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_take_buttonClickEvent.md":"#### Description:\nActivates when the take button is pressed and gives player the trait\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_traitManager_take_buttonClickEvent;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_updateCurrentList.md":"#### Description:\nActs as an event that will update the current trait list of a player in the GUI.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_traitManager_updateCurrentList;\r\n```\n\n","KISKA Functions\\KISKA_fnc_traitManager_updatePoolList.md":"#### Description:\nActs as an event that will update the available traits pool list in the Trait Manager GUI.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_traitManager_updatePoolList;\r\n```\n\n","KISKA Functions\\KISKA_fnc_updateFlareEffects.md":"#### Description:\nDue to the local nature of many light commands, this function is used to sync up the brightness increase of the flares launched in the support function.\n\n#### Parameters:\n0: **_light** *(OBJECT)* - The #lightPoint attached to the flare\r\n\n1: **_flare** *(OBJECT)* - The flare object\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[_light,_flare] remoteExecCall [\"KISKA_fnc_updateFlareEffects\",0,_flare];\r\n```\n\n","KISKA Functions\\KISKA_fnc_updateRallyPointNotification.md":"#### Description:\nInforms the player that their rally point was updated\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nremoteExec [\"KISKA_fnc_updateRallyPointNotification\",somePlayer];\r\n```\n\n","KISKA Functions\\KISKA_fnc_updateRespawnMarker.md":"#### Description:\nDeletes the old respawn marker and makes a new one.\n\n#### Parameters:\n0: **_caller** *(OBJECT)* - The person calling the respawn update action\r\n\n1: **_marker** *(MARKER)* - The old marker to delete\r\n\n2: **_markerText** *(STRING)* - The text of the new marker\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[player,myMarker,myMarkerText] call KISKA_fnc_updateRespawnMarker;\r\n```\n\n","KISKA Functions\\KISKA_fnc_updateRespawnMarkerQuery.md":"#### Description:\nActs as a go between for use inside of a string in a diary entry expression. (You can't use remoteExecCall with a string inside of double strings)\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\ncall KISKA_fnc_updateRespawnMarkerQuery;\r\n```\n\n","KISKA Functions\\KISKA_fnc_VDL_addOpenGuiDiaryEntry.md":"#### Description:\nCreates a diary entry to open the VDL dialog.\n\n#### Parameters:\nNONE\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\nPRE-INIT function\r\n```\n\n","KISKA Functions\\KISKA_fnc_VDL_controlsGroup_onLoad.md":"#### Description:\nActs as the onload event for the KISKA View Distance Limiter Dialog\n\n#### Parameters:\n0: **_controlsGroup** *(CONTROL)* - The controls group for the particular setting\r\n\n1: **_varName** *(STRING)* - The name of the profileNamespace variable in which this\rsetting will be saved when changed\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[controlsGroup,\"someName\"] call KISKA_fnc_VDL_controlsGroup_onLoad;\r\n```\n\n","KISKA Functions\\KISKA_fnc_VDL_onLoad.md":"#### Description:\nActs as the onload event for the KISKA View Distance Limiter Dialog\n\n#### Parameters:\n0: **_display** *(DISPLAY)* - The display of the dialog\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[display] call KISKA_fnc_VDL_onLoad;\r\n```\n\n","KISKA Functions\\KISKA_fnc_VDL_openDialog.md":"#### Description:\r\nOpens the GUI for the VDL system.\r\n\r\n#### Parameters:\r\nNONE\r\n\r\n#### Returns:\r\nBOOL\r\n\r\n#### Examples:\r\n```sqf\r\ncall KISKA_fnc_VDL_openDialog;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_vehicleFactory.md":"#### Description:\nAdd an action to given object that allows the spawn of a vehicle\n\n#### Parameters:\n0: **_controlPanel** *(OBJECT)* - The object to add the action to\r\n\n1: **_spawnPosition** *(OBJECT or ARRAY)* - Where to spawn the vehicle (ASL)\r\n\n2: **_vehicleTypes** *(ARRAY or STRING)* - The class names of vehicles to create an action for (each will get its own action if in an array)\r\n\n3: **_clearRadius** *(NUMBER)* - How far until pad is considered clear of entities\r\n\n4: **_onCreateCode** *(CODE)* - Code to run upon vehicle creation. Passed arg is the created vehicle\n\n#### Returns:\n*(BOOL)* - false if not added, true otherwise\n\n#### Examples:\n```sqf\n[player,(getPosATL player) vectorAdd [2,2,0],\"B_MRAP_01_F\"] spawn KISKA_fnc_vehicleFactory;\r\n```\n\n","KISKA Functions\\KISKA_fnc_viewDistanceLimiter.md":"#### Description:\r\nStarts a looping function for limiting a player's viewDistance. Loop can be stopped by setting mission variable \"KISKA_VDL_run\" to false. All other values have global vars that can be edited while it is in use. See each param for associated global var.\r\n\r\n#### Parameters:\r\n0: **_targetFPS** *(NUMBER)* - The desired FPS (lower) limit (KISKA_VDL_fps)\r\n\r\n1: **_checkFreq** *(NUMBER)* - The frequency of checks for FPS (KISKA_VDL_freq)\r\n\r\n2: **_minObjectDistance** *(NUMBER)* - The minimum the objectViewDistance, can be set by (KISKA_VDL_minDist)\r\n\r\n3: **_maxObjectDistance** *(NUMBER)* - The max the objectViewDistance, can be set by (KISKA_VDL_maxDist)\r\n\r\n4: **_increment** *(NUMBER)* - The amount the viewDistance can incriment up or down each cycle (KISKA_VDL_inc)\r\n\r\n5: **_viewDistance** *(NUMBER)* - This is the static overall viewDistance, can be set by (KISKA_VDL_viewDist)\r\n This is static because it doesn't affect FPS too much.\r\n\r\n#### Returns:\r\nNOTHING\r\n\r\n#### Examples:\r\n```sqf\r\nEvery 3 seconds, check\r\n[45,3,500,1700,25,3000] spawn KISKA_fnc_viewDistanceLimiter;\r\n```\r\n\r\n","KISKA Functions\\KISKA_fnc_virtualArty.md":"#### Description:\nCalls for an artillery or mortar strike at a designated position and marks the spot.\n\n#### Parameters:\n0: **_target** *(OBJECT, ARRAY, or STRING(marker))* - The target you want to cluter fire around\r\n\n1: **_ammoType** *(STRING)* - The ammo type from cfgAmmo \r\n\n2: **_radius** *(NUMER)* - Spread of rounds\r\n\n3: **_numberOfRounds** *(NUMER)* - The number of rounds to fire\r\n\n4: **_delayBetween** *(NUMER)* - Time between shots\r\n\n5: **_markPosition** *(BOOL)* - Marks the target position with smoke and chemlight (delete after 20 seconds)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[target_1,\"Sh_155mm_AMOS\"] spawn KISKA_fnc_virtualArty;\r\n```\n\n","KISKA Functions\\KISKA_fnc_vlsFireAt.md":"#### Description:\nOrders VLS to fire at a target. Projectile will follow terrain.\n\n#### Parameters:\n0: **_launcher** *(OBJECT)* - The VLS launcher to have the missile originate from\r\n\n1: **_target** *(OBJECT or ARRAY)* - Target to hit missile with, can also be a position (AGL)\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[VLS_1,target_1] call KISKA_fnc_vlsFireAt;\r\n```\n\n","KISKA Functions\\KISKA_fnc_waitUntil.md":"#### Description:\nWaitunil that allows variable evaluation time instead of frame by frame.\n\n#### Parameters:\n0: **_condition** *(CODE, STRING, or ARRAY)* - Code that must evaluate as a BOOL.\rIF _interval is <= 0 AND _unscheduled isEqualTo true, this will only accept CODE\ror STRING as an arguement for performance reasons and _parameters will be available in _this.\r(See KISKA_fnc_callBack)\r\n\n1: **_function** *(CODE, STRING, or ARRAY)* - The code to execute upon condition being reached.\r(See KISKA_fnc_callBack)\r\n\n2: **_interval** *(NUMBER)* - How often to check the condition\r\n\n3: **_parameters** *(ARRAY)* - An array of local parameters that can be accessed with _this\r\n\n4: **_unscheduled** *(BOOL)* - Run in unscheduled environment\n\n#### Returns:\nNOTHING\n\n#### Examples:\n```sqf\n[\r\n{\r\ntrue\r\n},\r\n{\r\nhint \"wait\";\r\n},\r\n0.5,\r\n[],\r\ntrue\r\n] call KISKA_fnc_waitUntil;\r\n```\n\n","Preprocessor Commands\\#define.md":"#### Basic Usage:\r\nUsing the `#define` instruction, it is possible to define a keyword and assign a definition to it. The keyword may contain any letter, digit or underscore in arbitrary order, as long as it does not start with a digit (RegEx: `[a-zA-Z_][0-9a-zA-Z_]*`). \r\n\r\nAs an example:\r\n\r\n```cpp\r\n#define true 1\r\n```\r\n\r\nThe above means that whenever true is used in a config, the parser will replace this with the value 1.\r\n\r\nThe define-statement does swallow all spaces in between the macro-keyword and any non-space-character in the body (Note that tabs are not spaces! They don't get removed)\r\n\r\n```cpp\r\n#define MACRO                     test\r\nMACRO // preprocesses to test (without any spaces)\r\n\r\n#define MACRO\ttest // There's a tab between MACRO and test\r\nMACRO // preprocesses to \"\ttest\" (without quotes - they are only used to show that the tab character didn't get removed)\r\n```\r\n\r\nThe space between the macro-keyword and the body is also fully optional (though very useful to tell the preprocessor where the macro name ends and where the body begins):\r\n\r\n```cpp\r\n#define MACRO#test\r\nMACRO // preprocesses to \"test\"\r\n```\r\n\r\n---\r\n\r\n#### Arguments:\r\nArguments can be added to more complex macros, by including them between brackets after the keyword. For the name of the arguments the same rule as for the macro-keyword (see above) apply.\r\n\r\n```cpp\r\n#define CAR(NAME) displayName = NAME;\r\n```\r\n\r\nIf CAR(\"Mini\") is used, it will be replaced with displayName = \"Mini\";. Multiple arguments can also be used:\r\n\r\n```sqf\r\n#define BLASTOFF(UNIT,RATE) UNIT setVelocity [0,0,RATE];\r\n```\r\n\r\nMacro arguments may be composed of any characters, as long as they do not contain a comma (because commas are used as argument-delimiters). If quotes are being used, they have to be balanced. The same applies to single-quotes This is because String detection is working in macro arguments - Therefore commas can even get passed in as a macro argument as long as they are part of a String (This only works with Strings wrapped in double-quotes though). Note however that although the macro gets resolved properly, the comma gets removed from the String (probably a bug).\r\n\r\n```cpp\r\n#define MACRO(arg) arg\r\nMACRO(\"Some, content\") // preprocesses to \"Some content\" (note the missing comma)\r\n```\r\n\r\nQuote escaping is also not supported in this context (neither with double- nor with single-quotes)\r\n\r\n```cpp\r\n#define MACRO(arg) arg\r\nMACRO(\"Some \"\"content\"\"\") // preprocesses to \"Some \"\"content\"\"\"\r\n```\r\n\r\nPassing arrays with more than one element `[el1,el2,...]` as arguments into macros as well as any argument containing comas \"some, sentence\", will need a small workaround:\r\n\r\n```sqf\r\n#define HINTARG(ARG) hint (\"Passed argument: \" + str ARG)\r\n```\r\n\r\n**Incorrect usage:**\r\n\r\n```cpp\r\nHINTARG([1,2,3,4,5,6,7,8,9,0]); // ERROR, won't even compile\r\n```\r\n\r\n**Correct usage:**\r\n\r\n```cpp\r\n#define array1 [1,2,3,4,5,6,7,8,9,0] \r\nHINTARG(array1); // SUCCESS\r\n```\r\n\r\nThe argument replacement is performed before the expansion of the macro body. That means one doesn't have to worry about name-conflicts between argument-names of the current macro and already defined macros:\r\n\r\n```cpp\r\n#define ONE foo\r\n#define TWO(ONE) ONE\r\nTWO(bar) // will preprocess to bar\r\n```\r\n\r\n---\r\n\r\n#### Replacing parts of words:\r\n\r\nBy default, only whole words can be replaced by arguments. If only a part of the word should be replaced, use the ## instruction. This is necessary when either the start or the end of the argument connects to another character that is not a ; (semi-colon) or   (space).\r\n\r\n```cpp\r\nclass NAME##_Button_Slider: RscText \\\r\n{ \\\r\n\tmodel = \\OFP2\\Structures\\Various\\##FOLDER##\\##FOLDER; \\\r\n// ...\r\n```\r\n\r\nIt is also possible to use the single # to convert an argument to a string.\r\n\r\n```sqf\r\nstatement = (this animate [#SEL, 0]); \\\r\n```\r\n\r\n---\r\n\r\n#### Multi-line:\r\n\r\n```cpp\r\n#define DRAWBUTTON(NAME)\\\r\n\t__EXEC(idcNav = idcNav + 4) \\\r\n\t...\r\n```\r\n\r\n***NOTE:** The backslash must be the last character in a line when defining a multi-line macro. Any character (including spaces) after the backslash will cause issues.*","Preprocessor Commands\\#else.md":"Provides alternative code to `#if`, `#ifdef`, `#ifndef` checks.\r\n\r\n```cpp\r\n#ifndef NAME\r\n\t// ...text that will be used if \"NAME\" is -not- defined...\r\n#else\r\n\t// ...text that will be used if \"NAME\" -is- defined...\r\n#endif\r\n```","Preprocessor Commands\\#endif.md":"This ends a conditional block as shown in the descriptions of `#ifdef` and `#ifndef` above.","Preprocessor Commands\\#if.md":"Checks condition and processes content if condition returns 1. Skips content if it returns 0.\r\n\r\n```cpp\r\n#if __A3_DEBUG__ // Check if game is started in debug mode\r\n#include \"debug.hpp\" // Include some file if debug mode is enabled\r\n#endif\r\n```","Preprocessor Commands\\#ifdef.md":"A simple if-then construction to check whether a certain set of definitions has already been made:\r\n\r\n```cpp\r\n#ifdef NAME\r\n\t// ...text that will be used if \"NAME\" is defined...\r\n#endif\r\n```\r\n\r\nIFDEFs cannot be nested. The preprocessor will generate errors for all inner definitions if the outer definition doesn't exist.","Preprocessor Commands\\#ifndef.md":"Same as `#ifdef`, but checks for absence of definition instead.\r\n\r\n```cpp\r\n#ifndef NAME\r\n\t// ...text that will be used if \"NAME\" isn't defined...\r\n#endif\r\n```","Preprocessor Commands\\#include.md":"#### Description:\r\nCopies the code from a target file and pastes it where #include directive is.\r\n\r\n```cpp\r\n#include \"file.hpp\"\r\n// Brackets are equivalent to quotation marks and may be used in their place.\r\n#include <file.txt> \r\n```\r\n\r\nSource directory is:\r\n- For any file without starting the include path with \\ - the file's current directory\r\n- When starting with \\ - the internal filesystem root (see Addon Development) or the Game's working directory (only with `-filePatching` enabled)\r\n\r\n<br>\r\n\r\n#### Path Definitions:\r\nA path beginning can be defined as follow:\r\n\r\n- drive (only with -filePatching enabled):\r\n```cpp\r\n#include \"D:\\file.txt\"\r\n```\r\n\r\n- PBO with PBOPREFIX:\r\n```cpp\r\n#include \"\\myMod\\myAddon\\file.txt\"\r\n```\r\n\r\n- PBO (keep in mind that in this case, if the PBO's file name will be changed, all `#include` referencing it will need to be updated):\r\n```cpp\r\n// Arma 3\\@myMod\\addons\\myAddon.pbo\\file.txt;\r\n#include \"\\myMod\\myAddon\\file.txt\"\r\n```\r\n\r\nTo move to parent directory use `..` (two dots) (Supported since Arma 3 1.50)\r\n```cpp\r\n#include \"..\\file.sqf\"\r\n```\r\n\r\nPreprocessor does not support the use of macros for pre-defined file names.\r\n```cpp\r\n#define path \"codestrip.txt\"\r\n#include path // this will cause an error\r\n```","Preprocessor Commands\\#undef.md":"Undefine (delete) a macro previously set by the use of #define.\r\n\r\n```cpp\r\n#undef NAME\r\n```","Preprocessor Commands\\__A3_DEBUG__.md":"This macro is only set when the [-debug parameter](https://community.bistudio.com/wiki/Arma_3_Startup_Parameters) was provided. It can be used to switch mods or scripts to debug mode dynamically.\r\n\r\n```cpp\r\n__A3_DEBUG__ // 1 (If -debug was enabled)\r\n```","Preprocessor Commands\\__ARMA3__.md":"Checks if game is Arma 3 (speculation).\r\n\r\n```cpp\r\n__ARMA3__ // 1\r\n```","Preprocessor Commands\\__ARMA__.md":"```cpp\r\n__ARMA__ // 1\r\n```","Preprocessor Commands\\__COUNTER_RESET__.md":"Resets `__COUNTER__` command's count.\r\n\r\n```cpp\r\n__COUNTER__ // 0\r\n__COUNTER__ // 1\r\n__COUNTER__ // 2\r\n__COUNTER__ // 3\r\n__COUNTER_RESET__\r\n__COUNTER__ // 0\r\n__COUNTER__ // 1\r\n__COUNTER__ // 2\r\n```","Preprocessor Commands\\__COUNTER__.md":"Counts 1 up everytime it is defined.\r\n\r\n```cpp\r\n__COUNTER__ // 0\r\n__COUNTER__ // 1\r\n__COUNTER__ // 2\r\n__COUNTER__ // 3\r\n__COUNTER_RESET__\r\n__COUNTER__ // 0\r\n__COUNTER__ // 1\r\n__COUNTER__ // 2\r\n```","Preprocessor Commands\\__DATE_ARR__.md":"Is replaced for current date in format array.\r\n\r\n```cpp\r\n__DATE_ARR__ // 2020,10,28,15,17,42\r\n```","Preprocessor Commands\\__DATE_STR_ISO8601__.md":"Is replaced for current date in format string. The date is presented in ISO8601 standard.\r\n\r\n```cpp\r\n__DATE_STR_ISO8601__ // \"2020-10-28T14:17:42Z\"\r\n```","Preprocessor Commands\\__DATE_STR__.md":"Is replaced for current date in format string.\r\n\r\n```cpp\r\n__DATE_STR__  // \"2020/10/28, 15:17:42\"\r\n```","Preprocessor Commands\\__EVAL.md":"With this Config Parser macro expressions can be evaluated, including previously assigned internal variables. Unlike `__EXEC`, `__EVAL` supports multiple parentheses:\r\n\r\n```cpp\r\nw = __EVAL(safeZoneW - (5 * ((1 / (getResolution select 2)) * 1.25 * 4)));\r\n```\r\n\r\n`__EVAL` macros must be assigned to a config property and the expression must be terminated with `;`. `__EVAL` can only return `Number` or `String`: . Any other type is represented as `String`, even Boolean type, which will result in either `\"true\"` or `\"false\"`.\r\n\r\n#### WARNING:\r\n`__EVAL` does not like curly brackets `{}`; if code is needed in the expression, use `compile` `String` instead:\r\n\r\n```sqf\r\nresult = __EVAL(call { 123 }); // ERROR\r\n```\r\n\r\n```sqf\r\nresult = __EVAL(call compile \"123\"); // OK\r\n```\r\n\r\n\r\n#### CAUTION:\r\n`__EXEC` and `__EVAL` macros are not suitable for SQF/SQS scripts but can be used in configs, including `description.ext`. Both global and local variables set in `__EXEC` are available in `__EVAL`","Preprocessor Commands\\__EXEC.md":"#### Description:\r\nThis Config Parser macro allows to assign values to internal variables or just execute arbitrary code. The code inside `__EXEC` macros runs in `parsingNamespace` and variables defined in it will also be created in `parsingNamespace`. \r\n\r\nThe variables can then be used to create more complex macros:\r\n```sqf\r\n__EXEC(cat = 5 + 1;)\r\n__EXEC(lev = cat - 2;)\r\n_cat = parsingNamespace getVariable \"cat\"; // 6\r\n_lev = parsingNamespace getVariable \"lev\"; // 4\r\n```\r\n\r\n#### CAUTION: \r\nConfig Parser keywords cannot be used in preprocessor Macros, e.g `#if`!\r\n\r\n#### WARING: \r\n`__EXEC` doesn't like round brackets `()` inside expressions. If grouping is needed, perhaps values could be calculated inside the brackets separately and assigned to local variables:\r\n```cpp\r\n__EXEC(a = (1+2);) // ERROR\r\n```\r\n\r\n```cpp\r\n__EXEC(_expr = 1+2;)\r\n__EXEC(a = _expr;) // OK\r\n```","Preprocessor Commands\\__FILE__.md":"This keyword gets replaced with the CURRENT file being processed.","Preprocessor Commands\\__GAME_BUILD__.md":"Gets replaced by the build number.\r\n\r\n```cpp\r\n__GAME_BUILD__ // 146790\r\n```","Preprocessor Commands\\__GAME_VER_MAJ__.md":"Gets replaced by the major game version.\r\n\r\n```cpp\r\n__GAME_VER_MAJ__ // 02\r\n```","Preprocessor Commands\\__GAME_VER_MIN__.md":"Gets replaced by the minor game version.\r\n\r\n```cpp\r\n__GAME_VER_MIN__ // 00\r\n```","Preprocessor Commands\\__GAME_VER__.md":"Gets replaced by the game version.\r\n\r\n```cpp\r\n__GAME_VER__ // 02.00.146790\r\n```","Preprocessor Commands\\__has_include.md":"#### Description:\r\nChecks if given file exists. Returns 1 if it does, 0 if it does not exist.\r\n\r\n#### CAUTION:\r\n- The file path must start with the backslash `\\` otherwise it would fail silently (returns 0 so does nothing unless you put something in #else)!\r\n- If you wanted to make an addon that can change its config dynamically depending on mods that loaded along, do not binarize the config.cpp!\r\n\r\n#### NOTE:\r\n- To validate that the file exists in your game (in script files), you can use `fileExists` command to check.\r\n```sqf\r\nfileExists \"\\a3\\data_f\\config.bin\"; // returns true\r\nfileExists \"\\z\\ace\\addons\\main\\script_component.hpp\"; // returns true if ACE is loaded, false otherwise\r\n```\r\n\r\n```cpp\r\n#if __has_include(\"\\z\\ace\\addons\\main\\script_component.hpp\")\r\n// File exists! Do something with it\r\n#else\r\n// File does not exist\r\n#endif\r\n```","Preprocessor Commands\\__LINE__.md":"This keyword gets replaced with the line number in the file where it is found. For example, if `__LINE__` is found on the 10th line of a file, the word `__LINE__` will be replaced with the number 10.","Preprocessor Commands\\__RAND_INT16__.md":"Gets replaced by a random 16 bit integer.","Preprocessor Commands\\__RAND_INT32__.md":"Gets replaced by a random 32 bit integer.","Preprocessor Commands\\__RAND_INT64__.md":"Gets replaced by a random 64 bit integer.","Preprocessor Commands\\__RAND_INT8__.md":"Gets replaced by a random 8 bit integer.","Preprocessor Commands\\__RAND_UINT16__.md":"Gets replaced by a random *unsigned* 16 bit integer.","Preprocessor Commands\\__RAND_UINT32__.md":"Gets replaced by a random *unsigned* 32 bit integer.","Preprocessor Commands\\__RAND_UINT64__.md":"Gets replaced by a random *unsigned* 64 bit integer.","Preprocessor Commands\\__RAND_UINT8__.md":"Gets replaced by a random *unsigned* 8 bit integer.","Preprocessor Commands\\__TIMESTAMP_UTC__.md":"Is replaced to the current timestamp in UNIX timestamp.\r\n\r\n```cpp\r\n__TIMESTAMP_UTC__ // 1622639059\r\n```","Preprocessor Commands\\__TIME_UTC__.md":"Is replaced for UTC time.\r\n\r\n```cpp\r\n__TIME_UTC__ // 14:17:42\r\n```","Preprocessor Commands\\__TIME__.md":"Is replaced for current time.\r\n\r\n```cpp\r\n__TIME__ // 15:17:42\r\n```"};