// SQF to get (still requires some manual handling of nested double quotes)
/*
private _allCommandNames = [];
supportInfo "" apply {
	_x splitString ":" params ["_t", "_x"];
	if (_t != "t") then {
		_x = _x splitString " ";
		_command = switch count _x do {
			case 1;
			case 2: { _x # 0 };
			case 3: { _x # 1 };
			default {nil};
		};
		_allCommandNames pushBackUnique _command;
	};
};
_allCommandNames sort true;


private _commandInfoArray = [];
_allCommandNames apply {
	private _command = _x;
	private _supportInfoLookup = "i:" + _command;
	private _syntaxes = supportInfo _supportInfoLookup;
	_syntaxes apply {
		private _description = (_x select 4) regexReplace ['"/gi',"'"];;
		private _example = (_x select 5) regexReplace ['"/gi',"'"];;
		_x set [4,_description];
		_x set [5,_example];
		_commandInfoArray pushBackUnique _x;
	};
};

_commandInfoArray
*/
// get rid of some nested double quotes
//Find: ("")([\w*\s*]*)("")
//replace: '$2'

// find instances of new lines in string taken from arma and replace with \n
[
    ["u", "!", "!", "not a", "!true", "false", "BOOL", "", "BOOL", "! a"],
    [
        "b",
        "!=",
        "!=",
        "a is not equal to b",
        "counter != 4",
        "",
        "BOOL",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a != b",
    ],
    [
        "b",
        "!=",
        "!=",
        "a is not equal to b",
        "true != false",
        "",
        "BOOL",
        "BOOL",
        "BOOL",
        "a != b",
    ],
    [
        "b",
        "!=",
        "!=",
        "a is not equal to b (case insensitive)",
        "nameOfPlayer != 'John Doe'",
        "",
        "BOOL",
        "STRING",
        "STRING",
        "a != b",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two objects are different. If either of them is objNull, true is returned.",
        "vehicle player != player",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "obj1 != obj2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two groups are different. If either of them is grpNull, true is returned.",
        "group player != group soldierOne",
        "",
        "BOOL",
        "GROUP",
        "GROUP",
        "grp1 != grp2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two side values are different.",
        "side player != west",
        "",
        "BOOL",
        "SIDE",
        "SIDE",
        "side1 != side2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two structured text values are different.",
        "",
        "",
        "BOOL",
        "TEXT",
        "TEXT",
        "text1 != text2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two namespaces are different.",
        "currentNamespace != missionNamespace",
        "",
        "BOOL",
        "NAMESPACE",
        "NAMESPACE",
        "namespace1 != namespace2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two config entries are different.",
        "",
        "",
        "BOOL",
        "CONFIG",
        "CONFIG",
        "config1 != config2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two displays are different.",
        "",
        "",
        "BOOL",
        "DISPLAY",
        "DISPLAY",
        "display1 != display2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two controls are different.",
        "",
        "",
        "BOOL",
        "CONTROL",
        "CONTROL",
        "control1 != control2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two team members are different. If either of them is teamMemberNull, true is returned.",
        "teamMember player != _teamMember",
        "",
        "BOOL",
        "TEAM_MEMBER",
        "TEAM_MEMBER",
        "teamMember1 != teamMember2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two objects are different. If either of them is netObjNull, true is returned.",
        "_myJoint != _myWinch",
        "",
        "BOOL",
        "NetObject",
        "NetObject",
        "netObj1 != netObj2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two tasks are different.",
        "",
        "",
        "BOOL",
        "TASK",
        "TASK",
        "task1 != task2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two diary records are different.",
        "",
        "",
        "BOOL",
        "DIARY_RECORD",
        "DIARY_RECORD",
        "diaryRecord1 != diaryRecord2",
    ],
    [
        "b",
        "!=",
        "!=",
        "Checks whether two locations are different. If either of them is null, true is returned.",
        "",
        "",
        "BOOL",
        "LOCATION",
        "LOCATION",
        "location1 != location2",
    ],
    [
        "b",
        "#",
        "#",
        "Selects index element of the array. Index 0 denotes the first element, 1 the second, etc.",
        "[1, 2, 3] # 1",
        "2",
        "ANY",
        "ARRAY",
        "SCALAR",
        "array # index",
    ],
    [
        "b",
        "%",
        "%",
        "The remainder of a divided by b. Note that the remainder is calculated in the real domain.",
        "4.5 % 3",
        "1.5",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a % b",
    ],
    [
        "b",
        "&&",
        "&&",
        "a and b",
        "alive player && alive leader player",
        "",
        "BOOL",
        "BOOL",
        "BOOL",
        "a && b",
    ],
    [
        "b",
        "&&",
        "&&",
        "a and b, b evaluated only when a is true",
        "alive player && {alive leader player}",
        "",
        "BOOL",
        "BOOL",
        "CODE",
        "a && b",
    ],
    [
        "b",
        "*",
        "*",
        "a multiplied by b",
        "iCounter*3",
        "",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a * b",
    ],
    [
        "b",
        "+",
        "+",
        "a plus b",
        "counter + 1",
        "",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a + b",
    ],
    [
        "b",
        "+",
        "+",
        "stringA and stringB are concatenated.",
        "'I' + ' am' + ' blind'",
        "'I am blind'",
        "STRING",
        "STRING",
        "STRING",
        "stringA + stringB",
    ],
    [
        "b",
        "+",
        "+",
        "arrayA and arrayB are concatenated.",
        "[0, 1, 2] + [1, 2, 3]",
        "[0, 1, 2, 1, 2, 3]",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "arrayA + arrayB",
    ],
    [
        "u",
        "+",
        "+",
        "unary plus: returns a",
        "+4",
        "4",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "+ a",
    ],
    [
        "u",
        "+",
        "+",
        "unary plus: returns a copy of the array",
        "+ [0, 1, 2]",
        "[0, 1, 2]",
        "ARRAY",
        "",
        "ARRAY",
        "+ a",
    ],
    [
        "u",
        "+",
        "+",
        "Creates a copy of the HashMap.",
        "+_hashMap",
        "",
        "HASHMAP",
        "",
        "HASHMAP",
        "+ HashMap",
    ],
    [
        "b",
        "-",
        "-",
        "a minus b",
        "counter - 1",
        "",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a - b",
    ],
    [
        "b",
        "-",
        "-",
        "All elements in arrayB are removed from arrayA.",
        "[0, 1, 2, 4, 0, 1, 2, 3, 4, 5] - [1, 2, 3]",
        "[0, 4, 0, 4, 5]",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "arrayA - arrayB",
    ],
    [
        "u",
        "-",
        "-",
        "unary minus: zero minus a",
        "- - 3",
        "3",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "- a",
    ],
    [
        "b",
        "/",
        "/",
        "a divided by b",
        "enemyStrength/3",
        "",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a / b",
    ],
    [
        "b",
        "/",
        "/",
        "Returns subentry of config entry with given name (alias for >>).",
        "configFile / 'CfgVehicles'",
        "",
        "CONFIG",
        "CONFIG",
        "STRING",
        "config / name",
    ],
    [
        "b",
        "<",
        "<",
        "a lesser than b",
        "counter < 4",
        "",
        "BOOL",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a < b",
    ],
    [
        "b",
        "<=",
        "<=",
        "a lesser or equal than b",
        "player distance redCar <= 100",
        "",
        "BOOL",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a <= b",
    ],
    [
        "b",
        "==",
        "==",
        "a equal to b",
        "counter == 4",
        "",
        "BOOL",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a == b",
    ],
    [
        "b",
        "==",
        "==",
        "a equal to b",
        "true == false",
        "",
        "BOOL",
        "BOOL",
        "BOOL",
        "a == b",
    ],
    [
        "b",
        "==",
        "==",
        "a equal to b (case insensitive)",
        "nameOfPlayer == 'John Doe'",
        "",
        "BOOL",
        "STRING",
        "STRING",
        "a == b",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two objects are the same. If either of them is objNull, false is returned.",
        "player == leader player",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "obj1 == obj2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two groups are the same. If either of them is grpNull, false is returned.",
        "group player == group soldierOne",
        "",
        "BOOL",
        "GROUP",
        "GROUP",
        "grp1 == grp2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two side values are equal.",
        "side player == west",
        "",
        "BOOL",
        "SIDE",
        "SIDE",
        "side1 == side2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two structured text values are equal.",
        "",
        "",
        "BOOL",
        "TEXT",
        "TEXT",
        "text1 == text2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two namespaces are equal.",
        "currentNamespace == missionNamespace",
        "",
        "BOOL",
        "NAMESPACE",
        "NAMESPACE",
        "namespace1 == namespace2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two config entries are equal.",
        "",
        "",
        "BOOL",
        "CONFIG",
        "CONFIG",
        "config1 == config2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two displays are equal.",
        "",
        "",
        "BOOL",
        "DISPLAY",
        "DISPLAY",
        "display1 == display2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two controls are equal.",
        "",
        "",
        "BOOL",
        "CONTROL",
        "CONTROL",
        "control1 == control2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two team members are the same. If either of them is teamMemberNull, false is returned.",
        "teamMember player == _teamMember",
        "",
        "BOOL",
        "TEAM_MEMBER",
        "TEAM_MEMBER",
        "teamMember1 == teamMember2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two objects are the same. If either of them is netObjNull, false is returned.",
        "_myJoint == _myWinch",
        "",
        "BOOL",
        "NetObject",
        "NetObject",
        "netObj1 == netObj2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two tasks are equal.",
        "",
        "",
        "BOOL",
        "TASK",
        "TASK",
        "task1 == task2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two diary records are equal.",
        "",
        "",
        "BOOL",
        "DIARY_RECORD",
        "DIARY_RECORD",
        "diaryRecord1 == diaryRecord2",
    ],
    [
        "b",
        "==",
        "==",
        "Checks whether two locations are the same. If either of them is null, false is returned.",
        "",
        "",
        "BOOL",
        "LOCATION",
        "LOCATION",
        "location1 == location2",
    ],
    [
        "b",
        ">",
        ">",
        "a greater than b",
        "counter > 4",
        "",
        "BOOL",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a > b",
    ],
    [
        "b",
        ">=",
        ">=",
        "a greater or equal than b",
        "player distance redCar < 100",
        "",
        "BOOL",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a >= b",
    ],
    [
        "b",
        ">>",
        ">>",
        "Returns subentry of config entry with given name.",
        "configFile >> 'CfgVehicles'",
        "",
        "CONFIG",
        "CONFIG",
        "STRING",
        "config >> name",
    ],
    [
        "b",
        "^",
        "^",
        "a raised to the power of b",
        "count^4",
        "",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a ^ b",
    ],
    [
        "u",
        "abs",
        "abs",
        "The absolute value of x.",
        "abs -3",
        "3",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "abs x",
    ],
    [
        "n",
        "acctime",
        "accTime",
        "Returns the current time acceleration factor.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "accTime",
    ],
    [
        "u",
        "acos",
        "acos",
        "The arccosine of x, the result is in degrees.",
        "acos 0.5",
        "60",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "acos x",
    ],
    [
        "b",
        "action",
        "action",
        "Makes the unit peform an action. The format of action can be [type, target, param1, param2, param3]. Only type is required, target defaults to unit and param1, param2, param3 are type specific.",
        "soldierOne action ['eject', vehicle soldierOne]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit action action",
    ],
    [
        "u",
        "action",
        "action",
        "Makes the unit peform an action. The format of action can be [type, target, param1, param2, param3]. Only type is required, target defaults to unit and param1, param2, param3 are type specific.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "action actionParams",
    ],
    [
        "u",
        "actionids",
        "actionIDs",
        "Return array of IDs for user defined actions for specified entity",
        "actionIDs player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "actionIDs entity",
    ],
    [
        "u",
        "actionkeys",
        "actionKeys",
        "Returns a list of dikCodes of buttons assigned to the given user action.",
        "array = actionKeys 'ReloadMagazine'",
        "",
        "ARRAY",
        "",
        "STRING",
        "actionKeys action",
    ],
    [
        "u",
        "actionkeys",
        "actionKeys",
        "Returns a list of dikCodes of buttons assigned to the given user action in string format.",
        "arrayOrStrings = actionKeys ['ReloadMagazine']",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "actionKeys [action]",
    ],
    [
        "u",
        "actionkeysex",
        "actionKeysEx",
        "Returns the hotkeys for the given action with split modifier keys.",
        "",
        "",
        "ARRAY",
        "",
        "STRING",
        "actionKeysEx action",
    ],
    [
        "u",
        "actionkeysimages",
        "actionKeysImages",
        "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes.",
        "text = actionKeysImages 'ReloadMagazine'",
        "",
        "TEXT",
        "",
        "ARRAY,STRING",
        "actionKeysImages action or [action, maxKeys]",
    ],
    [
        "u",
        "actionkeysnames",
        "actionKeysNames",
        "Returns a string of button names assigned to the given user action. A maximum of maxKeys keys is listed, 0=maximum possible. Sorted by inputDevicePriority with values 'Mouse','Keyboard','Stick','Gamepad','Trackir','Combo' (mouse and keyboard combinations),'Controler' (any controller other then mouse or keyboard). Other values are considered as 'Unsorted'. You can find the action names in config class ControllerSchemes.",
        "list = actionKeysNames 'ReloadMagazine'",
        "",
        "STRING",
        "",
        "ARRAY,STRING",
        "actionKeysNames action or [action, maxKeys] or [action, maxKeys, inputDevicePriority]",
    ],
    [
        "u",
        "actionkeysnamesarray",
        "actionKeysNamesArray",
        "Returns a list of button names assigned to the given user action. A maximum of maxKeys keys is listed, 0=maximum possible. Sorted by inputDevicePriority with values 'Mouse','Keyboard','Stick','Gamepad','Trackir','Combo' (mouse and keyboard combinations),'Controler' (any controller other then mouse or keyboard). Other values are considered as 'Unsorted'. You can find the action names in config class ControllerSchemes.",
        "list = actionKeysNames 'ReloadMagazine'",
        "",
        "ARRAY",
        "",
        "ARRAY,STRING",
        "actionKeysNamesArray action or [action, maxKeys] or [action, maxKeys, inputDevicePriority]",
    ],
    [
        "u",
        "actionname",
        "actionName",
        "Returns localized name of action.",
        "name = actionName 'ReloadMagazine'",
        "",
        "STRING",
        "",
        "STRING",
        "actionName action",
    ],
    [
        "b",
        "actionparams",
        "actionParams",
        "Returns array with user added action params in format of addAction",
        "player actionParams 0",
        "",
        "ARRAY",
        "OBJECT",
        "SCALAR",
        "unit actionParams actionID",
    ],
    [
        "u",
        "activateaddons",
        "activateAddons",
        "Activates the listed addons. The list of active addons is reinitialized during this function.",
        "activateAddons ['BISOFP']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "activateAddons [addon1, ...]",
    ],
    [
        "n",
        "activatedaddons",
        "activatedAddons",
        "Returns a list of all activated addons.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "activatedAddons",
    ],
    [
        "u",
        "activatekey",
        "activateKey",
        "Activates the given key for the current user profile. The keys are used to unlock missions or campaigns. See keys, keysLimit and doneKeys in the description.ext file of the missions.",
        "activateKey 'M04'",
        "",
        "NOTHING",
        "",
        "STRING",
        "activateKey keyName",
    ],
    [
        "u",
        "activetitleeffectparams",
        "activeTitleEffectParams",
        "Returns [type, effect, speed, showInMap] of the given active title effect",
        "",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "activeTitleEffectParams layerNumber",
    ],
    [
        "u",
        "add3denconnection",
        "add3DENConnection",
        "Adds connection of given type between <from> items and <to> item.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "add3DENConnection [&lt;type&gt;, [&lt;from&gt;,...], &lt;to&gt;]",
    ],
    [
        "u",
        "add3deneventhandler",
        "add3DENEventHandler",
        "Returns ID of registered event handler usefull for ex. when removing it.",
        "",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "add3DENEventHandler [&lt;type&gt;, &lt;code&gt;]",
    ],
    [
        "b",
        "add3denlayer",
        "add3DENLayer",
        "Creates new entity layer with given name",
        "0 add3DENLayer 'My layer 01'",
        "",
        "SCALAR",
        "SCALAR",
        "STRING",
        "&lt;layerID&gt; add3DENLayer &lt;name&gt;",
    ],
    [
        "b",
        "addaction",
        "addAction",
        "Creates an action and returns its ID. It uses the following algorithm: the first action added to the given vehicle has ID zero, the next vehicle has ID one, etc.",
        "player addAction ['Hello', 'hello.sqs']; player addAction ['Hello2', { hint 'Hello!'} ]",
        "",
        "SCALAR,NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addAction [action, script filename or code(, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, showUnconscious)]",
    ],
    [
        "b",
        "addbackpack",
        "addBackpack",
        "Adds the backpack to the unit. ",
        "player addBackpack 'usbackpack'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addBackpack backpackName",
    ],
    [
        "b",
        "addbackpackcargo",
        "addBackpackCargo",
        "Adds bacpacks to the cargo space. The format of backpacks is [backpacksName, count]\nFor backpacksName values see <cl>CfgWeapons</cl>.",
        "rearmTruckOne addBackpackCargo ['DSHKM_TK_GUE_Bag_EP1', 2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addBackpackCargo backpacks",
    ],
    [
        "b",
        "addbackpackcargoglobal",
        "addBackpackCargoGlobal",
        "Adds bacpacks to the cargo space.  MP synchronized. The format of backpacks is [backpacksName, count]\nFor backpacksName values see <cl>CfgWeapons</cl>.",
        "rearmTruckOne addBackpackCargo ['DSHKM_TK_GUE_Bag_EP1', 2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addBackpackCargoGlobal backpacks",
    ],
    [
        "b",
        "addbackpackglobal",
        "addBackpackGlobal",
        "Adds the backpack to the unit(even non-local) ",
        "player addBackpackGlobal 'usbackpack'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addBackpackGlobal backpackName",
    ],
    [
        "b",
        "addbinocularitem",
        "addBinocularItem",
        "Adds item to the binocular weapon cargo space. This is used for infantry weapons.",
        "player addBinocularItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addBinocularItem item",
    ],
    [
        "u",
        "addcamshake",
        "addCamShake",
        "Adds camera shake source.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "addCamShake [power, duration, frequency]",
    ],
    [
        "b",
        "addcuratoraddons",
        "addCuratorAddons",
        "Allow curator use of given addon.",
        "curator addCuratorAddons [addon1, addon2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "curatorObj addCuratorAddons [addons]",
    ],
    [
        "b",
        "addcuratorcameraarea",
        "addCuratorCameraArea",
        "Adds or changes curator camera area (depends on if ID is allready used)",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "curatorObj addCuratorCameraArea [cameraAreaID, [position],radius]",
    ],
    [
        "b",
        "addcuratoreditableobjects",
        "addCuratorEditableObjects",
        "Register objects which can be edited by a curator.",
        "0 addCuratorEditableObjects [cursorTarget, true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "curatorObj addCuratorEditableObjects [[objects],addCrew = true]",
    ],
    [
        "b",
        "addcuratoreditingarea",
        "addCuratorEditingArea",
        "Adds or changes curator edit area (depends on if ID is allready used)",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "curatorObj addCuratorEditingArea [editAreaID, [position], radius]",
    ],
    [
        "b",
        "addcuratorpoints",
        "addCuratorPoints",
        "Adds or removes curator points.",
        "0 addCuratorPoints 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "curatorObj addCuratorPoints number of points",
    ],
    [
        "b",
        "addeditorobject",
        "addEditorObject",
        "Add an object to the editor and assign arguments. Create script is called with _new equal to true. Returns the ID of the new EditorObject. Subtype class is optional.",
        "",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "map addEditorObject [type, [name1, value1, ...], subtype class]",
    ],
    [
        "b",
        "addeventhandler",
        "addEventHandler",
        "The format of handler is [type,command]. Check scripting topic Event handlers for more information. The index of the currently added handler is returned.",
        "player addEventHandler ['killed',{_this exec 'playerKilled.sqs'}]",
        "",
        "SCALAR,NOTHING",
        "OBJECT",
        "ARRAY",
        "object addEventHandler handler",
    ],
    [
        "b",
        "addeventhandler",
        "addEventHandler",
        "The format of handler is [type,command]. Check scripting topic Event handlers for more information. The index of the currently added handler is returned.",
        "(group player) addEventHandler ['WaypointComplete',{hint 'waypoint complete'}]",
        "",
        "SCALAR,NOTHING",
        "GROUP",
        "ARRAY",
        "group addEventHandler [handlerType, handler]",
    ],
    [
        "b",
        "addforce",
        "addForce",
        "Applies force to given object at given position. Force is defined as vector [x, y, z] in world space, position is vector [x, y, z] in model space.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle addForce [force, position]",
    ],
    [
        "u",
        "addforcegeneratorrtd",
        "addForceGeneratorRTD",
        "Add force generator to world. Returns force index.",
        "",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "addForceGeneratorRTD [bool enabled, int type, vec3 strengh, vec3 position, vec3 radius, vec3 orientation, object AttachTo]",
    ],
    [
        "b",
        "addgoggles",
        "addGoggles",
        "Create a new item and try to link them into goggles slot.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addGoggles type",
    ],
    [
        "b",
        "addgroupicon",
        "addGroupIcon",
        "Add icon to a group. Returns icon ID",
        "id = group addGroupIcon['b_inf',[offsetX,ofsetY]]",
        "",
        "SCALAR",
        "GROUP",
        "ARRAY",
        "group addGroupIcon properties",
    ],
    [
        "b",
        "addhandgunitem",
        "addHandgunItem",
        "Adds item to the weapon cargo space. This is used for infantry weapons.",
        "player addHandgunItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addHandgunItem item",
    ],
    [
        "b",
        "addheadgear",
        "addHeadgear",
        "Create a new item and try to link them into headgear slot",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addHeadgear weapons",
    ],
    [
        "b",
        "additem",
        "addItem",
        "Create new item and store it to to the inventory. ",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addItem item",
    ],
    [
        "b",
        "additemcargo",
        "addItemCargo",
        "Create new items and store them to the weapon holder.",
        "rearmTruckOne addItemCargo ['optic_ARCO', 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addItemCargo [item, count]",
    ],
    [
        "b",
        "additemcargoglobal",
        "addItemCargoGlobal",
        "Create new items and store them to the weapon holder.",
        "rearmTruckOne addItemCargo ['optic_ARCO', 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addItemCargoGlobal [item, count]",
    ],
    [
        "u",
        "additempool",
        "addItemPool",
        "Adds count items of type name into the weapon pool (used in the campaign to transfer weapons to the next mission).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "addItemPool array",
    ],
    [
        "b",
        "additemtobackpack",
        "addItemToBackpack",
        "Create new item and store it to soldier's backpack",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addItemToBackpack item",
    ],
    [
        "b",
        "additemtouniform",
        "addItemToUniform",
        "Create new item and store it to soldier's uniform",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addItemToUniform item",
    ],
    [
        "b",
        "additemtovest",
        "addItemToVest",
        "Create new item and store it to soldier's vest",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addItemToVest item",
    ],
    [
        "b",
        "addlivestats",
        "addLiveStats",
        "Xbox Live MP only: adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle).",
        "player addLiveStats 10",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit addLiveStats score",
    ],
    [
        "b",
        "addmagazine",
        "addMagazine",
        "Adds a magazine to the unit. Note: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined.",
        "player addMagazine 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addMagazine magazineName",
    ],
    [
        "b",
        "addmagazine",
        "addMagazine",
        "Adds a magazine to the unit and sets ammo count. Note: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined.",
        "player addMagazine ['M16',15]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addMagazine [magazineName, ammo count]",
    ],
    [
        "b",
        "addmagazineammocargo",
        "addMagazineAmmoCargo",
        "Adds magazines to the weapon cargo space. This is used for infantry weapons.  MP synchronized. The format of magazines is [magazineName, count, ammo]\nFor magazineName values see <cl>CfgWeapons</cl>.",
        "rearmTruckOne addMagazineAmmoCargo ['LMG_Mk200_F', 2,12]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addMagazineAmmoCargo magazines",
    ],
    [
        "b",
        "addmagazinecargo",
        "addMagazineCargo",
        "Adds magazines to the weapon cargo space. This is used for infantry weapons. The format of magazines is [magazineName, count]\nFor magazineName values see <cl>CfgWeapons</cl>.",
        "rearmTruckOne addMagazineCargo ['M16', 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addMagazineCargo magazines",
    ],
    [
        "b",
        "addmagazinecargoglobal",
        "addMagazineCargoGlobal",
        "Adds magazines to the weapon cargo space. This is used for infantry weapons.  MP synchronized. The format of magazines is [magazineName, count]\nFor magazineName values see <cl>CfgWeapons</cl>.",
        "rearmTruckOne addMagazineCargo ['M16', 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addMagazineCargoGlobal magazines",
    ],
    [
        "b",
        "addmagazineglobal",
        "addMagazineGlobal",
        "Adds a magazine to the unit. Note: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined.",
        "player addMagazineGlobal 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addMagazineGlobal magazineName",
    ],
    [
        "u",
        "addmagazinepool",
        "addMagazinePool",
        "Adds count magazines of type name into the weapon pool (used in the campaign to transfer weapons to the next mission).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "addMagazinePool array",
    ],
    [
        "b",
        "addmagazines",
        "addMagazines",
        "Adds magazines to the unit.",
        "player addMagazines ['magazine name',count]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addMagazines [magazineName, count]",
    ],
    [
        "b",
        "addmagazineturret",
        "addMagazineTurret",
        "Adds a magazine to the turret. Use turret path [-1] for driver's turret. Note: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined.",
        "player addMagazine 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "transport addMagazineTurret [magazineName, turret path, (ammo count)]",
    ],
    [
        "b",
        "addmenu",
        "addMenu",
        "Adds a new menu button. Priority is optional.",
        "",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "map addMenu [text,priority]",
    ],
    [
        "b",
        "addmenuitem",
        "addMenuItem",
        "Creates a new menu item. Menu can be 'file' or 'view', index is index as returned from addMenu command. priority is optional and determines where in the menu the item will reside (higher priority items first).",
        "",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "map addMenuItem [menu or index,text,command,priority]",
    ],
    [
        "u",
        "addmissioneventhandler",
        "addMissionEventHandler",
        "Adds mission event handler. Every event will create an array named _this, which contains specific information about the particular event. The index of the currently added handler is returned.",
        "_id = addMissionEventHandler ['ended',{_this exec 'missionEnded.sqs'}]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "addMissionEventHandler [type, command(, args)]",
    ],
    [
        "b",
        "addmpeventhandler",
        "addMPEventHandler",
        "The format of handler is [type,command]. Check scripting topic Event handlers for more information. The index of the currently added handler is returned.",
        "player addMPEventHandler ['mpkilled',{_this exec 'playerKilled.sqs'}]",
        "",
        "SCALAR,NOTHING",
        "OBJECT",
        "ARRAY",
        "object addMPEventHandler handler",
    ],
    [
        "u",
        "addmusiceventhandler",
        "addMusicEventHandler",
        "Add an music track event handler. Returns id of the handler or -1 when failed.",
        "_id = addMusicEventHandler ['MusicStart', 'hint format['Sample %1 start', _this select 0]']",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "addMusicEventHandler [type, function]",
    ],
    [
        "u",
        "addonfiles",
        "addonFiles",
        "Returns the list of files contained in the addon",
        "addonFiles ['a3\3den', '.paa']",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "addonFiles [pboPrefix, (fileExtension)]",
    ],
    [
        "b",
        "addownedmine",
        "addOwnedMine",
        "Set ownership over a remotely detonatable mine to the unit.",
        "player addOwnedMine SuperMine",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "unit addOwnedMine item",
    ],
    [
        "b",
        "addplayerscores",
        "addPlayerScores",
        "MP server only: adds player score.",
        "unit addPlayerScores [0, 1, 0, 0, 1];",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addPlayerScores [killsInfantry , killsSoft, killsArmor, killsAir, killed]",
    ],
    [
        "b",
        "addprimaryweaponitem",
        "addPrimaryWeaponItem",
        "Adds item to the weapon cargo space of primary weapon.",
        "player addPrimaryWeaponItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addPrimaryWeaponItem item",
    ],
    [
        "b",
        "addpublicvariableeventhandler",
        "addPublicVariableEventHandler",
        "Create an event handler for given variable. The event handler will be executed when some client in MP exports a variable using publicVariable on all clients except the publishing one.",
        "'alarm' addPublicVariableEventHandler {_this execVM 'alarm.sqf'}",
        "",
        "NOTHING",
        "STRING",
        "CODE",
        "name addPublicVariableEventHandler code",
    ],
    [
        "b",
        "addpublicvariableeventhandler",
        "addPublicVariableEventHandler",
        "Create an event handler for given variable. The event handler will be executed when some client in MP exports a variable using publicVariable on all clients except the publishing one. For namespaces, only missionNamespace is allowed as a target.",
        "'alarm' addPublicVariableEventHandler [grp, {_this execVM 'alarm.sqf'}]",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "name addPublicVariableEventHandler [target, code]",
    ],
    [
        "b",
        "addrating",
        "addRating",
        "Adds number to the unit rating. This is usually used to reward for completed mission objectives. The rating for killed enemies and killed friendlies is adjusted automatically. When the rating is lower than zero, a unit is considered 'renegade' and is an enemy to everyone.",
        "player addRating 1000",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit addRating number",
    ],
    [
        "b",
        "addresources",
        "addResources",
        "Add (register) resources to the team member.",
        "teamMember _agent addResources ['Arms', 'Legs']",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "ARRAY",
        "teamMember addResources [resource1, resource2, ...]",
    ],
    [
        "b",
        "addscore",
        "addScore",
        "MP only: adds unit score. This is shown in the 'I' MP screen as the total score.",
        "player addScore 10",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit addScore score",
    ],
    [
        "b",
        "addscoreside",
        "addScoreSide",
        "MP only: adds side score. This is shown in the 'I' MP screen as the total score.",
        "side addScore 10",
        "",
        "NOTHING",
        "SIDE",
        "SCALAR",
        "side addScoreSide score",
    ],
    [
        "b",
        "addsecondaryweaponitem",
        "addSecondaryWeaponItem",
        "Adds item to the weapon cargo space of secondary weapon.",
        "player addSecondaryWeaponItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addSecondaryWeaponItem item",
    ],
    [
        "u",
        "addswitchableunit",
        "addSwitchableUnit",
        "Add a unit into the list of units available for team switch.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "addSwitchableUnit person",
    ],
    [
        "b",
        "addteammember",
        "addTeamMember",
        "Add given member to given team.",
        "_team addTeamMember _teamMember",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "TEAM_MEMBER",
        "team addTeamMember member",
    ],
    [
        "u",
        "addtoremainscollector",
        "addToRemainsCollector",
        "Flags given objects to me managed by unitRemove manager",
        "addToRemainsCollector [unit1, unit2]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "addToRemainsCollector array",
    ],
    [
        "b",
        "addtorque",
        "addTorque",
        "Applies torque to given object. Torque is defined as vector [x, y, z] applied in world space.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle addTorque [x, z, y]",
    ],
    [
        "b",
        "adduniform",
        "addUniform",
        "Create a new uniform and try to link it into uniform slot(given uniform has to be supported by allowedUniforms list of target soldier).",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addUniform type",
    ],
    [
        "u",
        "adduseractioneventhandler",
        "addUserActionEventHandler",
        "addUserActionEventHandler ['Reload', 'Activate', { systemChat 'reloading!'; }];",
        "",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "addUserActionEventHandler [keyName, eventType, expression]",
    ],
    [
        "b",
        "addvehicle",
        "addVehicle",
        "Tells the group it owns the vehicle now.",
        "",
        "",
        "NOTHING",
        "GROUP",
        "OBJECT",
        "group addVehicle vehicle",
    ],
    [
        "b",
        "addvest",
        "addVest",
        "Create a new vest and try to link it into vest slot.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addVest type",
    ],
    [
        "b",
        "addwaypoint",
        "addWaypoint",
        "Adds (or inserts when index is given) a new waypoint to a group. The waypoint is placed randomly in a circle with the given center and radius. The function returns a waypoint with format [group, index].",
        "grp addWaypoint [position player, 0]",
        "",
        "ARRAY",
        "GROUP",
        "ARRAY",
        "group addWaypoint [center, radius] or [center, radius, index] or [center, radius, index, name]",
    ],
    [
        "b",
        "addweapon",
        "addWeapon",
        "Adds the weapon to the unit. Note: you may create invalid combinations by using this function, for example by adding two rifles. When doing so, application behaviour is undefined.",
        "player addWeapon 'AK74'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addWeapon weaponName",
    ],
    [
        "b",
        "addweaponcargo",
        "addWeaponCargo",
        "Adds weapons to the weapon cargo space. This is used for infantry weapons. The format of weapons is [weaponName, count]\nFor weaponName values see <cl>CfgWeapons</cl>.",
        "rearmTruckOne addWeaponCargo ['M16', 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addWeaponCargo weapons",
    ],
    [
        "b",
        "addweaponcargoglobal",
        "addWeaponCargoGlobal",
        "Adds weapons to the weapon cargo space. This is used for infantry weapons.  MP synchronized. The format of weapons is [weaponName, count]\nFor weaponName values see <cl>CfgWeapons</cl>.",
        "rearmTruckOne addWeaponCargo ['M16', 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addWeaponCargoGlobal weapons",
    ],
    [
        "b",
        "addweaponglobal",
        "addWeaponGlobal",
        "Adds the weapon to the unit. Note: you may create invalid combinations by using this function, for example by adding two rifles. When doing so, application behaviour is undefined.",
        "player addWeaponGlobal 'AK74'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit addWeaponGlobal weaponName",
    ],
    [
        "b",
        "addweaponitem",
        "addWeaponItem",
        "Adds item to the weapon cargo space of a given weapon.",
        "player addWeaponItem ['WeaponClassName','ItemClassName',]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addWeaponItem [weapon,item,instant = false]",
    ],
    [
        "u",
        "addweaponpool",
        "addWeaponPool",
        "Adds count weapons of type name into the weapon pool (used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "addWeaponPool [name, count]",
    ],
    [
        "b",
        "addweaponturret",
        "addWeaponTurret",
        "Adds the weapon to the given vehicle's turret. ",
        "vehicle player addWeaponTurret ['Horn',[0,0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle addWeaponTurret [weaponName,turret array]",
    ],
    [
        "b",
        "addweaponwithattachmentscargo",
        "addWeaponWithAttachmentsCargo",
        "Adds weapons with attachments to the unit's cargo space. This is used for infantry weapons.",
        "container addWeaponWithAttachmentsCargo [[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod], weaponsCount]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addWeaponWithAttachmentsCargo weapons",
    ],
    [
        "b",
        "addweaponwithattachmentscargoglobal",
        "addWeaponWithAttachmentsCargoGlobal",
        "Adds weapons with attachments to the unit's cargo space. This is used for infantry weapons.  MP synchronized.",
        "container addWeaponWithAttachmentsCargo [[weapon, muzzle, flashlight, optics, [primaryMuzzleMagazine, ammoCount], [secondaryMuzzleMagazine, ammoCount], bipod], weaponsCount]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit addWeaponWithAttachmentsCargoGlobal weapons",
    ],
    [
        "u",
        "admin",
        "admin",
        "Returns current admin state of the client: 0 - not admin, 1 - voted admin, 2 - logged in admin",
        "admin 3",
        "2",
        "SCALAR",
        "",
        "SCALAR",
        "admin ownerID",
    ],
    [
        "u",
        "agent",
        "agent",
        "Return a person for given agent.",
        "_person = agent _agent",
        "",
        "OBJECT",
        "",
        "TEAM_MEMBER",
        "agent agent",
    ],
    [
        "n",
        "agents",
        "agents",
        "Return a list of agents in the current mission.",
        "_agents = agents",
        "",
        "ARRAY",
        "",
        "",
        "agents",
    ],
    [
        "u",
        "agltoasl",
        "AGLToASL",
        "Converts a position from <ar>Position</ar> to <ar>PositionASL</ar> format.",
        "AGLToASL (player modelToWorld [0,0,0])",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "AGLToASL posAGL",
    ],
    [
        "b",
        "aimedattarget",
        "aimedAtTarget",
        "Returns how good is weapon aimed to target.",
        "bool = vehicle AimedAtTarget [target]; bool = vehicle AimedAtTarget [target,1]",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "vehicle aimedAtTarget [target, weapon]",
    ],
    [
        "u",
        "aimpos",
        "aimPos",
        "Returns the position of the object other units can aim to in format <ar>PositionASL</ar>.",
        "aimPos player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "aimPos obj",
    ],
    [
        "n",
        "airdensitycurvertd",
        "airDensityCurveRTD",
        "Returns air density curve graph.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "airDensityCurveRTD",
    ],
    [
        "u",
        "airdensityrtd",
        "airDensityRTD",
        "Returns air density in given altitude.",
        "",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "airDensityRTD altitude",
    ],
    [
        "u",
        "airplanethrottle",
        "airplaneThrottle",
        "Get wanted throttle position",
        "return position of throttle.",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "airplaneThrottle airplane",
    ],
    [
        "u",
        "airportside",
        "airportSide",
        "Checks a side of the airport.",
        "airportSide 0",
        "west",
        "SIDE",
        "",
        "SCALAR,OBJECT",
        "airportSide airportId",
    ],
    [
        "u",
        "aisfinishheal",
        "AISFinishHeal",
        "AIS end state.",
        "AISFinishHeal [wounded,medic,true]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "AISFinishHeal [unit,unit,bool]",
    ],
    [
        "u",
        "alive",
        "alive",
        "Checks whether the given person, vehicle or building is't dead / destroyed.",
        "alive player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "alive obj",
    ],
    [
        "n",
        "all3denentities",
        "all3DENEntities",
        "Returns array with all registered entities in format: [<objects>,<groups>,<triggers>,<logics>,<waypoints>,<markers>]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "all3DENEntities",
    ],
    [
        "n",
        "allactivetitleeffects",
        "allActiveTitleEffects",
        "Returns a list of all layers that have currently active title effect",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allActiveTitleEffects",
    ],
    [
        "n",
        "alladdonsinfo",
        "allAddonsInfo",
        "Returns the list of all loaded addons in format [prefix, version, isPatched]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allAddonsInfo",
    ],
    [
        "n",
        "allairports",
        "allAirports",
        "Return array of all airports in format [[static1, static2,..],[dyn1, dyn2,..]] ",
        "_list = allAirports",
        "",
        "ARRAY",
        "",
        "",
        "allAirports",
    ],
    [
        "u",
        "allcontrols",
        "allControls",
        "Returns a list of all controls from given display.",
        "",
        "",
        "ARRAY",
        "",
        "DISPLAY",
        "allControls display",
    ],
    [
        "u",
        "allcontrols",
        "allControls",
        "Returns a list of all controls from given controls group.",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "allControls controlGroup",
    ],
    [
        "n",
        "allcurators",
        "allCurators",
        "Returns list of all curators.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allCurators",
    ],
    [
        "n",
        "allcutlayers",
        "allCutLayers",
        "Returns a list of all layer names currently used by cutXXXX commands.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allCutLayers",
    ],
    [
        "n",
        "alldead",
        "allDead",
        "Return a list of dead units and destroyed vehicles. Dead unit might be inside vehicle.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allDead",
    ],
    [
        "n",
        "alldeadmen",
        "allDeadMen",
        "Return a list of dead units. Dead unit might be inside vehicle.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allDeadMen",
    ],
    [
        "b",
        "alldiaryrecords",
        "allDiaryRecords",
        "Returns a list of all diary records available for given subject.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "person allDiaryRecords subject",
    ],
    [
        "u",
        "alldiarysubjects",
        "allDiarySubjects",
        "Returns a list of all diary subjects available to given person.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "allDiarySubjects person",
    ],
    [
        "n",
        "alldisplays",
        "allDisplays",
        "Returns list of all displays registered in engine.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allDisplays",
    ],
    [
        "n",
        "allenv3dsoundsources",
        "allEnv3DSoundSources",
        "Returns all environmental 3D sound sources in camera vicinity",
        "allEnv3DSoundSources",
        "",
        "ARRAY",
        "",
        "",
        "allEnv3DSoundSources",
    ],
    [
        "n",
        "allgroups",
        "allGroups",
        "Return a list of all groups.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allGroups",
    ],
    [
        "u",
        "alllods",
        "allLODs",
        "Returns a list of all object LODs and their resolutions.",
        "allLODs _myrifle",
        "",
        "ARRAY",
        "",
        "STRING,OBJECT",
        "allLODs objectOrModel",
    ],
    [
        "n",
        "allmapmarkers",
        "allMapMarkers",
        "Returns all markers in map.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allMapMarkers",
    ],
    [
        "n",
        "allmines",
        "allMines",
        "Returns an array of all mines in game.",
        "allMines",
        "[listOfAllMines]",
        "ARRAY",
        "",
        "",
        "allMines",
    ],
    [
        "u",
        "allmissionobjects",
        "allMissionObjects",
        "Returns all mission objects with given type. ",
        "allMissionObjects 'Air'",
        "",
        "ARRAY",
        "",
        "STRING",
        "allMissionObjects type",
    ],
    [
        "b",
        "allobjects",
        "allObjects",
        "Returns array of matching objects depending on the passed arguments",
        "-1 allObjects 0",
        "",
        "ARRAY",
        "SCALAR",
        "SCALAR",
        "objectType allObjects objectKind",
    ],
    [
        "b",
        "allow3dmode",
        "allow3DMode",
        "Allow/dissallow 3D mode.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "map allow3DMode bool",
    ],
    [
        "b",
        "allowcrewinimmobile",
        "allowCrewInImmobile",
        "If true, units can be in vehicle with broken tracks/wheels.",
        "vehicle allowCrewInImmobile true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL,ARRAY",
        "vehicle allowCrewInImmobile enable or [enable, force]",
    ],
    [
        "b",
        "allowcuratorlogicignoreareas",
        "allowCuratorLogicIgnoreAreas",
        "Allow curator placing and working with modules outside of edit areas.",
        "curator allowCuratorLogicIgnoreAreas true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "curatorObj allowCuratorLogicIgnoreAreas allow?",
    ],
    [
        "b",
        "allowdamage",
        "allowDamage",
        "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as setHit, setHitIndex, setHitPointDamage or setDamage.",
        "player allowDamage false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "obj allowDamage allow",
    ],
    [
        "b",
        "allowdammage",
        "allowDammage",
        "See allowDamage",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "obj allowDammage allow",
    ],
    [
        "b",
        "allowfileoperations",
        "allowFileOperations",
        "Allows/disallows file operations like loading and saving.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "map allowFileOperations bool",
    ],
    [
        "b",
        "allowfleeing",
        "allowFleeing",
        "Sets the group courage. The less courage, the sooner the group will start fleeing. 0 means maximum courage, while 1 means always fleeing.",
        "soldierOne allowFleeing 0",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "SCALAR",
        "unit allowFleeing courage",
    ],
    [
        "b",
        "allowgetin",
        "allowGetIn",
        "Allows the getting in of vehicles of all units in the list.",
        "[unitOne, unitTwo] allowGetIn false",
        "",
        "NOTHING",
        "ARRAY",
        "BOOL",
        "unitArray allowGetIn allow",
    ],
    [
        "b",
        "allowsprint",
        "allowSprint",
        "Force player to run/jog if set to false.",
        "player allowSprint false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "player allowSprint enabled",
    ],
    [
        "n",
        "allplayers",
        "allPlayers",
        "Return a list of all players.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allPlayers",
    ],
    [
        "u",
        "allsimpleobjects",
        "allSimpleObjects",
        "Returns a list of simple objects with given type. ",
        "allSimpleObjects ['B_Heli_Transport_01_F']",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "allSimpleObjects type",
    ],
    [
        "n",
        "allsites",
        "allSites",
        "Return a list of all sites.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allSites",
    ],
    [
        "u",
        "allturrets",
        "allTurrets",
        "Returns array with turrets in given vehicle. TRUE FALSE stands for return person turrets",
        "allTurrets [vehicle player, true]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "allTurrets [vehicle, includePersonTurrets]",
    ],
    [
        "u",
        "allturrets",
        "allTurrets",
        "Returns array with turrets in given vehicle",
        "allTurrets vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "allTurrets vehicle",
    ],
    [
        "n",
        "allunits",
        "allUnits",
        "Return a list of all units (all persons except agents).",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allUnits",
    ],
    [
        "n",
        "allunitsuav",
        "allUnitsUAV",
        "Return a list of all UAV units.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "allUnitsUAV",
    ],
    [
        "n",
        "allusers",
        "allUsers",
        "Returns player ids of all server users in the lobby or in game. Server side execution.",
        "allUsers",
        "",
        "ARRAY",
        "",
        "",
        "allUsers",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables stored in given map.",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "allVariables map",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables stored in given display.",
        "",
        "",
        "ARRAY",
        "",
        "DISPLAY",
        "allVariables display",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables stored in given teamMember.",
        "",
        "",
        "ARRAY",
        "",
        "TEAM_MEMBER",
        "allVariables teamMember",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables in given namespace. UI and profile namespaces are excluded",
        "",
        "",
        "ARRAY",
        "",
        "NAMESPACE",
        "allVariables missionNameSpace",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables stored in given object.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "allVariables object",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables stored in given group.",
        "",
        "",
        "ARRAY",
        "",
        "GROUP",
        "allVariables group",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables stored in given task.",
        "",
        "",
        "ARRAY",
        "",
        "TASK",
        "allVariables task",
    ],
    [
        "u",
        "allvariables",
        "allVariables",
        "Returns a list of all variables stored in given location.",
        "",
        "",
        "ARRAY",
        "",
        "LOCATION",
        "allVariables location",
    ],
    [
        "n",
        "ambienttemperature",
        "ambientTemperature",
        "Returns ambient temperature in format [airTemp, blackSurfaceTemp, whiteSurfaceTemp]",
        "ambientTemperature",
        "",
        "ARRAY",
        "",
        "",
        "ambientTemperature",
    ],
    [
        "b",
        "ammo",
        "ammo",
        "Counts how many shots the unit has left for the currently loaded magazine of given muzzle type.",
        "player ammo 'M16'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "gunner or vehicle ammo muzzle",
    ],
    [
        "b",
        "ammoonpylon",
        "ammoOnPylon",
        "returns ammo count on given pylon",
        "hint str (vehicle player AmmoOnPylon 'pylonCenter')",
        "",
        "SCALAR",
        "OBJECT",
        "SCALAR,STRING",
        "vehicle ammoOnPylon pylon name/index",
    ],
    [
        "b",
        "and",
        "and",
        "a and b",
        "alive player and alive leader player",
        "",
        "BOOL",
        "BOOL",
        "BOOL",
        "a and b",
    ],
    [
        "b",
        "and",
        "and",
        "a and b, b evaluated only when a is true",
        "alive player and alive leader player",
        "",
        "BOOL",
        "BOOL",
        "CODE",
        "a and b",
    ],
    [
        "b",
        "animate",
        "animate",
        "Process animation on object. Animation is defined in config file. Wanted animation phase is set to phase.",
        "house animate ['doors1', 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object animate [animation, phase, instant = false or speedCoef = 1.0]",
    ],
    [
        "b",
        "animatebay",
        "animateBay",
        "force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state = 1",
        "vehicle player AnimateBay ['pylonLeft1', 0.5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle animateBay [pylon name/index, anim phase (0-1)]",
    ],
    [
        "b",
        "animatedoor",
        "animateDoor",
        "Process animation of door on vehicle. Animation is defined in config file. Wanted animation phase is set to phase.",
        "heli animateDoor ['doors1', 1, false]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object animateDoor [doorname, phase, now]",
    ],
    [
        "b",
        "animatepylon",
        "animatePylon",
        "force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when pylon state = 1",
        "vehicle player AnimatePylon [1, 0.5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle animatePylon [pylon name/index, anim phase (0-1)]",
    ],
    [
        "b",
        "animatesource",
        "animateSource",
        "Process animation on object. Animation is defined by source name in model config.",
        "house animateSource ['AllDoors', 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object animateSource [animation, phase, instant = false]",
    ],
    [
        "u",
        "animationnames",
        "animationNames",
        "returns list of animation than command Animate should accept",
        "animationNames object",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "animationNames entity",
    ],
    [
        "b",
        "animationphase",
        "animationPhase",
        "Return animation phase of animation on object.",
        "house animationPhase 'doors1'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "object animationPhase animation",
    ],
    [
        "b",
        "animationsourcephase",
        "animationSourcePhase",
        "Return animation phase (started by 'animateSource') of animation on object.",
        "house animationSourcePhase 'AllDoors'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "object animationSourcePhase animation",
    ],
    [
        "u",
        "animationstate",
        "animationState",
        "Return the name of the current primary animation.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "animationState man",
    ],
    [
        "n",
        "apertureparams",
        "apertureParams",
        "Returns various aperture related params.",
        "_return = appertureParams",
        "",
        "ARRAY",
        "",
        "",
        "apertureParams",
    ],
    [
        "b",
        "append",
        "append",
        "Appends arrayB to arrayA",
        "arrayA=[0, 1]; arrayA append [2, 3]",
        "[0, 1, 2, 3] in arrayA",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "arrayA append arrayB",
    ],
    [
        "b",
        "apply",
        "apply",
        "Applies code to each element of array and returns resulting array",
        "[1,2,3] apply {_x * 2}",
        "",
        "ARRAY",
        "ARRAY",
        "CODE",
        "array apply code",
    ],
    [
        "b",
        "apply",
        "apply",
        "Executes the given code for each element in HashMap.",
        "",
        "",
        "ARRAY",
        "HASHMAP",
        "CODE",
        "HashMap apply code",
    ],
    [
        "n",
        "armorypoints",
        "armoryPoints",
        "Return the stored value of armory points.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "armoryPoints",
    ],
    [
        "b",
        "arrayintersect",
        "arrayIntersect",
        "Returns array containing common and also elements for both arrays",
        "[1, 1, 2, 1, 5] arrayIntersect [1, 1, 2, 6]",
        "[1, 2]",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "array arrayIntersect array",
    ],
    [
        "u",
        "asin",
        "asin",
        "The arcsine of x, the result is in degrees.",
        "asin 0.5",
        "30",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "asin x",
    ],
    [
        "u",
        "asltoagl",
        "ASLToAGL",
        "Converts a position from <ar>PositionASL</ar> to <ar>Position</ar> format.",
        "ASLToAGL getPosASL player",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "ASLToAGL posASL",
    ],
    [
        "u",
        "asltoatl",
        "ASLToATL",
        "Converts a position from <ar>PositionASL</ar> to <ar>Position</ar> format.",
        "ASLToATL getPosASL player",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "ASLToATL pos",
    ],
    [
        "u",
        "assert",
        "assert",
        "Tests a condition and if the condition is false, halts the program.",
        "assert (_x>0)",
        "",
        "BOOL",
        "",
        "BOOL",
        "assert condition",
    ],
    [
        "b",
        "assignascargo",
        "assignAsCargo",
        "Assigns the soldier to the cargo / passenger space of the given vehicle.",
        "player assignAsCargo tankOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier assignAsCargo vehicle",
    ],
    [
        "b",
        "assignascargoindex",
        "assignAsCargoIndex",
        "Assigns the character to a specific cargo / passenger index of the given vehicle.",
        "player assignAsCargoIndex [tankOne,1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "soldier assignAsCargoIndex [vehicle, index]",
    ],
    [
        "b",
        "assignascommander",
        "assignAsCommander",
        "Assigns the soldier as commander of the given vehicle.",
        "player assignAsCommander tankOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier assignAsCommander vehicle",
    ],
    [
        "b",
        "assignasdriver",
        "assignAsDriver",
        "Assigns the soldier as driver of the given vehicle.",
        "player assignAsDriver tankOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier assignAsDriver vehicle",
    ],
    [
        "b",
        "assignasgunner",
        "assignAsGunner",
        "Assigns the soldier as gunner of the given vehicle.",
        "player assignAsGunner tankOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier assignAsGunner vehicle",
    ],
    [
        "b",
        "assignasturret",
        "assignAsTurret",
        "Assigns the soldier to turret.",
        "player assignAsTurret [tankOne, [0,0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit assignAsTurret [vehicle, [turretPath]]",
    ],
    [
        "b",
        "assigncurator",
        "assignCurator",
        "Assign player as curator. 2 players cannot act as one Zeus.",
        "player assignCurator curator",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "player assignCurator curatorObj",
    ],
    [
        "u",
        "assignedcargo",
        "assignedCargo",
        "Returns the list of soldiers assigned to the given vehicle as a cargo.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "assignedCargo vehicle",
    ],
    [
        "u",
        "assignedcommander",
        "assignedCommander",
        "Returns the soldier assigned to the given vehicle as a commander.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "assignedCommander vehicle",
    ],
    [
        "u",
        "assigneddriver",
        "assignedDriver",
        "Returns the soldier assigned to the given vehicle as a driver.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "assignedDriver vehicle",
    ],
    [
        "u",
        "assignedgunner",
        "assignedGunner",
        "Returns the soldier assigned to the given vehicle as a gunner.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "assignedGunner vehicle",
    ],
    [
        "u",
        "assigneditems",
        "assignedItems",
        "Get array with all assigned items.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "assignedItems unit",
    ],
    [
        "u",
        "assignedtarget",
        "assignedTarget",
        "Return the target assigned to the vehicle.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "assignedTarget vehicle",
    ],
    [
        "u",
        "assignedteam",
        "assignedTeam",
        "Checks which team the vehicle (its commander unit) belongs to.",
        "assignedTeam soldier2",
        "MAIN",
        "STRING",
        "",
        "OBJECT",
        "assignedTeam vehicle",
    ],
    [
        "u",
        "assignedvehicle",
        "assignedVehicle",
        "Return the vehicle person is assigned to.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "assignedVehicle person",
    ],
    [
        "u",
        "assignedvehiclerole",
        "assignedVehicleRole",
        "Return the position in vehicle person is assigned to.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "assignedVehicleRole person",
    ],
    [
        "b",
        "assignitem",
        "assignItem",
        "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit assignItem item",
    ],
    [
        "b",
        "assignteam",
        "assignTeam",
        "Assigns the vehicle (specifically its commander unit) to the given team. The possible team values are: 'MAIN', 'RED', 'GREEN', 'BLUE' and 'YELLOW'.",
        "soldier2 assignTeam 'RED'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "vehicle assignTeam team",
    ],
    [
        "b",
        "assigntoairport",
        "assignToAirport",
        "Set airport to be used by AI on getout",
        "plane assignToAirport 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR,OBJECT",
        "airplane assignToAirport airportId",
    ],
    [
        "u",
        "atan",
        "atan",
        "The arctangens of x, the result is in degrees.",
        "atan 1",
        "45",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "atan x",
    ],
    [
        "b",
        "atan2",
        "atan2",
        "Returns the arctangens of x/y. The returned value is in degrees, in the range from -180 to +180, using the signs of both parameters to determine the quadrant of the returned value.",
        "5 atan2 3",
        "59.0362",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "x atan2 y",
    ],
    [
        "u",
        "atg",
        "atg",
        "The arctangens of x, the result is in degrees.",
        "atg 1",
        "45",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "atg x",
    ],
    [
        "u",
        "atltoasl",
        "ATLToASL",
        "Converts a position from <ar>Position</ar> to <ar>PositionASL</ar> format.",
        "ATLToASL getPosATL player",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "ATLToASL pos",
    ],
    [
        "u",
        "attachedobject",
        "attachedObject",
        "Return object attached to given location.",
        "",
        "",
        "OBJECT",
        "",
        "LOCATION",
        "attachedObject location",
    ],
    [
        "u",
        "attachedobjects",
        "attachedObjects",
        "Returns list of objects attached to the entity.",
        "attachedObjects player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "attachedObjects entity",
    ],
    [
        "u",
        "attachedto",
        "attachedTo",
        "Returns the object the entity is attach to.",
        "attachedTo player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "attachedTo entity",
    ],
    [
        "b",
        "attachobject",
        "attachObject",
        "Attach a object to given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "OBJECT",
        "location attachObject object",
    ],
    [
        "b",
        "attachto",
        "attachTo",
        "Attaches an object to another object. The offset is applied to the object center unless a memory point is provided.",
        "player attachTo [car, [0,2,0],hatch1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj attachTo [obj,offset,MemPoint, followBone]",
    ],
    [
        "u",
        "attackenabled",
        "attackEnabled",
        "Return whether leader can issue attack commands.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT,GROUP",
        "attackEnabled group",
    ],
    [
        "b",
        "awake",
        "awake",
        "Awakes PhysX object or puts it to sleep",
        "car1 awake true;",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "entity awake awake",
    ],
    [
        "u",
        "backpack",
        "backpack",
        "Returns a class of a backpack.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "backpack unit",
    ],
    [
        "u",
        "backpackcargo",
        "backpackCargo",
        "Get array with backpacks from ammo box (or any general weapon holder container).",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "backpackCargo box",
    ],
    [
        "u",
        "backpackcontainer",
        "backpackContainer",
        "Returns container of a backpack.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "backpackContainer unit",
    ],
    [
        "u",
        "backpackitems",
        "backpackItems",
        "Get array with all items from backpack.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "backpackItems unit",
    ],
    [
        "u",
        "backpackmagazines",
        "backpackMagazines",
        "Get array with all magazines from vest.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "backpackMagazines unit",
    ],
    [
        "b",
        "backpackspacefor",
        "backpackSpaceFor",
        "Returns how much space is in backpack for given weapon or magazine.",
        "[weapons, magazines] = backpack backpackSpaceFor 'm16'",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "backpack backpackSpaceFor weapon or magazine type",
    ],
    [
        "u",
        "behaviour",
        "behaviour",
        "Returns the behaviour mode of the given unit ('CARELESS','SAFE','AWARE','COMBAT' or 'STEALTH').",
        "behaviour player",
        "",
        "STRING",
        "",
        "OBJECT",
        "behaviour unit",
    ],
    [
        "n",
        "benchmark",
        "benchmark",
        "Returns the value of '3D performance' as it is in OFP preferences. This can be used to estimate computer performance. The function can be used to create missions that are able to adapt to computer peformance.",
        "? benchmark>2000 : setviewdistance 2000",
        "",
        "SCALAR",
        "",
        "",
        "benchmark",
    ],
    [
        "b",
        "bezierinterpolation",
        "bezierInterpolation",
        "Gets interpolated value based on bezier curve with given control points (progress is 0-1)",
        "",
        "",
        "ARRAY",
        "SCALAR",
        "ARRAY",
        "progress bezierInterpolation [[x1,y1], [xn, yn]]",
    ],
    [
        "u",
        "binocular",
        "binocular",
        "Returns name of currently used binocular.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "binocular unit",
    ],
    [
        "u",
        "binocularitems",
        "binocularItems",
        "Get array with all items assigned to a binocular weapon.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "binocularItems unit",
    ],
    [
        "u",
        "binocularmagazine",
        "binocularMagazine",
        "Return the names of the types of currently loaded magazines in given weapon.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "binocularMagazine vehicle",
    ],
    [
        "n",
        "blufor",
        "blufor",
        "Pre-defined variable for the blufor side.",
        "",
        "",
        "SIDE",
        "",
        "",
        "blufor",
    ],
    [
        "b",
        "boundingbox",
        "boundingBox",
        "Gets object bounding box with specified clipping (0-ClipVisual, 1-ClipShadow, 2-ClipGeometry, 3-ClipGeneral)",
        "",
        "",
        "ARRAY",
        "SCALAR",
        "OBJECT",
        "clippingType boundingBox object",
    ],
    [
        "u",
        "boundingbox",
        "boundingBox",
        "Returns a bounding box of given object in model coordinates space with size adjusted according to animation and destruction. The result is in format [[minX, minZ, minY], [maxX, maxZ, maxY]].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "boundingBox object",
    ],
    [
        "b",
        "boundingboxreal",
        "boundingBoxReal",
        "Gets object bounding box real with specified clipping (0-ClipVisual, 1-ClipShadow, 2-ClipGeometry, 3-ClipGeneral)",
        "",
        "",
        "ARRAY",
        "SCALAR",
        "OBJECT",
        "clippingType boundingBoxReal object",
    ],
    [
        "u",
        "boundingboxreal",
        "boundingBoxReal",
        "Returns a bounding box of given object in model coordinates space. The result is in format [[minX, minZ, minY], [maxX, maxZ, maxY]].",
        "boundingBoxReal cursorTarget",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "boundingBoxReal obj",
    ],
    [
        "u",
        "boundingcenter",
        "boundingCenter",
        "Returns the position of original (loaded) center of object in model coordinates.  The result is in format [x, z, y]",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "boundingCenter object",
    ],
    [
        "u",
        "brakesdisabled",
        "brakesDisabled",
        "Returns true if vehicle brakes are disabled",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "brakesDisabled vehicle",
    ],
    [
        "n",
        "break",
        "break",
        "Skips all loop iterations",
        "",
        "",
        "NOTHING",
        "",
        "",
        "break",
    ],
    [
        "b",
        "breakout",
        "breakOut",
        "Exits the given scope with given value",
        "call {scopeName 'main'; call {123 breakOut 'main'}}",
        "",
        "ANY",
        "ANY",
        "STRING",
        "anything breakOut scopename",
    ],
    [
        "u",
        "breakout",
        "breakOut",
        "Breaks block out scope named 'name'. Nil is returned.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "breakOut name",
    ],
    [
        "u",
        "breakto",
        "breakTo",
        "Breaks block to scope named 'name'. Nil is returned.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "breakTo name",
    ],
    [
        "u",
        "breakwith",
        "breakWith",
        "Skips all loop iterations.",
        "",
        "",
        "ANY",
        "",
        "ANY",
        "breakWith value",
    ],
    [
        "n",
        "briefingname",
        "briefingName",
        "Returns the name of the current briefing.",
        "",
        "",
        "STRING",
        "",
        "",
        "briefingName",
    ],
    [
        "b",
        "buildingexit",
        "buildingExit",
        "Returns the given indexed exit in a building. The returned value is in format <ar>Position</ar>.",
        "buildingExit [building, 1]",
        "",
        "ARRAY",
        "OBJECT",
        "SCALAR",
        "building buildingExit index",
    ],
    [
        "b",
        "buildingpos",
        "buildingPos",
        "Returns the given indexed position in a building. The returned value is in format <ar>Position</ar>.",
        "building buildingPos 1",
        "",
        "ARRAY",
        "OBJECT",
        "SCALAR",
        "building buildingPos index",
    ],
    [
        "u",
        "buldozer_enableroaddiag",
        "buldozer_EnableRoadDiag",
        "Enables road diagnostics in buldozer.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "buldozer_EnableRoadDiag enable",
    ],
    [
        "n",
        "buldozer_isenabledroaddiag",
        "buldozer_IsEnabledRoadDiag",
        "Returns true if road diag is enabled in buldozer.",
        "true/false",
        "",
        "BOOL",
        "",
        "",
        "buldozer_IsEnabledRoadDiag",
    ],
    [
        "u",
        "buldozer_loadnewroads",
        "buldozer_LoadNewRoads",
        "Generates new roads.",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "buldozer_LoadNewRoads path",
    ],
    [
        "n",
        "buldozer_reloadopermap",
        "buldozer_reloadOperMap",
        "Reload oper map visible in costMap diag tool.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "buldozer_reloadOperMap",
    ],
    [
        "u",
        "buttonaction",
        "buttonAction",
        "Returns the action assigned to the given button or active text. The action is any expression in this scripting language.",
        "_action = buttonAction _button",
        "",
        "STRING",
        "",
        "CONTROL",
        "buttonAction control",
    ],
    [
        "u",
        "buttonaction",
        "buttonAction",
        "Returns the action assigned to the control with id idc of the topmost user dialog. The action is any expression in this scripting language. The function can be used for buttons and active texts.",
        "_action = buttonAction 100",
        "",
        "STRING",
        "",
        "SCALAR",
        "buttonAction idc",
    ],
    [
        "b",
        "buttonsetaction",
        "buttonSetAction",
        "Assigns an action to the given button or active text. Action is any expression in this scripting language.",
        "_control buttonSetAction 'player exec ''reply.sqs'''",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control buttonSetAction action",
    ],
    [
        "u",
        "buttonsetaction",
        "buttonSetAction",
        "Assigns an action to the control with id idc of the topmost user dialog. Action is any expression in this scripting language. The function can be used for buttons and active texts.",
        "buttonSetAction [100, 'player exec ''reply.sqs''']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "buttonSetAction [idc, action]",
    ],
    [
        "n",
        "cadetmode",
        "cadetMode",
        "Returns true if the mission is played in cadet mode and false in veteran mode.",
        "",
        "",
        "BOOL",
        "",
        "",
        "cadetMode",
    ],
    [
        "u",
        "calculatepath",
        "calculatePath",
        "Calculates path for a vehicle",
        "veh = CalculatePath ['car', 'SAFE', [7000, 5000, 0], [7100, 5100, 0]]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "calculatePath [vehicleType, behaviour, startCoordinates, endCoordinates]",
    ],
    [
        "u",
        "calculateplayervisibilitybyfriendly",
        "calculatePlayerVisibilityByFriendly",
        "friendly units will/will not calculate visility of player",
        "calculatePlayerVisibilityByFriendly true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "calculatePlayerVisibilityByFriendly bool",
    ],
    [
        "b",
        "call",
        "call",
        "Executes the function body. Argument pars is passed as _this.",
        "[1,2] call {(_this select 0)+(_this select 1)}",
        "3",
        "ANY",
        "ANY",
        "CODE",
        "pars call body",
    ],
    [
        "u",
        "call",
        "call",
        "Executes the given code.",
        "call {'x=2'}",
        "",
        "ANY",
        "",
        "CODE",
        "call code",
    ],
    [
        "b",
        "callextension",
        "callExtension",
        "Execute an extension function",
        "handle = 'pipes' callExtension 'openPipe(pipe)'",
        "",
        "STRING",
        "STRING",
        "STRING",
        "extension callExtension functionWithArguments",
    ],
    [
        "b",
        "callextension",
        "callExtension",
        "Execute an extension function with additional arguments",
        "handle = 'pipes' callExtension ['openPipe',[arg1, ..., argN]]",
        "",
        "ARRAY",
        "STRING",
        "ARRAY",
        "extension callExtension functionWithArguments",
    ],
    [
        "b",
        "camcommand",
        "camCommand",
        "Executes a command on the given camera / actor object. The 'manual on' and 'manual off' commands are recognized for all types. For the 'camera' type, the following commands can be used: 'inertia on' and 'inertia off'. For the 'seagull' type it's one of: 'landed' and 'airborne'.",
        "_camera camCommand 'Manual on'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "camera camCommand command",
    ],
    [
        "b",
        "camcommit",
        "camCommit",
        "Commits the camera changes smoothly over time. A time of zero results in an immediate change.",
        "_camera camCommit 5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camCommit time",
    ],
    [
        "b",
        "camcommitprepared",
        "camCommitPrepared",
        "Commits the prepared camera changes smoothly over time. A time of zero results in an immediate change.",
        "_camera camCommit 5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camCommitPrepared time",
    ],
    [
        "u",
        "camcommitted",
        "camCommitted",
        "Checks whether the camera has finished committing.",
        "camCommitted _camera",
        "",
        "BOOL",
        "",
        "OBJECT",
        "camCommitted camera",
    ],
    [
        "b",
        "camconstuctionsetparams",
        "camConstuctionSetParams",
        "Sets construction camera parameters.",
        "_camera camConstuctionSetParams [getpos player,50,20]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camConstuctionSetParams [[x,y,z],radius, max above land]",
    ],
    [
        "b",
        "camcreate",
        "camCreate",
        "Creates a camera or an actor of the given type on the given initial position (format <ar>Position</ar>). Its type is one of 'CAMERA' or 'SEAGULL'.",
        "_camera = camCreate getPos player",
        "",
        "OBJECT",
        "STRING",
        "ARRAY",
        "type camCreate position",
    ],
    [
        "u",
        "camdestroy",
        "camDestroy",
        "Destroys the camera.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "camDestroy camera",
    ],
    [
        "b",
        "cameraeffect",
        "cameraEffect",
        "Switches the camera to the given vehicle / camera. The format of effect is [name, position]. Name is one of: 'Internal', 'External', 'Fixed' or 'FixedWithZoom'. Position is one of: 'TOP', 'LEFT', 'RIGHT', 'FRONT' or 'BACK' ('BACK' is normally used).",
        "cameraEffect ['External', 'Back']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera cameraEffect effect",
    ],
    [
        "u",
        "cameraeffectenablehud",
        "cameraEffectEnableHUD",
        "Enable / disable showing of in-game UI during currently active camera effect.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "cameraEffectEnableHUD enable",
    ],
    [
        "u",
        "camerainterest",
        "cameraInterest",
        "Return camera interest for given entity.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "cameraInterest entity",
    ],
    [
        "n",
        "cameraon",
        "cameraOn",
        "Returns the vehicle to which the camera is attached.",
        "",
        "",
        "OBJECT",
        "",
        "",
        "cameraOn",
    ],
    [
        "n",
        "cameraview",
        "cameraView",
        "Returns type of camera.",
        "",
        "",
        "STRING",
        "",
        "",
        "cameraView",
    ],
    [
        "n",
        "campaignconfigfile",
        "campaignConfigFile",
        "Return root of campaign description.ext entries hierarchy.",
        "",
        "",
        "CONFIG",
        "",
        "",
        "campaignConfigFile",
    ],
    [
        "b",
        "campreload",
        "camPreload",
        "Preload the scene for he prepared camera. Time gives timeout, zero means no (infinite) timeout.",
        "_camera camCommit 5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camPreload time",
    ],
    [
        "u",
        "campreloaded",
        "camPreloaded",
        "Checks whether the camera has finished preloading.",
        "camPreloaded _camera",
        "",
        "BOOL",
        "",
        "OBJECT",
        "camPreloaded camera",
    ],
    [
        "b",
        "campreparebank",
        "camPrepareBank",
        "Prepares the camera bank angle. See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareBank -0.1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camPrepareBank bank",
    ],
    [
        "b",
        "campreparedir",
        "camPrepareDir",
        "Prepares the camera heading. See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareDir 150",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camPrepareDir direction",
    ],
    [
        "b",
        "campreparedive",
        "camPrepareDive",
        "Prepares the camera dive angle. See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareDive -0.1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camPrepareDive dive",
    ],
    [
        "b",
        "campreparefocus",
        "camPrepareFocus",
        "focusRange is in format [distance,blur]\nPrepares the camera focus blur. See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareFocus [50, 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camPrepareFocus focusRange",
    ],
    [
        "b",
        "campreparefov",
        "camPrepareFov",
        "Prepares the camera field of view (zoom). See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareFov 0.1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camPrepareFov fieldOfView",
    ],
    [
        "b",
        "campreparefovrange",
        "camPrepareFovRange",
        "Prepares the camera field of view range for auto zooming. See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareFovRange [0.1, 0.5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camPrepareFovRange fovRange",
    ],
    [
        "b",
        "campreparepos",
        "camPreparePos",
        "Prepares the camera position (format <ar>Position</ar>). See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPreparePos getPos player",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camPreparePos position",
    ],
    [
        "b",
        "campreparerelpos",
        "camPrepareRelPos",
        "Prepares the camera position relative to the current position of the currect target (see <f>camPrepareTarget</f>). See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareRelPos [10,5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camPrepareRelPos position",
    ],
    [
        "b",
        "campreparetarget",
        "camPrepareTarget",
        "Prepares the camera target. See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareTarget player",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "camera camPrepareTarget target",
    ],
    [
        "b",
        "campreparetarget",
        "camPrepareTarget",
        "Prepares the camera target to a position (format <ar>Position</ar>). See also <f>camPreload</f> and <f>camCommitPrepared</f>.",
        "_camera camPrepareTarget getPos player",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camPrepareTarget position",
    ],
    [
        "b",
        "camsetbank",
        "camSetBank",
        "Sets the camera bank angle. It does not automatically commit changes.",
        "_camera camSetBank -0.1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camSetBank bank",
    ],
    [
        "b",
        "camsetdir",
        "camSetDir",
        "Sets the camera heading. It does not automatically commit changes.",
        "_camera camSetDir [1, 0, 0]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camSetDir direction",
    ],
    [
        "b",
        "camsetdive",
        "camSetDive",
        "Sets the camera dive angle. It does not automatically commit changes.",
        "_camera camSetDive -0.1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camSetDive dive",
    ],
    [
        "b",
        "camsetfocus",
        "camSetFocus",
        "focusRange is in format [distance,blur]\nSets the camera focus blur. It does not automatically commit changes.",
        "_camera camSetFocus [50, 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camSetFocus focusRange",
    ],
    [
        "b",
        "camsetfov",
        "camSetFov",
        "Sets the camera field of view (zoom). It does not automatically commit changes.",
        "_camera camSetFov 0.1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "camera camSetFov fieldOfView",
    ],
    [
        "b",
        "camsetfovrange",
        "camSetFovRange",
        "Sets the camera field of view range for auto zooming. It does not automatically commit changes.",
        "_camera camSetFovRange [0.1, 0.5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camSetFovRange fovRange",
    ],
    [
        "b",
        "camsetpos",
        "camSetPos",
        "Sets the camera position (format <ar>Position</ar>). It does not automatically commit changes.",
        "_camera camSetPos getPos player",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camSetPos position",
    ],
    [
        "b",
        "camsetrelpos",
        "camSetRelPos",
        "Sets the camera position relative to the current position of the currect target (see <f>camSetTarget</f>). It does not automatically commit changes.",
        "_camera camSetRelPos [10,5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camSetRelPos position",
    ],
    [
        "b",
        "camsettarget",
        "camSetTarget",
        "Sets the camera target. It does not automatically commit changes.",
        "_camera camSetTarget player",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "camera camSetTarget target",
    ],
    [
        "b",
        "camsettarget",
        "camSetTarget",
        "Sets the camera target to a position (format <ar>Position</ar>). It does not automatically commit changes.",
        "_camera camSetTarget getPos player",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "camera camSetTarget position",
    ],
    [
        "u",
        "camtarget",
        "camTarget",
        "Returns camera's target.",
        "camTarget _camera",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "camTarget camera",
    ],
    [
        "u",
        "camusenvg",
        "camUseNVG",
        "Set / clear using of night vision during cutscenes.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "camUseNVG set",
    ],
    [
        "b",
        "canadd",
        "canAdd",
        "Check if given object(or group of objects) can be stored into target entity",
        "",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY,STRING",
        "unit canAdd item",
    ],
    [
        "b",
        "canadd",
        "canAdd",
        "Check if the attachmentcan be added to the weapon, or the magazine can be loaded.",
        "'arifle_MX_ACO_pointer_F' canAdd 'acc_pointer_IR'",
        "",
        "BOOL",
        "STRING",
        "ARRAY,STRING",
        "weapon canAdd attachment or magazine or [attachment, slot] or [magazine, muzzle]",
    ],
    [
        "b",
        "canadditemtobackpack",
        "canAddItemToBackpack",
        "Check if given object(or group of objects) can be stored into soldier's uniform",
        "",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY,STRING",
        "unit canAddItemToBackpack item",
    ],
    [
        "b",
        "canadditemtouniform",
        "canAddItemToUniform",
        "Check if given object(or group of objects) can be stored into soldier's uniform",
        "",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY,STRING",
        "unit canAddItemToUniform item",
    ],
    [
        "b",
        "canadditemtovest",
        "canAddItemToVest",
        "Check if given object(or group of objects) can be stored into soldier's uniform",
        "",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY,STRING",
        "unit canAddItemToVest item",
    ],
    [
        "u",
        "cancelsimpletaskdestination",
        "cancelSimpleTaskDestination",
        "Cancels a simple task destination",
        "",
        "",
        "NOTHING",
        "",
        "TASK",
        "cancelSimpleTaskDestination task",
    ],
    [
        "u",
        "candeployweapon",
        "canDeployWeapon",
        "Returns true if weapon can be deployed.",
        "canDeployWeapon player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "canDeployWeapon unit",
    ],
    [
        "u",
        "canfire",
        "canFire",
        "Checks whether the given vehicle is able to fire. It does not check for ammo, only for damage.",
        "canFire vehicle player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "canFire vehicle",
    ],
    [
        "u",
        "canmove",
        "canMove",
        "Checks whether the given vehicle is able to move. It does not test for fuel, only the damage status is checked.",
        "canMove vehicle player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "canMove vehicle",
    ],
    [
        "b",
        "canslingload",
        "canSlingLoad",
        "Returns true if it is possible to sling load cargo",
        "veh1 canSlingLoad veh2",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "vehicle canSlingLoad cargo",
    ],
    [
        "u",
        "canstand",
        "canStand",
        "Checks whether the given soldier is able to stand up.",
        "canStand player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "canStand soldier",
    ],
    [
        "n",
        "cansuspend",
        "canSuspend",
        "Returns true if usage of sleep, uiSleep or waitUntil commands is allowed in the current scope.",
        "if (!canSuspend) exitWith { false };",
        "",
        "BOOL",
        "",
        "",
        "canSuspend",
    ],
    [
        "u",
        "cantriggerdynamicsimulation",
        "canTriggerDynamicSimulation",
        "Returns true if given unit can activate dynamically disabled entities, otherwise return false",
        "canTriggerDynamicSimulation player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "canTriggerDynamicSimulation object",
    ],
    [
        "u",
        "canunloadincombat",
        "canUnloadInCombat",
        "Check if cargo of this vehicle want to get out when in combat.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "canUnloadInCombat vehicle",
    ],
    [
        "b",
        "canvehiclecargo",
        "canVehicleCargo",
        "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle",
        "veh canVehicleCargo cargo",
        "",
        "ARRAY",
        "OBJECT",
        "OBJECT",
        "vehicle canVehicleCargo cargo",
    ],
    [
        "u",
        "captive",
        "captive",
        "Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead.",
        "captive player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "captive unit",
    ],
    [
        "u",
        "captivenum",
        "captiveNum",
        "Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead.",
        "captive player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "captiveNum unit",
    ],
    ["u", "case", "case", "see switch", "", "", "SWITCH", "", "ANY", "case b"],
    [
        "b",
        "catch",
        "catch",
        "processes code, when exception is thrown in <f>try</f> block",
        "",
        "",
        "ANY",
        "EXCEPTION",
        "CODE",
        "try-Block catch code",
    ],
    [
        "u",
        "cbchecked",
        "cbChecked",
        "Returns the current state of CheckBox.",
        "_checked = cbChecked _myCheckBox",
        "",
        "BOOL",
        "",
        "CONTROL",
        "cbChecked control",
    ],
    [
        "b",
        "cbsetchecked",
        "cbSetChecked",
        "Sets the current state of CheckBox.",
        "_myCheckBox cbSetChecked true;",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "control cbSetChecked enabled",
    ],
    [
        "u",
        "ceil",
        "ceil",
        "The ceil value of x.",
        "ceil 5.25",
        "6",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "ceil x",
    ],
    [
        "u",
        "channelenabled",
        "channelEnabled",
        "Returns availability of the chat and VoN for the given channel.",
        "channelStatus = channelEnabled 1",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "channelEnabled channel",
    ],
    [
        "n",
        "cheatsenabled",
        "cheatsEnabled",
        "Checks whether cheats are enabled (whether the designers' version is running).",
        "",
        "",
        "BOOL",
        "",
        "",
        "cheatsEnabled",
    ],
    [
        "b",
        "checkaifeature",
        "checkAIFeature",
        "Check if given AI behaviour is enabled (see enableAI/disableAI)",
        "unit1 checkAIFeature 'TARGET'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "unit checkAIFeature feature",
    ],
    [
        "u",
        "checkaifeature",
        "checkAIFeature",
        "Check if given AI feature is currently enabled.",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "checkAIFeature feature",
    ],
    [
        "b",
        "checkvisibility",
        "checkVisibility",
        "Check visibility between two points. ",
        "visibility = [unit, 'VIEW'] checkVisibility [[1500, 1500, 2], [1550, 1500, 2]]",
        "",
        "SCALAR",
        "ARRAY",
        "ARRAY",
        "[ignored object, lod name, (ignored object 2)] checkVisibility [begin, end]",
    ],
    [
        "n",
        "civilian",
        "civilian",
        "The Civilian side.",
        "",
        "",
        "SIDE",
        "",
        "",
        "civilian",
    ],
    [
        "u",
        "classname",
        "className",
        "Return short name of location. (used for scripting)",
        "",
        "",
        "STRING",
        "",
        "LOCATION",
        "className location",
    ],
    [
        "b",
        "clear3denattribute",
        "clear3DENAttribute",
        "Returns TRUE if change was processed.",
        "0 set3DENAttribute ['Name', 'MyEntity']",
        "",
        "NOTHING",
        "ANY",
        "STRING",
        "&lt;entity&gt; clear3DENAttribute &lt;attributeType&gt;",
    ],
    [
        "u",
        "clear3deninventory",
        "clear3DENInventory",
        "Clear saved state of entitie's inventory from SQM.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "clear3DENInventory &lt;entities&gt;",
    ],
    [
        "u",
        "clearallitemsfrombackpack",
        "clearAllItemsFromBackpack",
        "Removes all items from the backpack.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearAllItemsFromBackpack unit",
    ],
    [
        "u",
        "clearbackpackcargo",
        "clearBackpackCargo",
        "Removes all backpacks from ammo box (or any general weapon holder container).",
        "clearBackpackCargo jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearBackpackCargo box",
    ],
    [
        "u",
        "clearbackpackcargoglobal",
        "clearBackpackCargoGlobal",
        "Removes all magazines from the vehicle cargo space. MP synchronized.",
        "clearMagazineCargoGlobal jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearBackpackCargoGlobal unit",
    ],
    [
        "n",
        "clearforcesrtd",
        "clearForcesRTD",
        "Remove all force generators from wolrd.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "clearForcesRTD",
    ],
    [
        "u",
        "cleargroupicons",
        "clearGroupIcons",
        "Removes all icon from group.",
        "clearGroupIcons group",
        "",
        "NOTHING",
        "",
        "GROUP",
        "clearGroupIcons group",
    ],
    [
        "u",
        "clearitemcargo",
        "clearItemCargo",
        "Removes all items from ammo box (or any general weapon holder container).",
        "clearItemCargo jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearItemCargo box",
    ],
    [
        "u",
        "clearitemcargoglobal",
        "clearItemCargoGlobal",
        "Removes all items from ammo box (or any general weapon holder container).",
        "clearItemCargoGlobal jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearItemCargoGlobal box",
    ],
    [
        "n",
        "clearitempool",
        "clearItemPool",
        "Removes all magazines from the weapon pool (this is used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "NOTHING",
        "",
        "",
        "clearItemPool",
    ],
    [
        "u",
        "clearmagazinecargo",
        "clearMagazineCargo",
        "Removes all magazines from the vehicle cargo space.",
        "clearMagazineCargo jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearMagazineCargo unit",
    ],
    [
        "u",
        "clearmagazinecargoglobal",
        "clearMagazineCargoGlobal",
        "Removes all magazines from the vehicle cargo space. MP synchronized.",
        "clearMagazineCargoGlobal jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearMagazineCargoGlobal unit",
    ],
    [
        "n",
        "clearmagazinepool",
        "clearMagazinePool",
        "Removes all magazines from the weapon pool (this is used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "NOTHING",
        "",
        "",
        "clearMagazinePool",
    ],
    [
        "u",
        "clearoverlay",
        "clearOverlay",
        "Clear the current overlay.",
        "clearOverlay _map",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "clearOverlay map",
    ],
    [
        "n",
        "clearradio",
        "clearRadio",
        "Clean up the content of radio protocol history.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "clearRadio",
    ],
    [
        "u",
        "clearweaponcargo",
        "clearWeaponCargo",
        "Removes all weapons from the vehicle cargo space.",
        "clearWeaponCargo jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearWeaponCargo unit",
    ],
    [
        "u",
        "clearweaponcargoglobal",
        "clearWeaponCargoGlobal",
        "Removes all weapons from the vehicle cargo space. MP synchronized.",
        "clearWeaponCargoGlobal jeepOne",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "clearWeaponCargoGlobal unit",
    ],
    [
        "n",
        "clearweaponpool",
        "clearWeaponPool",
        "Removes all weapons from the weapon pool (this is used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "NOTHING",
        "",
        "",
        "clearWeaponPool",
    ],
    [
        "n",
        "clientowner",
        "clientOwner",
        "Returns client's owner id",
        "",
        "",
        "SCALAR",
        "",
        "",
        "clientOwner",
    ],
    [
        "u",
        "closedialog",
        "closeDialog",
        "Closes the topmost user dialog as if a button with id idc was pressed.",
        "closeDialog 1",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "closeDialog idc",
    ],
    [
        "b",
        "closedisplay",
        "closeDisplay",
        "Close given display.",
        "_display closeDisplay IDC_OK",
        "",
        "NOTHING",
        "DISPLAY",
        "SCALAR",
        "display closeDisplay exitcode",
    ],
    [
        "u",
        "closeoverlay",
        "closeOverlay",
        "Closes the current overlay without committing.",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "closeOverlay map",
    ],
    [
        "u",
        "collapseobjecttree",
        "collapseObjectTree",
        "Collapse the object tree.",
        "collapseObjectTree _map",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "collapseObjectTree map",
    ],
    [
        "b",
        "collect3denhistory",
        "collect3DENHistory",
        "Collects all history steps created by executing given code.",
        "",
        "",
        "NOTHING",
        "ARRAY",
        "CODE",
        "[&lt;text&gt;, &lt;tooltip&gt;, &lt;icon&gt;] collect3DENHistory &lt;code&gt;",
    ],
    [
        "u",
        "collect3denhistory",
        "collect3DENHistory",
        "Collects all history steps created by executing given code.",
        "",
        "",
        "NOTHING",
        "",
        "CODE",
        "collect3DENHistory &lt;code&gt;",
    ],
    [
        "u",
        "collectivertd",
        "collectiveRTD",
        "Returns collective.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "collectiveRTD RTD_helicopter",
    ],
    [
        "u",
        "collisiondisabledwith",
        "collisionDisabledWith",
        "Returns the object, given object has collision disabled with and whether or not returned object has collision disabled with the given object as well.",
        "disabledCollisionWith _obj;",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "collisionDisabledWith vehicle",
    ],
    [
        "u",
        "combatbehaviour",
        "combatBehaviour",
        "Returns the behaviour mode of the given unit ('CARELESS','SAFE','AWARE','COMBAT' or 'STEALTH').",
        "combatBehaviour unit1",
        "",
        "STRING",
        "",
        "OBJECT",
        "combatBehaviour unit",
    ],
    [
        "u",
        "combatbehaviour",
        "combatBehaviour",
        "Returns the behaviour mode of the given group ('CARELESS','SAFE','AWARE','COMBAT' or 'STEALTH').",
        "combatBehaviour group1",
        "",
        "STRING",
        "",
        "GROUP",
        "combatBehaviour group",
    ],
    [
        "u",
        "combatmode",
        "combatMode",
        "Returns the combat mode of the given unit's group ('BLUE','GREEN','YELLOW' or 'RED').",
        "combatMode group player",
        "",
        "STRING",
        "",
        "OBJECT,GROUP",
        "combatMode grp",
    ],
    [
        "b",
        "commandartilleryfire",
        "commandArtilleryFire",
        "Orders a unit to reaload defined magazine commence fire burst on the given position (via the radio).",
        "mortar1 commandArtilleryFire [[3000, 120, 1000], '8Rnd_82mm_Mo_shells', 3]",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit commandArtilleryFire [position, type, rounds]",
    ],
    [
        "b",
        "commandchat",
        "commandChat",
        "Types text to the command radio channel\nNote: this function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on all of them.",
        "soldierOne commandChat 'Show this text'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "unit commandChat chatText",
    ],
    [
        "u",
        "commander",
        "commander",
        "Returns the commander of the vehicle. If the vehicle is not a vehicle, but a person, the person is returned instead.",
        "commander vehicle player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "commander vehicle",
    ],
    [
        "b",
        "commandfire",
        "commandFire",
        "Orders a unit to commence firing on the given target (via the radio). If the target is objNull, the unit is ordered to commence firing on its current target (set using doTarget or commandTarget).",
        "soldierOne commandFire player",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit commandFire target",
    ],
    [
        "b",
        "commandfollow",
        "commandFollow",
        "Orders a unit to follow the given unit (via the radio).",
        "soldierOne commandFollow player",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit commandFollow formationLeader",
    ],
    [
        "b",
        "commandfsm",
        "commandFSM",
        "Orders a unit to process command defined by FSM file (via the radio).",
        "soldierOne commandFSM ['move.fsm', position player, player]",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit(s) commandFSM [fsm name, position, target]",
    ],
    [
        "u",
        "commandgetout",
        "commandGetOut",
        "Orders the unit to get out from the vehicle (via the radio).",
        "commandGetOut unitOne",
        "",
        "NOTHING",
        "",
        "ARRAY,OBJECT",
        "commandGetOut unit",
    ],
    [
        "n",
        "commandingmenu",
        "commandingMenu",
        "Return the name of the topmost commanding menu.",
        "",
        "",
        "STRING",
        "",
        "",
        "commandingMenu",
    ],
    [
        "b",
        "commandmove",
        "commandMove",
        "Orders the unit to move to the given position (format <ar>Position</ar>) (via the radio).",
        "soldierOne commandMove getMarkerPos 'MarkerMoveOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit commandMove position",
    ],
    [
        "b",
        "commandradio",
        "commandRadio",
        "Sends the message to the command radio channel. The message is defined in the description.ext file or radio protocol.",
        "soldierOne commandRadio 'messageOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "unit commandRadio radioName",
    ],
    [
        "u",
        "commandstop",
        "commandStop",
        "Orders the unit to stop (via the radio)\nNote: the stop command is never finished; the unit will never be ready.",
        "commandStop unitOne",
        "",
        "NOTHING",
        "",
        "ARRAY,OBJECT",
        "commandStop unit",
    ],
    [
        "b",
        "commandsuppressivefire",
        "commandSuppressiveFire",
        "Orders a unit to suppress given position or target (via the radio).",
        "soldier commandSuppressiveFire [3000, 120, 1000]",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "unit commandSuppressiveFire position or target",
    ],
    [
        "b",
        "commandtarget",
        "commandTarget",
        "Orders the unit to target the given target (via the radio).",
        "soldierOne commandTarget player",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit commandTarget position",
    ],
    [
        "b",
        "commandwatch",
        "commandWatch",
        "Orders the unit to watch the given position (format <ar>Position</ar>) (via the radio).",
        "soldierOne commandWatch getMarkerPos 'MarkerMoveOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit commandWatch position",
    ],
    [
        "b",
        "commandwatch",
        "commandWatch",
        "Orders the unit to watch the given target (via the radio).",
        "soldierOne commandWatch player",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit commandWatch target",
    ],
    [
        "u",
        "comment",
        "comment",
        "This function does nothing. It's used to create comments.",
        "comment 'This is a comment.'",
        "",
        "NOTHING",
        "",
        "STRING",
        "comment comment",
    ],
    [
        "u",
        "commitoverlay",
        "commitOverlay",
        "Commit the current overlay.",
        "commitOverlay _map",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "commitOverlay map",
    ],
    [
        "u",
        "compatibleitems",
        "compatibleItems",
        "Returns all compatible items for the given weapon class, or the given slot of the weapon.",
        "compatibleItems 'arifle_MX_ACO_pointer_F'",
        "",
        "ARRAY",
        "",
        "ARRAY,STRING",
        "compatibleItems weapon or [weapon, slot]",
    ],
    [
        "u",
        "compatiblemagazines",
        "compatibleMagazines",
        "Returns all compatible magazines for every muzzle of the given weapon class, or the specified muzzle.",
        "compatibleMagazines 'arifle_MX_ACO_pointer_F'",
        "",
        "ARRAY",
        "",
        "ARRAY,STRING",
        "compatibleMagazines weapon or [weapon, muzzle]",
    ],
    [
        "u",
        "compile",
        "compile",
        "Compile expression.",
        "_function = 'a = a + 1'; _compiled = compile _function; call _compiled;",
        "",
        "CODE",
        "",
        "STRING",
        "compile expression or [expression]",
    ],
    [
        "u",
        "compilefinal",
        "compileFinal",
        "Compile expression. Expression cannot be overridden.",
        "_function = 'a = a + 1'; _compiled = compile _function; call _compiled;",
        "",
        "CODE",
        "",
        "STRING",
        "compileFinal expression",
    ],
    [
        "u",
        "compilescript",
        "compileScript",
        "Preprocesses and Compiles a script file.",
        "compileScript ['myprefix\functions\fnc_makeSplendid.sqf', true]",
        "",
        "CODE",
        "",
        "ARRAY",
        "compileScript [path, (final), (prefix header)]",
    ],
    [
        "u",
        "completedfsm",
        "completedFSM",
        "Check whether the given FSM completes. The FSM handle is the number returned by the execFSM command.",
        "",
        "",
        "BOOL",
        "",
        "SCALAR",
        "completedFSM FSM handle",
    ],
    [
        "u",
        "composetext",
        "composeText",
        "Creates a structured text by joining the given structured or plain texts.",
        "txt = composeText ['First line', image 'dataisniper.paa', lineBreak, 'Second line']",
        "",
        "TEXT",
        "",
        "ARRAY",
        "composeText [text1, text2, ...]",
    ],
    [
        "b",
        "configclasses",
        "configClasses",
        "Returns an array of config entries which meet the criteria in the code.",
        "(getnumber _x >> vbs_entity) == 1 configClasses (configfile >> CfgWeapons)",
        "",
        "ARRAY",
        "STRING",
        "CONFIG",
        "condition configClasses config",
    ],
    [
        "n",
        "configfile",
        "configFile",
        "Return root of config entries hierarchy.",
        "",
        "",
        "CONFIG",
        "",
        "",
        "configFile",
    ],
    [
        "u",
        "confighierarchy",
        "configHierarchy",
        "Returns array of parent configs",
        "configHierarchy (configFile >> 'CfgVehicles' >> typeOf player)",
        "",
        "ARRAY",
        "",
        "CONFIG",
        "configHierarchy config",
    ],
    [
        "u",
        "configname",
        "configName",
        "Returns name of config entry.",
        "_name = configName (configFile >> 'CfgVehicles')",
        "'CfgVehicles'",
        "STRING",
        "",
        "CONFIG",
        "configName config",
    ],
    [
        "n",
        "confignull",
        "configNull",
        "A non-existing config",
        "",
        "",
        "CONFIG",
        "",
        "",
        "configNull",
    ],
    [
        "u",
        "configof",
        "configOf",
        "Returns the config class of the given object.",
        "configOf player",
        "",
        "CONFIG",
        "",
        "OBJECT",
        "configOf object",
    ],
    [
        "u",
        "configproperties",
        "configProperties",
        "Returns a list of all properties of the given class. Parameter is an array where first item is a target config class, second is string with condition (similar to configClasses), third is a bool: when set to true, the inherited properties are also included.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "configProperties [config, condition, includeInherited]",
    ],
    [
        "u",
        "configsourceaddonlist",
        "configSourceAddonList",
        "Returns list of addons from which the given config class was loaded/updated.",
        "configSourceAddonList (configFile >> 'CfgVehicles' >> 'Car')",
        "",
        "ARRAY",
        "",
        "CONFIG",
        "configSourceAddonList config",
    ],
    [
        "u",
        "configsourcemod",
        "configSourceMod",
        "Returns modDir of the mod that given config class was loaded from.",
        "configSourceMod (configFile >> 'CfgVehicles' >> 'Car')",
        "",
        "STRING",
        "",
        "CONFIG",
        "configSourceMod config",
    ],
    [
        "u",
        "configsourcemodlist",
        "configSourceModList",
        "Returns an array of mods which modified the given config class.",
        "configSourceModList (configFile >> 'CfgVehicles' >> 'Car')",
        "",
        "ARRAY",
        "",
        "CONFIG",
        "configSourceModList config",
    ],
    [
        "b",
        "confirmsensortarget",
        "confirmSensorTarget",
        "Sets for which side is given unit known target",
        "bis_enemyUnit setConfirmedEnemy [WEST, true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit confirmSensorTarget [side, isConfirmed]",
    ],
    [
        "b",
        "connectterminaltouav",
        "connectTerminalToUAV",
        "Connect person with UAV terminal to UAV unit, or disconnect when UAV==objNull",
        "player connectTerminalToUAV cursorTarget/objNull",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "person connectTerminalToUAV UAV",
    ],
    [
        "u",
        "connecttoserver",
        "connectToServer",
        "Connects to given IP, ip and password are strings, port is a number.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "connectToServer [&quot;ip&quot;, port, &quot;password&quot;]",
    ],
    [
        "n",
        "continue",
        "continue",
        "Skips current loop iteration and continues with next iteration",
        "",
        "",
        "NOTHING",
        "",
        "",
        "continue",
    ],
    [
        "u",
        "continuewith",
        "continueWith",
        "Skips current loop iteration and continues with next iteration.",
        "",
        "",
        "ANY",
        "",
        "ANY",
        "continueWith value",
    ],
    [
        "n",
        "controlnull",
        "controlNull",
        "A non-existing control. This value is not equal to anything, including itself.",
        "",
        "",
        "CONTROL",
        "",
        "",
        "controlNull",
    ],
    [
        "b",
        "controlsgroupctrl",
        "controlsGroupCtrl",
        "Return child control with specified idc.",
        "_control = _controlsGroup controlsGroupCtrl 101",
        "",
        "CONTROL",
        "CONTROL",
        "SCALAR",
        "controlsGroup controlsGroupCtrl idc",
    ],
    [
        "u",
        "conversationdisabled",
        "conversationDisabled",
        "Returns true if kbTell's 'IsSpeaking' for the given unit is true",
        "conversationDisabled soldier1",
        "",
        "BOOL",
        "",
        "OBJECT",
        "conversationDisabled unit",
    ],
    [
        "n",
        "copyfromclipboard",
        "copyFromClipboard",
        "Return the content of the (text) clipboard.",
        "",
        "",
        "STRING",
        "",
        "",
        "copyFromClipboard",
    ],
    [
        "u",
        "copytoclipboard",
        "copyToClipboard",
        "Copy the text to the clipboard.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "copyToClipboard text",
    ],
    [
        "b",
        "copywaypoints",
        "copyWaypoints",
        "Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.",
        "",
        "",
        "NOTHING",
        "GROUP",
        "GROUP",
        "groupTo copyWaypoints groupFrom",
    ],
    [
        "u",
        "cos",
        "cos",
        "The cosine of x, the argument is in degrees.",
        "cos 60",
        "0.5",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "cos x",
    ],
    [
        "b",
        "count",
        "count",
        "Counts the elements in the array for which the given condition is true\nIt is calculated as follows\n1) Set the count to 0\n2) For each element in the array assign an element as _x and evaluate the condition expression. If it's true, increase the count.",
        "'_x > 2' count [0, 1, 1, 2, 3, 3]",
        "2",
        "SCALAR",
        "CODE",
        "ARRAY",
        "condition count array",
    ],
    [
        "u",
        "count",
        "count",
        "The number of elements in the array.",
        "count [0,0,1,2]",
        "4",
        "SCALAR",
        "",
        "ARRAY",
        "count array",
    ],
    [
        "u",
        "count",
        "count",
        "Return a length of a given string.",
        "count 'ArmA'",
        "4",
        "SCALAR",
        "",
        "STRING",
        "count string",
    ],
    [
        "u",
        "count",
        "count",
        "Returns count of subentries.",
        "_count = count (configFile >> 'CfgVehicles')",
        "",
        "SCALAR",
        "",
        "CONFIG",
        "count config",
    ],
    [
        "u",
        "count",
        "count",
        "Returns number of entries in the HashMap.",
        "count _hashMap",
        "1337",
        "SCALAR",
        "",
        "HASHMAP",
        "count HashMap",
    ],
    [
        "b",
        "countenemy",
        "countEnemy",
        "Counts how many units in the array are considered enemy by the given unit.",
        "player countEnemy list triggerOne",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "unit countEnemy array",
    ],
    [
        "b",
        "countfriendly",
        "countFriendly",
        "Counts how many units in the array are considered friendly by the given unit.",
        "player countFriendly list triggerOne",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "unit countFriendly array",
    ],
    [
        "b",
        "countside",
        "countSide",
        "Checks how many vehicles belong to the given side.",
        "west countSide list triggerOne",
        "",
        "SCALAR",
        "SIDE",
        "ARRAY",
        "side countSide array",
    ],
    [
        "b",
        "counttype",
        "countType",
        "Counts how many vehicles in the array are of the given type. For types see <cl>CfgVehicles</cl>.",
        "'Tank' countType list triggerOne",
        "",
        "SCALAR",
        "STRING",
        "ARRAY",
        "typeName countType array",
    ],
    [
        "b",
        "countunknown",
        "countUnknown",
        "Counts how many units in the array are considered unknown to the given unit.",
        "player countUnknown list triggerOne",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "unit countUnknown array",
    ],
    [
        "u",
        "create3dencomposition",
        "create3DENComposition",
        "Creates new object composition based on given config based on CfgGroups.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "create3DENComposition [&lt;path&gt;, &lt;position&gt;]",
    ],
    [
        "b",
        "create3denentity",
        "create3DENEntity",
        "Creates new entity of given (entity mode) in 3DEN inside given group",
        "(group player) create3DENEntity ['Object', 'B_Soldier_F', position player]",
        "",
        "ANY",
        "GROUP",
        "ARRAY",
        "&lt;group&gt; create3DENEntity [&lt;mode&gt;, &lt;className&gt;, &lt;position&gt;]",
    ],
    [
        "u",
        "create3denentity",
        "create3DENEntity",
        "Creates new entity in given mode in 3DEN.",
        "",
        "",
        "ANY",
        "",
        "ARRAY",
        "create3DENEntity [&lt;mode&gt;, &lt;className&gt;, &lt;position&gt;]",
    ],
    [
        "u",
        "createagent",
        "createAgent",
        "Creates an (independent) agent (person) of the given type (type is a name of a subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used. Otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius. Special properties can be: 'NONE' and 'FORM'.",
        "agent = createAgent ['SoldierWB', position player, [], 0, 'FORM']",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "createAgent [type, position, markers, placement, special]",
    ],
    [
        "u",
        "createcenter",
        "createCenter",
        "Creates a new AI center for the given side.",
        "center = createCenter East",
        "",
        "SIDE",
        "",
        "SIDE",
        "createCenter side",
    ],
    [
        "u",
        "createdialog",
        "createDialog",
        "Creates a user dialog from the resource template name. If a user dialog already exists, it creates a child dialog of the topmost user dialog. The class name is searched in the description.ext file of the mission, the description.ext file of the campaign and the globlal resource.cpp file. The function returns its success.",
        "_ok = createDialog 'RscDisplayGame'",
        "",
        "BOOL",
        "",
        "STRING",
        "createDialog name",
    ],
    [
        "u",
        "createdialog",
        "createDialog",
        "Creates a user dialog from the resource template name. If a user dialog already exists, it creates a child dialog of the topmost user dialog. The class name is searched in the description.ext file of the mission, the description.ext file of the campaign and the globlal resource.cpp file. The function returns its success.",
        "_ok = createDialog ['RscDisplayGame', true]",
        "",
        "DISPLAY",
        "",
        "ARRAY",
        "createDialog [name, forceOnTop]",
    ],
    [
        "u",
        "creatediarylink",
        "createDiaryLink",
        "Create a link to the section of diary given by subject. Record is selected based on given object (diary record, task or unit).",
        "_link = createDiarySubject ['Group', player, 'Player']",
        "",
        "STRING",
        "",
        "ARRAY",
        "createDiaryLink [subject, object, text]",
    ],
    [
        "b",
        "creatediaryrecord",
        "createDiaryRecord",
        "Create a new log record.",
        "_record = player createDiaryRecord ['diary', 'Kill all enemies.']",
        "",
        "DIARY_RECORD",
        "OBJECT",
        "ARRAY",
        "person createDiaryRecord [subject, text(, task(, state))] or [subject, [title, text(, icon)](, task(, state))]",
    ],
    [
        "b",
        "creatediarysubject",
        "createDiarySubject",
        "Create a new subject page in a log.",
        "_index = player createDiarySubject ['myPage', 'My page']",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "person createDiarySubject [subject, display name] or [subject, display name, picture]",
    ],
    [
        "b",
        "createdisplay",
        "createDisplay",
        "Create child display of given display and load from resource 'name'.",
        "_display createDisplay 'RscObserver'",
        "",
        "DISPLAY",
        "DISPLAY",
        "STRING",
        "parent createDisplay name",
    ],
    [
        "u",
        "creategeardialog",
        "createGearDialog",
        "Opens gear dialog for given unit.",
        "CreateGearDialog [player,'RscDisplayGear']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "createGearDialog [unit,resource]",
    ],
    [
        "u",
        "creategroup",
        "createGroup",
        "Creates a new AI group for the given center (side).",
        "group = createGroup East",
        "",
        "GROUP",
        "",
        "ARRAY,SIDE",
        "createGroup side",
    ],
    [
        "u",
        "createguardedpoint",
        "createGuardedPoint",
        "Adds a point guarded by the given side. If idStatic is not negative, the position of a static object with the given id is guarded. If the given vehicle is valid, the starting position of the vehicle is guarded, otherwise the given position is guarded.",
        "createGuardedPoint [East, [0, 0], -1, vehicle player]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "createGuardedPoint [side, position, idStatic, vehicle]",
    ],
    [
        "n",
        "createhashmap",
        "createHashMap",
        "Creates a new HashMap.",
        "_hashMap = createHashMap;",
        "",
        "HASHMAP",
        "",
        "",
        "createHashMap",
    ],
    [
        "b",
        "createhashmapfromarray",
        "createHashMapFromArray",
        "Creates a new HashMap from given keys and values arrays.",
        "_hashMap = [1337,1338] createHashMapFromArray [player,miller]",
        "",
        "HASHMAP",
        "ARRAY",
        "ARRAY",
        "[key,key,...]] createHashMapFromArray [value,value,...]",
    ],
    [
        "u",
        "createhashmapfromarray",
        "createHashMapFromArray",
        "Creates a new HashMap from given [key,value] array.",
        "_hashMap = createHashMapFromArray [[1337,player],[1338,miller]]",
        "",
        "HASHMAP",
        "",
        "ARRAY",
        "createHashMapFromArray [[key,value],[key,value],...]",
    ],
    [
        "u",
        "createlocation",
        "createLocation",
        "Create location of given type with given size at given position.",
        "",
        "",
        "LOCATION",
        "",
        "ARRAY",
        "createLocation [type, position, sizeX, sizeZ]",
    ],
    [
        "u",
        "createmarker",
        "createMarker",
        "Creates a new marker on the given position. The marker name has to be unique. The marker is created on all computers in a network session.",
        "marker = createMarker [Marker1, position player]",
        "",
        "STRING",
        "",
        "ARRAY",
        "createMarker [name, position, channel, creator]",
    ],
    [
        "u",
        "createmarkerlocal",
        "createMarkerLocal",
        "Creates a new marker on the given position. The marker name has to be unique. The marker is only created on the computer where the command is called.",
        "marker = createMarkerLocal [Marker1, position player]",
        "",
        "STRING",
        "",
        "ARRAY",
        "createMarkerLocal [name, position, channel, creator]",
    ],
    [
        "b",
        "createmenu",
        "createMenu",
        "Creates a previously added menu.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "map createMenu index",
    ],
    [
        "u",
        "createmine",
        "createMine",
        "Creates a mine of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used. Otherwise, the given position is used. The mine is placed inside a circle with this position as its center and placement as its radius.",
        "mine = createMine ['MineMine', position player, [], 0]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "createMine [type, position, markers, placement]",
    ],
    [
        "b",
        "createmissiondisplay",
        "createMissionDisplay",
        "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument 'root'.",
        "_display createMissionDisplay 'Test missions'",
        "",
        "DISPLAY",
        "DISPLAY",
        "STRING",
        "parent createMissionDisplay root",
    ],
    [
        "b",
        "createmissiondisplay",
        "createMissionDisplay",
        "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument 'root'. Mission space defines container's config class name.",
        "_display createMissionDisplay ['','Tutorial']",
        "",
        "DISPLAY",
        "DISPLAY",
        "ARRAY",
        "parent createMissionDisplay [root, missions space]",
    ],
    [
        "b",
        "creatempcampaigndisplay",
        "createMPCampaignDisplay",
        "Create a MP campaign display.",
        "(findDisplay 0) createMPMissionsDisplay 'Apex_Protocol';",
        "",
        "NOTHING",
        "DISPLAY",
        "STRING",
        "parentDisplay createMPCampaignDisplay folderClass",
    ],
    [
        "u",
        "createsimpleobject",
        "createSimpleObject",
        "Creates an object with a given shape or class. The object will not be simulated (no PhysX, no sound, not a target for AI) allowing the placement of decorative objects with a very little network traffic.",
        "decorativeTank = createObjectSimple ['a3rmor_f_betapc_tracked_01pc_tracked_01_rcws_f.p3d', position, false]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "createSimpleObject [modelOrClass, position, local]",
    ],
    [
        "b",
        "createsimpletask",
        "createSimpleTask",
        "Create a new simple task (subtask of parentTask).",
        "",
        "",
        "TASK",
        "OBJECT",
        "ARRAY",
        "person createSimpleTask [name] or [name, parentTask]",
    ],
    [
        "b",
        "createsite",
        "createSite",
        "OBSOLETE DO NOT USE!!! Creates a new site.",
        "",
        "",
        "OBJECT",
        "STRING",
        "ARRAY",
        "type createSite pos",
    ],
    [
        "u",
        "createsoundsource",
        "createSoundSource",
        "Creates a sound source of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used. Otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius.",
        "soundSource = createSoundSource ['LittleDog', position player, [], 0]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "createSoundSource [type, position, markers, placement]",
    ],
    [
        "b",
        "createtask",
        "createTask",
        "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
        "",
        "",
        "TASK",
        "TEAM_MEMBER",
        "ARRAY",
        "teamMember createTask [[type] or [type, parentTask], priority, name1, value1, name2, value2, ...]",
    ],
    [
        "u",
        "createteam",
        "createTeam",
        "Create a team and name it.",
        "_team = createTeam ['USMC_Team', 'Fire Team Red']",
        "",
        "TEAM_MEMBER",
        "",
        "ARRAY",
        "createTeam [type, name]",
    ],
    [
        "u",
        "createtrigger",
        "createTrigger",
        "Creates a new trigger on the given position. An object of the given type is created; this type must be a class name in CfgNonAIVehicles or CfgVehicles with simulation=detector. If global is false, detector is created only localy.",
        "trigger = createTrigger['EmptyDetector', position player, true]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "createTrigger [type, position, global = true]",
    ],
    [
        "b",
        "createunit",
        "createUnit",
        "Creates a unit of the given type. The format of unitInfo is\n[pos (<ar>Position</ar>), group (<t>Group</t>), init (<t>String</t>), skill (<t>Number</t>), rank (<t>String</t>)]\nNote: init, skill and rank are optional. Their default values are '', 0.5, 'PRIVATE'.",
        "'SoldierWB' createUnit [getMarkerPos 'barracks', groupAlpha]",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "type createUnit unitInfo",
    ],
    [
        "b",
        "createunit",
        "createUnit",
        "Creates a unit (person) of the given type (type is a name of a subclass of CfgVehicles) and makes it a member of the given group. If the markers array contains several marker names, the position of a random one is used. Otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius. Special properties can be: 'NONE' and 'FORM'.",
        "unit = group player createUnit ['SoldierWB', position player, [], 0, 'FORM']",
        "",
        "OBJECT",
        "GROUP",
        "ARRAY",
        "group createUnit [type, position, markers, placement, special]",
    ],
    [
        "b",
        "createvehicle",
        "createVehicle",
        "Creates an empty vehicle of the given type. Pos is in format <ar>Position</ar>\nSee <cl>CfgVehicles</cl> for possible type values.",
        "_tank = 'M1Abrams' createVehicle getmarkerpos 'tankFactory'",
        "",
        "OBJECT",
        "STRING",
        "ARRAY",
        "type createVehicle pos",
    ],
    [
        "u",
        "createvehicle",
        "createVehicle",
        "Creates a vehicle of the given type (type is the name of the subclass in CfgVehicles). If the markers array contains several marker names, the position of a random one is used. Otherwise, the given position is used. The vehicle is placed inside a circle with this position as center and placement as its radius. Special properties can be: 'NONE', 'FLY' and 'FORM'.",
        "veh = createVehicle ['Cobra', position player, [], 0, 'FLY']",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "createVehicle [type, position, markers, placement, special]",
    ],
    [
        "u",
        "createvehiclecrew",
        "createVehicleCrew",
        "Creates crew to given vehicle.",
        "createVehicleCrew vehicle0",
        "",
        "GROUP",
        "",
        "OBJECT",
        "createVehicleCrew Vehicle",
    ],
    [
        "b",
        "createvehiclelocal",
        "createVehicleLocal",
        "Creates an empty vehicle of the given type. Pos is in format <ar>Position</ar>\nSee <cl>CfgVehicles</cl> for possible type values. Vehicle is not transferred through network in MP games.",
        "_tank = 'M1Abrams' createVehicleLocal getmarkerpos 'tankFactory'",
        "",
        "OBJECT",
        "STRING",
        "ARRAY",
        "type createVehicleLocal pos",
    ],
    [
        "u",
        "crew",
        "crew",
        "Returns all units mounted in the given vehicle. If the vehicle is not a vehicle, but  person, a list containing only persons is returned.",
        "crew vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "crew vehicle",
    ],
    [
        "u",
        "ctaddheader",
        "ctAddHeader",
        "Adds a header line of controls according to the HeaderTemplate class. Returns an array containing 2 elements: header index and array of created controls.",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctAddHeader control",
    ],
    [
        "u",
        "ctaddrow",
        "ctAddRow",
        "Adds one row of controls according to the RowTemplate class. Returns an array containing 2 elements: row index and array of created controls.",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctAddRow control",
    ],
    [
        "u",
        "ctclear",
        "ctClear",
        "Removes all lines (both rows and headers) from the table.",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "ctClear control",
    ],
    [
        "u",
        "ctcursel",
        "ctCurSel",
        "Returns index of the selected row or negative value if no row is selected.",
        "",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctCurSel control",
    ],
    [
        "b",
        "ctdata",
        "ctData",
        "Returns metadata (string) associated with a particular row.",
        "",
        "",
        "STRING",
        "CONTROL",
        "SCALAR",
        "control ctData row index",
    ],
    [
        "b",
        "ctfindheaderrows",
        "ctFindHeaderRows",
        "Returns array of indices of rows that are directly below this header and above the next one.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "SCALAR",
        "control ctFindHeaderRows header index",
    ],
    [
        "b",
        "ctfindrowheader",
        "ctFindRowHeader",
        "Returns index of the closest header above this row. If there's no header, negative index is returned.",
        "",
        "",
        "SCALAR",
        "CONTROL",
        "SCALAR",
        "control ctFindRowHeader row index",
    ],
    [
        "b",
        "ctheadercontrols",
        "ctHeaderControls",
        "Returns array of controls in the header with the given index.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "SCALAR",
        "control ctHeaderControls header index",
    ],
    [
        "u",
        "ctheadercount",
        "ctHeaderCount",
        "Returns number of headers (rows not included) in the table.",
        "",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctHeaderCount control",
    ],
    [
        "b",
        "ctremoveheaders",
        "ctRemoveHeaders",
        "Removes all headers with given indices. Indices of remaining headers will be recomputed.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctRemoveHeaders array",
    ],
    [
        "b",
        "ctremoverows",
        "ctRemoveRows",
        "Removes all rows with given indices. Indices of remaining rows will be recomputed.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctRemoveRows array",
    ],
    [
        "u",
        "ctrlactivate",
        "ctrlActivate",
        "Launch actions attached to given (button based) control.",
        "ctrlActivate _control",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "ctrlActivate control",
    ],
    [
        "b",
        "ctrladdeventhandler",
        "ctrlAddEventHandler",
        "Add an event handler to the given control. Returns id of the handler or -1 when failed.",
        "_id = _control ctrlAddEventHandler ['KeyDown', '']",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "control ctrlAddEventHandler [handler name, function]",
    ],
    [
        "u",
        "ctrlangle",
        "ctrlAngle",
        "Gets array of rotation info of the control in format: [angle, xCenter, yCenter]",
        "_control ctrlAngle 0",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlAngle control",
    ],
    [
        "b",
        "ctrlanimatemodel",
        "ctrlAnimateModel",
        "Sets model animation same as cmd'AnimateSource'.",
        "ctrl ctrlAnimateModel ['anim1', 1, true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "ctrl ctrlAnimateModel [name, phase, speedCoef]",
    ],
    [
        "b",
        "ctrlanimationphasemodel",
        "ctrlAnimationPhaseModel",
        "Get model animation same as cmd'animationSourcePhase'.",
        "ctrl ctrlAnimationPhase 'anim1'",
        "",
        "SCALAR",
        "CONTROL",
        "STRING",
        "ctrl ctrlAnimationPhaseModel name",
    ],
    [
        "u",
        "ctrlautoscrolldelay",
        "ctrlAutoScrollDelay",
        "Returns number of seconds until auto-scroll starts. -2 if scrollbar not present.",
        "_delay = ctrlAutoScrollDelay _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlAutoScrollDelay control",
    ],
    [
        "u",
        "ctrlautoscrollrewind",
        "ctrlAutoScrollRewind",
        "True if auto-scroll should move back to start after it reach end.",
        "_rewind = ctrlAutoScrollRewind _control",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlAutoScrollRewind control",
    ],
    [
        "u",
        "ctrlautoscrollspeed",
        "ctrlAutoScrollSpeed",
        "Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present.",
        "_speed = ctrlAutoScrollSpeed _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlAutoScrollSpeed control",
    ],
    [
        "u",
        "ctrlbackgroundcolor",
        "ctrlBackgroundColor",
        "Returns control's background color.",
        "_color = ctrlBackgroundColor _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlBackgroundColor control",
    ],
    [
        "b",
        "ctrlchecked",
        "ctrlChecked",
        "Returns the current state of textual checkbox with given index.",
        "_checked = _control ctrlChecked 3",
        "",
        "BOOL",
        "CONTROL",
        "SCALAR",
        "control ctrlChecked index",
    ],
    [
        "u",
        "ctrlchecked",
        "ctrlChecked",
        "Returns the current state of textual checkbox.",
        "_checked = ctrlChecked _control",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlChecked control",
    ],
    [
        "u",
        "ctrlclassname",
        "ctrlClassName",
        "Returns class name of given control.",
        "ctrlClassName ((FindDisplay 20000) displayCtrl 20001)",
        "",
        "STRING",
        "",
        "CONTROL",
        "ctrlClassName control",
    ],
    [
        "b",
        "ctrlcommit",
        "ctrlCommit",
        "Commit control animation.",
        "_control ctrlCommit 2",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlCommit time",
    ],
    [
        "u",
        "ctrlcommitted",
        "ctrlCommitted",
        "Check if the control animation is finished.",
        "_done = ctrlCommitted _control",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlCommitted control",
    ],
    [
        "b",
        "ctrlcreate",
        "ctrlCreate",
        "Creates new control in given display. The control is created in given groupControl (optional)",
        "ctrl ctrlCreate ['RscText', 1234]",
        "",
        "CONTROL",
        "DISPLAY",
        "ARRAY",
        "parent_display ctrlCreate [baseClass, idc, groupControl]",
    ],
    [
        "u",
        "ctrldelete",
        "ctrlDelete",
        "Deletes given control.",
        "ctrlDelete ((FindDisplay 20000) displayCtrl 20001)",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlDelete control",
    ],
    [
        "b",
        "ctrlenable",
        "ctrlEnable",
        "Enable / disable given control.",
        "_control ctrlEnable false",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "control ctrlEnable enable",
    ],
    [
        "u",
        "ctrlenable",
        "ctrlEnable",
        "Enables / disables the control with id idc of the topmost user dialog.",
        "ctrlEnable [100, false]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "ctrlEnable [idc, enable]",
    ],
    [
        "u",
        "ctrlenabled",
        "ctrlEnabled",
        "Returns whether given control is enabled.",
        "_ok = ctrlEnabled _control",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlEnabled control",
    ],
    [
        "u",
        "ctrlenabled",
        "ctrlEnabled",
        "Returns whether the control with id idc of the topmost user dialog is enabled.",
        "_enabled = ctrlEnabled 100",
        "",
        "BOOL",
        "",
        "SCALAR",
        "ctrlEnabled idc",
    ],
    [
        "u",
        "ctrlfade",
        "ctrlFade",
        "Returns the current fade factor of control.",
        "_scale = ctrlFade _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlFade control",
    ],
    [
        "u",
        "ctrlfontheight",
        "ctrlFontHeight",
        "Returns control's font size, usually 'sizeEx' value.",
        "_fontSize = ctrlFontHeight _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlFontHeight control",
    ],
    [
        "u",
        "ctrlforegroundcolor",
        "ctrlForegroundColor",
        "Returns control's foreground color.",
        "_color = ctrlForegroundColor _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlForegroundColor control",
    ],
    [
        "u",
        "ctrlhtmlloaded",
        "ctrlHTMLLoaded",
        "Returns true when HTML content was successfully loaded.",
        "_htmlLoaded ctrlHTMLLoaded _control",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlHTMLLoaded control",
    ],
    [
        "u",
        "ctrlidc",
        "ctrlIDC",
        "Returns control IDC.",
        "IDC = ctrlIDC _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlIDC control",
    ],
    [
        "u",
        "ctrlidd",
        "ctrlIDD",
        "Returns display IDD.",
        "IDD = ctrlIDD _display",
        "",
        "SCALAR",
        "",
        "DISPLAY",
        "ctrlIDD display",
    ],
    [
        "b",
        "ctrlmapanimadd",
        "ctrlMapAnimAdd",
        "Adds the next frame to the map animation. The format of frame is [time, zoom, position], the format of position is <ar>Position2D</ar>.",
        "_map ctrlMapAnimAdd [1, 0.1, getMarkerPos 'anim1']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map ctrlMapAnimAdd frame",
    ],
    [
        "u",
        "ctrlmapanimclear",
        "ctrlMapAnimClear",
        "Clears the map animation.",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "ctrlMapAnimClear control",
    ],
    [
        "u",
        "ctrlmapanimcommit",
        "ctrlMapAnimCommit",
        "Plays the map animation.",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "ctrlMapAnimCommit control",
    ],
    [
        "u",
        "ctrlmapanimdone",
        "ctrlMapAnimDone",
        "Checks whether the map animation has finished.",
        "",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlMapAnimDone control",
    ],
    [
        "b",
        "ctrlmapcursor",
        "ctrlMapCursor",
        "Changes default cursor texture ('Track', 'Move','Array', 'Scroll') to custom one. To restore default texture, write empty string. If new texture does not exist, default cursor texture is used.",
        "<map_control> ctrlMapCursor ['Track','customCursor']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map ctrlMapCursor texture names",
    ],
    [
        "u",
        "ctrlmapmouseover",
        "ctrlMapMouseOver",
        "Returns description of map sign mouse cursor is over in format [name<string>, id<GameValue>]. Recognized types: unit, vehicle, vehicleGroup, object, waypoint, trigger, marker, task, taskTooltip, customMark.",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlMapMouseOver control",
    ],
    [
        "u",
        "ctrlmapposition",
        "ctrlMapPosition",
        "Returns map position in format [x,y,w,h]. If map is inside controls group, the position is relative.",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlMapPosition map",
    ],
    [
        "u",
        "ctrlmapscale",
        "ctrlMapScale",
        "Return the current scale of the map control.",
        "",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlMapScale control",
    ],
    [
        "b",
        "ctrlmapscreentoworld",
        "ctrlMapScreenToWorld",
        "Convert position in the map from screen coordinates to world coordinates.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "ARRAY",
        "map ctrlMapScreenToWorld [x, y]",
    ],
    [
        "b",
        "ctrlmapsetposition",
        "ctrlMapSetPosition",
        "Instantly sets position and size of the given map control.",
        "_map ctrlMapSetPosition [0, 0, 1, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map ctrlMapSetPosition [x, y, w, h]",
    ],
    [
        "b",
        "ctrlmapworldtoscreen",
        "ctrlMapWorldToScreen",
        "Convert position in the map from world coordinates to screen coordinates.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "ARRAY",
        "map ctrlMapWorldToScreen position",
    ],
    [
        "u",
        "ctrlmodel",
        "ctrlModel",
        "Returns model setted in given control.",
        "ctrlModel ((FindDisplay 20000) displayCtrl 20001)",
        "",
        "STRING",
        "",
        "CONTROL",
        "ctrlModel control",
    ],
    [
        "u",
        "ctrlmodeldirandup",
        "ctrlModelDirAndUp",
        "Returns orientation setted in given control.",
        "ctrlModelOrientation ((FindDisplay 20000) displayCtrl 20001)",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlModelDirAndUp control",
    ],
    [
        "u",
        "ctrlmodelscale",
        "ctrlModelScale",
        "Returns scale setted in given control object",
        "ctrlModelScale ((FindDisplay 20000) displayCtrl 20001)",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlModelScale control",
    ],
    [
        "u",
        "ctrlmouseposition",
        "ctrlMousePosition",
        "Returns position of the mouse on the screen relative to UI Control in UI coordinates.",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlMousePosition control",
    ],
    [
        "u",
        "ctrlparent",
        "ctrlParent",
        "Returns container of given control.",
        "_display = ctrlParent _control",
        "",
        "DISPLAY",
        "",
        "CONTROL",
        "ctrlParent control",
    ],
    [
        "u",
        "ctrlparentcontrolsgroup",
        "ctrlParentControlsGroup",
        "Returns parent control group of given control.",
        "ctrlParentControlsGroup ctrl",
        "",
        "CONTROL",
        "",
        "CONTROL",
        "ctrlParentControlsGroup &lt;Control&gt;",
    ],
    [
        "u",
        "ctrlposition",
        "ctrlPosition",
        "Returns the current position and size of control as [x, y, w, h] array.",
        "_pos = ctrlPosition _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlPosition control",
    ],
    [
        "b",
        "ctrlremovealleventhandlers",
        "ctrlRemoveAllEventHandlers",
        "Remove all even handlers from the given control.",
        "_control ctrlRemoveAllEventHandlers 'KeyDown'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlRemoveAllEventHandlers handler name",
    ],
    [
        "b",
        "ctrlremoveeventhandler",
        "ctrlRemoveEventHandler",
        "Remove a given event handler from the given control.",
        "_control ctrlRemoveEventHandler ['KeyDown', 0]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlRemoveEventHandler [handler name, id]",
    ],
    [
        "u",
        "ctrlscale",
        "ctrlScale",
        "Returns the current scale of control.",
        "_scale = ctrlScale _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlScale control",
    ],
    [
        "u",
        "ctrlscrollvalues",
        "ctrlScrollValues",
        "Returns control's scroll values in format [vScrollValue, hScrollValue] in 0...1 range. -1 means this scrollbar is unavailable",
        "ctrlScrollValues _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlScrollValues control",
    ],
    [
        "b",
        "ctrlsetactivecolor",
        "ctrlSetActiveColor",
        "Sets text color of given control when control is selected. Color is in format <ar>Color</ar>.",
        "_control ctrlSetActiveColor [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetActiveColor color",
    ],
    [
        "b",
        "ctrlsetangle",
        "ctrlSetAngle",
        "Sets the rotation of the control., when 'now' is false control is animated after calling ctrlCommit",
        "_control ctrlSetAngle [25, 0.5, 0.5]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetAngle [angle, xCenter, yCenter, now = false]",
    ],
    [
        "b",
        "ctrlsetautoscrolldelay",
        "ctrlSetAutoScrollDelay",
        "Sets number of second before auto-scroll starts.",
        "_control ctrlSetAutoScrollDelay 5",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetAutoScrollDelay delay",
    ],
    [
        "b",
        "ctrlsetautoscrollrewind",
        "ctrlSetAutoScrollRewind",
        "Defines if scroll should rewind when auto-scroll reach end.",
        "_control ctrlSetAutoScrollDelay 5",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "control ctrlSetAutoScrollRewind delay",
    ],
    [
        "b",
        "ctrlsetautoscrollspeed",
        "ctrlSetAutoScrollSpeed",
        "Sets number of second required to scroll to next line. If speed smaller than 0, auto-scroll is disabled.",
        "_control ctrlSetAutoScrollSpeed 5",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetAutoScrollSpeed speed",
    ],
    [
        "b",
        "ctrlsetbackgroundcolor",
        "ctrlSetBackgroundColor",
        "Sets background color of given control. Color is in format <ar>Color</ar>.",
        "_control ctrlSetBackgroundColor [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetBackgroundColor color",
    ],
    [
        "b",
        "ctrlsetchecked",
        "ctrlSetChecked",
        "Sets checked state of checkbox.",
        "_control  ctrlSetChecked true",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "control ctrlSetChecked enabled",
    ],
    [
        "b",
        "ctrlsetchecked",
        "ctrlSetChecked",
        "Sets checked state of checkbox with given index.",
        "_control ctrlSetChecked [3, true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetChecked [index, checked]",
    ],
    [
        "b",
        "ctrlsetdisabledcolor",
        "ctrlSetDisabledColor",
        "Sets text color of given control when control is disabled. Color is in format <ar>Color</ar>.",
        "_control ctrlSetDisabledColor [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetDisabledColor color",
    ],
    [
        "b",
        "ctrlseteventhandler",
        "ctrlSetEventHandler",
        "Sets given event handler of given control",
        "_control ctrlSetEventHandler ['KeyDown', '']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetEventHandler [handler name, function]",
    ],
    [
        "b",
        "ctrlsetfade",
        "ctrlSetFade",
        "Sets wanted transparency for control animation.",
        "_control ctrlSetFade 1",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFade fade",
    ],
    [
        "u",
        "ctrlsetfocus",
        "ctrlSetFocus",
        "Set the input focus on given control.",
        "ctrlSetFocus _control",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "ctrlSetFocus control",
    ],
    [
        "b",
        "ctrlsetfont",
        "ctrlSetFont",
        "Sets the main font of given control.",
        "_control ctrlSetFont 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFont name",
    ],
    [
        "b",
        "ctrlsetfonth1",
        "ctrlSetFontH1",
        "Sets H1 font of given HTML control.",
        "_control ctrlSetFontH1 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH1 name",
    ],
    [
        "b",
        "ctrlsetfonth1b",
        "ctrlSetFontH1B",
        "Sets H1 bold font of given HTML control.",
        "_control ctrlSetFontH1B 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH1B name",
    ],
    [
        "b",
        "ctrlsetfonth2",
        "ctrlSetFontH2",
        "Sets H2 font of given HTML control.",
        "_control ctrlSetFontH2 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH2 name",
    ],
    [
        "b",
        "ctrlsetfonth2b",
        "ctrlSetFontH2B",
        "Sets H2 bold font of given HTML control.",
        "_control ctrlSetFontH2B 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH2B name",
    ],
    [
        "b",
        "ctrlsetfonth3",
        "ctrlSetFontH3",
        "Sets H3 font of given HTML control.",
        "_control ctrlSetFontH3 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH3 name",
    ],
    [
        "b",
        "ctrlsetfonth3b",
        "ctrlSetFontH3B",
        "Sets H3 bold font of given HTML control.",
        "_control ctrlSetFontH3B 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH3B name",
    ],
    [
        "b",
        "ctrlsetfonth4",
        "ctrlSetFontH4",
        "Sets H4 font of given HTML control.",
        "_control ctrlSetFontH4 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH4 name",
    ],
    [
        "b",
        "ctrlsetfonth4b",
        "ctrlSetFontH4B",
        "Sets H4 bold font of given HTML control.",
        "_control ctrlSetFontH4B 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH4B name",
    ],
    [
        "b",
        "ctrlsetfonth5",
        "ctrlSetFontH5",
        "Sets H5 font of given HTML control.",
        "_control ctrlSetFontH5 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH5 name",
    ],
    [
        "b",
        "ctrlsetfonth5b",
        "ctrlSetFontH5B",
        "Sets H5 bold font of given HTML control.",
        "_control ctrlSetFontH5B 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH5B name",
    ],
    [
        "b",
        "ctrlsetfonth6",
        "ctrlSetFontH6",
        "Sets H5 font of given HTML control.",
        "_control ctrlSetFontH6 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH6 name",
    ],
    [
        "b",
        "ctrlsetfonth6b",
        "ctrlSetFontH6B",
        "Sets H6 bold font of given HTML control.",
        "_control ctrlSetFontH6B 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontH6B name",
    ],
    [
        "b",
        "ctrlsetfontheight",
        "ctrlSetFontHeight",
        "Sets the main font size of given control.",
        "_control ctrlSetFontHeight 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeight height",
    ],
    [
        "b",
        "ctrlsetfontheighth1",
        "ctrlSetFontHeightH1",
        "Sets H1 font size of given HTML control.",
        "_control ctrlSetFontHeightH1 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeightH1 height",
    ],
    [
        "b",
        "ctrlsetfontheighth2",
        "ctrlSetFontHeightH2",
        "Sets H2 font size of given HTML control.",
        "_control ctrlSetFontHeightH2 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeightH2 height",
    ],
    [
        "b",
        "ctrlsetfontheighth3",
        "ctrlSetFontHeightH3",
        "Sets H3 font size of given HTML control.",
        "_control ctrlSetFontHeightH3 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeightH3 height",
    ],
    [
        "b",
        "ctrlsetfontheighth4",
        "ctrlSetFontHeightH4",
        "Sets H4 font size of given HTML control.",
        "_control ctrlSetFontHeightH4 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeightH4 height",
    ],
    [
        "b",
        "ctrlsetfontheighth5",
        "ctrlSetFontHeightH5",
        "Sets H5 font size of given HTML control.",
        "_control ctrlSetFontHeightH5 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeightH5 height",
    ],
    [
        "b",
        "ctrlsetfontheighth6",
        "ctrlSetFontHeightH6",
        "Sets H6 font size of given HTML control.",
        "_control ctrlSetFontHeightH6 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeightH6 height",
    ],
    [
        "b",
        "ctrlsetfontheightsecondary",
        "ctrlSetFontHeightSecondary",
        "Sets the font size of the secondary text of given control.",
        "_control ctrlSetFontHeightSecondary 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontHeightSecondary height",
    ],
    [
        "b",
        "ctrlsetfontp",
        "ctrlSetFontP",
        "Sets P font of given HTML control.",
        "_control ctrlSetFontP 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontP name",
    ],
    [
        "b",
        "ctrlsetfontp",
        "ctrlSetFontP",
        "Sets P font size of given HTML control.",
        "_control ctrlSetFontHeightP 0.05",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetFontP height",
    ],
    [
        "b",
        "ctrlsetfontpb",
        "ctrlSetFontPB",
        "Sets P bold font of given HTML control.",
        "_control ctrlSetFontPB 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontPB name",
    ],
    [
        "b",
        "ctrlsetfontsecondary",
        "ctrlSetFontSecondary",
        "Sets the font of the secondary text in given control.",
        "_control ctrlSetFontSecondary 'TahomaB'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetFontSecondary name",
    ],
    [
        "b",
        "ctrlsetforegroundcolor",
        "ctrlSetForegroundColor",
        "Sets background color of given control. Color is in format <ar>Color</ar>.",
        "_control ctrlSetForegroundColor [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetForegroundColor color",
    ],
    [
        "b",
        "ctrlsetmodel",
        "ctrlSetModel",
        "Sets model to draw as control object.",
        "ctrl ctrlSetModel 'a3Ui_fobjectsCompass.p3d'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "ctrl ctrlSetModel model",
    ],
    [
        "b",
        "ctrlsetmodeldirandup",
        "ctrlSetModelDirAndUp",
        "Sets orientation to control object.",
        "ctrl ctrlSetDirection [dir, up]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "ctrl ctrlSetModelDirAndUp [direction, up]",
    ],
    [
        "b",
        "ctrlsetmodelscale",
        "ctrlSetModelScale",
        "Sets given scale into control.",
        "ctrl ctrlSetModelScale 1",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "ctrl ctrlSetModelScale scale",
    ],
    [
        "b",
        "ctrlsetmouseposition",
        "ctrlSetMousePosition",
        "Sets mouse position relative to the given control.",
        "_control ctrlSetMousePosition [0.5, 0.5]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetMousePosition [x,y]",
    ],
    [
        "b",
        "ctrlsetpixelprecision",
        "ctrlSetPixelPrecision",
        "set pixel precision mode AUTO(default, when control is animated pixel precision is off otherwise on)/ON/OFF",
        "_control ctrlSetTooltip 'AUTO' or _control ctrlSetTooltip 0",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "ctrl ctrlSetPixelPrecision number",
    ],
    [
        "b",
        "ctrlsetpixelprecision",
        "ctrlSetPixelPrecision",
        "set pixel precision mode AUTO(default, when control is animated pixel precision is off otherwise on)/ON/OFF",
        "_control ctrlSetTooltip 'AUTO' or _control ctrlSetTooltip 0",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "ctrl ctrlSetPixelPrecision precision mode",
    ],
    [
        "b",
        "ctrlsetposition",
        "ctrlSetPosition",
        "Sets wanted position and size for control animation. Width and height are optional.",
        "_control ctrlSetPosition [0.5, 0.5]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetPosition [x, y, w, h]",
    ],
    [
        "b",
        "ctrlsetpositionh",
        "ctrlSetPositionH",
        "Sets wanted value for control animation.",
        "_control ctrlSetPositionH 0.2",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetPositionH h",
    ],
    [
        "b",
        "ctrlsetpositionw",
        "ctrlSetPositionW",
        "Sets wanted value for control animation.",
        "_control ctrlSetPositionW 0.2]",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetPositionW w",
    ],
    [
        "b",
        "ctrlsetpositionx",
        "ctrlSetPositionX",
        "Sets wanted value for control animation.",
        "_control ctrlSetPositionX 0.5",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetPositionX x",
    ],
    [
        "b",
        "ctrlsetpositiony",
        "ctrlSetPositionY",
        "Sets wanted value for control animation.",
        "_control ctrlSetPositionZ 0.5",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetPositionY y",
    ],
    [
        "b",
        "ctrlsetscale",
        "ctrlSetScale",
        "Sets wanted scale for control animation. Top left corner remains same.",
        "_control ctrlSetScale 0.5",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetScale scale",
    ],
    [
        "b",
        "ctrlsetscrollvalues",
        "ctrlSetScrollValues",
        "Sets control's scroll values in 0...1 range. Use -1 to ignore a particular value",
        "_control ctrlSetScrollValues [-1, 0.5]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetScrollValues [vScrollValue, hScrollValue]",
    ],
    [
        "b",
        "ctrlsetshadow",
        "ctrlSetShadow",
        "Sets 'shadow' property of the control",
        "_control ctrlSetShadow 2;",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetShadow shadow",
    ],
    [
        "b",
        "ctrlsetstructuredtext",
        "ctrlSetStructuredText",
        "Set the structured text which will be displayed in structured text control.",
        "_control ctrlSetStructuredText parseText 'First line&lt;img image=dataisniper.paa/&gt;&ltbr/&gt;Second line'",
        "",
        "NOTHING",
        "CONTROL",
        "TEXT",
        "control ctrlSetStructuredText structured text",
    ],
    [
        "b",
        "ctrlsettext",
        "ctrlSetText",
        "Sets the text that will be shown in given control.",
        "_control ctrlSetText 'Hello, world.'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetText text",
    ],
    [
        "u",
        "ctrlsettext",
        "ctrlSetText",
        "Sets the text that will be shown in the control with id idc of the topmost user dialog. This can be used for static texts, buttons, edit lines and active texts.",
        "ctrlSetText [100, 'Hello, world']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "ctrlSetText [idc, text]",
    ],
    [
        "b",
        "ctrlsettextcolor",
        "ctrlSetTextColor",
        "Sets text color of given control. Color is in format <ar>Color</ar>.",
        "_control ctrlSetTextColor [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetTextColor color",
    ],
    [
        "b",
        "ctrlsettextcolorsecondary",
        "ctrlSetTextColorSecondary",
        "Sets text color of the secondary text of given control. Color is in format <ar>Color</ar>.",
        "_control ctrlSetTextColorSecondary [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetTextColorSecondary color",
    ],
    [
        "b",
        "ctrlsettextsecondary",
        "ctrlSetTextSecondary",
        "Sets the secondary text that will be shown in given control.",
        "_control ctrlSetTextSecondary 'Hello, world.'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetTextSecondary text",
    ],
    [
        "b",
        "ctrlsettextselection",
        "ctrlSetTextSelection",
        "Selects 'length' characters of control text from the 'start' position",
        "_control ctrlSetTextSelection [5, 10]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetTextSelection [start, length]",
    ],
    [
        "b",
        "ctrlsettooltip",
        "ctrlSetTooltip",
        "Sets tooltip text of given control.",
        "_control ctrlSetTooltip 'tooltip'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetTooltip text",
    ],
    [
        "b",
        "ctrlsettooltipcolorbox",
        "ctrlSetTooltipColorBox",
        "Sets tooltip border color of given control. Color is in format <ar>Color</ar>.",
        "_control ctrlSetTooltipColorBox [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetTooltipColorBox color",
    ],
    [
        "b",
        "ctrlsettooltipcolorshade",
        "ctrlSetTooltipColorShade",
        "Sets tooltip background color of given control. Color is in format <ar>Color</ar>.",
        "_control ctrlSetTooltipColorShade [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetTooltipColorShade color",
    ],
    [
        "b",
        "ctrlsettooltipcolortext",
        "ctrlSetTooltipColorText",
        "Sets tooltip text color of given control. Color is in format <ar>Color</ar>.",
        "_control ctrlSetTooltipColorText [1, 0, 0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctrlSetTooltipColorText color",
    ],
    [
        "b",
        "ctrlsettooltipmaxwidth",
        "ctrlSetTooltipMaxWidth",
        "Sets tooltip maximum width of given control, returns previously set width.",
        "_control ctrlSetTooltipMaxWidth 0.5",
        "",
        "SCALAR",
        "CONTROL",
        "SCALAR",
        "control ctrlSetTooltipMaxWidth width",
    ],
    [
        "b",
        "ctrlseturl",
        "ctrlSetURL",
        "Sets url property of the given control.",
        "_control ctrlSetURL 'http://arma3.com/'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control ctrlSetURL url",
    ],
    [
        "b",
        "ctrlseturloverlaymode",
        "ctrlSetURLOverlayMode",
        "Sets how url opening is handled: 0 - default browser, 1 - prefer Steam overlay is enabled, 2 - force Steam overlay and display error message if not enabled",
        "_control ctrlSetURLOverlayMode 1;",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctrlSetURLOverlayMode mode",
    ],
    [
        "u",
        "ctrlshadow",
        "ctrlShadow",
        "Returns 'shadow' property of the control",
        "shadow = ctrlShadow _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlShadow control",
    ],
    [
        "b",
        "ctrlshow",
        "ctrlShow",
        "Show / hide given control.",
        "_control ctrlShow false",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "control ctrlShow show",
    ],
    [
        "u",
        "ctrlshow",
        "ctrlShow",
        "Shows / hides the control with id idc of the topmost user dialog.",
        "ctrlShow [100, true]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "ctrlShow [idc, show]",
    ],
    [
        "u",
        "ctrlshown",
        "ctrlShown",
        "Returns whether given control is shown.",
        "_ok = ctrlShown _control",
        "",
        "BOOL",
        "",
        "CONTROL",
        "ctrlShown control",
    ],
    [
        "u",
        "ctrlstyle",
        "ctrlStyle",
        "Returns value representing style of control.",
        "_style = ctrlStyle _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlStyle control",
    ],
    [
        "u",
        "ctrltext",
        "ctrlText",
        "Returns the text shown in given control.",
        "_text = ctrlText _control",
        "",
        "STRING",
        "",
        "CONTROL",
        "ctrlText control",
    ],
    [
        "u",
        "ctrltext",
        "ctrlText",
        "Returns the text shown in the control with id idc of the topmost user dialog. This can be used for static texts, buttons, edit lines and active texts.",
        "_message = ctrlText 100",
        "",
        "STRING",
        "",
        "SCALAR",
        "ctrlText idc",
    ],
    [
        "u",
        "ctrltextcolor",
        "ctrlTextColor",
        "Returns control's text color.",
        "_color = ctrlTextColor _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlTextColor control",
    ],
    [
        "u",
        "ctrltextheight",
        "ctrlTextHeight",
        "Returns the text height.",
        "h = ctrlTextHeight _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlTextHeight structuredText control",
    ],
    [
        "u",
        "ctrltextsecondary",
        "ctrlTextSecondary",
        "Returns the secondary text of the given control (if control is supporting a secondary text).",
        "_text = ctrlTextSecondary _control",
        "",
        "STRING",
        "",
        "CONTROL",
        "ctrlTextSecondary control",
    ],
    [
        "u",
        "ctrltextselection",
        "ctrlTextSelection",
        "Returns control text selection in format [start, length, selectedText]",
        "ctrlTextSelection _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "ctrlTextSelection control",
    ],
    [
        "u",
        "ctrltextwidth",
        "ctrlTextWidth",
        "Returns max text width of all lines in given control.",
        "h = ctrlTextWidth _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlTextWidth structuredText control",
    ],
    [
        "u",
        "ctrltooltip",
        "ctrlTooltip",
        "Returns text value of control's tooltip",
        "_tooltip = ctrlTooltip _control",
        "",
        "STRING",
        "",
        "CONTROL",
        "ctrlTooltip control",
    ],
    [
        "u",
        "ctrltype",
        "ctrlType",
        "Returns value representing type of control.",
        "_type = ctrlType _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlType control",
    ],
    [
        "u",
        "ctrlurl",
        "ctrlURL",
        "Returns control's URL set value where applicable.",
        "_url = ctrlURL _control",
        "",
        "STRING",
        "",
        "CONTROL",
        "ctrlURL control",
    ],
    [
        "u",
        "ctrlurloverlaymode",
        "ctrlURLOverlayMode",
        "Returns URL overlay mode set for this control",
        "mode = ctrlURLOverlayMode _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctrlURLOverlayMode control",
    ],
    [
        "u",
        "ctrlvisible",
        "ctrlVisible",
        "Returns whether the control with id idc of the topmost user dialog is visible.",
        "_visible = ctrlVisible 100",
        "",
        "BOOL",
        "",
        "SCALAR",
        "ctrlVisible idc",
    ],
    [
        "b",
        "ctrowcontrols",
        "ctRowControls",
        "Returns array of controls on the row with the given index.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "SCALAR",
        "control ctRowControls row index",
    ],
    [
        "u",
        "ctrowcount",
        "ctRowCount",
        "Returns number of rows (headers not included) in the table.",
        "",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "ctRowCount control",
    ],
    [
        "b",
        "ctsetcursel",
        "ctSetCurSel",
        "Selects the row with given index. Invalid index cancels selection.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control ctSetCurSel row index",
    ],
    [
        "b",
        "ctsetdata",
        "ctSetData",
        "Associates metadata (string) with the row determined by the index.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctSetData [row index, string]",
    ],
    [
        "b",
        "ctsetheadertemplate",
        "ctSetHeaderTemplate",
        "Takes config path to the new header template. Clears the whole table and sets the new header template.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "CONFIG",
        "control ctSetHeaderTemplate config",
    ],
    [
        "b",
        "ctsetrowtemplate",
        "ctSetRowTemplate",
        "Takes config path to the new row template. Clears the whole table and sets the new row template.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "CONFIG",
        "control ctSetRowTemplate config",
    ],
    [
        "b",
        "ctsetvalue",
        "ctSetValue",
        "Associates metadata (number) with the row determined by the index. ",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control ctSetValue [row index, number]",
    ],
    [
        "b",
        "ctvalue",
        "ctValue",
        "Returns metadata (number) associated with a particular row.",
        "",
        "",
        "SCALAR",
        "CONTROL",
        "SCALAR",
        "control ctValue row index",
    ],
    [
        "u",
        "curatoraddons",
        "curatorAddons",
        "Return list of addons allowed to given curator.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "curatorAddons curatorObj",
    ],
    [
        "n",
        "curatorcamera",
        "curatorCamera",
        "Returns curator camera object.",
        "",
        "",
        "OBJECT",
        "",
        "",
        "curatorCamera",
    ],
    [
        "u",
        "curatorcameraarea",
        "curatorCameraArea",
        "Return all curator camera areas.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "curatorCameraArea curatorObj",
    ],
    [
        "u",
        "curatorcameraareaceiling",
        "curatorCameraAreaCeiling",
        "Return ceiling height for curator camera.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "curatorCameraAreaCeiling curatorObj",
    ],
    [
        "b",
        "curatorcoef",
        "curatorCoef",
        "Returns current coeficient setting",
        "0 curatorCoef 'Place'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "curatorObj curatorCoef action",
    ],
    [
        "u",
        "curatoreditableobjects",
        "curatorEditableObjects",
        "Return all editable objects which belongs to a curator.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "curatorEditableObjects curatorObj",
    ],
    [
        "u",
        "curatoreditingarea",
        "curatorEditingArea",
        "Returns all curator editing areas",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "curatorEditingArea curatorObj",
    ],
    [
        "u",
        "curatoreditingareatype",
        "curatorEditingAreaType",
        "Returns type of edit areas assigned to curator (blacklist/whitelist).",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "curatorEditingAreaType obj",
    ],
    [
        "n",
        "curatormouseover",
        "curatorMouseOver",
        "Returns curator mouse over object.",
        "",
        "",
        "OBJECT",
        "",
        "",
        "curatorMouseOver",
    ],
    [
        "u",
        "curatorpoints",
        "curatorPoints",
        "Return number of points that curator have.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "curatorPoints curatorObj",
    ],
    [
        "u",
        "curatorregisteredobjects",
        "curatorRegisteredObjects",
        "Returns array with all objects that has curator registered and their settings.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "curatorRegisteredObjects curatorObj",
    ],
    [
        "n",
        "curatorselected",
        "curatorSelected",
        "Returns list of all curator selected items.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "curatorSelected",
    ],
    [
        "u",
        "curatorwaypointcost",
        "curatorWaypointCost",
        "Return current price for placing waypoints (curator specific).",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "curatorWaypointCost curatorObj",
    ],
    [
        "n",
        "current3denoperation",
        "current3DENOperation",
        "Name of the operation in progress.",
        "",
        "",
        "STRING",
        "",
        "",
        "current3DENOperation",
    ],
    [
        "n",
        "currentchannel",
        "currentChannel",
        "Return index of player's currently selected chat channel.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "currentChannel",
    ],
    [
        "u",
        "currentcommand",
        "currentCommand",
        "Return the current command type (empty string when no command).",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "currentCommand vehicle",
    ],
    [
        "u",
        "currentmagazine",
        "currentMagazine",
        "Return the name of the type of the currently using magazine (on the primary turret for vehicles).",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "currentMagazine vehicle",
    ],
    [
        "u",
        "currentmagazinedetail",
        "currentMagazineDetail",
        "Return the name of the type of the currently using magazine (on the primary turret for vehicles).",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "currentMagazineDetail vehicle",
    ],
    [
        "b",
        "currentmagazinedetailturret",
        "currentMagazineDetailTurret",
        "Return the name of the type of the currently using magazine on specified turret.",
        "vehicle currentMagazineDetailTurret [0]",
        "",
        "STRING",
        "OBJECT",
        "ARRAY",
        "vehicle currentMagazineDetailTurret turret path",
    ],
    [
        "b",
        "currentmagazineturret",
        "currentMagazineTurret",
        "Return the name of the type of the currently using magazine on specified turret.",
        "vehicle currentMagazineTurret [0]",
        "",
        "STRING",
        "OBJECT",
        "ARRAY",
        "vehicle currentMagazineTurret turret path",
    ],
    [
        "u",
        "currentmuzzle",
        "currentMuzzle",
        "Returns current muzzle of unit's weapon.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "currentMuzzle gunner",
    ],
    [
        "n",
        "currentnamespace",
        "currentNamespace",
        "Returns the current namespace code runs in",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "currentNamespace",
    ],
    [
        "u",
        "currentpilot",
        "currentPilot",
        "Returns the person piloting the vehicle. If co-pilot is piloting, co-pilot is returned",
        "currentPilot vehicle player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "currentPilot vehicle",
    ],
    [
        "u",
        "currenttask",
        "currentTask",
        "Return current task of given person.",
        "",
        "",
        "TASK",
        "",
        "OBJECT",
        "currentTask person",
    ],
    [
        "u",
        "currenttasks",
        "currentTasks",
        "List all uncompleted tasks.",
        "",
        "",
        "ARRAY",
        "",
        "TEAM_MEMBER",
        "currentTasks teamMember",
    ],
    [
        "u",
        "currentthrowable",
        "currentThrowable",
        "Return the array with information about the currently selected throwable weapon in format  [selectedThrowableMagazineClassName, selectedThrowMuzzle>, [id,creatorofthemagazine]].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "currentThrowable player(soldier)",
    ],
    [
        "b",
        "currentvisionmode",
        "currentVisionMode",
        "Returns current vision mode and FLIR index for the given vehicle's turret or [] for the primary gunner turret",
        "vehicle player currentVisionMode [0];",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "vehicle currentVisionMode turret",
    ],
    [
        "b",
        "currentvisionmode",
        "currentVisionMode",
        "Returns current vision mode and FLIR index for the given unit's weapon or '' for the current weapon",
        "player currentVisionMode primaryWeapon player;",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "unit currentVisionMode weapon",
    ],
    [
        "u",
        "currentvisionmode",
        "currentVisionMode",
        "Returns current vision mode for the given entity. 0-dayTime, 1-night vision, 2-FLIR ",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "currentVisionMode entity",
    ],
    [
        "u",
        "currentvisionmode",
        "currentVisionMode",
        "Returns current vision mode and FLIR index for the given entity. 0-dayTime, 1-night vision, 2-FLIR ",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "currentVisionMode [entity]",
    ],
    [
        "u",
        "currentwaypoint",
        "currentWaypoint",
        "Return the index of the current waypoint.",
        "",
        "",
        "SCALAR",
        "",
        "GROUP",
        "currentWaypoint group",
    ],
    [
        "u",
        "currentweapon",
        "currentWeapon",
        "Return the name of the currently selected weapon (on the primary turret for vehicles).",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "currentWeapon vehicle",
    ],
    [
        "u",
        "currentweaponmode",
        "currentWeaponMode",
        "Returns current weapon mode of unit's weapon.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "currentWeaponMode gunner",
    ],
    [
        "b",
        "currentweaponturret",
        "currentWeaponTurret",
        "Return the name of the currently selected weapon on specified turret.",
        "vehicle currentWeaponTurret [0]",
        "",
        "STRING",
        "OBJECT",
        "ARRAY",
        "vehicle currentWeaponTurret turret path",
    ],
    [
        "b",
        "currentzeroing",
        "currentZeroing",
        "Retrieves the current zeroing on specified weapon and optionally specific muzzle",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "unit currentZeroing [weaponClass(, muzzleClass)]",
    ],
    [
        "u",
        "currentzeroing",
        "currentZeroing",
        "Returns zeroing of unit's weapon.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "currentZeroing gunner",
    ],
    [
        "n",
        "cursorobject",
        "cursorObject",
        "This is the object pointed to by a players cursor.",
        "alive cursorObject",
        "",
        "OBJECT",
        "",
        "",
        "cursorObject",
    ],
    [
        "n",
        "cursortarget",
        "cursorTarget",
        "This is the entity pointed to by a players cursor.",
        "alive cursorTarget",
        "",
        "OBJECT",
        "",
        "",
        "cursorTarget",
    ],
    [
        "b",
        "customchat",
        "customChat",
        "Sends the chat message to the custom radio channel.",
        "sweetBoy customChat [1,'Hi, any sweetgirls to chat?']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit customChat [chan ix, string]",
    ],
    [
        "b",
        "customradio",
        "customRadio",
        "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.",
        "soldierOne customRadio [1,'WordEnemy']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit customRadio [chan ix, string]",
    ],
    [
        "n",
        "customwaypointposition",
        "customWaypointPosition",
        "Return position of custom waypoint set by player.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "customWaypointPosition",
    ],
    [
        "b",
        "cutfadeout",
        "cutFadeOut",
        "Terminate the effect in the given layer and set duration of the fade out phase to the given time.",
        "'layer1' cutFadeOut 1.0",
        "",
        "SCALAR",
        "STRING",
        "SCALAR",
        "layerName cutFadeOut duration",
    ],
    [
        "b",
        "cutfadeout",
        "cutFadeOut",
        "Terminate the effect in the given layer and set duration of the fade out phase to the given time.",
        "0 cutFadeIn 1.0",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "layer cutFadeOut duration",
    ],
    [
        "b",
        "cutobj",
        "cutObj",
        "Object background - the right argument uses format ['name','type',speed] or ['name','type']. If speed is not given, it's assumed to be one\nThe left argument defines layer in which the effect is shown\nThe object can be defined in the description.ext file.",
        "'layer1' cutObj ['TVSet', 'plain']",
        "",
        "SCALAR",
        "STRING",
        "ARRAY",
        "layerName cutObj effect",
    ],
    [
        "b",
        "cutobj",
        "cutObj",
        "Object background - the right argument uses format ['name','type',speed] or ['name','type']. If speed is not given, it's assumed to be one\nThe left argument define layer in which the effect is show, 0 is the back most\nThe object can be defined in the description.ext file.",
        "0 cutObj ['TVSet', 'plain']",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "layer cutObj effect",
    ],
    [
        "u",
        "cutobj",
        "cutObj",
        "Object background - the argument uses format ['name','type',speed, showInMap] or ['name','type']. If speed is not given, it's assumed to be one\nThe object can be defined in the description.ext file.",
        "cutObj ['TVSet', 'plain']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "cutObj effect",
    ],
    [
        "b",
        "cutrsc",
        "cutRsc",
        "Resource background - the right argument uses format ['name','type',speed, showInMap, isStructuredText] or ['name','type']. If speed is not given, it's assumed to be one\nThe left argument defines layer in which the effect is shown\nThe resource can be defined in the description.ext file.",
        "'layer1' cutRsc ['binocular', 'PLAIN']",
        "",
        "SCALAR",
        "STRING",
        "ARRAY",
        "layerName cutRsc effect",
    ],
    [
        "b",
        "cutrsc",
        "cutRsc",
        "Resource background - the right argument uses format ['name','type',speed] or ['name','type']. If speed is not given, it's assumed to be one\nThe left argument define layer in which the effect is show, 0 is the back most\nThe resource can be defined in the description.ext file.",
        "0 cutRsc ['binocular', 'PLAIN']",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "layer cutRsc effect",
    ],
    [
        "u",
        "cutrsc",
        "cutRsc",
        "Resource background - the argument uses format ['name','type',speed, showInMap] or ['name','type']. If speed is not given, it's assumed to be one\nThe resource can be defined in the description.ext file.",
        "cutRsc ['binocular', 'PLAIN']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "cutRsc effect",
    ],
    [
        "b",
        "cuttext",
        "cutText",
        "Text background - the right argument uses format ['text','type',speed] or ['text','type']. If speed is not given, it's assumed to be one. Type may be one of: 'PLAIN', 'PLAIN DOWN', 'BLACK', 'BLACK FADED', 'BLACK OUT', 'BLACK IN', 'WHITE OUT' or 'WHITE IN'\nThe left argument defines layer in which the effect is shown.",
        "'layer1' cutText ['', 'BLACK OUT']",
        "",
        "SCALAR",
        "STRING",
        "ARRAY",
        "layerName cutText effect",
    ],
    [
        "b",
        "cuttext",
        "cutText",
        "Text background - the right argument uses format ['text','type',speed, showInMap, isStructuredText] or ['text','type']. If speed is not given, it's assumed to be one. Type may be one of: 'PLAIN', 'PLAIN DOWN', 'BLACK', 'BLACK FADED', 'BLACK OUT', 'BLACK IN', 'WHITE OUT' or 'WHITE IN'\nThe left argument define layer in which the effect is show, 0 is the back most.",
        "0 cutText ['', 'BLACK OUT']",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "layer cutText effect",
    ],
    [
        "u",
        "cuttext",
        "cutText",
        "Text background - the argument uses format ['text','type',speed, showInMap, isStructuredText] or ['text','type']. If speed is not given, it's assumed to be one. Type may be one of: 'PLAIN', 'PLAIN DOWN', 'BLACK', 'BLACK FADED', 'BLACK OUT', 'BLACK IN', 'WHITE OUT' or 'WHITE IN'.",
        "cutText ['', 'BLACK OUT']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "cutText effect",
    ],
    [
        "u",
        "damage",
        "damage",
        "Returns the object damage in a range of 0 to 1. Note: this function is identical to <f>getDammage</f>.",
        "damage player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "damage object",
    ],
    [
        "n",
        "date",
        "date",
        "Return the actual mission date and time as an array [year, month, day, hour, minute].",
        "",
        "",
        "ARRAY",
        "",
        "",
        "date",
    ],
    [
        "u",
        "datetonumber",
        "dateToNumber",
        "Convert date to float number.",
        "time = DateToNumber [year,month,day,hour,minute]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "dateToNumber date",
    ],
    [
        "n",
        "daytime",
        "dayTime",
        "Returns the time in the world, in hours.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "dayTime",
    ],
    [
        "u",
        "deactivatekey",
        "deActivateKey",
        "Deactivates the given key from the current user profile. The keys are used to unlock missions or campaigns. See keys, keysLimit and doneKeys in the description.ext file of the missions.",
        "deActivateKey 'M04'",
        "",
        "NOTHING",
        "",
        "STRING",
        "deActivateKey keyName",
    ],
    [
        "u",
        "debriefingtext",
        "debriefingText",
        "Return debriefing text.",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "debriefingText end",
    ],
    [
        "b",
        "debugfsm",
        "debugFSM",
        "Switch FSM debug log on/off.",
        "BIS_grpMainFSM debugFSM true",
        "",
        "NOTHING",
        "SCALAR",
        "BOOL",
        "FSM handle debugFSM true",
    ],
    [
        "u",
        "debuglog",
        "debugLog",
        "Dumps the argument's type and value to the debugging output.",
        "debugLog player",
        "",
        "NOTHING",
        "",
        "ANY",
        "debugLog anything",
    ],
    [
        "u",
        "decaygraphvalues",
        "decayGraphValues",
        "Decay old graph values towards 0, unless new value is higher)",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "decayGraphValues [oldValues, newValues, coef]",
    ],
    [
        "u",
        "default",
        "default",
        "see switch",
        "",
        "",
        "NOTHING",
        "",
        "CODE",
        "default a",
    ],
    [
        "u",
        "deg",
        "deg",
        "Converts x from radians to degrees.",
        "deg 1",
        "57.295",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "deg x",
    ],
    [
        "u",
        "delete3denentities",
        "delete3DENEntities",
        "Deletes all given entities from 3DEN and adds entry to history.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "delete3DENEntities &lt;entities&gt;",
    ],
    [
        "b",
        "deleteat",
        "deleteAt",
        "Remove element at given index(and use them as a return value).",
        "array DeleteAt 4",
        "",
        "ANY",
        "ARRAY",
        "SCALAR",
        "array deleteAt index",
    ],
    [
        "b",
        "deleteat",
        "deleteAt",
        "Deletes the given key from the HashMap and returns the previous value.",
        "_hashMap deleteAt 1337",
        "player",
        "ANY",
        "HASHMAP",
        "SCALAR,BOOL,ARRAY,STRING,NAMESPACE,NaN,CODE,SIDE,CONFIG",
        "HashMap deleteAt key",
    ],
    [
        "u",
        "deletecenter",
        "deleteCenter",
        "Destroys the AI center of the given side.",
        "deleteCenter East",
        "",
        "NOTHING",
        "",
        "SIDE",
        "deleteCenter side",
    ],
    [
        "u",
        "deletecollection",
        "deleteCollection",
        "same as hideObject.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "deleteCollection object",
    ],
    [
        "b",
        "deleteeditorobject",
        "deleteEditorObject",
        "Delete the editor object. Requires all editor object links to be removed prior.",
        "",
        "",
        "ANY",
        "CONTROL",
        "STRING",
        "map deleteEditorObject object",
    ],
    [
        "u",
        "deletegroup",
        "deleteGroup",
        "Destroys the given AI group.",
        "deleteGroup group",
        "",
        "NOTHING",
        "",
        "GROUP",
        "deleteGroup group",
    ],
    [
        "b",
        "deletegroupwhenempty",
        "deleteGroupWhenEmpty",
        "Enable or disable garbage collection of given group when its empty",
        "deleteGroupWhenEmpty ",
        "",
        "NOTHING",
        "GROUP",
        "BOOL",
        "group deleteGroupWhenEmpty garbageCollect",
    ],
    [
        "u",
        "deleteidentity",
        "deleteIdentity",
        "Deletes an identity created by saveIdentity from the campaign progress file.",
        "deleteIdentity 'playerIdentity'",
        "",
        "BOOL",
        "",
        "STRING",
        "deleteIdentity identityName",
    ],
    [
        "u",
        "deletelocation",
        "deleteLocation",
        "Delete the given location.",
        "",
        "",
        "NOTHING",
        "",
        "LOCATION",
        "deleteLocation location",
    ],
    [
        "u",
        "deletemarker",
        "deleteMarker",
        "Destroys the given marker. The marker is destroyed on all computers in a network session.",
        "deleteMarker 'Marker1'",
        "",
        "NOTHING",
        "",
        "STRING",
        "deleteMarker name",
    ],
    [
        "u",
        "deletemarkerlocal",
        "deleteMarkerLocal",
        "Destroys the given marker. The marker is only destroyed on the computer where the command is called.",
        "deleteMarkerLocal 'Marker1'",
        "",
        "NOTHING",
        "",
        "STRING",
        "deleteMarkerLocal name",
    ],
    [
        "b",
        "deleterange",
        "deleteRange",
        "Removes n consequent elements starting at given index.",
        "array deleteRange [2,8]",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "array deleteRange [index,count]",
    ],
    [
        "b",
        "deleteresources",
        "deleteResources",
        "Delete (unregister) resources of the team member.",
        "teamMember _agent deleteResources ['Legs']",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "ARRAY",
        "teamMember deleteResources [resource1, resource2, ...]",
    ],
    [
        "u",
        "deletesite",
        "deleteSite",
        "Removes the site.",
        "deleteSite tank",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "deleteSite site",
    ],
    [
        "u",
        "deletestatus",
        "deleteStatus",
        "Deletes a status created by saveStatus from the campaign progress file.",
        "deleteStatus 'playerState'",
        "",
        "BOOL",
        "",
        "STRING",
        "deleteStatus statusName",
    ],
    [
        "u",
        "deleteteam",
        "deleteTeam",
        "Destroy given team.",
        "deleteTeam _team",
        "",
        "NOTHING",
        "",
        "TEAM_MEMBER",
        "deleteTeam team",
    ],
    [
        "u",
        "deletevehicle",
        "deleteVehicle",
        "Deletes any unit or vehicle. Only vehicles inserted in the editor or created during a mission can be deleted. The player unit cannot be deleted.",
        "deleteVehicle tank",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "deleteVehicle object",
    ],
    [
        "b",
        "deletevehiclecrew",
        "deleteVehicleCrew",
        "Deletes given vehicle crew person from vehicle including dead persons.",
        "car deleteVehicleCrew soldier",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "vehicle deleteVehicleCrew person",
    ],
    [
        "u",
        "deletevehiclecrew",
        "deleteVehicleCrew",
        "Deletes entire crew from vehicle including dead crew.",
        "deleteVehicleCrew _vehicle",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "deleteVehicleCrew vehicle",
    ],
    [
        "u",
        "deletewaypoint",
        "deleteWaypoint",
        "Removes the waypoint.",
        "deleteWaypoint [grp, 2]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "deleteWaypoint waypoint",
    ],
    [
        "u",
        "detach",
        "detach",
        "Detaches an object.",
        "detach player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "detach obj",
    ],
    [
        "u",
        "detectedmines",
        "detectedMines",
        "Returns list af all mines detected by given side.",
        "detectedMines (side player)",
        "",
        "ARRAY",
        "",
        "SIDE",
        "detectedMines side",
    ],
    [
        "n",
        "diag_activemissionfsms",
        "diag_activeMissionFSMs",
        "Returns array with active Mission FSMs [[name, state, timeout],[name, state, timeout],...]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "diag_activeMissionFSMs",
    ],
    [
        "n",
        "diag_activescripts",
        "diag_activeScripts",
        "Returns an array with active scripts count [spawned SQFs, execVMed SQFs, FSMs, SQSes]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "diag_activeScripts",
    ],
    [
        "n",
        "diag_activesqfscripts",
        "diag_activeSQFScripts",
        "Returns array with active SQFs [[name, fileName, isRunning, currentLine],[name, fileName, isRunning, currentLine],...]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "diag_activeSQFScripts",
    ],
    [
        "n",
        "diag_activesqsscripts",
        "diag_activeSQSScripts",
        "Returns array with active SQSs [[name, fileName, isRunning, currentLine],[name, fileName, isRunning, currentLine],...]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "diag_activeSQSScripts",
    ],
    [
        "n",
        "diag_allmissioneventhandlers",
        "diag_allMissionEventHandlers",
        "Returns an array with all mission event handlers in format [EH1name, EH1count,...]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "diag_allMissionEventHandlers",
    ],
    [
        "u",
        "diag_codeperformance",
        "diag_codePerformance",
        "Runs the given code given number of times and then returns average time",
        "diag_codePerformance [{a = 123;}, [], 10]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "diag_codePerformance [code, (arguments), (cycles)]",
    ],
    [
        "n",
        "diag_deltatime",
        "diag_deltaTime",
        "Real time spent since the last frame.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "diag_deltaTime",
    ],
    [
        "u",
        "diag_dynamicsimulationend",
        "diag_dynamicSimulationEnd",
        "Ends dynamic simulation stats gathering and writes results into given file",
        "diag_dynamicSimulationEnd dynSimLog",
        "",
        "NOTHING",
        "",
        "STRING",
        "diag_dynamicSimulationEnd filePath",
    ],
    [
        "n",
        "diag_fps",
        "diag_fps",
        "Returns average framerate over last 16 frames.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "diag_fps",
    ],
    [
        "n",
        "diag_fpsmin",
        "diag_fpsmin",
        "Returns minimal framerate. Calculated from the longest frame over last 16 frames.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "diag_fpsmin",
    ],
    [
        "n",
        "diag_frameno",
        "diag_frameno",
        "Returns number of frame currently displayed .",
        "",
        "",
        "SCALAR",
        "",
        "",
        "diag_frameno",
    ],
    [
        "u",
        "diag_lightnewload",
        "diag_lightNewLoad",
        "Allows loading of lightning config during the gameplay (effectively changing the current scene lightning). Filename path can be either absolute or relative. The file must contain only the class LightningNew, which should contain lightning configuration.",
        "diag_lightNewLoad 'o:lighting.txt'",
        "immediate lightning change",
        "NOTHING",
        "",
        "STRING",
        "diag_lightNewLoad path_to_config_filename",
    ],
    [
        "u",
        "diag_localized",
        "diag_localized",
        "Returns array of localized variables names from given table or from core table or array of all table names",
        "diag_localized 'Global'",
        "",
        "ARRAY",
        "",
        "STRING",
        "diag_localized tableName or &quot;*&quot; or &quot;&quot;",
    ],
    [
        "u",
        "diag_log",
        "diag_log",
        "Dumps the argument's type and value to the report file.",
        "diag_log player",
        "",
        "NOTHING",
        "",
        "ANY",
        "diag_log anything",
    ],
    [
        "n",
        "diag_scope",
        "diag_scope",
        "Gets the current script scope depth.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "diag_scope",
    ],
    [
        "u",
        "diag_setlightnew",
        "diag_setLightNew",
        "Overrides currently used scene lightning. The operand is config that is placed as a string (not file). The changes may not be applied immediately, but can be forced by the call of simulWeatherSync.",
        "diag_setLightNew 'sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... '",
        "lightning change",
        "NOTHING",
        "",
        "STRING",
        "diag_setLightNew config_in_string_form",
    ],
    [
        "n",
        "diag_stacktrace",
        "diag_stacktrace",
        "Retrieves the current stacktrace.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "diag_stacktrace",
    ],
    [
        "n",
        "diag_ticktime",
        "diag_tickTime",
        "Real time spent from the start of the game.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "diag_tickTime",
    ],
    [
        "n",
        "dialog",
        "dialog",
        "Returns whether a user dialog is present.",
        "",
        "",
        "BOOL",
        "",
        "",
        "dialog",
    ],
    [
        "n",
        "diaryrecordnull",
        "diaryRecordNull",
        "A non-existing diary record. This value is not equal to anything, including itself.",
        "diaryRecordNull == diaryRecordNull",
        "false",
        "TASK",
        "",
        "",
        "diaryRecordNull",
    ],
    [
        "b",
        "diarysubjectexists",
        "diarySubjectExists",
        "Checks whether given subject is present in the diary of given person.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "person diarySubjectExists name",
    ],
    [
        "n",
        "didjip",
        "didJIP",
        "Returns true if the local client joined the game in progress. Returns false in single player.",
        "",
        "",
        "BOOL",
        "",
        "",
        "didJIP",
    ],
    [
        "u",
        "didjipowner",
        "didJIPOwner",
        "Returns true if the current owner of given object has joined the game in progress, works only on Server, returns false on clients or in single player.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "didJIPOwner object",
    ],
    [
        "n",
        "difficulty",
        "difficulty",
        "Returns difficulty.",
        "difficulty",
        "",
        "SCALAR",
        "",
        "",
        "difficulty",
    ],
    [
        "u",
        "difficultyenabled",
        "difficultyEnabled",
        "Obsolete. Use difficultyOption instead.",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "difficultyEnabled flag",
    ],
    [
        "n",
        "difficultyenabledrtd",
        "difficultyEnabledRTD",
        "Returns true if rotorlib simulation is enabled. Forcing by mission is included.",
        "",
        "",
        "BOOL",
        "",
        "",
        "difficultyEnabledRTD",
    ],
    [
        "u",
        "difficultyoption",
        "difficultyOption",
        "Returns current value of given difficulty option. For possible values of option, see config class Options in CfgDifficultyPresets.",
        "difficultyOption 'friendlyTag'",
        "",
        "SCALAR",
        "",
        "STRING",
        "difficultyOption option",
    ],
    [
        "u",
        "direction",
        "direction",
        "Returns the object heading in the range of 0 to 360.",
        "direction player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "direction object",
    ],
    [
        "u",
        "direction",
        "direction",
        "Return direction (angle) of given location.",
        "",
        "",
        "SCALAR",
        "",
        "LOCATION",
        "direction location",
    ],
    [
        "b",
        "directionstabilizationenabled",
        "directionStabilizationEnabled",
        "Get state of direction stabilization of selected turret",
        "uav directionStabilizationEnabled [0]",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "transport directionStabilizationEnabled [turretPath]",
    ],
    [
        "b",
        "directsay",
        "directSay",
        "Sends the message to the direct channel. The message is defined in the description.ext file or radio protocol.",
        "soldierOne directSay 'messageOne'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit directSay radioName",
    ],
    [
        "b",
        "disableai",
        "disableAI",
        "Disables parts of the AI behaviour to get more control over a unit. Section is one of 'TARGET' (disables watching assigned targets), 'AUTOTARGET' (disables independed target assigning and watching of unknown targets), 'MOVE' (disables movement), 'SUPPRESSION' (disable suppression being accumulated out of danger events), 'AIMINGERROR' (disable distractions on aiming), 'CHECKVISIBLE' (disable visibility raycasts), 'COVER' (disable usage of cover), 'AUTOCOMBAT' (disable autonomous switching to combat mode), 'MINEDETECTION' (disable autonomous AI mine detection), 'ALL' to disable everything",
        "soldierOne disableAI 'Move'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit disableAI section",
    ],
    [
        "b",
        "disablebrakes",
        "disableBrakes",
        "Disables vehicle brakes. Brakes are automatically enabled if driver brakes",
        "car1 disableBrakes true;",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle disableBrakes disable",
    ],
    [
        "b",
        "disablecollisionwith",
        "disableCollisionWith",
        "Disable collision between vehicles.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "vehicle disableCollisionWith vehicle",
    ],
    [
        "b",
        "disableconversation",
        "disableConversation",
        "Lock / unlock the unit to using conversation. Implemented by the counter, so lock - unlock need to be matched.",
        "player disableConversation true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "unit disableConversation lock",
    ],
    [
        "n",
        "disabledebriefingstats",
        "disableDebriefingStats",
        "Disable debriefing score table.",
        "disableDebriefingStats",
        "",
        "NOTHING",
        "",
        "",
        "disableDebriefingStats",
    ],
    [
        "u",
        "disablemapindicators",
        "disableMapIndicators",
        "Enables/disables map indicators. Overrides difficulty settings.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "disableMapIndicators [bool disableFriendly, bool disableEnemy, bool disableMines, bool disablePing]",
    ],
    [
        "b",
        "disablenvgequipment",
        "disableNVGEquipment",
        "Enable/disable transport vision modes(Nv)",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle disableNVGEquipment enable/disable",
    ],
    [
        "u",
        "disableremotesensors",
        "disableRemoteSensors",
        "Units, that are not in a group with at least one local member, will not check visibility of other units. This will cause, that remote units will not have updated knowsAbout and it will save some CPU time.",
        "disableRemoteSensors true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "disableRemoteSensors bool",
    ],
    [
        "n",
        "disableserialization",
        "disableSerialization",
        "Disable saving of script containing this command. After this, script can work with the data types which do not support serialization (UI types).",
        "",
        "",
        "NOTHING",
        "",
        "",
        "disableSerialization",
    ],
    [
        "b",
        "disabletiequipment",
        "disableTIEquipment",
        "Enable/disable transport vision modes(Ti)",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle disableTIEquipment enable/disable",
    ],
    [
        "b",
        "disableuavconnectability",
        "disableUAVConnectability",
        "disable unit's AV terminal(s) connecting to UAV",
        "unit DisableUAVConnectability [uav, true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object disableUAVConnectability [uav, checkAllItems]",
    ],
    [
        "u",
        "disableuserinput",
        "disableUserInput",
        "Disables all user input. This is normally used only in cutscenes to disable the player's controls.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "disableUserInput disable",
    ],
    [
        "b",
        "displayaddeventhandler",
        "displayAddEventHandler",
        "Add an event handler to the given display. Returns id of the handler or -1 when failed.",
        "_id = _display displayAddEventHandler ['KeyDown', '']",
        "",
        "SCALAR",
        "DISPLAY",
        "ARRAY",
        "display displayAddEventHandler [handler name, function]",
    ],
    [
        "u",
        "displaychild",
        "displayChild",
        "Returns the child of the given diplay.",
        "_display = displayChild _display",
        "",
        "DISPLAY",
        "",
        "DISPLAY",
        "displayChild display",
    ],
    [
        "b",
        "displayctrl",
        "displayCtrl",
        "Return child control with specified idc.",
        "_control = _display displayCtrl 101",
        "",
        "CONTROL",
        "DISPLAY",
        "SCALAR",
        "display displayCtrl idc",
    ],
    [
        "u",
        "displayctrl",
        "displayCtrl",
        "Returns given control from currently open dialog",
        "displayCtrl 123",
        "",
        "CONTROL",
        "",
        "SCALAR",
        "displayCtrl idc",
    ],
    [
        "n",
        "displaynull",
        "displayNull",
        "A non-existing display. This value is not equal to anything, including itself.",
        "",
        "",
        "DISPLAY",
        "",
        "",
        "displayNull",
    ],
    [
        "u",
        "displayparent",
        "displayParent",
        "Returns the parent of the given diplay.",
        "_display = displayParent _display",
        "",
        "DISPLAY",
        "",
        "DISPLAY",
        "displayParent display",
    ],
    [
        "b",
        "displayremovealleventhandlers",
        "displayRemoveAllEventHandlers",
        "Remove all even handlers from the given display.",
        "_display displayRemoveAllEventHandlers 'KeyDown'",
        "",
        "NOTHING",
        "DISPLAY",
        "STRING",
        "display displayRemoveAllEventHandlers handler name",
    ],
    [
        "b",
        "displayremoveeventhandler",
        "displayRemoveEventHandler",
        "Remove a given event handler from the given display.",
        "_display displayRemoveEventHandler ['KeyDown', 0]",
        "",
        "NOTHING",
        "DISPLAY",
        "ARRAY",
        "display displayRemoveEventHandler [handler name, id]",
    ],
    [
        "b",
        "displayseteventhandler",
        "displaySetEventHandler",
        "Sets given event handler of given display.",
        "_control displaySetEventHandler ['KeyDown', '']",
        "",
        "NOTHING",
        "DISPLAY",
        "ARRAY",
        "display displaySetEventHandler [handler name, function]",
    ],
    [
        "u",
        "dissolveteam",
        "dissolveTeam",
        "Dissolves the given team. All members become members of the main team. Possible team values are: 'RED', 'GREEN', 'BLUE' or 'YELLOW'.",
        "dissolveTeam 'RED'",
        "",
        "NOTHING",
        "",
        "STRING",
        "dissolveTeam team",
    ],
    [
        "b",
        "distance",
        "distance",
        "Computes the distance between two objects or positions.",
        "player distance leader player",
        "",
        "SCALAR",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "obj1 or pos1 distance obj2 or pos2",
    ],
    [
        "b",
        "distance",
        "distance",
        "Computes the distance between two locations or positions.",
        "",
        "",
        "SCALAR",
        "LOCATION",
        "LOCATION",
        "location1 distance location2",
    ],
    [
        "b",
        "distance",
        "distance",
        "Computes the distance between two locations or positions.",
        "",
        "",
        "SCALAR",
        "LOCATION",
        "ARRAY",
        "location1 distance pos2",
    ],
    [
        "b",
        "distance",
        "distance",
        "Computes the distance between two locations or positions.",
        "",
        "",
        "SCALAR",
        "ARRAY",
        "LOCATION",
        "pos1 distance location2",
    ],
    [
        "b",
        "distance2d",
        "distance2D",
        "Computes the 2D distance between two objects or positions.",
        "player distance2D leader player",
        "",
        "SCALAR",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "obj1 or pos1 distance2D obj2 or pos2",
    ],
    [
        "b",
        "distancesqr",
        "distanceSqr",
        "Computes the distance square between two objects or positions.",
        "player distanceSqr (leader player)",
        "",
        "SCALAR",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "obj1 or pos1 distanceSqr obj2 or pos2",
    ],
    [
        "b",
        "distancesqr",
        "distanceSqr",
        "Computes the distance square between two locations or positions.",
        "",
        "",
        "SCALAR",
        "LOCATION",
        "LOCATION",
        "location1 distanceSqr location2",
    ],
    [
        "b",
        "distancesqr",
        "distanceSqr",
        "Computes the distance square between two locations or positions.",
        "",
        "",
        "SCALAR",
        "LOCATION",
        "ARRAY",
        "location1 distanceSqr pos2",
    ],
    [
        "b",
        "distancesqr",
        "distanceSqr",
        "Computes the distance square between two locations or positions.",
        "",
        "",
        "SCALAR",
        "ARRAY",
        "LOCATION",
        "pos1 distanceSqr location2",
    ],
    [
        "n",
        "distributionregion",
        "distributionRegion",
        "Return the region where the game was sold (based on distribution id).",
        "",
        "",
        "SCALAR",
        "",
        "",
        "distributionRegion",
    ],
    [
        "b",
        "do",
        "do",
        "Repeats the code while the condition is true. Note: the maximum repeat count for the loop is 10000. If the condition is still true after the loop was repeated 10000 times, the loop will be terminated and an error message is shown.",
        "while 'a>b' do {a=a+1}",
        "",
        "NOTHING",
        "WHILE",
        "CODE",
        "while do code",
    ],
    [
        "b",
        "do",
        "do",
        "Execute the code inside the given namespace.",
        "with missionNamespace do {global=global+1}",
        "",
        "NOTHING",
        "WITH",
        "CODE",
        "with do code",
    ],
    [
        "b",
        "do",
        "do",
        "End of for command, starts cycle",
        "for '_x' from 20 to 10 step -2 do {..code..}",
        "",
        "ANY",
        "FOR",
        "CODE",
        "forCommand do code",
    ],
    [
        "b",
        "do",
        "do",
        "Switch form",
        "switch (_a) do { case 1: {block}; case 2 : {block}; default {block};}",
        "",
        "ANY",
        "SWITCH",
        "CODE",
        "switch do block",
    ],
    [
        "u",
        "do3denaction",
        "do3DENAction",
        "Processes given editor operation.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "do3DENAction operation",
    ],
    [
        "b",
        "doartilleryfire",
        "doArtilleryFire",
        "Orders a unit to reaload defined magazine commence fire burst on the given position (silently).",
        "mortar1 doArtilleryFire [[3000, 120, 1000], '8Rnd_82mm_Mo_shells', 3]",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit doArtilleryFire [position, type, rounds]",
    ],
    [
        "b",
        "dofire",
        "doFire",
        "Orders a unit to commence firing on the given target (silently). If the target is objNull, the unit is ordered to commence firing on its current target (set using doTarget or commandTarget).",
        "soldierOne doFire objNull",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit doFire target",
    ],
    [
        "b",
        "dofollow",
        "doFollow",
        "Orders a unit to follow the given unit (silently).",
        "soldierOne doFollow player",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit doFollow position",
    ],
    [
        "b",
        "dofsm",
        "doFSM",
        "Orders a unit to process command defined by FSM file (silently).",
        "soldierOne doFSM ['move.fsm', position player, player]",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit(s) doFSM [fsm name, position, target]",
    ],
    [
        "u",
        "dogetout",
        "doGetOut",
        "Orders a unit to get out from the vehicle (silently).",
        "doGetOut unitOne",
        "",
        "NOTHING",
        "",
        "ARRAY,OBJECT",
        "doGetOut unit",
    ],
    [
        "b",
        "domove",
        "doMove",
        "Orders the unit to move to the given position (format <ar>Position</ar>) (silently).",
        "soldierOne doMove getMarkerPos 'MarkerMoveOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit doMove position",
    ],
    [
        "b",
        "doorphase",
        "doorPhase",
        "Return animation phase of door on vehicle.",
        "heli doorPhase 'gunnerDoor'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "object doorPhase animation",
    ],
    [
        "u",
        "dostop",
        "doStop",
        "Orders the unit to stop (silently)\nNote: the stop command is never finished; the unit will never be ready.",
        "doStop unitOne",
        "",
        "NOTHING",
        "",
        "ARRAY,OBJECT",
        "doStop unit",
    ],
    [
        "b",
        "dosuppressivefire",
        "doSuppressiveFire",
        "Orders a unit to suppress given position or target (silently).",
        "soldier doSuppressiveFire [3000, 120, 1000]",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "unit doSuppressiveFire position or target",
    ],
    [
        "b",
        "dotarget",
        "doTarget",
        "Orders the unit to target the given target (silently).",
        "soldierOne doTarget player",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit doTarget position",
    ],
    [
        "b",
        "dowatch",
        "doWatch",
        "Orders the unit to watch the given position (format <ar>Position</ar>) (silently).",
        "soldierOne doWatch getMarkerPos 'MarkerMoveOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit doWatch position",
    ],
    [
        "b",
        "dowatch",
        "doWatch",
        "Orders the unit to watch the given target (silently).",
        "soldierOne doWatch player",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "unit doWatch target",
    ],
    [
        "b",
        "drawarrow",
        "drawArrow",
        "Draw arrow in map.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawArrow [position1, position2, color]",
    ],
    [
        "b",
        "drawellipse",
        "drawEllipse",
        "Draw ellipse in map.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawEllipse [center, a, b, angle, color, fill]",
    ],
    [
        "b",
        "drawicon",
        "drawIcon",
        "Draw icon in map.",
        "control drawIcon [ '#(argb,8,8,3)color(0,1,0,1)', [1,1,1,1], position player, 10, 10,1, userText, 1, 0.2, 'TahomaB', 'right'",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawIcon [texture, color, position, width, height, angle, text, shadow, textSize, font, align]",
    ],
    [
        "u",
        "drawicon3d",
        "drawIcon3D",
        "Draws an ingame icon at a given position.",
        "drawIcon3D ['#(argb,8,8,3)color(0,0.5,1,1)', [1,1,1,1], position cursorTarget, 1, 1, 45, 'Target', 1, 0.05, 'TahomaB', 'left', true]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "drawIcon3D [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlignment, drawSideArrows, offsetX, offsetY]",
    ],
    [
        "u",
        "drawlaser",
        "drawLaser",
        "Draws a Laser.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "drawLaser [position, direction, color(beam), color(dot), dotSize, beamThickness, maxBeamLength, isIR]",
    ],
    [
        "b",
        "drawline",
        "drawLine",
        "Draw line in map.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawLine [position1, position2, color]",
    ],
    [
        "u",
        "drawline3d",
        "drawLine3D",
        "Draws a line of a given COLOR from START to END.",
        "drawLine3D [position soldier, position cursorTarget, [1,1,1,1]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "drawLine3D [start, end, color]",
    ],
    [
        "b",
        "drawlink",
        "drawLink",
        "The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawLink [from, to, param type, line type, color]",
    ],
    [
        "b",
        "drawlocation",
        "drawLocation",
        "Draw location in the map.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "LOCATION",
        "map drawLocation location",
    ],
    [
        "b",
        "drawpolygon",
        "drawPolygon",
        "Draw a polygon on the map.",
        "findDisplay 12 displayCtrl 51 ctrlAddEventHandler ['Draw', { _this select 0 drawPolygon[[[100, 50, 0], [50, 100, 0], [0, 0, 0]], [0, 0, 0, 1]]; }]; ",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawPolygon [[pos1, pos2,...], color]",
    ],
    [
        "b",
        "drawrectangle",
        "drawRectangle",
        "Draw rectangle in map.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawRectangle [center, a, b, angle, color, fill]",
    ],
    [
        "b",
        "drawtriangle",
        "drawTriangle",
        "Draw triangle in map.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map drawTriangle [[p0, p1, p2(, p0, p1, p2, ...)], color, fill]",
    ],
    [
        "u",
        "driver",
        "driver",
        "Returns the driver of the vehicle. If the vehicle is not a vehicle, but a person, the person is returned instead.",
        "driver vehicle player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "driver vehicle",
    ],
    [
        "u",
        "drop",
        "drop",
        "Drops a particle into the scene. Array is in format <ar>ParticleArray</ar>.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "drop array",
    ],
    [
        "u",
        "dynamicsimulationdistance",
        "dynamicSimulationDistance",
        "Returns what activation distance is set for given activation category. The recognized activation categories are 'Group', 'Vehicle', 'EmptyVehicle' and 'Prop'.",
        "dynamicSimulationDistance 'group'",
        "",
        "SCALAR",
        "",
        "STRING",
        "dynamicSimulationDistance dynamicSimulationClass",
    ],
    [
        "u",
        "dynamicsimulationdistancecoef",
        "dynamicSimulationDistanceCoef",
        "Returns value of the given activation distance multiplier. Currently the only recognized activation multiplier is 'IsMoving'",
        "dynamicSimulationDistanceCoef 'IsMoving'",
        "",
        "SCALAR",
        "",
        "STRING",
        "dynamicSimulationDistanceCoef dynamicSimulationCoefClass",
    ],
    [
        "u",
        "dynamicsimulationenabled",
        "dynamicSimulationEnabled",
        "Returns if dynamic simulation is on for given object",
        "dynamicSimulationEnabled table1",
        "",
        "BOOL",
        "",
        "OBJECT",
        "dynamicSimulationEnabled entity",
    ],
    [
        "u",
        "dynamicsimulationenabled",
        "dynamicSimulationEnabled",
        "Returns if dynamic simulation is on for given group",
        "dynamicSimulationEnabled (group soldier1)",
        "",
        "BOOL",
        "",
        "GROUP",
        "dynamicSimulationEnabled group",
    ],
    [
        "n",
        "dynamicsimulationsystemenabled",
        "dynamicSimulationSystemEnabled",
        "Returns if dynamic simulation system is enabled or not.",
        "dynamicSimulationEnabled",
        "",
        "BOOL",
        "",
        "",
        "dynamicSimulationSystemEnabled",
    ],
    ["n", "east", "east", "The East side.", "", "", "SIDE", "", "", "east"],
    [
        "u",
        "echo",
        "echo",
        "Sends any text into the debugger console or the logfile.",
        "echo 'Text in logfile'",
        "",
        "NOTHING",
        "",
        "STRING",
        "echo text",
    ],
    [
        "u",
        "edit3denmissionattributes",
        "edit3DENMissionAttributes",
        "Openes configuration for given global attribute type.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "edit3DENMissionAttributes &lt;global attribute type&gt;",
    ],
    [
        "b",
        "editobject",
        "editObject",
        "Show the edit object dialog for the given object.",
        "",
        "",
        "ANY",
        "CONTROL",
        "STRING",
        "map editObject object",
    ],
    [
        "b",
        "editorseteventhandler",
        "editorSetEventHandler",
        "Sets given event handler of given editor.",
        "_map editorSetEventHandler ['SelectObject', '']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map editorSetEventHandler [handler name, function]",
    ],
    [
        "u",
        "effectivecommander",
        "effectiveCommander",
        "Returns the effective commander (who really commands) of the vehicle.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "effectiveCommander vehicle",
    ],
    [
        "b",
        "elevateperiscope",
        "elevatePeriscope",
        "Elevates vehicle's periscope on given turret.",
        "vehicle player elevatePeriscope [[0], 0.5, 0.1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle elevatePeriscope [turret, elevation, (speed/instant, blockuser)]",
    ],
    [
        "b",
        "else",
        "else",
        "Constructs an array that can be processed by <f>then</f>.",
        "if (a>b) then {c=0} else {c=1}",
        "",
        "ARRAY",
        "CODE",
        "CODE",
        "ifCode else elseCode",
    ],
    [
        "b",
        "emptypositions",
        "emptyPositions",
        "Returns the number of available cargo, driver, gunner or commander positions in the vehicle.",
        "_freePositions = (vehicle player) emptyPositions 'cargo'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "vehicle emptyPositions position",
    ],
    [
        "b",
        "enableai",
        "enableAI",
        "Enables parts of the AI behaviour. Section is one of 'TARGET' (enables watching assigned targets), 'AUTOTARGET' (enables independed target assigning and watching of unknown targets), 'MOVE' (enables movement), 'SUPPRESSION' (enables suppression being accumulated out of danger events), 'AIMINGERROR' (enables distractions on aiming), 'CHECKVISIBLE' (enables visibility raycasts), 'COVER' (enable usage of cover), 'AUTOCOMBAT' (enable autonomous switching to combat mode)",
        "soldierOne enableAI 'Move'), 'MINEDETECTION' (disable autonomous AI mine detection), 'ALL' to enable everything",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit enableAI section",
    ],
    [
        "b",
        "enableaifeature",
        "enableAIFeature",
        "Enable/disable given AI feature. Feature may be one of: 'AwareFormationSoft', 'CombatFormationSoft'.",
        "'AwareFormationSoft' enableAIFeature true",
        "",
        "NOTHING",
        "STRING",
        "BOOL",
        "feature enableAIFeature enabled",
    ],
    [
        "b",
        "enableaifeature",
        "enableAIFeature",
        "Enable/disable given AI behaviour (alias of enableAI/disableAI)",
        "unit1 enableAIFeature ['TARGET', false]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit enableAIFeature [feature, enable]",
    ],
    [
        "b",
        "enableaimprecision",
        "enableAimPrecision",
        "Set whether animation's aim precision affects weapon sway.",
        "player enableAimPrecision false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "player enableAimPrecision enabled",
    ],
    [
        "b",
        "enableattack",
        "enableAttack",
        "Set if leader can issue attack commands.",
        "",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "BOOL",
        "group enableAttack enable",
    ],
    [
        "u",
        "enableaudiofeature",
        "enableAudioFeature",
        "Enable/disable audio feature, features are: { 'lowpass', 'building_interior' }. Return previous state",
        "prevState = enableAudioFeature ['lowpass', true]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "enableAudioFeature [audio feature name, enable/disable]",
    ],
    [
        "b",
        "enableautostartuprtd",
        "enableAutoStartUpRTD",
        "enables automatic start up action,",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "RTD_helicopter enableAutoStartUpRTD enabled",
    ],
    [
        "b",
        "enableautotrimrtd",
        "enableAutoTrimRTD",
        "eanbles autoTrim",
        "",
        "",
        "BOOL",
        "OBJECT",
        "BOOL",
        "RTD_helicopter enableAutoTrimRTD bool",
    ],
    [
        "u",
        "enablecamshake",
        "enableCamShake",
        "Enables/disables camera shakes.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableCamShake true/false",
    ],
    [
        "u",
        "enablecaustics",
        "enableCaustics",
        "Enable/disable caustics drawing.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableCaustics enable",
    ],
    [
        "b",
        "enablechannel",
        "enableChannel",
        "Enables/disables chat channel.",
        "1 enableChannel true",
        "",
        "NOTHING",
        "SCALAR",
        "BOOL",
        "channel enableChannel enabled",
    ],
    [
        "b",
        "enablechannel",
        "enableChannel",
        "Enables/disables chat channel.",
        "1 enableChannel [true, false]",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "channel enableChannel [enableChat, enableVoN]",
    ],
    [
        "b",
        "enablecollisionwith",
        "enableCollisionWith",
        "Enable collision between vehicles.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "vehicle enableCollisionWith vehicle",
    ],
    [
        "b",
        "enablecopilot",
        "enableCopilot",
        "Enables copilot actions.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle enableCopilot enable",
    ],
    [
        "u",
        "enabledebriefingstats",
        "enableDebriefingStats",
        "Enable debriefing score table. The table will be displayed at specified coordinates.",
        "enableDebriefingStats [0.1, 0.1, 0.8, 0.8]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "enableDebriefingStats [left, top, width, height]",
    ],
    [
        "u",
        "enablediaglegend",
        "enableDiagLegend",
        "Enable or disable legend for diagnostic",
        "enableDiagLegend false",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableDiagLegend true/false",
    ],
    [
        "b",
        "enabledirectionstabilization",
        "enableDirectionStabilization",
        "Enables/disables direction stabilization for selected turret. Works only for turrets which have directionStabilized enabled in their view modes config.",
        "uav enableDirectionStabilization [false, [0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "transport enableDirectionStabilization [bool, [turretPath]]",
    ],
    [
        "b",
        "enabledynamicsimulation",
        "enableDynamicSimulation",
        "Enables or disables dynamic simulation on given non ai object.",
        "table1 enableDynamicSimulation true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle1 enableDynamicSimulation enable",
    ],
    [
        "b",
        "enabledynamicsimulation",
        "enableDynamicSimulation",
        "Enables or disables dynamic simulation on given group",
        "(group soldier1) enableDynamicSimulation true",
        "",
        "NOTHING",
        "GROUP",
        "BOOL",
        "group1 enableDynamicSimulation enable",
    ],
    [
        "u",
        "enabledynamicsimulationsystem",
        "enableDynamicSimulationSystem",
        "Enables or disables whole dynamic simulation system",
        "enableDynamicSimulation true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableDynamicSimulationSystem enable",
    ],
    [
        "n",
        "enableenddialog",
        "enableEndDialog",
        "Enables the dialog buttons to be shown during the OnPlayerKilled script.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "enableEndDialog",
    ],
    [
        "u",
        "enableengineartillery",
        "enableEngineArtillery",
        "Enables/disables engine's artillery.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableEngineArtillery true/false",
    ],
    [
        "u",
        "enableenvironment",
        "enableEnvironment",
        "Enable/disable environmental effects (ambient life + sound).",
        "enableEnvironment false or enableEnvironment [<enableAgents:Bool>,<enableSounds:Bool>]",
        "",
        "NOTHING",
        "",
        "BOOL,ARRAY",
        "enableEnvironment enabled",
    ],
    [
        "b",
        "enablefatigue",
        "enableFatigue",
        "[deprecated] Replaced by enableStamina",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "object enableFatigue boolean",
    ],
    [
        "b",
        "enablegunlights",
        "enableGunLights",
        "Tells AI units to force the gun light on (forceOn), off (forceOff) or set it automatically when in combat mode (auto)",
        "groupOne enableGunLights 'forceOff'",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "STRING",
        "group enableGunLights mode",
    ],
    [
        "b",
        "enableinfopanelcomponent",
        "enableInfoPanelComponent",
        "Controls availability of component to given object's info panel. 'left' or 'right' constants can be used as panel names.",
        "",
        "",
        "BOOL",
        "ARRAY,OBJECT",
        "ARRAY",
        "object or [object, turret path] enableInfoPanelComponent [panel name, component or sensor name, enable]",
    ],
    [
        "b",
        "enableirlasers",
        "enableIRLasers",
        "Enable/disable using IR lasers for AI",
        "groupOne enableIRLasers true",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "BOOL",
        "group enableIRLasers enable",
    ],
    [
        "b",
        "enablemimics",
        "enableMimics",
        "Enables/disables mimics on a given unit",
        "cursorTarget enableMimics false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "unit enableMimics enabled",
    ],
    [
        "b",
        "enablepersonturret",
        "enablePersonTurret",
        "Enables/disables usage of PersonTurret",
        "heli enablePersonTurret [[1], true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle enablePersonTurret [turret path, enable]",
    ],
    [
        "u",
        "enableradio",
        "enableRadio",
        "Enables radio transmissions to be heard and seen on screen.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableRadio enable",
    ],
    [
        "b",
        "enablereload",
        "enableReload",
        "Enable / disable reload right after magazine is empty.",
        "_vehicle enableReload false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "object enableReload enable",
    ],
    [
        "b",
        "enableropeattach",
        "enableRopeAttach",
        "Enable / disable ability to attach ropes or to be attached to ropes for given vehicle",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle enableRopeAttach enable",
    ],
    [
        "u",
        "enablesatnormalondetail",
        "enableSatNormalOnDetail",
        "Enables/disables satellite normal map od detail maps.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableSatNormalOnDetail true/false",
    ],
    [
        "u",
        "enablesaving",
        "enableSaving",
        "Enable / disable saving of the game. When disabled, the autosave is created (if not forbidden by save == false).",
        "",
        "",
        "NOTHING",
        "",
        "BOOL,ARRAY",
        "enableSaving enable or [enable, save]",
    ],
    [
        "u",
        "enablesentences",
        "enableSentences",
        "Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableSentences enable",
    ],
    [
        "b",
        "enablesimulation",
        "enableSimulation",
        "Enable / disable simulation for given entity.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "entity enableSimulation enable",
    ],
    [
        "b",
        "enablesimulationglobal",
        "enableSimulationGlobal",
        "Enable / disable simulation for given entity globally. Only from server",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "entity enableSimulationGlobal enable",
    ],
    [
        "b",
        "enablestamina",
        "enableStamina",
        "Enable/disable stamina system",
        "player enableStamina false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "unit enableStamina enabled",
    ],
    [
        "u",
        "enablestressdamage",
        "enableStressDamage",
        "Enable stress damage.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableStressDamage enable",
    ],
    [
        "u",
        "enableteamswitch",
        "enableTeamSwitch",
        "Enable / disable team switch.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableTeamSwitch enable",
    ],
    [
        "u",
        "enabletraffic",
        "enableTraffic",
        "Enable ambient traffic.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableTraffic enable",
    ],
    [
        "b",
        "enableuavconnectability",
        "enableUAVConnectability",
        "enable unit's AV terminal(s) connecting to UAV",
        "unit enableUAVConnectability [uav, true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object enableUAVConnectability [uav, checkAllItems]",
    ],
    [
        "b",
        "enableuavwaypoints",
        "enableUAVWaypoints",
        "Enable/disable option to set waypoints for UAV unit in AV terminal",
        "vehicle enableUAVWaypoints false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle enableUAVWaypoints bool",
    ],
    [
        "b",
        "enablevehiclecargo",
        "enableVehicleCargo",
        "Enable/disable option to transport other vehicles (if configured) or be transported.",
        "veh enableVehicleCargo true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle enableVehicleCargo true",
    ],
    [
        "b",
        "enablevehiclesensor",
        "enableVehicleSensor",
        "enable/disable given sensor",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle enableVehicleSensor [component or sensor name, enable]",
    ],
    [
        "b",
        "enableweapondisassembly",
        "enableWeaponDisassembly",
        "Controls player ability to disassemble given object",
        "weapon enableWeaponDisassembly false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "object enableWeaponDisassembly bool",
    ],
    [
        "u",
        "enableweapondisassembly",
        "enableWeaponDisassembly",
        "Controls player ability to disassemble any object",
        "enableWeaponDisassembly false",
        "",
        "NOTHING",
        "",
        "BOOL",
        "enableWeaponDisassembly bool",
    ],
    [
        "n",
        "endl",
        "endl",
        "Creates a string containing a line break.",
        "",
        "",
        "STRING",
        "",
        "",
        "endl",
    ],
    [
        "n",
        "endloadingscreen",
        "endLoadingScreen",
        "Finish loading screen displaying (started by startLoadingScreen).",
        "",
        "",
        "NOTHING",
        "",
        "",
        "endLoadingScreen",
    ],
    [
        "u",
        "endmission",
        "endMission",
        "Finish the mission. The end type can be 'CONTINUE', 'KILLED', 'LOSER', 'END1', 'END2', 'END3', 'END4', 'END5', or 'END6'.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "endMission end type",
    ],
    [
        "b",
        "engineon",
        "engineOn",
        "Switches the vehicle's engine on (true) or off (false).",
        "vehicle player engineOn false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle engineOn on",
    ],
    [
        "u",
        "enginesisonrtd",
        "enginesIsOnRTD",
        "Returns which engines are producing some work.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "enginesIsOnRTD RTD_helicopter",
    ],
    [
        "u",
        "enginespowerrtd",
        "enginesPowerRTD",
        "Power produced by engines in Watts.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "enginesPowerRTD RTD_Helicopter",
    ],
    [
        "u",
        "enginesrpmrtd",
        "enginesRpmRTD",
        "Returns all engines RPM.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "enginesRpmRTD RTD_helicopter",
    ],
    [
        "u",
        "enginestorquertd",
        "enginesTorqueRTD",
        "Torque produced by engines in Newton*meter.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "enginesTorqueRTD RTD_Helicopter",
    ],
    [
        "u",
        "entities",
        "entities",
        "Returns a list of entities with given type. ",
        "entities 'Car'",
        "",
        "ARRAY",
        "",
        "STRING",
        "entities type",
    ],
    [
        "u",
        "entities",
        "entities",
        "Returns a list of entities with given type. ",
        "entities 'Car'",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "entities [includedClasses:array,excludedClasses:array]",
    ],
    [
        "n",
        "environmentenabled",
        "environmentEnabled",
        "[agents,environment]",
        "Get array of ambient life & environment sounds state.",
        "",
        "ARRAY",
        "",
        "",
        "environmentEnabled",
    ],
    [
        "n",
        "environmentvolume",
        "environmentVolume",
        "Returns the current volume of the environment as set by <f>fadeEnvironment</f>.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "environmentVolume",
    ],
    [
        "n",
        "estimatedendservertime",
        "estimatedEndServerTime",
        "Estimated end of MP game converted to serverTime.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "estimatedEndServerTime",
    ],
    [
        "u",
        "estimatedtimeleft",
        "estimatedTimeLeft",
        "Returns the estimated time left in the game. Using this function the designer can provide a 'time left' estimate that is shown in the 'Game in progress' screen or in the master browser. For missions with a hard set limit adjusted via Param1, the following example can be used in the init.sqs file.",
        "estimatedTimeLeft Param1",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "estimatedTimeLeft timeLeft",
    ],
    [
        "b",
        "evalobjectargument",
        "evalObjectArgument",
        "Return object argument in mission editor.",
        "",
        "",
        "ANY",
        "CONTROL",
        "ARRAY",
        "map evalObjectArgument [object, argument]",
    ],
    [
        "u",
        "everybackpack",
        "everyBackpack",
        "Returns array of backpacks stored in given crate .e.g. used for accessing backpack content of a backpack on ground.",
        "everyBackpack cursorTarget",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "everyBackpack box",
    ],
    [
        "u",
        "everycontainer",
        "everyContainer",
        "Returns array of all containers(uniforms, vest, backpacks) stored in given crate .e.g. used for accessing container's content stored into ammoBox or ground.",
        "everyContainer cursorTarget",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "everyContainer box",
    ],
    [
        "b",
        "exec",
        "exec",
        "Executes a script. Argument is passed to the script as local variable _this. The script is first searched in the mission folder, then in the campaign scripts subfolder and finally in the global scripts folder.",
        "[player, jeepOne] exec 'getIn.sqs'",
        "",
        "NOTHING",
        "ANY",
        "STRING",
        "argument exec script",
    ],
    [
        "b",
        "execeditorscript",
        "execEditorScript",
        "Execute an editor script for the specified object.",
        "_map execEditorScript ['_team_1', 'create']",
        "",
        "ANY",
        "CONTROL",
        "ARRAY",
        "map execEditorScript [object, script]",
    ],
    [
        "b",
        "execfsm",
        "execFSM",
        "Execute the scripted FSM. Argument is passed to the FSM as local variable _this. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Return the FSM handler or 0 when failed.",
        "player execFSM 'test.fsm'",
        "",
        "SCALAR",
        "ANY",
        "STRING",
        "argument execFSM filename",
    ],
    [
        "u",
        "execfsm",
        "execFSM",
        "Execute the scripted FSM. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Return the FSM handler or 0 when failed.",
        "execFSM 'test.fsm'",
        "",
        "SCALAR",
        "",
        "STRING",
        "execFSM filename",
    ],
    [
        "b",
        "execvm",
        "execVM",
        "Compile and execute function (sqf). Argument is passed to the script as local variable _this. The function is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder.",
        "player execVM 'test.sqf'",
        "",
        "SCRIPT",
        "ANY",
        "STRING",
        "argument execVM filename",
    ],
    [
        "u",
        "execvm",
        "execVM",
        "Compile and execute function (sqf). The function is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder.",
        "execVM 'test.sqf'",
        "",
        "SCRIPT",
        "",
        "STRING",
        "execVM filename",
    ],
    [
        "n",
        "exit",
        "exit",
        "Exits the script.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "exit",
    ],
    [
        "b",
        "exitwith",
        "exitWith",
        "if result of condition is true, evaluates code, and current block with result of code",
        "if (_x>5) exitWith {echo '_x is too big';_x}",
        "[when _x is greater then 5, outputs message and terminates code in current level with value of _x",
        "ANY",
        "IF",
        "CODE",
        "if exitWith code",
    ],
    [
        "u",
        "exp",
        "exp",
        "The exponential value of x.",
        "exp 1",
        "2.7182",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "exp x",
    ],
    [
        "u",
        "expecteddestination",
        "expectedDestination",
        "Return expected destination of unit as a [position, planningMode, forceReplan].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "expectedDestination person",
    ],
    [
        "u",
        "exportjipmessages",
        "exportJIPMessages",
        "Exports list of JIP messages to a file.",
        "exportJIPMessages 'myFileNameWithoutExtension'",
        "",
        "NOTHING",
        "",
        "STRING",
        "exportJIPMessages filename",
    ],
    [
        "u",
        "eyedirection",
        "eyeDirection",
        "Returns the direction object is watching (eyes, or a vehicle primary observer).",
        "eyeDirection player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "eyeDirection unit",
    ],
    [
        "u",
        "eyepos",
        "eyePos",
        "Returns the position of the object eye in format <ar>PositionASL</ar>.",
        "eyePos player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "eyePos obj",
    ],
    [
        "u",
        "face",
        "face",
        "Returns the face from identity of given object.",
        "face player",
        "",
        "STRING",
        "",
        "OBJECT",
        "face object",
    ],
    [
        "u",
        "faction",
        "faction",
        "Gets unit faction. If faction is not defined, returns empty string.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "faction unit",
    ],
    [
        "b",
        "fadeenvironment",
        "fadeEnvironment",
        "Causes a smooth change in the volume of the environment. The change duration is given by time, the target volume by volume. The default volume is 1.0.",
        "5 fadeEnvironment 0.1",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time fadeEnvironment volume",
    ],
    [
        "b",
        "fademusic",
        "fadeMusic",
        "Causes a smooth change in the music volume. The change duration is given by time, the target volume by volume. The default music volume is 0.5.",
        "5 fadeMusic 0",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time fadeMusic volume",
    ],
    [
        "b",
        "faderadio",
        "fadeRadio",
        "Causes a smooth change in the radio volume. The change duration is given by time, the target volume by volume. The default radio volume is 1.0.",
        "5 fadeRadio 0.1",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time fadeRadio volume",
    ],
    [
        "b",
        "fadesound",
        "fadeSound",
        "Causes a smooth change in the master volume. The change duration is given by time, the target volume by volume. The default master volume is 1.0.",
        "5 fadeSound 0.1",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time fadeSound volume",
    ],
    [
        "b",
        "fadespeech",
        "fadeSpeech",
        "Causes a smooth change in the master speech volume. The change duration is given by time, the target volume by volume. The default master volume is 1.0.",
        "5 fadeSound 0.1",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time fadeSpeech volume",
    ],
    [
        "u",
        "failmission",
        "failMission",
        "Finish the mission. The end type can be 'CONTINUE', 'KILLED', 'LOSER', 'END1', 'END2', 'END3', 'END4', 'END5', or 'END6'. Mission saves will not be deleted.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "failMission end type",
    ],
    ["n", "false", "false", "Always false.", "", "", "BOOL", "", "", "false"],
    [
        "u",
        "fileexists",
        "fileExists",
        "Checks if file at given path exists.",
        "fileExists 'init.sqf'",
        "true",
        "BOOL",
        "",
        "STRING",
        "fileExists path",
    ],
    [
        "u",
        "fillweaponsfrompool",
        "fillWeaponsFromPool",
        "Adds magazines from the campaign pool to the person (depending on the weapons the person has).",
        "fillWeaponsFromPool victor",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "fillWeaponsFromPool person",
    ],
    [
        "b",
        "find",
        "find",
        "Returns the position of the first array element that matches x, returns -1 if not found.",
        "[0, 1, 2] find 1",
        "1",
        "SCALAR",
        "ARRAY",
        "ANY",
        "array find x",
    ],
    [
        "b",
        "find",
        "find",
        "Returns index of the first occurrence of str2 in str1, -1 if not found",
        "'Hello' find 'ell'",
        "1",
        "SCALAR",
        "STRING",
        "STRING",
        "str1 find str2",
    ],
    [
        "b",
        "find",
        "find",
        "Returns index of the first occurrence of str2 in str1, search is started from given offset, -1 if not found",
        "'Hello World' find [5, 'l']",
        "9",
        "SCALAR",
        "STRING",
        "ARRAY",
        "str1 find [str2, from]",
    ],
    [
        "b",
        "findany",
        "findAny",
        "Returns the position of the first element in array A that also exists in array B, returns -1 if none found.",
        "[0, 1, 2, 3] findAny [1, 3]",
        "1",
        "SCALAR",
        "ARRAY",
        "ARRAY",
        "arrayA findAny arrayB",
    ],
    [
        "b",
        "findcover",
        "findCover",
        "Returns the object where the object should search for cover. The minDist, visibilityPosition and ignoreObject parameters are optional. visibilityPosition is used to select cover that can see a certain position. ignoreObject is an object that is ignored in visibility check.",
        "",
        "",
        "OBJECT",
        "OBJECT",
        "ARRAY",
        "object findCover [position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]",
    ],
    [
        "u",
        "finddisplay",
        "findDisplay",
        "Find display by its IDD.",
        "_display = findDisplay 1",
        "",
        "DISPLAY",
        "",
        "SCALAR",
        "findDisplay idd",
    ],
    [
        "b",
        "findeditorobject",
        "findEditorObject",
        "Return object of given type with given arguments. Use [type, game value] to search by object reference of a specific editor object type.",
        "",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "map findEditorObject [type, name1, value1, ...]",
    ],
    [
        "b",
        "findeditorobject",
        "findEditorObject",
        "Return object that matches the provided reference.",
        "",
        "",
        "STRING",
        "CONTROL",
        "ANY",
        "map findEditorObject value",
    ],
    [
        "b",
        "findemptyposition",
        "findEmptyPosition",
        "Search for the position nearest (up to maxDistance) to the center, with the free area (vehicle of the given type can be placed anywhere) of the given radius. When not found, empty array is returned.",
        "",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "center findEmptyPosition [radius, maxDistance] or [radius, maxDistance, vehicleType]",
    ],
    [
        "b",
        "findemptypositionready",
        "findEmptyPositionReady",
        "Check if findEmptyPosition can be called without waiting for files.",
        "",
        "",
        "BOOL",
        "ARRAY",
        "ARRAY",
        "center findEmptyPositionReady [radius, maxDistance]",
    ],
    [
        "b",
        "findif",
        "findIf",
        "return index of first element for which given condition is true.",
        "units player findIf {alive _x} != -1 // truen when at least one member of group is alive, it's faster then to use {alive _x } count (units player) > 0",
        "",
        "SCALAR",
        "ARRAY",
        "CODE",
        "array findIf condition",
    ],
    [
        "b",
        "findnearestenemy",
        "findNearestEnemy",
        "Find the nearest enemy from the specified position.",
        "",
        "",
        "OBJECT",
        "OBJECT",
        "ARRAY,OBJECT",
        "object findNearestEnemy position",
    ],
    [
        "n",
        "finishmissioninit",
        "finishMissionInit",
        "Finish world initialization before mission is launched.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "finishMissionInit",
    ],
    [
        "u",
        "finite",
        "finite",
        "True, if number is finite (not infinite and valid number)",
        "finite 10/0",
        "false",
        "BOOL",
        "",
        "SCALAR,NaN",
        "finite x",
    ],
    [
        "b",
        "fire",
        "fire",
        "The unit will fire from the given weapon.",
        "soldierOne fire 'HandGrenade'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit fire weaponName",
    ],
    [
        "b",
        "fire",
        "fire",
        "The unit will fire from the given weapon. The array has format [muzzle, mode, magazine] or [muzzle, mode].",
        "soldierOne fire ['throw','SmokeShell','SmokeShell']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit fire array",
    ],
    [
        "b",
        "fireattarget",
        "fireAtTarget",
        "Gunner in unit's vehicle fire at given target. If weapon is not given, current is used.",
        "bool = vehicle FireAtTarget [target]; bool = player FireAtTarget [target,1]",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "vehicle fireAtTarget [target, weapon]",
    ],
    [
        "u",
        "firstbackpack",
        "firstBackpack",
        "Returns object of the first stored backpack in another weaponholder.e.g. used for accessing backpack content of a backpack on ground.",
        "firstBackpack cursorTarget",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "firstBackpack box",
    ],
    [
        "u",
        "flag",
        "flag",
        "If the unit has a flag, this flag is returned\nIf not, objNull is returned.",
        "flag player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "flag unit",
    ],
    [
        "u",
        "flaganimationphase",
        "flagAnimationPhase",
        "Returns current animations phase of a flag",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "flagAnimationPhase flag",
    ],
    [
        "u",
        "flagowner",
        "flagOwner",
        "When used on a flag, the returned value is the person that has this flag\nWhen used on anything else, objNull is returned.",
        "flagowner flagOne",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "flagOwner flag",
    ],
    [
        "u",
        "flagside",
        "flagSide",
        "Returns the current side of the flag.",
        "flagSide flag1",
        "",
        "SIDE",
        "",
        "OBJECT",
        "flagSide flagpole",
    ],
    [
        "u",
        "flagtexture",
        "flagTexture",
        "Returns the current texture of the flag.",
        "flagTexture flag1",
        "",
        "STRING",
        "",
        "OBJECT",
        "flagTexture flagcarrier",
    ],
    [
        "u",
        "flatten",
        "flatten",
        "Flattens an array.",
        "flatten [1,[2,3],[[4]]]",
        "[1,2,3,4]",
        "ARRAY",
        "",
        "ARRAY",
        "flatten array",
    ],
    [
        "u",
        "fleeing",
        "fleeing",
        "Checks whether the unit is fleeing. A dead or empty unit returns false.",
        "fleeing player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "fleeing unit",
    ],
    [
        "u",
        "floor",
        "floor",
        "The floor value of x.",
        "floor 5.25 ",
        "5",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "floor x",
    ],
    [
        "b",
        "flyinheight",
        "flyInHeight",
        "Sets the height level for the helicopter. The accepted range is from 50 to 1000. Final height is max(flyInHeight, flyInHeightASL).",
        "cobraOne flyInHeight 150",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "helicopter or airplane flyInHeight height",
    ],
    [
        "b",
        "flyinheightasl",
        "flyInHeightASL",
        "Sets the minimal ASL height. Final height is max(flyInHeight, flyInHeightASL).",
        "cobraOne flyInHeightASL [200, 100, 400]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "helicopter or airplane flyInHeightASL [height - careless/safe/aware, height - combat, height - stealth]",
    ],
    [
        "u",
        "focusedctrl",
        "focusedCtrl",
        "Returns currently focused control.",
        "focusedCtrl _display",
        "",
        "CONTROL",
        "",
        "DISPLAY",
        "focusedCtrl display",
    ],
    [
        "n",
        "fog",
        "fog",
        "Return the current fog.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "fog",
    ],
    [
        "n",
        "fogforecast",
        "fogForecast",
        "Return the fog forecast.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "fogForecast",
    ],
    [
        "n",
        "fogparams",
        "fogParams",
        "Returns actual params for fog.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "fogParams",
    ],
    [
        "u",
        "for",
        "for",
        "Starts for sequence, use in complete form(see example).",
        "for '_x' from 1 to 10 do {debugLog _x;}",
        "",
        "FOR",
        "",
        "STRING",
        "for var",
    ],
    [
        "u",
        "for",
        "for",
        "creates cycle, using C like style. See example.",
        "for [{_x=1},{_x<=10},{_x=_x+1}] do {debugLog _x;}",
        "",
        "FOR",
        "",
        "ARRAY",
        "for forspec",
    ],
    [
        "b",
        "forceadduniform",
        "forceAddUniform",
        "Create a new uniform and hard link it into uniform slot(without any restrictions).",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit forceAddUniform type",
    ],
    [
        "u",
        "forceatpositionrtd",
        "forceAtPositionRTD",
        "Add force generator to world. Returns force index.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "forceAtPositionRTD position",
    ],
    [
        "u",
        "forcecadetdifficulty",
        "forceCadetDifficulty",
        "Overrides showCadetHints and showCadetWP difficulty settings and returns previous settings.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "forceCadetDifficulty [showCadetHints, showCadetWP]",
    ],
    [
        "n",
        "forcedmap",
        "forcedMap",
        "Returns if map is forced in an array [forceMapForced, openMapForced]",
        "isForcedMap = forcedMap",
        "",
        "ARRAY",
        "",
        "",
        "forcedMap",
    ],
    [
        "n",
        "forceend",
        "forceEnd",
        "Forces the mission to terminate.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "forceEnd",
    ],
    [
        "b",
        "forceflagtexture",
        "forceFlagTexture",
        "force the flag texture., doesn't reqquire flag holder. If the texture is '', the flag is not drawn. Warning: flags are not performance friendly, use them wisely.",
        "vehicle player forceFlagTexture 'usa_vlajka.pac'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "obj forceFlagTexture texture",
    ],
    [
        "b",
        "forcefollowroad",
        "forceFollowRoad",
        "Sets the vehicle to always stays on the road.",
        "vehicle forceFollowRoad true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle forceFollowRoad true/false",
    ],
    [
        "u",
        "forcegeneratorrtd",
        "forceGeneratorRTD",
        "Add force generator to world. Returns force index.",
        "",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "forceGeneratorRTD index",
    ],
    [
        "u",
        "forcemap",
        "forceMap",
        "Forces the map to display.",
        "forceMap true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "forceMap show",
    ],
    [
        "u",
        "forcerespawn",
        "forceRespawn",
        "Force respawns given unit (stays old 'killed' body). Will not count score",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "forceRespawn targetUnit",
    ],
    [
        "b",
        "forcespeed",
        "forceSpeed",
        "Force the speed of the given object.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "object forceSpeed speed",
    ],
    [
        "u",
        "forceunicode",
        "forceUnicode",
        "Enabled Unicode handling for compatible commands. -1 : OFF; 0 : ON until end of script; 1 : ON until next compatible command, ",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "forceUnicode mode",
    ],
    [
        "b",
        "forcewalk",
        "forceWalk",
        "Force player to walk.",
        "player forceWalk true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "player forceWalk force walk",
    ],
    [
        "b",
        "forceweaponfire",
        "forceWeaponFire",
        "The unit will be forced to fire from the given weapon.",
        "soldierOne forceWeaponFire ['arifle_MX_F',0]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit forceWeaponFire [weapon, mode]",
    ],
    [
        "n",
        "forceweatherchange",
        "forceWeatherChange",
        "Forces saved wanted settings for weather to be actual. (BEWARE: Will cause lag)",
        "",
        "",
        "NOTHING",
        "",
        "",
        "forceWeatherChange",
    ],
    [
        "b",
        "foreach",
        "forEach",
        "Executes the given command for each element in array\nIt's executed as follows\nfor each element of array an element is assigned as _x and the command is executed.",
        "'_x setdammage 1' forEach units group player",
        "",
        "NOTHING",
        "CODE",
        "ARRAY",
        "code forEach array",
    ],
    [
        "b",
        "foreach",
        "forEach",
        "Executes the given code for each element in HashMap.",
        "",
        "",
        "ANY",
        "CODE",
        "HASHMAP",
        "code forEach HashMap",
    ],
    [
        "b",
        "foreachmember",
        "forEachMember",
        "Executes the given command for each member of the team (recursively).",
        "",
        "",
        "NOTHING",
        "CODE",
        "TEAM_MEMBER",
        "command forEachMember team",
    ],
    [
        "b",
        "foreachmemberagent",
        "forEachMemberAgent",
        "Executes the given command for each agent member of the team (recursively).",
        "",
        "",
        "NOTHING",
        "CODE",
        "TEAM_MEMBER",
        "command forEachMemberAgent team",
    ],
    [
        "b",
        "foreachmemberteam",
        "forEachMemberTeam",
        "Executes the given command for each team member of the team (recursively).",
        "",
        "",
        "NOTHING",
        "CODE",
        "TEAM_MEMBER",
        "command forEachMemberTeam team",
    ],
    [
        "b",
        "forgettarget",
        "forgetTarget",
        "Reset info group has about target.",
        "soldierOne forgetTarget soldierTwo",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "OBJECT",
        "group forgetTarget unit",
    ],
    [
        "u",
        "format",
        "format",
        "The first argument of the array is in format string. This string may contain references to the following arguments using format %1, %2, etc. Each %x is replaced by the corresponding argument. %x may appear in the string in any order.",
        "format ['%1 - %2 - %1', 1, 'text']",
        "'1 - text - 1'",
        "STRING",
        "",
        "ARRAY",
        "format format",
    ],
    [
        "u",
        "formation",
        "formation",
        "Returns the formation of the group ('COLUMN', 'STAG COLUMN', 'WEDGE', 'ECH LEFT', 'ECH RIGHT', 'VEE' or 'LINE').",
        "formation group player",
        "",
        "STRING",
        "",
        "OBJECT,GROUP",
        "formation grp",
    ],
    [
        "u",
        "formation",
        "formation",
        "Return a formation of given team.",
        "_formation = formation _team",
        "",
        "STRING",
        "",
        "TEAM_MEMBER",
        "formation team",
    ],
    [
        "u",
        "formationdirection",
        "formationDirection",
        "Return the direction unit watching in formation.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "formationDirection person",
    ],
    [
        "u",
        "formationleader",
        "formationLeader",
        "Return leader of the formation.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "formationLeader person",
    ],
    [
        "u",
        "formationmembers",
        "formationMembers",
        "Return list of units (drivers) in the formation.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "formationMembers person",
    ],
    [
        "u",
        "formationposition",
        "formationPosition",
        "Return position of unit in the formation.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "formationPosition person",
    ],
    [
        "u",
        "formationtask",
        "formationTask",
        "Return the current task of the unit in the formation.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "formationTask person",
    ],
    [
        "u",
        "formattext",
        "formatText",
        "Creates a structured text by replacing %1, %2, etc. in format by plain or structured texts given as arguments.",
        "txt = formatText ['Image: %1', image 'dataisniper.paa']",
        "",
        "TEXT",
        "",
        "ARRAY",
        "formatText [format, arg1, arg2, ...]",
    ],
    [
        "u",
        "formleader",
        "formLeader",
        "Returns the formation leader for the given unit. For dead units objNull is returned. The result is often the same as groupLeader, but not always.",
        "formLeader player != leader player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "formLeader unit",
    ],
    [
        "n",
        "freelook",
        "freeLook",
        "Returns true if freelook is active.",
        "",
        "",
        "BOOL",
        "",
        "",
        "freeLook",
    ],
    [
        "b",
        "from",
        "from",
        "Continue sequence of 'for' command.",
        "for '_x' from 10 to 20 do {..code..}",
        "",
        "FOR",
        "FOR",
        "SCALAR",
        "for &quot;_var&quot; from b",
    ],
    [
        "u",
        "fromeditor",
        "fromEditor",
        "Return if given team was inserted directly from mission editor.",
        "_fromEditor = fromEditor _member",
        "",
        "BOOL",
        "",
        "TEAM_MEMBER",
        "fromEditor teamMember",
    ],
    [
        "u",
        "fuel",
        "fuel",
        "Checks how much fuel is left in the gas tank, in the range from 0 to 1.",
        "fuel vehicle player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "fuel vehicle",
    ],
    [
        "u",
        "fullcrew",
        "fullCrew",
        "Returns array with all crew inside given vehicle",
        "fullCrew vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "fullCrew vehicle",
    ],
    [
        "u",
        "fullcrew",
        "fullCrew",
        "Returns array with all crew of given type inside given vehicle",
        "fullCrew [vehicle player, 'turret']",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "fullCrew [vehicle, type]",
    ],
    [
        "u",
        "gearidcammocount",
        "gearIDCAmmoCount",
        "Returns ammo count of assigned magazine.",
        "ammo = gearSlotAmmoCount IDC",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "gearIDCAmmoCount control IDC",
    ],
    [
        "u",
        "gearslotammocount",
        "gearSlotAmmoCount",
        "Returns ammo count of assigned magazine.",
        "ammo = gearSlotAmmoCount _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "gearSlotAmmoCount control",
    ],
    [
        "u",
        "gearslotdata",
        "gearSlotData",
        "Returns gear slot item name.",
        "weapon = gearSlotData _control",
        "",
        "STRING",
        "",
        "CONTROL",
        "gearSlotData control",
    ],
    [
        "u",
        "gesturestate",
        "gestureState",
        "Return the name of the current primary gesture.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "gestureState man",
    ],
    [
        "b",
        "get",
        "get",
        "Retrieves a value from the HashMap. Returns Nil if key was not found.",
        "_hashMap get 1337",
        "player",
        "ANY",
        "HASHMAP",
        "SCALAR,BOOL,ARRAY,STRING,NAMESPACE,NaN,CODE,SIDE,CONFIG",
        "HashMap get key",
    ],
    [
        "u",
        "get3denactionstate",
        "get3DENActionState",
        "Returns state of given operation.",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "get3DENActionState operation",
    ],
    [
        "b",
        "get3denattribute",
        "get3DENAttribute",
        "Reads attribute value from given object.",
        "obj get3DENAttribute 'name'",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "editorObject get3DENAttribute attributeType",
    ],
    [
        "b",
        "get3denattribute",
        "get3DENAttribute",
        "Reads attribute value from given group.",
        "grp get3DENAttribute 'name'",
        "",
        "ARRAY",
        "GROUP",
        "STRING",
        "editorGroup get3DENAttribute attributeType",
    ],
    [
        "b",
        "get3denattribute",
        "get3DENAttribute",
        "Reads attribute value from given waypoint.",
        "wp get3DENAttribute 'name'",
        "",
        "ARRAY",
        "ARRAY",
        "STRING",
        "editorWaypoint get3DENAttribute attributeType",
    ],
    [
        "b",
        "get3denattribute",
        "get3DENAttribute",
        "Reads attribute value from given marker.",
        "marker get3DENAttribute 'name'",
        "",
        "ARRAY",
        "STRING",
        "STRING",
        "editorMarker get3DENAttribute attributeType",
    ],
    [
        "b",
        "get3denattribute",
        "get3DENAttribute",
        "Reads attribute value from given editor object.",
        "objID get3DENAttribute 'name'",
        "",
        "ARRAY",
        "SCALAR",
        "STRING",
        "editorMarker get3DENAttribute attributeType",
    ],
    [
        "n",
        "get3dencamera",
        "get3DENCamera",
        "Get 3den's camera object",
        "",
        "",
        "OBJECT",
        "",
        "",
        "get3DENCamera",
    ],
    [
        "u",
        "get3denconnections",
        "get3DENConnections",
        "Returns list of all connections related to given entity.",
        "",
        "",
        "ARRAY",
        "",
        "ANY",
        "get3DENConnections &lt;entity&gt;",
    ],
    [
        "u",
        "get3denentity",
        "get3DENEntity",
        "Finds entity with given ID in editor and returns it for use in scripts.",
        "",
        "",
        "ANY",
        "",
        "SCALAR",
        "get3DENEntity &lt;entityID&gt;",
    ],
    [
        "u",
        "get3denentityid",
        "get3DENEntityID",
        "Returns 3DEN ID of given entity.",
        "",
        "",
        "SCALAR",
        "",
        "ANY",
        "get3DENEntityID &lt;entity&gt;",
    ],
    [
        "u",
        "get3dengrid",
        "get3DENGrid",
        "Gets grid size of given grid type.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "get3DENGrid &lt;type&gt;",
    ],
    [
        "n",
        "get3deniconsvisible",
        "get3DENIconsVisible",
        "Returns icons visibility in 3DEN",
        "",
        "",
        "ARRAY",
        "",
        "",
        "get3DENIconsVisible",
    ],
    [
        "u",
        "get3denlayerentities",
        "get3DENLayerEntities",
        "Returns list of all items from inside of given layer.",
        "",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "get3DENLayerEntities &lt;layerID&gt;",
    ],
    [
        "n",
        "get3denlinesvisible",
        "get3DENLinesVisible",
        "Returns lines visibility in 3DEN",
        "",
        "",
        "ARRAY",
        "",
        "",
        "get3DENLinesVisible",
    ],
    [
        "b",
        "get3denmissionattribute",
        "get3DENMissionAttribute",
        "Returns current value set in given global attribute",
        "'Scenario' get3DENMissionAttribute 'author'",
        "",
        "ANY",
        "STRING",
        "STRING",
        "&lt;section&gt; get3DENMissionAttribute &lt;class&gt;",
    ],
    [
        "n",
        "get3denmouseover",
        "get3DENMouseOver",
        "Get what is under mouse in 3den",
        "",
        "",
        "ARRAY",
        "",
        "",
        "get3DENMouseOver",
    ],
    [
        "u",
        "get3denselected",
        "get3DENSelected",
        "Return all selected objects of given type.",
        "",
        "",
        "ARRAY",
        "",
        "STRING",
        "get3DENSelected objectType",
    ],
    [
        "u",
        "getaimingcoef",
        "getAimingCoef",
        "Get current aiming coefficient (higher ~ less precise, default is 1)",
        "getAimingCoef player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getAimingCoef unit",
    ],
    [
        "u",
        "getallenv3dsoundcontrollers",
        "getAllEnv3DSoundControllers",
        "Returns pairs of all 3D controllers for the given environmental object",
        "getAllEnv3DSoundControllers _tree",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getAllEnv3DSoundControllers object",
    ],
    [
        "u",
        "getallenvsoundcontrollers",
        "getAllEnvSoundControllers",
        "Returns pairs of all environmental controllers",
        "getAllEnvSoundControllers (position player)",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "getAllEnvSoundControllers position",
    ],
    [
        "u",
        "getallhitpointsdamage",
        "getAllHitPointsDamage",
        "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values.",
        "getAllHitPointsDamage player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getAllHitPointsDamage obj",
    ],
    [
        "u",
        "getallownedmines",
        "getAllOwnedMines",
        "Get all mine objects this unit has ownership over.",
        "getAllOwnedMines player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getAllOwnedMines unit",
    ],
    [
        "u",
        "getallpylonsinfo",
        "getAllPylonsInfo",
        "Return array with all vehicle pylons info",
        "getAllPylonsInfo vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getAllPylonsInfo vehicle",
    ],
    [
        "u",
        "getallsoundcontrollers",
        "getAllSoundControllers",
        "Return pairs (name, value) of all vehicle controllers",
        "getAllSoundControllers (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getAllSoundControllers vehicle",
    ],
    [
        "u",
        "getallunittraits",
        "getAllUnitTraits",
        "Returns all units traits currently present on that unit",
        "getallUnitTraits player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getAllUnitTraits unit",
    ],
    [
        "u",
        "getammocargo",
        "getAmmoCargo",
        "Returns the amount of ammo resources in the cargo space of a repair vehicle.",
        "getAmmoCargo vehicle",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getAmmoCargo vehicle",
    ],
    [
        "u",
        "getanimaimprecision",
        "getAnimAimPrecision",
        "Returns aim precision for current animation",
        "getAnimAimPrecision player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getAnimAimPrecision player",
    ],
    [
        "u",
        "getanimspeedcoef",
        "getAnimSpeedCoef",
        "Get coefficient for animation speed",
        "getAnimSpeedCoef player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getAnimSpeedCoef soldier",
    ],
    [
        "u",
        "getarray",
        "getArray",
        "Extract array from config entry.",
        "_array = getArray (configFile >> 'CfgVehicles' >> 'Thing' >> 'threat')",
        "",
        "ARRAY",
        "",
        "CONFIG",
        "getArray config",
    ],
    [
        "u",
        "getartilleryammo",
        "getArtilleryAmmo",
        "Get list of all available magazines of artillery units in the list.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "getArtilleryAmmo [unitlist]",
    ],
    [
        "n",
        "getartillerycomputersettings",
        "getArtilleryComputerSettings",
        "Returns settings from artillery computer currently opened by player.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getArtilleryComputerSettings",
    ],
    [
        "b",
        "getartilleryeta",
        "getArtilleryETA",
        "Get ETA in seconds for given artillery unit, it's magazineType and target position. Returns negative value if fire is not possible.",
        "",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "unit getArtilleryETA [position, magazineType]",
    ],
    [
        "u",
        "getassetdlcinfo",
        "getAssetDLCInfo",
        "Returns DLC information about given object or model",
        "getAssetDLCInfo player",
        "",
        "ARRAY",
        "",
        "STRING,OBJECT",
        "getAssetDLCInfo asset",
    ],
    [
        "u",
        "getassetdlcinfo",
        "getAssetDLCInfo",
        "Returns DLC information about given config class. Config param is optional, default is 'configFile >> 'CfgVehicles''",
        "getAssetDLCInfo [currentWeapon player, configFile >> 'CfgWeapons']",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "getAssetDLCInfo [class, (config)]",
    ],
    [
        "u",
        "getassignedcuratorlogic",
        "getAssignedCuratorLogic",
        "Returns curator logic to which has given player access.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "getAssignedCuratorLogic player",
    ],
    [
        "u",
        "getassignedcuratorunit",
        "getAssignedCuratorUnit",
        "Returns unit assigned to curator logic.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "getAssignedCuratorUnit curatorObj",
    ],
    [
        "u",
        "getattacktarget",
        "getAttackTarget",
        "Return the target currently being attacked by the vehicle.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "getAttackTarget vehicle",
    ],
    [
        "n",
        "getaudiooptionvolumes",
        "getAudioOptionVolumes",
        "Returns profile audio volumes in format [effects, music, radio, von]",
        "_settings = getAudioOptionVolumes",
        "",
        "ARRAY",
        "",
        "",
        "getAudioOptionVolumes",
    ],
    [
        "u",
        "getbackpackcargo",
        "getBackpackCargo",
        "Returns all backpacks  names and count from ammo box (or any general weapon holder container).",
        "getBackpackCargo jeepOne",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getBackpackCargo box",
    ],
    [
        "u",
        "getbleedingremaining",
        "getBleedingRemaining",
        "Return reamining time of bleeding.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getBleedingRemaining unit",
    ],
    [
        "u",
        "getburningvalue",
        "getBurningValue",
        "Return amount of damage from fire.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getBurningValue unit",
    ],
    [
        "n",
        "getcalculateplayervisibilitybyfriendly",
        "getCalculatePlayerVisibilityByFriendly",
        "Returns true if visibility of player is calculated by friendly units.",
        "",
        "",
        "BOOL",
        "",
        "",
        "getCalculatePlayerVisibilityByFriendly",
    ],
    [
        "u",
        "getcameraviewdirection",
        "getCameraViewDirection",
        "Returns the direction the unit is looking in.",
        "_viewDir = getCameraViewDirection player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getCameraViewDirection unit",
    ],
    [
        "b",
        "getcargoindex",
        "getCargoIndex",
        "Returns the index of the unit in Cargo",
        "_index = _Jeep getCargoIndex player",
        "",
        "SCALAR",
        "OBJECT",
        "OBJECT",
        "vehicle getCargoIndex Unit",
    ],
    [
        "u",
        "getcenterofmass",
        "getCenterOfMass",
        "Returns center of mass of an object",
        "com = getCenterOfMass myEntity",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getCenterOfMass object",
    ],
    [
        "n",
        "getclientstate",
        "getClientState",
        "Return client state in network game",
        "",
        "",
        "STRING",
        "",
        "",
        "getClientState",
    ],
    [
        "n",
        "getclientstatenumber",
        "getClientStateNumber",
        "Return client state in network game",
        "",
        "",
        "STRING",
        "",
        "",
        "getClientStateNumber",
    ],
    [
        "b",
        "getcompatiblepylonmagazines",
        "getCompatiblePylonMagazines",
        "return list of compatible magazines, number > 0 or class name for one given pylon, or 0 for array of all pylons together",
        "_mags = vehicle player GetCompatiblePylonMagazines 1 ",
        "",
        "ARRAY",
        "OBJECT",
        "SCALAR,STRING",
        "vehicle getCompatiblePylonMagazines pylon name/index",
    ],
    [
        "b",
        "getcompatiblepylonmagazines",
        "getCompatiblePylonMagazines",
        "return list of compatible magazines, number > 0 or class name for one given pylon, or 0 for array of all pylons together",
        "_mags = 'A10' GetCompatiblePylonMagazines 'PylonLeft1' ",
        "",
        "ARRAY",
        "STRING",
        "SCALAR,STRING",
        "type name getCompatiblePylonMagazines pylon name/index",
    ],
    [
        "u",
        "getconnecteduav",
        "getConnectedUAV",
        "Returns UAV if unit has connection to some UAV.",
        "getConnectedUAV player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "getConnectedUAV unit",
    ],
    [
        "u",
        "getconnecteduavunit",
        "getConnectedUAVUnit",
        "Returns UAV unit if the given unit has connection to some UAV and took control of a turret.",
        "getConnectedUAVUnit player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "getConnectedUAVUnit unit",
    ],
    [
        "u",
        "getcontainermaxload",
        "getContainerMaxLoad",
        "Returns max load of a given containerItem",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "getContainerMaxLoad containerItemName",
    ],
    [
        "u",
        "getcruisecontrol",
        "getCruiseControl",
        "Returns the vehicles current speed limiter/cruise control parameters",
        "getCruiseControl (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getCruiseControl vehicle",
    ],
    [
        "n",
        "getcursorobjectparams",
        "getCursorObjectParams",
        "Returns an object and named selections under the cursor and the distance to the object's surface (to the point the cursor is pointing at). If the object is further than 50 meters away, selections are an empty array and the distance is 1e10 (10^10)",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getCursorObjectParams",
    ],
    [
        "u",
        "getcustomaimcoef",
        "getCustomAimCoef",
        "Returns custom aiming coefficient for weapon sway",
        "getCustomAimingCoef player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getCustomAimCoef player",
    ],
    [
        "u",
        "getcustomsoundcontroller",
        "getCustomSoundController",
        "Return current value set to the controller",
        "getCustomSoundController [vehicle player, 'CustomSoundController3']",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "getCustomSoundController [vehicle, controllerIndex]",
    ],
    [
        "u",
        "getcustomsoundcontrollercount",
        "getCustomSoundControllerCount",
        "Return number of custom sound controllers for the vehicle",
        "getCustomSoundControllerCount (vehicle player)",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getCustomSoundControllerCount vehicle",
    ],
    [
        "u",
        "getdammage",
        "getDammage",
        "Returns the object damage in the range from 0 to 1.",
        "getDammage player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getDammage obj",
    ],
    [
        "u",
        "getdebriefingtext",
        "getDebriefingText",
        "Returns array in format [title, description, subtitle, picture, pictureBackground]",
        "",
        "",
        "ARRAY",
        "",
        "STRING",
        "getDebriefingText end",
    ],
    [
        "u",
        "getdescription",
        "getDescription",
        "Returns the string representation of unit as an four slots array ([unit,uniform,vest,backpack])",
        "getDescription player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getDescription unit",
    ],
    [
        "b",
        "getdir",
        "getDir",
        "Returns azimuth from obj1 to obj2",
        "unit1 getDir unit2",
        "",
        "SCALAR",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "obj1 or pos1 getDir obj2 or pos2",
    ],
    [
        "u",
        "getdir",
        "getDir",
        "Returns the object heading in the range from 0 to 360.",
        "getDir player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getDir obj",
    ],
    [
        "u",
        "getdirvisual",
        "getDirVisual",
        "Returns the object heading in the range from 0 to 360.",
        "getDir player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getDirVisual obj",
    ],
    [
        "u",
        "getdiverstate",
        "getDiverState",
        "Returns true when object is in diver state (diving goggles on)",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "getDiverState object",
    ],
    [
        "n",
        "getdlcassetsusage",
        "getDLCAssetsUsage",
        "Returns an array of the DLC usage times. Returned array contain DLC item in this format: [[name, dlcAppId, sessionTime, totalTime], [name, dlcAppId, sessionTime, totalTime], ...]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getDLCAssetsUsage",
    ],
    [
        "u",
        "getdlcassetsusagebyname",
        "getDLCAssetsUsageByName",
        "Returns an array with the session and global time the asset has been used.",
        "",
        "",
        "ARRAY",
        "",
        "STRING",
        "getDLCAssetsUsageByName assetName",
    ],
    [
        "u",
        "getdlcs",
        "getDLCs",
        "Returns list of appIds of game DLCs. Use filter param to get only certain DLCs: 0:all, 1:owned, 2:not owned",
        "",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "getDLCs filter",
    ],
    [
        "u",
        "getdlcusagetime",
        "getDLCUsageTime",
        "Returns total time the assets of the given DLC has been used.",
        "",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "getDLCUsageTime appId",
    ],
    [
        "u",
        "geteditorcamera",
        "getEditorCamera",
        "Fetches a reference to the mission editor camera.",
        "",
        "",
        "OBJECT",
        "",
        "CONTROL",
        "getEditorCamera map",
    ],
    [
        "u",
        "geteditormode",
        "getEditorMode",
        "Returns the current mode of the editor.",
        "",
        "",
        "STRING",
        "",
        "CONTROL",
        "getEditorMode map",
    ],
    [
        "b",
        "geteditorobjectscope",
        "getEditorObjectScope",
        "Returns the editor object scope of the specified editor object.",
        "",
        "",
        "STRING",
        "CONTROL",
        "STRING",
        "map getEditorObjectScope object",
    ],
    [
        "n",
        "getelevationoffset",
        "getElevationOffset",
        "Returns the map elevation offset from [map]/config.cpp",
        "",
        "",
        "SCALAR",
        "",
        "",
        "getElevationOffset",
    ],
    [
        "u",
        "getenginetargetrpmrtd",
        "getEngineTargetRPMRTD",
        "Returns target rpm of all engines.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getEngineTargetRPMRTD RTD_helicopter",
    ],
    [
        "b",
        "getenv3dsoundcontroller",
        "getEnv3DSoundController",
        "Returns specified 3D controller value for the given environmental object",
        "_tree getEnv3DSoundController 'wind'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "object getEnv3DSoundController name",
    ],
    [
        "b",
        "getenvsoundcontroller",
        "getEnvSoundController",
        "Returns specified controller value",
        "(position player) getEnvSoundController 'sea'",
        "",
        "SCALAR",
        "ARRAY",
        "STRING",
        "position getEnvSoundController name",
    ],
    [
        "b",
        "geteventhandlerinfo",
        "getEventHandlerInfo",
        "Returns event handler info in the following format: [exists, islast, total]",
        "player getEventHandlerInfo ['Killed', 2]",
        "",
        "ARRAY",
        "OBJECT,GROUP,DISPLAY,CONTROL",
        "ARRAY",
        "entity getEventHandlerInfo [event, id]",
    ],
    [
        "u",
        "geteventhandlerinfo",
        "getEventHandlerInfo",
        "Returns event handler info in the following format: [exists, islast, total]",
        "getEventHandlerInfo ['EachFrame', 2]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "getEventHandlerInfo [event, id]",
    ],
    [
        "u",
        "getfatigue",
        "getFatigue",
        "Returns relative exhaustion of a unit [0..1]",
        "getFatigue player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getFatigue unit",
    ],
    [
        "u",
        "getfieldmanualstartpage",
        "getFieldManualStartPage",
        "Returns array of the starting topic and hint the given field manual should display",
        "",
        "",
        "ARRAY",
        "",
        "DISPLAY",
        "getFieldManualStartPage display",
    ],
    [
        "u",
        "getforcedflagtexture",
        "getForcedFlagTexture",
        "Returns the current texture of the forced flag. see ForceFlagTexture",
        "getForcedFlagTexture player",
        "",
        "STRING",
        "",
        "OBJECT",
        "getForcedFlagTexture obj",
    ],
    [
        "b",
        "getfriend",
        "getFriend",
        "Returns if sides are friendly or hostile.  For a value smaller than 0.6 it results in being enemy, otherwise it's friendly.",
        "value = west getFriend east",
        "",
        "SCALAR",
        "SIDE",
        "SIDE",
        "side1 getFriend side2",
    ],
    [
        "b",
        "getfsmvariable",
        "getFSMVariable",
        "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.",
        "",
        "",
        "ANY",
        "SCALAR",
        "ARRAY,STRING",
        "FSM handle getFSMVariable name or [name, default value]",
    ],
    [
        "u",
        "getfuelcargo",
        "getFuelCargo",
        "Returns the fuel amount in the cargo space of a refuelling vehicle.",
        "getFuelCargo vehicle",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getFuelCargo vehicle",
    ],
    [
        "u",
        "getgraphvalues",
        "getGraphValues",
        "Generate graph y - coordinates of all input values within specific x and y range",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "getGraphValues [[graphMinX, graphMaxX, graphMinY, graphMaxY, valueCount, randomOffset], x1, y1, x2, y2,... xn, yn]",
    ],
    [
        "b",
        "getgroupicon",
        "getGroupIcon",
        "Get group icon properties.",
        "group getGroupIcon id",
        "",
        "ARRAY",
        "GROUP",
        "SCALAR",
        "group getGroupIcon ID",
    ],
    [
        "u",
        "getgroupiconparams",
        "getGroupIconParams",
        "Returns group icons params. [color, text,scale, visible]",
        "getGroupIconParams group",
        "",
        "ARRAY",
        "",
        "GROUP",
        "getGroupIconParams group",
    ],
    [
        "u",
        "getgroupicons",
        "getGroupIcons",
        "Returns all group icons.[[id,icon,[offsetx,offsety],[..],..]",
        "getGroupIcons group",
        "",
        "ARRAY",
        "",
        "GROUP",
        "getGroupIcons group",
    ],
    [
        "b",
        "gethidefrom",
        "getHideFrom",
        "Returns the hiding position in format <ar>Position</ar>. If enemy is null it is the some position in front of the object or enemy position otherwise.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "OBJECT",
        "object getHideFrom enemy",
    ],
    [
        "b",
        "gethit",
        "getHit",
        "Return current level of damage for a specific selection.",
        "(vehicle player) getHit 'hitEngine'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "vehicle getHit selectionName",
    ],
    [
        "b",
        "gethitindex",
        "getHitIndex",
        "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.",
        "vehicle player getHitIndex 0",
        "",
        "SCALAR",
        "OBJECT",
        "SCALAR",
        "object getHitIndex index",
    ],
    [
        "b",
        "gethitpointdamage",
        "getHitPointDamage",
        "Return current level of damage for a specific Hit Point (specified by its config class).",
        "(vehicle player) getHitPointDamage 'hitEngine'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "vehicle getHitPointDamage hitpointName",
    ],
    [
        "u",
        "getitemcargo",
        "getItemCargo",
        "Returns all items names and count from ammo box (or any general weapon holder container).",
        "getItemCargo jeepOne",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getItemCargo box",
    ],
    [
        "n",
        "getlighting",
        "getLighting",
        "Returns information about current lighting environment",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getLighting",
    ],
    [
        "u",
        "getlightingat",
        "getLightingAt",
        "returns current lighting at world position",
        "getLightingAt player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getLightingAt position",
    ],
    [
        "n",
        "getloadedmodsinfo",
        "getLoadedModsInfo",
        "Returns info about currently loaded mods",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getLoadedModsInfo",
    ],
    [
        "u",
        "getmagazinecargo",
        "getMagazineCargo",
        "Returns all magazines  names and count from ammo box (or any general weapon holder container).",
        "getMagazineCargo jeepOne",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getMagazineCargo box",
    ],
    [
        "u",
        "getmarkercolor",
        "getMarkerColor",
        "Gets the marker color. See <f>setMarkerColor</f>.",
        "getMarkerColor 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "getMarkerColor marker",
    ],
    [
        "u",
        "getmarkerpos",
        "getMarkerPos",
        "Returns the marker positon in format [x,z,y].",
        "getMarkerPos 'markerOne'",
        "",
        "ARRAY",
        "",
        "STRING",
        "getMarkerPos markerName",
    ],
    [
        "u",
        "getmarkerpos",
        "getMarkerPos",
        "Returns the marker position in format [x,z,y], where z is preserved.",
        "getMarkerPos ['markerOne', true]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "getMarkerPos [markerName, preserveElevation]",
    ],
    [
        "u",
        "getmarkersize",
        "getMarkerSize",
        "Gets the marker size. See <f>setMarkerSize</f>.",
        "getMarkerSize 'MarkerOne'",
        "",
        "ARRAY",
        "",
        "STRING",
        "getMarkerSize marker",
    ],
    [
        "u",
        "getmarkertype",
        "getMarkerType",
        "Gets the type of the marker. See <f>setMarkerType</f>.",
        "getMarkerType 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "getMarkerType marker",
    ],
    [
        "u",
        "getmass",
        "getMass",
        "Returns mass of an object",
        "mass = getMass myEntity",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getMass object",
    ],
    [
        "u",
        "getmissionconfig",
        "getMissionConfig",
        "Returns config for given mission attribute",
        "",
        "",
        "CONFIG",
        "",
        "STRING",
        "getMissionConfig attributeName",
    ],
    [
        "u",
        "getmissionconfigvalue",
        "getMissionConfigValue",
        "Returns value of given entry in mission config file",
        "",
        "",
        "SCALAR,ARRAY,STRING",
        "",
        "ARRAY,STRING",
        "getMissionConfigValue attributeName",
    ],
    [
        "n",
        "getmissiondlcs",
        "getMissionDLCs",
        "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and doesn't detect units created by scripts!",
        "list of DLCs detected for the mission",
        "",
        "ARRAY",
        "",
        "",
        "getMissionDLCs",
    ],
    [
        "u",
        "getmissionlayerentities",
        "getMissionLayerEntities",
        "Returns list of entities currently in mission form given layer.",
        "",
        "",
        "ARRAY",
        "",
        "SCALAR,STRING",
        "getMissionLayerEntities &lt;layer_name&gt; or &lt;layer_id&gt;",
    ],
    [
        "n",
        "getmissionlayers",
        "getMissionLayers",
        "Name of the operation in progress.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getMissionLayers",
    ],
    [
        "u",
        "getmissionpath",
        "getMissionPath",
        "Returns the full mission root plus filename.",
        "",
        "",
        "STRING",
        "",
        "STRING",
        "getMissionPath filename",
    ],
    [
        "u",
        "getmodelinfo",
        "getModelInfo",
        "Returns object's model info in format [modelName, modelPath, hasSkeleton, placingPoint]. Model path is suitable for use with <f>createSimpleObject</f> command.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getModelInfo object",
    ],
    [
        "n",
        "getmouseposition",
        "getMousePosition",
        "Returns Position of the mouse on the screen in UI coordinates.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getMousePosition",
    ],
    [
        "n",
        "getmusicplayedtime",
        "getMusicPlayedTime",
        "Return music played time.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "getMusicPlayedTime",
    ],
    [
        "u",
        "getnumber",
        "getNumber",
        "Extract number from config entry.",
        "_number = getNumber (configFile >> 'CfgVehicles' >> 'Thing' >> 'maxSpeed')",
        "",
        "SCALAR",
        "",
        "CONFIG",
        "getNumber config",
    ],
    [
        "b",
        "getobjectargument",
        "getObjectArgument",
        "Return name of object argument in mission editor.",
        "",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "map getObjectArgument [object, argument]",
    ],
    [
        "b",
        "getobjectchildren",
        "getObjectChildren",
        "Return a list of all the children of the specified object.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "STRING",
        "map getObjectChildren object",
    ],
    [
        "u",
        "getobjectdlc",
        "getObjectDLC",
        "Returns an appId the object belongs to. The information is taken from it's model.",
        "getObjectDLC cursorTarget",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getObjectDLC Object",
    ],
    [
        "u",
        "getobjectfov",
        "getObjectFOV",
        "Returns current FOV of the given object",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getObjectFOV obj",
    ],
    [
        "u",
        "getobjectid",
        "getObjectID",
        "Returns Visitor object id in string format",
        "getObjectID obj",
        "",
        "STRING",
        "",
        "OBJECT",
        "getObjectID object",
    ],
    [
        "u",
        "getobjectmaterials",
        "getObjectMaterials",
        "Returns a list of all custom materials assigned to given object.",
        "_materials = getObjectMaterials player;",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getObjectMaterials object",
    ],
    [
        "b",
        "getobjectproxy",
        "getObjectProxy",
        "Return the proxy object associated with the given editor object.",
        "",
        "",
        "OBJECT",
        "CONTROL",
        "STRING",
        "map getObjectProxy object",
    ],
    [
        "u",
        "getobjectscale",
        "getObjectScale",
        "Returns the render scale of the object.",
        "getObjectScale cursorObject",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getObjectScale object",
    ],
    [
        "u",
        "getobjecttextures",
        "getObjectTextures",
        "Returns a list of all custom textures assigned to given object.",
        "_textures = getObjectTextures player;",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getObjectTextures object",
    ],
    [
        "u",
        "getobjecttype",
        "getObjectType",
        "Returns object type as Number",
        "getObjectType player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getObjectType obj",
    ],
    [
        "n",
        "getobjectviewdistance",
        "getObjectViewDistance",
        "Returns object and shadow view distance.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getObjectViewDistance",
    ],
    [
        "b",
        "getopticsmode",
        "getOpticsMode",
        "Returns current optics mode class name of a unit's weapon.",
        "player getOpticsMode 0",
        "",
        "STRING",
        "OBJECT",
        "SCALAR",
        "unit getOpticsMode weaponSlotIndex",
    ],
    [
        "b",
        "getordefault",
        "getOrDefault",
        "Retrieves a value from the Hashmap, returns defaultValue if key was not found. Sets key to defaultValue if setDefault is true.",
        "_hashMap getOrDefault [1337, player]",
        "player",
        "ANY",
        "HASHMAP",
        "ARRAY",
        "HashMap getOrDefault [key, defaultValue, setDefault]",
    ],
    [
        "u",
        "getoxygenremaining",
        "getOxygenRemaining",
        "Return amount of remaining oxygen.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getOxygenRemaining unit",
    ],
    [
        "u",
        "getpersonuseddlcs",
        "getPersonUsedDLCs",
        "Returns list of all DLCs (appIds, both owned or not) the person is currently using.",
        "getPersonUsedDLCs player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPersonUsedDLCs Person",
    ],
    [
        "u",
        "getpilotcameradirection",
        "getPilotCameraDirection",
        "Returns pilot camera direction (model space)",
        "vector = getPilotCameraDirection (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPilotCameraDirection planerOrHeli",
    ],
    [
        "u",
        "getpilotcameraposition",
        "getPilotCameraPosition",
        "Returns pilot camera position (model space)",
        "vector = getPilotCameraPosition (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPilotCameraPosition planerOrHeli",
    ],
    [
        "u",
        "getpilotcamerarotation",
        "getPilotCameraRotation",
        "Returns pilot camera orientation (model space)",
        " rotation = getPilotCameraRotation (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPilotCameraRotation planerOrHeli",
    ],
    [
        "u",
        "getpilotcameratarget",
        "getPilotCameraTarget",
        "Returns position/target pilot camera is pointing at",
        " target = getPilotCameraDirectionTarget (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPilotCameraTarget planerOrHeli",
    ],
    [
        "n",
        "getpipviewdistance",
        "getPiPViewDistance",
        "Returns object view distance inside PiP",
        "getPiPViewDistance",
        "",
        "SCALAR",
        "",
        "",
        "getPiPViewDistance",
    ],
    [
        "u",
        "getplatenumber",
        "getPlateNumber",
        "get plate info from car or motorcycle",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "getPlateNumber vehicle",
    ],
    [
        "u",
        "getplayerchannel",
        "getPlayerChannel",
        "Returns channel the player currently speaks on. Returns -1 if there is no communication in progress.",
        "channel = getPlayerChannel",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getPlayerChannel object",
    ],
    [
        "u",
        "getplayerid",
        "getPlayerID",
        "Returns player ID used for marker creation.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "getPlayerID unit",
    ],
    [
        "u",
        "getplayerscores",
        "getPlayerScores",
        "MP: returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score).",
        "getPlayerScores unitOne",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPlayerScores unit",
    ],
    [
        "u",
        "getplayeruid",
        "getPlayerUID",
        "Get unique player id.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "getPlayerUID unit",
    ],
    [
        "u",
        "getplayervonvolume",
        "getPlayerVoNVolume",
        "Returns the players current Voice over Net volume.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getPlayerVoNVolume players",
    ],
    [
        "b",
        "getpos",
        "getPos",
        "Returns position at given distance and azimuth from current object or position",
        "unit1 getPos [30,20]",
        "",
        "ARRAY",
        "ARRAY,OBJECT",
        "ARRAY",
        "obj or pos getPos [dist, azimuth]",
    ],
    [
        "u",
        "getpos",
        "getPos",
        "Returns the object position in format <ar>Position</ar>.",
        "getPos player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPos obj",
    ],
    [
        "u",
        "getpos",
        "getPos",
        "Return (raw) position of given location.",
        "",
        "",
        "ARRAY",
        "",
        "LOCATION",
        "getPos location",
    ],
    [
        "u",
        "getposasl",
        "getPosASL",
        "Returns the object position in format <ar>PositionASL</ar>.",
        "getPosASL player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosASL obj",
    ],
    [
        "u",
        "getposaslvisual",
        "getPosASLVisual",
        "Returns the object rendered position in format <ar>PositionASL</ar>.",
        "getPosASLVisual player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosASLVisual object",
    ],
    [
        "u",
        "getposaslw",
        "getPosASLW",
        "Returns the object position in format <ar>PositionASLW</ar>.",
        "getPosASLW player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosASLW obj",
    ],
    [
        "u",
        "getposatl",
        "getPosATL",
        "Returns the object position in format <ar>PositionATL</ar>.",
        "getPosATL player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosATL obj",
    ],
    [
        "u",
        "getposatlvisual",
        "getPosATLVisual",
        "Returns the object position in format <ar>PositionATL</ar>.",
        "getPosATL player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosATLVisual obj",
    ],
    [
        "u",
        "getposvisual",
        "getPosVisual",
        "Returns the object rendered position in format <ar>Position</ar>.",
        "visiblePosition player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosVisual object",
    ],
    [
        "u",
        "getposworld",
        "getPosWorld",
        "Returns the object position in format <ar>PositionWorld</ar>.",
        "getPosWorld player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosWorld obj",
    ],
    [
        "u",
        "getposworldvisual",
        "getPosWorldVisual",
        "Returns the object rendered position in format <ar>PositionWorld</ar>.",
        "getPosWorldVisual player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPosWorldVisual obj",
    ],
    [
        "u",
        "getpylonmagazines",
        "getPylonMagazines",
        "return array of magazines on pylons",
        "getPylonMagazines vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getPylonMagazines vehicle",
    ],
    [
        "b",
        "getreldir",
        "getRelDir",
        "Returns relative direction from obj1 to obj2",
        "unit1 getRelDir unit2",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY,OBJECT",
        "obj1 getRelDir obj2 or pos2",
    ],
    [
        "b",
        "getrelpos",
        "getRelPos",
        "Returns position at given distance and relative direction from current object",
        "unit1 getRelPos [30,20]",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "obj getRelPos [dist, reldir]",
    ],
    [
        "n",
        "getremotesensorsdisabled",
        "getRemoteSensorsDisabled",
        "Returns true if sensors are computing visibility only for groups that have at least one local unit.",
        "",
        "",
        "BOOL",
        "",
        "",
        "getRemoteSensorsDisabled",
    ],
    [
        "u",
        "getrepaircargo",
        "getRepairCargo",
        "Returns the amount or repair resources in the cargo space of a repair vehicle.",
        "getRepairCargo vehicle",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getRepairCargo vehicle",
    ],
    [
        "n",
        "getresolution",
        "getResolution",
        "Returns [width, height, 2D viewport Width, 2D viewport Height, aspect ration, UI scale, topFOV, leftFOV, tripleHead]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getResolution",
    ],
    [
        "u",
        "getroadinfo",
        "getRoadInfo",
        "Returns road info in format [maptype, width, ispedestrian, texture, texture end, material, begpos, endpos, isbridge]",
        "getRoadInfo _road",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getRoadInfo road",
    ],
    [
        "u",
        "getrotorbrakertd",
        "getRotorBrakeRTD",
        "Returns if rotorbrake is on.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getRotorBrakeRTD RTD_helicopter",
    ],
    [
        "u",
        "getsensortargets",
        "getSensorTargets",
        "Returns vehicles current sensor targets",
        "getSensorTargets (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getSensorTargets vehicle",
    ],
    [
        "u",
        "getsensorthreats",
        "getSensorThreats",
        "Returns vehicles current threads as provided by its sensors",
        "getSensorThreats (vehicle player)",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getSensorThreats vehicle",
    ],
    [
        "n",
        "getshadowdistance",
        "getShadowDistance",
        "Gets the shadows rendering distance.",
        "_dist = getShadowDistance",
        "",
        "SCALAR",
        "",
        "",
        "getShadowDistance",
    ],
    [
        "u",
        "getshotparents",
        "getShotParents",
        "Get the shot's parent and a unit which caused the shot to happen.",
        "shotParents = getShotParents myProjectile",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getShotParents shot",
    ],
    [
        "u",
        "getslingload",
        "getSlingLoad",
        "Return object which is sling loaded by vehicle",
        "getSlingLoad veh",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "getSlingLoad vehicle",
    ],
    [
        "b",
        "getsoundcontroller",
        "getSoundController",
        "Return specified controller value",
        "(vehicle player) getSoundController 'rpm'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "vehicle getSoundController name",
    ],
    [
        "b",
        "getsoundcontrollerresult",
        "getSoundControllerResult",
        "Calculate expression value",
        "(vehicle player) getSoundControllerResult (configfile >> 'CfgVehicles' >> 'MRAP_01_base_F' >> 'Sounds' >> 'Engine' >> 'volume')",
        "",
        "SCALAR",
        "OBJECT",
        "CONFIG",
        "vehicle getSoundControllerResult config",
    ],
    [
        "b",
        "getspeed",
        "getSpeed",
        "Get the speed for the given speed mode. SpeedMode can be: 'AUTO','SLOW','NORMAL','FAST'.",
        "",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "object getSpeed speedMode",
    ],
    [
        "u",
        "getstamina",
        "getStamina",
        "Get current stamina (~ seconds until depletion)",
        "getStamina player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getStamina unit",
    ],
    [
        "u",
        "getstatvalue",
        "getStatValue",
        "Returns value of the given stat. ",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "getStatValue statName",
    ],
    [
        "n",
        "getsteamfriendsservers",
        "getSteamFriendsServers",
        "Gets list of servers that Steam Friends are playing on",
        "",
        "",
        "ARRAY",
        "",
        "",
        "getSteamFriendsServers",
    ],
    [
        "n",
        "getsubtitleoptions",
        "getSubtitleOptions",
        "Returns subtitles settings in format [subtitles, radio subtitles].",
        "_settings = getSubtitleOptions",
        "",
        "ARRAY",
        "",
        "",
        "getSubtitleOptions",
    ],
    [
        "u",
        "getsuppression",
        "getSuppression",
        "Gets the AI suppression level.",
        "unit getSuppression",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getSuppression unit",
    ],
    [
        "n",
        "getterraingrid",
        "getTerrainGrid",
        "Returns the current size of the terrain grid.",
        "gridSize = getTerrainGrid;",
        "",
        "SCALAR",
        "",
        "",
        "getTerrainGrid",
    ],
    [
        "u",
        "getterrainheight",
        "getTerrainHeight",
        "Returns terrain height of nearest point from position",
        "",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "getTerrainHeight [X,Y] position",
    ],
    [
        "u",
        "getterrainheightasl",
        "getTerrainHeightASL",
        "Returns terrain height above sea level.",
        " z = getTerrainHeightASL  [x,y]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "getTerrainHeightASL [x,y]",
    ],
    [
        "n",
        "getterraininfo",
        "getTerrainInfo",
        "Gets terrain source grid resolution",
        "",
        "[land grid, land width, heightmap grid, heightmap width, sealevel]",
        "ARRAY",
        "",
        "",
        "getTerrainInfo",
    ],
    [
        "u",
        "gettext",
        "getText",
        "Extract text from config entry.",
        "_text = getText (configFile >> 'CfgVehicles' >> 'Thing' >> 'icon')",
        "",
        "STRING",
        "",
        "CONFIG",
        "getText config",
    ],
    [
        "u",
        "gettextraw",
        "getTextRaw",
        "Extract unlocalized text value from config entry.",
        "_text = getTextRaw (configFile >> 'CfgActions' >> 'GetInDriver' >> 'text')",
        "",
        "STRING",
        "",
        "CONFIG",
        "getTextRaw config",
    ],
    [
        "u",
        "gettextureinfo",
        "getTextureInfo",
        "Returns width and height of the given texture.",
        "getTextureInfo 'a3characters_f\blufordataclothing1_co.paa'",
        "",
        "ARRAY",
        "",
        "STRING",
        "getTextureInfo texture",
    ],
    [
        "b",
        "gettextwidth",
        "getTextWidth",
        "Returns the estimated width of the text based on its font and height",
        "'Push Button' getTextWidth ['PuristaMedium', 0.04]",
        "",
        "SCALAR",
        "STRING",
        "ARRAY",
        "text getTextWidth [font, size]",
    ],
    [
        "n",
        "gettiparameters",
        "getTiParameters",
        "Returns current thermal imaging parameters",
        "",
        "",
        "HASHMAP",
        "",
        "",
        "getTiParameters",
    ],
    [
        "n",
        "gettotaldlcusagetime",
        "getTotalDLCUsageTime",
        "Returns total DLC usage time in this game session",
        "",
        "",
        "SCALAR",
        "",
        "",
        "getTotalDLCUsageTime",
    ],
    [
        "u",
        "gettrimoffsetrtd",
        "getTrimOffsetRTD",
        "Returns controls trim offset.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getTrimOffsetRTD RTD_helicopter",
    ],
    [
        "b",
        "getturretopticsmode",
        "getTurretOpticsMode",
        "Sets the current optics mode of the turret occupied by the unit.",
        "vehicle getTurretOpticsMode [-1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle getTurretOpticsMode turretPath",
    ],
    [
        "u",
        "getturretopticsmode",
        "getTurretOpticsMode",
        "Returns the index of the current optic mode of the turret occupied by the unit.",
        "getTurretOpticMode player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getTurretOpticsMode unit",
    ],
    [
        "u",
        "getunitfreefallinfo",
        "getUnitFreefallInfo",
        "Returns array in format [isFalling, isInFreefallPose, freefallMinHeight]",
        "getUnitFreefallInfo player;",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getUnitFreefallInfo unit",
    ],
    [
        "u",
        "getunitloadout",
        "getUnitLoadout",
        "Get array with all assigned items, weapons, containers and its stored items.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "getUnitLoadout unit",
    ],
    [
        "u",
        "getunitloadout",
        "getUnitLoadout",
        "Get array with all assigned items, weapons, containers and its stored items.",
        "",
        "",
        "ARRAY",
        "",
        "STRING",
        "getUnitLoadout className",
    ],
    [
        "u",
        "getunitloadout",
        "getUnitLoadout",
        "Get array with all assigned items, weapons, containers and its stored items.",
        "",
        "",
        "ARRAY",
        "",
        "CONFIG",
        "getUnitLoadout config",
    ],
    [
        "b",
        "getunittrait",
        "getUnitTrait",
        "Gets trait from given soldier",
        "player getUnitTrait 'Medic'",
        "",
        "SCALAR,BOOL,NOTHING",
        "OBJECT",
        "STRING",
        "player getUnitTrait &lt;skill_name&gt;",
    ],
    [
        "u",
        "getuserinfo",
        "getUserInfo",
        "Returns an extended information about given user on the server. Server side execution.",
        "getUserInfo '1606048258'",
        "",
        "ARRAY",
        "",
        "STRING",
        "getUserInfo playerID",
    ],
    [
        "u",
        "getusermfdtext",
        "getUserMFDText",
        "Returns array of user text variables used in MFD.",
        "getUserMFDText vehicle player;",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getUserMFDText vehicle",
    ],
    [
        "u",
        "getusermfdvalue",
        "getUserMFDValue",
        "Returns array of user variables used in MFD.",
        "getUserMFDValue vehicle player;",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getUserMFDValue vehicle",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Returns the value of given variable set on given UI display",
        "",
        "",
        "ANY",
        "DISPLAY",
        "ARRAY,STRING",
        "object getVariable name or [name, defaultValue]",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Returns the value of given variable set on given UI control",
        "",
        "",
        "ANY",
        "CONTROL",
        "ARRAY,STRING",
        "control getVariable name or [name, defaultValue]",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given object.",
        "",
        "",
        "ANY",
        "OBJECT",
        "STRING",
        "object getVariable name",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given object. If not found, default value is returned.",
        "",
        "",
        "ANY",
        "OBJECT",
        "ARRAY",
        "object getVariable [name, default value]",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given group.",
        "",
        "",
        "ANY",
        "GROUP",
        "STRING",
        "group getVariable name",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given group. If not found, default value is returned.",
        "",
        "",
        "ANY",
        "GROUP",
        "ARRAY",
        "group getVariable [name, default value]",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the given namespace.",
        "",
        "",
        "ANY",
        "NAMESPACE",
        "STRING",
        "namespace getVariable name",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the given namespace. If not found, default value is returned.",
        "",
        "",
        "ANY",
        "NAMESPACE",
        "ARRAY",
        "namespace getVariable [name, default value]",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given team member.",
        "",
        "",
        "ANY",
        "TEAM_MEMBER",
        "STRING",
        "teamMember getVariable name",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given team member.",
        "",
        "",
        "ANY",
        "TEAM_MEMBER",
        "ARRAY",
        "teamMember getVariable [name, default value]",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given task.",
        "",
        "",
        "ANY",
        "TASK",
        "STRING",
        "task getVariable name",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given task.",
        "",
        "",
        "ANY",
        "TASK",
        "ARRAY",
        "task getVariable name",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given location.",
        "",
        "",
        "ANY",
        "LOCATION",
        "STRING",
        "location getVariable name",
    ],
    [
        "b",
        "getvariable",
        "getVariable",
        "Return the value of variable in the variable space of given location.",
        "",
        "",
        "ANY",
        "LOCATION",
        "ARRAY",
        "location getVariable name",
    ],
    [
        "u",
        "getvehiclecargo",
        "getVehicleCargo",
        "Get list of vehicles loaded inside this vehicle.",
        "getVehicleCargo veh",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getVehicleCargo vehicle",
    ],
    [
        "u",
        "getvehicletipars",
        "getVehicleTiPars",
        "Get TI parameters for specified vehicle in format [engine/body, tracks/wheels, main gun]",
        "getVehicleTIPars veh",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getVehicleTiPars vehicle",
    ],
    [
        "u",
        "getweaponcargo",
        "getWeaponCargo",
        "Returns all weapons  names and count from ammo box (or any general weapon holder container).",
        "getWeaponCargo jeepOne",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "getWeaponCargo box",
    ],
    [
        "u",
        "getweaponsway",
        "getWeaponSway",
        "Returns current size of weapon sway of a given unit, in radians",
        "getWeaponSway player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getWeaponSway unit",
    ],
    [
        "u",
        "getwingsorientationrtd",
        "getWingsOrientationRTD",
        "Returns orientation of horizontaol stabilizers.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getWingsOrientationRTD RTD_helicopter",
    ],
    [
        "u",
        "getwingspositionrtd",
        "getWingsPositionRTD",
        "Returns position of stabilizers.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "getWingsPositionRTD RTD_helicopter",
    ],
    [
        "u",
        "getwppos",
        "getWPPos",
        "Gets the waypoint position. The format of waypoint is <ar>Waypoint</ar>.",
        "getWPPos [groupOne, 1]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "getWPPos waypoint",
    ],
    [
        "b",
        "glanceat",
        "glanceAt",
        "Control what the unit is glancing at (target or position) (format <ar>Position</ar>)",
        "someSoldier glanceAt otherSoldier; otherSoldier glanceAt getMarkerPos 'markerOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "unit(s) glanceAt position",
    ],
    [
        "b",
        "globalchat",
        "globalChat",
        "Types text to the global radio channel\nNote: this function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on all of them.",
        "soldierOne globalChat 'Show this text'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit globalChat chatText",
    ],
    [
        "b",
        "globalradio",
        "globalRadio",
        "Sends the message to the global radio channel. The message is defined in the description.ext file or radio protocol.",
        "soldierOne globalRadio 'messageOne'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit globalRadio radioName",
    ],
    [
        "u",
        "goggles",
        "goggles",
        "Returns name of currently used goggles.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "goggles unit",
    ],
    [
        "u",
        "goto",
        "goto",
        "Only in scripts: go to given label. Note: the string argument is used here. Be sure to use double quotes around the label name in goto.",
        "goto 'Loop'",
        "",
        "NOTHING",
        "",
        "STRING",
        "goto label",
    ],
    [
        "u",
        "group",
        "group",
        "Returns the group to which the given unit is assigned. For dead units, grpNull is returned.",
        "group player == group leader player",
        "",
        "GROUP",
        "",
        "OBJECT",
        "group obj",
    ],
    [
        "b",
        "groupchat",
        "groupChat",
        "Types text to the group radio channel\nNote: this function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on all of them.",
        "soldierOne groupChat 'Show this text'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit groupChat chatText",
    ],
    [
        "u",
        "groupfromnetid",
        "groupFromNetId",
        "Get group with given unique ID.",
        "groupFromNetId (netId group player)",
        "group player",
        "GROUP",
        "",
        "STRING",
        "groupFromNetId id",
    ],
    [
        "n",
        "groupiconselectable",
        "groupIconSelectable",
        "Return if groups icon raises onClick and onOver events.",
        "",
        "",
        "BOOL",
        "",
        "",
        "groupIconSelectable",
    ],
    [
        "n",
        "groupiconsvisible",
        "groupIconsVisible",
        "Return group icons are visible.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "groupIconsVisible",
    ],
    [
        "u",
        "groupid",
        "groupID",
        "Returns group name.",
        "name = groupID (group player)",
        "",
        "STRING",
        "",
        "GROUP",
        "groupID group",
    ],
    [
        "u",
        "groupowner",
        "groupOwner",
        "Returns ID of client to which the group is local. Can be run only from server. When called from client, it always returns 0.",
        "",
        "",
        "SCALAR",
        "",
        "GROUP",
        "groupOwner group",
    ],
    [
        "b",
        "groupradio",
        "groupRadio",
        "Sends the message to the group radio channel. The message is defined in the description.ext file or radio protocol.",
        "soldierOne groupRadio 'messageOne'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit groupRadio radioName",
    ],
    [
        "u",
        "groupselectedunits",
        "groupSelectedUnits",
        "Returns selected groups in sgroup.",
        "array = groupSelectedUnits unit",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "groupSelectedUnits unit",
    ],
    [
        "b",
        "groupselectunit",
        "groupSelectUnit",
        "Select unit from unit's group.",
        "player groupSelectUnit [unit,true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit groupSelectUnit [unit,bool]",
    ],
    [
        "n",
        "grpnull",
        "grpNull",
        "A non-existing group. This value is not equal to anything, including itself.",
        "group player == objNull",
        "false",
        "GROUP",
        "",
        "",
        "grpNull",
    ],
    [
        "u",
        "gunner",
        "gunner",
        "Returns the gunner of the vehicle. If the vehicle is not a vehicle, but a person, the person is returned.",
        "gunner vehicle player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "gunner vehicle",
    ],
    [
        "n",
        "gusts",
        "gusts",
        "Return the current gusts value.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "gusts",
    ],
    [
        "n",
        "halt",
        "halt",
        "Stops the program into a debugger.",
        "halt",
        "",
        "NOTHING",
        "",
        "",
        "halt",
    ],
    [
        "u",
        "handgunitems",
        "handgunItems",
        "Get array with all items assigned to a weapon.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "handgunItems unit",
    ],
    [
        "u",
        "handgunmagazine",
        "handgunMagazine",
        "Return the names of the types of currently loaded magazines in given weapon.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "handgunMagazine vehicle",
    ],
    [
        "u",
        "handgunweapon",
        "handgunWeapon",
        "Returns the name of a units's handgun (an empty string if there is none).",
        "handgunWeapon player",
        "",
        "STRING",
        "",
        "OBJECT",
        "handgunWeapon unit",
    ],
    [
        "u",
        "handshit",
        "handsHit",
        "Checks whether the soldier's hands are hit (causing inaccurate aiming).",
        "handsHit leader player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "handsHit soldier",
    ],
    [
        "u",
        "hashvalue",
        "hashValue",
        "Returns the hash of a value.",
        "hashValue player",
        "",
        "STRING",
        "",
        "SCALAR,BOOL,ARRAY,STRING,NAMESPACE,NaN,CODE,OBJECT,SIDE,GROUP,CONFIG",
        "hashValue value",
    ],
    [
        "n",
        "hasinterface",
        "hasInterface",
        "Returns true if the computer has an inteface (a real player). False for a dedicated server or for a headless client.",
        "",
        "",
        "BOOL",
        "",
        "",
        "hasInterface",
    ],
    [
        "u",
        "haspilotcamera",
        "hasPilotCamera",
        "Returns true if planerOrHeli has pilot camera",
        " bool = hasPilotCamera (vehicle player)",
        "",
        "BOOL",
        "",
        "OBJECT",
        "hasPilotCamera planerOrHeli",
    ],
    [
        "b",
        "hasweapon",
        "hasWeapon",
        "Checks whether the unit has the given weapon.",
        "player hasWeapon 'M16'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "unit hasWeapon weaponName",
    ],
    [
        "u",
        "hcallgroups",
        "hcAllGroups",
        "Returns selected groups in high command.",
        "array = hcAllGroups unit",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "hcAllGroups unit",
    ],
    [
        "b",
        "hcgroupparams",
        "hcGroupParams",
        "Returns parameters describing group in high command bar. Return value is [string,float[4]]",
        "unit hcGroupParams group",
        "",
        "ARRAY",
        "OBJECT",
        "GROUP",
        "unit hcGroupParams group",
    ],
    [
        "u",
        "hcleader",
        "hcLeader",
        "Returns group's HC commander.",
        "hcLeader group",
        "",
        "OBJECT",
        "",
        "GROUP",
        "hcLeader group",
    ],
    [
        "u",
        "hcremoveallgroups",
        "hcRemoveAllGroups",
        "Remove all groups from unit's high command bar.",
        "hcRemoveAllGroups unit",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "hcRemoveAllGroups unit",
    ],
    [
        "b",
        "hcremovegroup",
        "hcRemoveGroup",
        "Removes group from unit's high command bar.",
        "unit HCRemoveGroup group",
        "",
        "NOTHING",
        "OBJECT",
        "GROUP",
        "unit hcRemoveGroup group",
    ],
    [
        "u",
        "hcselected",
        "hcSelected",
        "Returns selected groups in high command.",
        "array = hcSelected unit",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "hcSelected unit",
    ],
    [
        "b",
        "hcselectgroup",
        "hcSelectGroup",
        "Select given group in HC bar.",
        "unit hcSelectGroup [group,true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit hcSelectGroup array",
    ],
    [
        "b",
        "hcsetgroup",
        "hcSetGroup",
        "Add group to unit's high command bar. Array parameters are group, group name and team (teammain, teamred, teamgreen, teamblue, teamyellow) . Group is the only necessary parameter.",
        "unit hcSetGroup [group,'HQ','teamred']\n or\n player hcSetGroup [group]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit hcSetGroup array",
    ],
    [
        "u",
        "hcshowbar",
        "hcShowBar",
        "Shows or hides HC bar. There must be some groups under hc command to show hc bar.",
        "hcShowBar true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "hcShowBar bool",
    ],
    [
        "n",
        "hcshownbar",
        "hcShownBar",
        "Return true if the HC bar is shown/active.",
        "",
        "",
        "BOOL",
        "",
        "",
        "hcShownBar",
    ],
    [
        "u",
        "headgear",
        "headgear",
        "Returns name of currently used headgear.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "headgear unit",
    ],
    [
        "u",
        "hidebody",
        "hideBody",
        "Hides the body of the given person.",
        "hideBody player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "hideBody person",
    ],
    [
        "b",
        "hideobject",
        "hideObject",
        "Hide object (cannot hide static objects).",
        "player hideObject true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "object hideObject hidden",
    ],
    [
        "u",
        "hideobject",
        "hideObject",
        "Hide object (cannot hide static objects).",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "hideObject object",
    ],
    [
        "b",
        "hideobjectglobal",
        "hideObjectGlobal",
        "Hide object (cannot hide static objects).",
        "player hideObject true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "object hideObjectGlobal hidden",
    ],
    [
        "u",
        "hideobjectglobal",
        "hideObjectGlobal",
        "Hide object globally (cannot hide static objects). Only from server",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "hideObjectGlobal object",
    ],
    [
        "b",
        "hideselection",
        "hideSelection",
        "Hides or enables the given selection of the object.",
        "object hideSelection ['zasleh', true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object hideSelection hide",
    ],
    [
        "u",
        "hint",
        "hint",
        "Shows a text hint. The text can contain several lines. \n is used to indicate the end of a line.",
        "hint 'Press W to move forward'",
        "",
        "NOTHING",
        "",
        "STRING,TEXT",
        "hint text",
    ],
    [
        "b",
        "hintc",
        "hintC",
        "Creates a hint dialog with the given title and text.",
        "",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "title hintC text",
    ],
    [
        "b",
        "hintc",
        "hintC",
        "Creates a hint dialog with the given title and text.",
        "",
        "",
        "NOTHING",
        "STRING",
        "TEXT",
        "title hintC text",
    ],
    [
        "b",
        "hintc",
        "hintC",
        "Creates a hint dialog with the given title and text. Texts can be plain or structured.",
        "",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "title hintC [text1, text2, ...]",
    ],
    [
        "u",
        "hintc",
        "hintC",
        "Shows a text hint. The text can contain several lines. \n is used to indicate the end of a line. This hint has to be confirmed.",
        "hintC 'Press W to move forward'",
        "",
        "NOTHING",
        "",
        "STRING",
        "hintC text",
    ],
    [
        "u",
        "hintcadet",
        "hintCadet",
        "Shows a text hint only when using cadet mode. The text can contain several lines. \n is used to indicate the end of a line.",
        "hintCadet 'Press W to move forward'",
        "",
        "NOTHING",
        "",
        "STRING,TEXT",
        "hintCadet text",
    ],
    [
        "u",
        "hintsilent",
        "hintSilent",
        "Same as <f>hint</f>, but without a sound.",
        "",
        "",
        "NOTHING",
        "",
        "STRING,TEXT",
        "hintSilent text",
    ],
    [
        "u",
        "hmd",
        "hmd",
        "Returns name of currently used HMD.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "hmd unit",
    ],
    [
        "u",
        "hostmission",
        "hostMission",
        "Host the MP mission described by config class. Should be called as a reaction to some UI action in some dialog.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "hostMission [Config,Display]",
    ],
    [
        "b",
        "htmlload",
        "htmlLoad",
        "Load HTML from file to given control. On dedicated server/client connected to a dedicated server, if allowedHTMLloadExtensions parameter is specified in the DS config file this can only succeed if a given file extension is listed in it. The list should containt at least the following extensions: txt, htm, html, xml. Note, this list may not be completely up to date",
        "_control htmlLoad 'briefing.html'",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "control htmlLoad filename",
    ],
    [
        "n",
        "hudmovementlevels",
        "HUDMovementLevels",
        "Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "HUDMovementLevels",
    ],
    [
        "n",
        "humidity",
        "humidity",
        "Return the current humidity value.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "humidity",
    ],
    [
        "u",
        "if",
        "if",
        "The first part of the if command.",
        "if (a>b) then {a=b}",
        "",
        "IF",
        "",
        "BOOL",
        "if condition",
    ],
    [
        "u",
        "image",
        "image",
        "Creates a structured text containing the given image.",
        "txt1 = image 'dataisniper.paa'",
        "",
        "TEXT",
        "",
        "STRING",
        "image filename",
    ],
    [
        "u",
        "importallgroups",
        "importAllGroups",
        "Imports all groups into the RTE.",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "importAllGroups map",
    ],
    [
        "u",
        "importance",
        "importance",
        "Return importance of given location.",
        "",
        "",
        "SCALAR",
        "",
        "LOCATION",
        "importance location",
    ],
    [
        "b",
        "in",
        "in",
        "Checks whether x is equal to any element in the array.",
        "1 in [0, 1, 2]",
        "true",
        "BOOL",
        "ANY",
        "ARRAY",
        "x in array",
    ],
    [
        "b",
        "in",
        "in",
        "Checks whether string1 is present in string2",
        "'foo' in 'bar'",
        "false",
        "BOOL",
        "STRING",
        "STRING",
        "string1 in string2",
    ],
    [
        "b",
        "in",
        "in",
        "Checks whether the soldier is mounted in the vehicle.",
        "player in jeepOne",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "soldier in vehicle",
    ],
    [
        "b",
        "in",
        "in",
        "Checks whether HashMap contains the key.",
        "1337 in _hashMap",
        "true",
        "BOOL",
        "SCALAR,BOOL,ARRAY,STRING,NAMESPACE,NaN,CODE,SIDE,CONFIG",
        "HASHMAP",
        "HashMap in key",
    ],
    [
        "b",
        "in",
        "in",
        "Check if the position is inside area defined by the location.",
        "",
        "",
        "BOOL",
        "ARRAY",
        "LOCATION",
        "position in location",
    ],
    [
        "b",
        "inarea",
        "inArea",
        "Checks whether the position is in trigger area",
        "player inArea trigger1",
        "",
        "BOOL",
        "ARRAY,OBJECT",
        "OBJECT",
        "position inArea trigger",
    ],
    [
        "b",
        "inarea",
        "inArea",
        "Checks whether the position is in marker area",
        "player inArea 'marker1'",
        "",
        "BOOL",
        "ARRAY,OBJECT",
        "STRING",
        "position inArea marker",
    ],
    [
        "b",
        "inarea",
        "inArea",
        "Checks whether the position is in area defined by array",
        "player inArea [[123,123,0], 10, 10, 0, true]",
        "",
        "BOOL",
        "ARRAY,OBJECT",
        "ARRAY",
        "position inArea array",
    ],
    [
        "b",
        "inarea",
        "inArea",
        "Checks whether the object is in location area",
        "player inArea myLocation",
        "",
        "BOOL",
        "OBJECT",
        "LOCATION",
        "object inArea location",
    ],
    [
        "b",
        "inarea",
        "inArea",
        "Checks whether the position is in location area",
        "position player inArea myLocation",
        "",
        "BOOL",
        "ARRAY",
        "LOCATION",
        "position inArea location",
    ],
    [
        "b",
        "inareaarray",
        "inAreaArray",
        "Filters given array of objects / positions by given trigger area",
        "[allVehicles] inAreaArray trigger1",
        "",
        "ARRAY",
        "ARRAY",
        "OBJECT",
        "position inAreaArray trigger",
    ],
    [
        "b",
        "inareaarray",
        "inAreaArray",
        "Filters given array of objects / positions by given marker area",
        "[allVehicles] inAreaArray 'marker1'",
        "",
        "ARRAY",
        "ARRAY",
        "STRING",
        "position inAreaArray marker",
    ],
    [
        "b",
        "inareaarray",
        "inAreaArray",
        "Filters given array of objects / positions by given trigger area",
        "[allVehicles] inAreaArray [[123,123,0], 10, 10, 0, true]",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "position inAreaArray array",
    ],
    [
        "b",
        "inareaarray",
        "inAreaArray",
        "Checks whether the position is in location area",
        "position player inArea myLocation",
        "",
        "ARRAY",
        "ARRAY",
        "LOCATION",
        "position inAreaArray location",
    ],
    [
        "u",
        "incapacitatedstate",
        "incapacitatedState",
        "Returns the incapacitated state of the given unit.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "incapacitatedState unit",
    ],
    [
        "n",
        "independent",
        "independent",
        "Pre-defined variable for the independent side.",
        "",
        "",
        "SIDE",
        "",
        "",
        "independent",
    ],
    [
        "b",
        "inflame",
        "inflame",
        "Controls fireplace buring. Set to true to inflame the fireplace.",
        "fireplaceOne inflame true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "fireplace inflame burn",
    ],
    [
        "u",
        "inflamed",
        "inflamed",
        "Check if fireplace is inflamed (burning).",
        "inflamed fireplaceOne",
        "",
        "BOOL",
        "",
        "OBJECT",
        "inflamed fireplace",
    ],
    [
        "u",
        "infopanel",
        "infoPanel",
        "Returns component (like GPS mini-map) on a given info panel. 'left' or 'right' constants can be used as panel names. ",
        "",
        "",
        "ARRAY",
        "",
        "STRING",
        "infoPanel panel name",
    ],
    [
        "b",
        "infopanelcomponentenabled",
        "infoPanelComponentEnabled",
        "Returns availability state of component to given object's info panel. 'left' or 'right' constants can be used as panel names.",
        "",
        "",
        "BOOL",
        "ARRAY,OBJECT",
        "ARRAY",
        "object or [object, turret path] infoPanelComponentEnabled [panel name, component or sensor name]",
    ],
    [
        "b",
        "infopanelcomponents",
        "infoPanelComponents",
        "Returns list of panels in given vehicle.",
        "",
        "",
        "ARRAY",
        "ARRAY,OBJECT",
        "STRING",
        "object or [object, turret path] infoPanelComponents panel name",
    ],
    [
        "u",
        "infopanels",
        "infoPanels",
        "Returns array all info panels configured for given object or object and turret path.",
        " panels = infoPanels [vehicle player,[-1]];",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "infoPanels object or [object, turretPath]",
    ],
    [
        "u",
        "ingameuiseteventhandler",
        "inGameUISetEventHandler",
        "Sets given event handler of in-game UI.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "inGameUISetEventHandler [handler name, function]",
    ],
    [
        "u",
        "inheritsfrom",
        "inheritsFrom",
        "Returns base entry of config entry.",
        "_base = inheritsFrom (configFile >> 'CfgVehicles' >> 'Car')",
        "",
        "CONFIG",
        "",
        "CONFIG",
        "inheritsFrom config",
    ],
    [
        "n",
        "initambientlife",
        "initAmbientLife",
        "Initialize the ambient life.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "initAmbientLife",
    ],
    [
        "b",
        "inpolygon",
        "inPolygon",
        "Calculates wheater position is inside given polygon.",
        "[100,100,0] inPolygon [[0,0,0], [1000,1000,0], [1000,0,0]]",
        "",
        "BOOL",
        "ARRAY",
        "ARRAY",
        "position inPolygon [&lt;polygon_vectors&gt;]",
    ],
    [
        "u",
        "inputaction",
        "inputAction",
        "Return the state of input devices mapped to given input action (see CfgDefaultKeysMapping for action names).",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "inputAction name",
    ],
    [
        "u",
        "inputcontroller",
        "inputController",
        "Returns the state of the given controller input",
        "_LeftThumbStickLeft = inputController 20;",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "inputController button",
    ],
    [
        "u",
        "inputmouse",
        "inputMouse",
        "Returns the state of the given mouse button: 0-released, 1-click, 2-click+hold, 3-dblclick, 4-dblclick+hold",
        "_rmb = inputMouse 1;",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "inputMouse button",
    ],
    [
        "u",
        "inputmouse",
        "inputMouse",
        "Returns the result of the given combo involving mouse interaction",
        "_rmb = inputMouse '65665';",
        "",
        "BOOL",
        "",
        "STRING",
        "inputMouse combo",
    ],
    [
        "b",
        "inrangeofartillery",
        "inRangeOfArtillery",
        "Returns true if all given units are able to fire at given position with given magazineType.",
        "",
        "",
        "BOOL",
        "ARRAY",
        "ARRAY",
        "pos inRangeOfArtillery [[unit1, unit2, ...], magazineType]",
    ],
    [
        "b",
        "insert",
        "insert",
        "Inserts given values into array at given index.",
        "",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "array insert [index, [newValue1, newValue2,...]]",
    ],
    [
        "b",
        "insert",
        "insert",
        "Inserts given string into string at given index.",
        "",
        "",
        "STRING",
        "STRING",
        "ARRAY",
        "array insert [index, newString]",
    ],
    [
        "b",
        "insert",
        "insert",
        "Inserts the elements from a [key,value] array into the HashMap",
        "_hashMap insert [[1337,player],[1338,miller]]",
        "",
        "NOTHING",
        "HASHMAP",
        "ARRAY",
        "HashMap insert [[key,value],[key,value],...]",
    ],
    [
        "b",
        "inserteditorobject",
        "insertEditorObject",
        "Insert an object to the editor and assign arguments. Create script is not called. Returns the ID of the new EditorObject. Subtype class is optional.",
        "",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "map insertEditorObject [type, value, [name1, value1, ...], subtype class]",
    ],
    [
        "b",
        "intersect",
        "intersect",
        "Find named selection in object which is in specified lod intersected by given section of a line.",
        "[tank, 'VIEW' intersect [[1500, 1500, 2], [1550, 1500, 2]]",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "[object, lod name] intersect [begin, end]",
    ],
    [
        "n",
        "is3den",
        "is3DEN",
        "Returns true while in 3DEN",
        "",
        "",
        "BOOL",
        "",
        "",
        "is3DEN",
    ],
    [
        "n",
        "is3denmultiplayer",
        "is3DENMultiplayer",
        "Returns true if 3DEN is running in MP mode",
        "",
        "",
        "BOOL",
        "",
        "",
        "is3DENMultiplayer",
    ],
    [
        "n",
        "is3denpreview",
        "is3DENPreview",
        "Returns true while in 3DEN Preview",
        "",
        "",
        "BOOL",
        "",
        "",
        "is3DENPreview",
    ],
    [
        "u",
        "isabletobreathe",
        "isAbleToBreathe",
        "Return whether the unit is diving.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isAbleToBreathe unit",
    ],
    [
        "n",
        "isactionmenuvisible",
        "isActionMenuVisible",
        "Returns true if action menu is visible.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isActionMenuVisible",
    ],
    [
        "u",
        "isagent",
        "isAgent",
        "Check if team member is an agent.",
        "",
        "",
        "BOOL",
        "",
        "TEAM_MEMBER",
        "isAgent teamMember",
    ],
    [
        "u",
        "isaimprecisionenabled",
        "isAimPrecisionEnabled",
        "Returns true if procedural aiming precision affects weapon sway",
        "isAimPrecisionEnabled player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isAimPrecisionEnabled player",
    ],
    [
        "u",
        "isallowedcrewinimmobile",
        "isAllowedCrewInImmobile",
        "Returns whether or not units can be in vehicle with broken tracks/wheels",
        "isAllowedCrewInImmobile _tank;",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isAllowedCrewInImmobile vehicle",
    ],
    [
        "u",
        "isarray",
        "isArray",
        "Check if config entry represents array.",
        "_ok = isArray (configFile >> 'CfgVehicles')",
        "false",
        "BOOL",
        "",
        "CONFIG",
        "isArray config",
    ],
    [
        "u",
        "isautohoveron",
        "isAutoHoverOn",
        "Returns true if vehicle has enabled auto hover",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isAutoHoverOn vehicle",
    ],
    [
        "u",
        "isautonomous",
        "isAutonomous",
        "Return true if UAV is in autonomous mode.",
        "uavAuto = isAutonomous uav",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isAutonomous Uav",
    ],
    [
        "u",
        "isautostartupenabledrtd",
        "isAutoStartUpEnabledRTD",
        "Returns true if automatic start up action is enabled.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "isAutoStartUpEnabledRTD RTD_helicopter",
    ],
    [
        "n",
        "isautotest",
        "isAutotest",
        "Returns true if game was started with autotest parameter",
        "isAutotest",
        "",
        "BOOL",
        "",
        "",
        "isAutotest",
    ],
    [
        "u",
        "isautotrimonrtd",
        "isAutoTrimOnRTD",
        "Returns true if autotrim is enabled.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isAutoTrimOnRTD RTD_helicopter",
    ],
    [
        "u",
        "isawake",
        "isAwake",
        "Returns false is PhysX object is sleeping, or a body is in ragdoll simulation",
        "isAwake car1;",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isAwake entity",
    ],
    [
        "u",
        "isbleeding",
        "isBleeding",
        "Return whether the unit is bleeding.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isBleeding unit",
    ],
    [
        "u",
        "isburning",
        "isBurning",
        "Return whether the unit is burning.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isBurning unit",
    ],
    [
        "u",
        "isclass",
        "isClass",
        "Check if config entry represents config class.",
        "_ok = isClass (configFile >> 'CfgVehicles')",
        "true",
        "BOOL",
        "",
        "CONFIG",
        "isClass config",
    ],
    [
        "u",
        "iscollisionlighton",
        "isCollisionLightOn",
        "Checks whether the collision light is on.(non-vehicle param returns false)",
        "on = isLightOn vehicle player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isCollisionLightOn vehicle",
    ],
    [
        "u",
        "iscopilotenabled",
        "isCopilotEnabled",
        "Returns true if copilots actions are enabled.",
        "enabled = isCopilotEnabled (vehicle player)",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isCopilotEnabled vehicle",
    ],
    [
        "u",
        "isdamageallowed",
        "isDamageAllowed",
        "Returns true if object damage is allowed",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isDamageAllowed obj",
    ],
    [
        "n",
        "isdedicated",
        "isDedicated",
        "Returns true for dedicated server.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isDedicated",
    ],
    [
        "u",
        "isdlcavailable",
        "isDLCAvailable",
        "Returns true if the DLC is marked as available.",
        "",
        "123896",
        "BOOL",
        "",
        "SCALAR",
        "isDLCAvailable appId",
    ],
    [
        "u",
        "isengineon",
        "isEngineOn",
        "Checks whether the engine is on. ",
        "on = isEngineOn vehicle player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isEngineOn vehicle",
    ],
    [
        "b",
        "isequalto",
        "isEqualTo",
        "Performs strict comparison between var1 and var2 and returns true if equal otherwise false.",
        "_arr1 = [1,2,[3]]\n_arr2 = [1,2,[3]]\nif (_arr1 isEqualTo _arr2) then {hint 'arrays match!'};",
        "",
        "BOOL",
        "ANY",
        "ANY",
        "var1 isEqualTo var2",
    ],
    [
        "b",
        "isequaltype",
        "isEqualType",
        "Checks if type of provided value matches the expected type",
        "_var isEqualType []",
        "",
        "BOOL",
        "ANY",
        "ANY",
        "anything isEqualType anything",
    ],
    [
        "b",
        "isequaltypeall",
        "isEqualTypeAll",
        "Checks if types of all elements of provided array match specific type",
        "[1,2,3,4,5] isEqualTypeAll 0",
        "",
        "BOOL",
        "ANY",
        "ANY",
        "array isEqualTypeAll anything",
    ],
    [
        "b",
        "isequaltypeany",
        "isEqualTypeAny",
        "Checks if given value matches any of the types in test array",
        "_pos isEqualTypeAny [[],objNull]",
        "",
        "BOOL",
        "ANY",
        "ARRAY",
        "anything isEqualTypeAny array",
    ],
    [
        "b",
        "isequaltypearray",
        "isEqualTypeArray",
        "Checks if types of types of all elements of provided array match types of another array exactly",
        "[1,true,'three'] isEqualTypeArray [0,true,0,'']",
        "",
        "BOOL",
        "ANY",
        "ARRAY",
        "array isEqualTypeArray array",
    ],
    [
        "b",
        "isequaltypeparams",
        "isEqualTypeParams",
        "Checks if the types of provided params match the expected types",
        "[1,player,'ok'] isEqualTypeParams [0,objNull,'']",
        "",
        "BOOL",
        "ANY",
        "ARRAY",
        "array isEqualTypeParams array",
    ],
    [
        "n",
        "isfilepatchingenabled",
        "isFilePatchingEnabled",
        "Returns true if file patching is enabled on the machine. Returns false otherwise",
        "",
        "",
        "BOOL",
        "",
        "",
        "isFilePatchingEnabled",
    ],
    [
        "u",
        "isfinal",
        "isFinal",
        "Checks whether or not the passed variable with code could be overridden.",
        "isFinal _myCode",
        "",
        "BOOL",
        "",
        "STRING,CODE",
        "isFinal var",
    ],
    [
        "b",
        "isflashlighton",
        "isFlashlightOn",
        "Return if there is a linked and enabled flashlight on a given weapon.",
        "player IsFlashlightOn (currentWeapon player)",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "unit isFlashlightOn weapon",
    ],
    [
        "b",
        "isflatempty",
        "isFlatEmpty",
        "Chek if given area is flat and emty.",
        "newposition = position isFlatEmpty(10, 0, 0.5, 5, 0, false, player)",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "position isFlatEmpty [float minDistance,float precizePos,float maxGradient,float gradientRadius,float onWater,bool onShore,object skipobj]",
    ],
    [
        "u",
        "isforcedwalk",
        "isForcedWalk",
        "Returns true if player is forced to walk",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isForcedWalk player",
    ],
    [
        "u",
        "isformationleader",
        "isFormationLeader",
        "Returns true if the specified person is subgroup leader.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isFormationLeader person",
    ],
    [
        "n",
        "isgamefocused",
        "isGameFocused",
        "Returns true if the game window has focus.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isGameFocused",
    ],
    [
        "n",
        "isgamepaused",
        "isGamePaused",
        "Returns true if game simulation is paused.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isGamePaused",
    ],
    [
        "u",
        "isgroupdeletedwhenempty",
        "isGroupDeletedWhenEmpty",
        "Returns whether given group is garbage collected or not",
        "isGroupDeletedWhenEmpty (player group)",
        "",
        "BOOL",
        "",
        "GROUP",
        "isGroupDeletedWhenEmpty &lt;group&gt;",
    ],
    [
        "u",
        "ishidden",
        "isHidden",
        "Return whether the person  is hidden (reached the hiding position).",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isHidden person",
    ],
    [
        "u",
        "isinremainscollector",
        "isInRemainsCollector",
        "Returns true if object will be managed by the unitRemove manager",
        "isInRemainsCollector player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isInRemainsCollector object",
    ],
    [
        "n",
        "isinstructorfigureenabled",
        "isInstructorFigureEnabled",
        "True if instructor figure is enabled in Game Options.",
        "isInstructorFigureEnabled",
        "true or false",
        "BOOL",
        "",
        "",
        "isInstructorFigureEnabled",
    ],
    [
        "b",
        "isirlaseron",
        "isIRLaserOn",
        "Returns if there is a linked and enabled IR on a given weapon.",
        "player IsIRLaserOn (currentWeapon player)",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "unit isIRLaserOn weapon",
    ],
    [
        "u",
        "iskeyactive",
        "isKeyActive",
        "Checks whether the given key is active in the current user profile.",
        "ok = isKeyActive 'M04'",
        "",
        "BOOL",
        "",
        "STRING",
        "isKeyActive keyName",
    ],
    [
        "b",
        "iskindof",
        "isKindOf",
        "Checks whether the type typeName1 is inherited from the type typeName1.",
        "'Tank' isKindOf 'Land'",
        "true",
        "BOOL",
        "STRING",
        "STRING",
        "typeName1 isKindOf typeName2",
    ],
    [
        "b",
        "iskindof",
        "isKindOf",
        "Checks whether the type typeName1 is inherited from the type typeName1.",
        "'Tank' isKindOf ['Land', configFile >> 'CfgVehicles'];",
        "true",
        "BOOL",
        "STRING",
        "ARRAY",
        "typeName1 isKindOf [typeName2, config]",
    ],
    [
        "b",
        "iskindof",
        "isKindOf",
        "Checks whether the object is of the given type.",
        "vehicle player isKindOf 'Tank'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "object isKindOf typeName",
    ],
    [
        "u",
        "islaseron",
        "isLaserOn",
        "Returns true if vehicle have laser turned on.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isLaserOn vehicle",
    ],
    [
        "u",
        "islighton",
        "isLightOn",
        "Checks whether the light is on.(non-vehicle param returns false)",
        "on = isLightOn vehicle player",
        "",
        "BOOL",
        "",
        "ARRAY,OBJECT",
        "isLightOn vehicle",
    ],
    [
        "u",
        "islocalized",
        "isLocalized",
        "Checks whether given string name is localized.",
        "isLocalized 'STR_DN_SNAKE'",
        "",
        "BOOL",
        "",
        "STRING",
        "isLocalized stringName",
    ],
    [
        "u",
        "ismanualfire",
        "isManualFire",
        "Returns true if manual fire is on.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isManualFire vehicle",
    ],
    [
        "u",
        "ismarkedforcollection",
        "isMarkedForCollection",
        "Checks whether the object is marked for weapons collection.",
        "marked = isMarkedForCollection truck",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isMarkedForCollection object",
    ],
    [
        "n",
        "ismissionprofilenamespaceloaded",
        "isMissionProfileNamespaceLoaded",
        "Returns true if missionProfileNamespace file exists and is loaded",
        "",
        "",
        "BOOL",
        "",
        "",
        "isMissionProfileNamespaceLoaded",
    ],
    [
        "n",
        "ismultiplayer",
        "isMultiplayer",
        "Returns true if multiPlayer.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isMultiplayer",
    ],
    [
        "n",
        "ismultiplayersolo",
        "isMultiplayerSolo",
        "Returns true when playing the game in solo multiplayer.",
        "_return = isMultiplayerSolo",
        "",
        "BOOL",
        "",
        "",
        "isMultiplayerSolo",
    ],
    [
        "u",
        "isnil",
        "isNil",
        "Tests whether the variable is null. The function returns true if the variable is null and false if it's not.",
        "if (isNil('_pokus')) then {_pokus=0;}",
        "",
        "BOOL",
        "",
        "STRING,CODE",
        "isNil variable",
    ],
    [
        "b",
        "isnotequalto",
        "isNotEqualTo",
        "Performs strict comparison between var1 and var2 and returns true if not equal otherwise false.",
        "_arr1 = [1,2,[3]]\n_arr2 = [1,2,[4]]\nif (_arr1 isNotEqualTo _arr2) then {hint 'arrays are different!'};",
        "",
        "BOOL",
        "ANY",
        "ANY",
        "var1 isNotEqualTo var2",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to objNull\nNote: a==ObjNull does not work, because objNull is not equal to anything, even to itself.",
        "isNull objNull",
        "true",
        "BOOL",
        "",
        "OBJECT",
        "isNull obj",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to grpNull\nNote: a==GrpNull does not work, because grpNull is not equal to anything, even to itself.",
        "isNull group player",
        "false",
        "BOOL",
        "",
        "GROUP",
        "isNull grp",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to scriptNull\nNote: script == scriptNull does not work, because scriptNull is not equal to anything, even to itself.",
        "isNull scriptNull",
        "true",
        "BOOL",
        "",
        "SCRIPT",
        "isNull script",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to configNull.",
        "isNull configNull",
        "true",
        "BOOL",
        "",
        "CONFIG",
        "isNull config",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to displayNull\nNote: a==displayNull does not work, because displayNull is not equal to anything, even to itself.",
        "isNull displayNull",
        "true",
        "BOOL",
        "",
        "DISPLAY",
        "isNull display",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to controlNull\nNote: a==controlNull does not work, because controlNull is not equal to anything, even to itself.",
        "isNull controlNull",
        "true",
        "BOOL",
        "",
        "CONTROL",
        "isNull control",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks if team member is null.",
        "",
        "",
        "BOOL",
        "",
        "TEAM_MEMBER",
        "isNull teamMember",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to objNetNull\nNote: a==ObjNetNull does not work, because objNetNull is not equal to anything, even to itself.",
        "isNull objNetNull",
        "true",
        "BOOL",
        "",
        "NetObject",
        "isNull NetObject",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to taskNull\nNote: a==TaskNull does not work, because taskNull is not equal to anything, even to itself.",
        "isNull taskNull",
        "true",
        "BOOL",
        "",
        "TASK",
        "isNull task",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Checks whether the value is equal to diaryRecordNull\nNote: a==diaryRecordNull does not work, because diaryRecordNull is not equal to anything, even to itself.",
        "isNull diaryRecordNull",
        "true",
        "BOOL",
        "",
        "DIARY_RECORD",
        "isNull diaryRecord",
    ],
    [
        "u",
        "isnull",
        "isNull",
        "Check whether the value is null.",
        "",
        "",
        "BOOL",
        "",
        "LOCATION",
        "isNull location",
    ],
    [
        "u",
        "isnumber",
        "isNumber",
        "Check if config entry represents number.",
        "_ok = isNumber (configFile >> 'CfgVehicles')",
        "false",
        "BOOL",
        "",
        "CONFIG",
        "isNumber config",
    ],
    [
        "u",
        "isobjecthidden",
        "isObjectHidden",
        "Checks visibility of an object.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isObjectHidden object",
    ],
    [
        "u",
        "isobjectrtd",
        "isObjectRTD",
        "Returns true if RTD model is loaded.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isObjectRTD helicopter",
    ],
    [
        "u",
        "isonroad",
        "isOnRoad",
        "Check whether given position is on road.",
        "",
        "",
        "BOOL",
        "",
        "ARRAY,OBJECT",
        "isOnRoad position or object",
    ],
    [
        "n",
        "ispipenabled",
        "isPiPEnabled",
        "Returns true if PiP is enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isPiPEnabled",
    ],
    [
        "u",
        "isplayer",
        "isPlayer",
        "Check if given person is the player.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isPlayer person",
    ],
    [
        "u",
        "isplayer",
        "isPlayer",
        "Check if given person or body is/was the player.",
        "",
        "",
        "BOOL",
        "",
        "ARRAY",
        "isPlayer [person]",
    ],
    [
        "u",
        "isrealtime",
        "isRealTime",
        "Returns true if the mission editor is operating in real time mode.",
        "_isRealTime = isRealTime _map",
        "",
        "BOOL",
        "",
        "CONTROL",
        "isRealTime map",
    ],
    [
        "n",
        "isremoteexecuted",
        "isRemoteExecuted",
        "Returns true if code was remotely executed via remoteExec.",
        "_remoteExecuted = isRemoteExecuted;",
        "",
        "BOOL",
        "",
        "",
        "isRemoteExecuted",
    ],
    [
        "n",
        "isremoteexecutedjip",
        "isRemoteExecutedJIP",
        "Returns true if JIP code was remotely executed via remoteExec.",
        "_remoteExecutedJIP = isRemoteExecutedJIP;",
        "",
        "BOOL",
        "",
        "",
        "isRemoteExecutedJIP",
    ],
    [
        "n",
        "issaving",
        "isSaving",
        "Returns the current game autosave request",
        "isSaving",
        "",
        "BOOL",
        "",
        "",
        "isSaving",
    ],
    [
        "b",
        "issensortargetconfirmed",
        "isSensorTargetConfirmed",
        "Returns if given unit is confirmed enemy target for given side",
        "bis_enemyUnit setConfirmedEnemy [WEST, true]",
        "",
        "BOOL",
        "OBJECT",
        "SIDE",
        "unit isSensorTargetConfirmed side",
    ],
    [
        "n",
        "isserver",
        "isServer",
        "Returns true if the computer is the server.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isServer",
    ],
    [
        "u",
        "isshowing3dicons",
        "isShowing3DIcons",
        "Returns true if the editor is set to draw 3D icons.",
        "",
        "",
        "BOOL",
        "",
        "CONTROL",
        "isShowing3DIcons map",
    ],
    [
        "u",
        "issimpleobject",
        "isSimpleObject",
        "Check weather given entity is simple object or not",
        "isSimpleObject myObj",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isSimpleObject &lt;entity&gt;",
    ],
    [
        "u",
        "issprintallowed",
        "isSprintAllowed",
        "Returns true if player is allowed to sprint",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isSprintAllowed player",
    ],
    [
        "u",
        "isstaminaenabled",
        "isStaminaEnabled",
        "Check if stamina depletion is enabled",
        "isStaminaEnabled player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isStaminaEnabled unit",
    ],
    [
        "n",
        "issteammission",
        "isSteamMission",
        "Returns true if mission is started from the steam.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isSteamMission",
    ],
    [
        "n",
        "issteamoverlayenabled",
        "isSteamOverlayEnabled",
        "Returns true if Steam overlay is enabled, otherwise false",
        "",
        "",
        "BOOL",
        "",
        "",
        "isSteamOverlayEnabled",
    ],
    [
        "n",
        "isstreamfriendlyuienabled",
        "isStreamFriendlyUIEnabled",
        "True if stream friendly UI is enabled in Game Options.",
        "isStreamFriendlyUIEnabled",
        "true or false",
        "BOOL",
        "",
        "",
        "isStreamFriendlyUIEnabled",
    ],
    [
        "n",
        "isstressdamageenabled",
        "isStressDamageEnabled",
        "Returns true if stress damage is enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "isStressDamageEnabled",
    ],
    [
        "u",
        "istext",
        "isText",
        "Check if config entry represents text.",
        "_ok = isText (configFile >> 'CfgVehicles')",
        "false",
        "BOOL",
        "",
        "CONFIG",
        "isText config",
    ],
    [
        "u",
        "istouchingground",
        "isTouchingGround",
        "Returns true if object is touching the ground.",
        "isTouchingGround vehicle",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isTouchingGround object",
    ],
    [
        "u",
        "isturnedout",
        "isTurnedOut",
        "Returns true if the given unit is turned out. Default is false.",
        "_isTurnedOut = isTurnedOut soldier",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isTurnedOut unit",
    ],
    [
        "n",
        "istuthintsenabled",
        "isTutHintsEnabled",
        "True if tutorial hints are enabled in Game Options.",
        "isTutHintsEnabled",
        "true or false",
        "BOOL",
        "",
        "",
        "isTutHintsEnabled",
    ],
    [
        "b",
        "isuavconnectable",
        "isUAVConnectable",
        "return true, if UAV is connectable by AV terminal(s)",
        "connetable = unit isUAVConnectable [uav, true]",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "object isUAVConnectable [uav, checkAllItems]",
    ],
    [
        "u",
        "isuavconnected",
        "isUAVConnected",
        "Returns true if UAV is connected to some terminal.",
        "isUAVConnected cursorTarget",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isUAVConnected Uav",
    ],
    [
        "n",
        "isuicontext",
        "isUIContext",
        "Return true when function is called from the UI",
        "",
        "",
        "BOOL",
        "",
        "",
        "isUIContext",
    ],
    [
        "b",
        "isuniformallowed",
        "isUniformAllowed",
        "Check whether given uniform can be dressed by target soldier.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "unit isUniformAllowed type",
    ],
    [
        "u",
        "isvehiclecargo",
        "isVehicleCargo",
        "Return transporting vehicle if vehicle loaded in one.",
        "isVehicleCargo veh",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "isVehicleCargo vehicle",
    ],
    [
        "u",
        "isvehicleradaron",
        "isVehicleRadarOn",
        "Returns true if vehicle has active sensors on.",
        "value = isVehicleRadarOn vehicle",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isVehicleRadarOn vehicle",
    ],
    [
        "b",
        "isvehiclesensorenabled",
        "isVehicleSensorEnabled",
        "returns class name (to identify list based on component name) and info if given sensor is enabled",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "vehicle isVehicleSensorEnabled component or sensor name",
    ],
    [
        "u",
        "iswalking",
        "isWalking",
        "Returns true walk is toggled.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isWalking soldier",
    ],
    [
        "u",
        "isweapondeployed",
        "isWeaponDeployed",
        "Returns true if weapon is currently deployed",
        "isWeaponDeployed player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isWeaponDeployed unit",
    ],
    [
        "u",
        "isweapondeployed",
        "isWeaponDeployed",
        "Returns true if weapon is deployed. Optional surface select: true - check if deployed on ground, false - check if deployed on object",
        "isWeaponDeployed [player, true]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "isWeaponDeployed [unit, (surfaceSelect)]",
    ],
    [
        "u",
        "isweaponrested",
        "isWeaponRested",
        "Returns true if weapon is currently rested",
        "isWeaponRested player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "isWeaponRested unit",
    ],
    [
        "u",
        "itemcargo",
        "itemCargo",
        "Get array with items from ammo box (or any general weapon holder container). ",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "itemCargo box",
    ],
    [
        "u",
        "items",
        "items",
        "Returns only items that are not magazines/explosives/grenades. Includes also items that are linked on unit (i.e. includes assignedItems array)",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "items unit",
    ],
    [
        "u",
        "itemswithmagazines",
        "itemsWithMagazines",
        "Get array with all inventory items.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "itemsWithMagazines unit",
    ],
    [
        "b",
        "join",
        "join",
        "Joins all units in the array to the given group\nNote: the total number of group members cannot exceed 12\nNote: This function is unsupported in MP in version 1.33 and before.",
        "[unitOne, unitTwo] join player",
        "",
        "NOTHING",
        "ARRAY",
        "OBJECT,GROUP",
        "unitArray join group",
    ],
    [
        "b",
        "joinas",
        "joinAs",
        "Joins the unit to the given group, if position id is available, this one is used.",
        "player joinAs [_group, 4]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit joinAs [group, id]",
    ],
    [
        "b",
        "joinassilent",
        "joinAsSilent",
        "Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.",
        "player joinAsSilent [_group, 4]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit joinAsSilent [group, id]",
    ],
    [
        "b",
        "joinsilent",
        "joinSilent",
        "Joins all units in the array to the given group. Avoid any radio communication related to joining.",
        "[unitOne, unitTwo] joinSilent player",
        "",
        "NOTHING",
        "ARRAY",
        "OBJECT,GROUP",
        "unitArray joinSilent group",
    ],
    [
        "b",
        "joinstring",
        "joinString",
        "Joins array into string with given delimiter",
        "[1,2,3] joinString ':'",
        "",
        "STRING",
        "ARRAY",
        "STRING",
        "array joinString string",
    ],
    [
        "b",
        "kbadddatabase",
        "kbAddDatabase",
        "Register knowledge base database to given person.",
        "_unit kbAddDatabase 'chat.txt'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "person kbAddDatabase filename",
    ],
    [
        "b",
        "kbadddatabasetargets",
        "kbAddDatabaseTargets",
        "Register target list knowledge base database to given person.",
        "_unit kbAddDatabase 'chat.txt'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "person kbAddDatabaseTargets filename",
    ],
    [
        "b",
        "kbaddtopic",
        "kbAddTopic",
        "Register conversation topic to given person.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person kbAddTopic [name, filename(, task type(, player event handler))]",
    ],
    [
        "b",
        "kbhastopic",
        "kbHasTopic",
        "Check if conversation topic was registered to given person.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "person kbHasTopic name",
    ],
    [
        "b",
        "kbreact",
        "kbReact",
        "Pass a non-verbal communication to the receiver.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person kbReact [receiver, topic, sentence id, [argument name, argument value, argument text, argument speech], ...]",
    ],
    [
        "b",
        "kbremovetopic",
        "kbRemoveTopic",
        "Unregister conversation topic from given person.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person kbRemoveTopic name",
    ],
    [
        "b",
        "kbtell",
        "kbTell",
        "Make the person tell to the receiver the sentence. Last parameter can be false/true to force radio channel selection, or number 1..10 to force possible CustomChannel, or radio channel name 'GLOBAL','SIDE','GROUP','VEHICLE','DIRECT','COMMAND'.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person kbTell [receiver, topic, sentence id, [argument name, argument value, argument text, argument speech], ...]",
    ],
    [
        "b",
        "kbwassaid",
        "kbWasSaid",
        "Check if given item was said by person to someone.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "person kbWasSaid [receiver, topic, sentence id, max. age]",
    ],
    [
        "u",
        "keyimage",
        "keyImage",
        "Returns a structured text, containing an image or  name (if no image is found) of the button (on the keyboard, mouse or joystick) with the given code.",
        "name = keyImage 28",
        "'Enter'",
        "TEXT",
        "",
        "SCALAR,STRING",
        "keyImage dikCode",
    ],
    [
        "u",
        "keyname",
        "keyName",
        "Returns the name of a button (on the keyboard, mouse or joystick) with the given code.",
        "name = keyName 28",
        "'Enter'",
        "STRING",
        "",
        "SCALAR,STRING",
        "keyName dikCode",
    ],
    [
        "u",
        "keys",
        "keys",
        "Returns all keys stored in the HashMap.",
        "keys _hashMap",
        "[1337, 'string', true, {hint 'hello';}]",
        "ARRAY",
        "",
        "HASHMAP",
        "keys HashMap",
    ],
    [
        "b",
        "knowsabout",
        "knowsAbout",
        "Checks whether the unit knows about the target (and how much). If the unit is a vehicle, the vehicle commander is considered instead.",
        "soldierOne knowsAbout jeepOne",
        "",
        "SCALAR",
        "OBJECT,GROUP",
        "OBJECT",
        "unit knowsAbout target",
    ],
    [
        "b",
        "knowsabout",
        "knowsAbout",
        "Checks whether the side knows about the target (and how much).",
        "east knowsAbout jeepOne",
        "",
        "SCALAR",
        "SIDE",
        "OBJECT",
        "side knowsAbout target",
    ],
    [
        "b",
        "land",
        "land",
        "Forces a helicopter landing. The landing mode may be 'LAND' (a complete stop), 'GET IN' (hovering very low for another unit to get in), 'GET OUT' (hovering low for another unit to get out) or 'NONE' (cancel landing).",
        "cobraOne land 'LAND'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "helicopter land mode",
    ],
    [
        "b",
        "landat",
        "landAt",
        "Order AI airplane to land at given airport",
        "plane landAt 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR,OBJECT",
        "airplane landAt airportId",
    ],
    [
        "u",
        "landresult",
        "landResult",
        "Return the result of helicopter landing position searching (performed after land command). The value can be 'Found' (position found), 'NotFound' (position not found), 'NotReady' (position searching is still in progress) or empty string when wrong argument given.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "landResult helicopter",
    ],
    [
        "n",
        "language",
        "language",
        "Returns current game language.",
        "",
        "",
        "STRING",
        "",
        "",
        "language",
    ],
    [
        "u",
        "lasertarget",
        "laserTarget",
        "Returns target created by gunner in given vehicle.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "laserTarget vehicle",
    ],
    [
        "b",
        "lbadd",
        "lbAdd",
        "Adds an item with the given text to the given listbox or combobox. It returns the index of the newly added item.",
        "_index = _control lbAdd 'First item'",
        "",
        "SCALAR",
        "CONTROL",
        "STRING",
        "control lbAdd text",
    ],
    [
        "u",
        "lbadd",
        "lbAdd",
        "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog. It returns the index of the newly added item.",
        "_index = lbAdd [101, 'First item']",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "lbAdd [idc, text]",
    ],
    [
        "u",
        "lbclear",
        "lbClear",
        "Clears all items in the given listbox or combobox.",
        "lbClear _control",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "lbClear control",
    ],
    [
        "u",
        "lbclear",
        "lbClear",
        "Clears all items in the listbox or combobox with id idc of the topmost user dialog.",
        "lbClear 101",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "lbClear idc",
    ],
    [
        "b",
        "lbcolor",
        "lbColor",
        "Returns the text color of the item with the given index of the given listbox or combobox.",
        "_color = _control lbColor 0",
        "",
        "ARRAY",
        "CONTROL",
        "SCALAR",
        "control lbColor index",
    ],
    [
        "u",
        "lbcolor",
        "lbColor",
        "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog. The color is returned in format <ar>Color</ar>.",
        "_color = lbColor [101, 0]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "lbColor [idc, index]",
    ],
    [
        "b",
        "lbcolorright",
        "lbColorRight",
        "Returns the text color of the secondary text (right aligned) of the item with the given index of the given listbox or combobox.",
        "_color = _control lbColorRight 0",
        "",
        "ARRAY",
        "CONTROL",
        "SCALAR",
        "control lbColorRight index",
    ],
    [
        "u",
        "lbcolorright",
        "lbColorRight",
        "Returns the text color of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog. The color is returned in format <ar>Color</ar>.",
        "_color = lbColorRight [101, 0]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "lbColorRight [idc, index]",
    ],
    [
        "u",
        "lbcursel",
        "lbCurSel",
        "Returns the index of the selected item of the given listbox or combobox.",
        "_index = lbCurSel _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "lbCurSel control",
    ],
    [
        "u",
        "lbcursel",
        "lbCurSel",
        "Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog.",
        "_index = lbCurSel 101",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "lbCurSel idc",
    ],
    [
        "b",
        "lbdata",
        "lbData",
        "Returns the additional text (invisible) in an item with the given index of the given listbox or combobox.",
        "_data = _control lbData 0",
        "",
        "STRING",
        "CONTROL",
        "SCALAR",
        "control lbData index",
    ],
    [
        "u",
        "lbdata",
        "lbData",
        "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "_data = lbData [101, 0]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lbData [idc, index]",
    ],
    [
        "b",
        "lbdelete",
        "lbDelete",
        "Removes the item with the given index from the given listbox or combobox.",
        "_control lbDelete 0",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control lbDelete index",
    ],
    [
        "u",
        "lbdelete",
        "lbDelete",
        "Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog.",
        "lbDelete [101, 0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbDelete [idc, index]",
    ],
    [
        "b",
        "lbisselected",
        "lbIsSelected",
        "Check whether given row of the given listbox is selected.",
        "_selected = _control lbIsSelected 0",
        "",
        "BOOL",
        "CONTROL",
        "SCALAR",
        "control lbIsSelected index",
    ],
    [
        "b",
        "lbpicture",
        "lbPicture",
        "Returns the picture name of the item with the given index of the given listbox or combobox.",
        "_picture = _control lbPicture 0",
        "",
        "STRING",
        "CONTROL",
        "SCALAR",
        "control lbPicture index",
    ],
    [
        "u",
        "lbpicture",
        "lbPicture",
        "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "_picture = lbPicture [101, 0]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lbPicture [idc, index]",
    ],
    [
        "b",
        "lbpictureright",
        "lbPictureRight",
        "Returns the second (right aligned) picture name of the item with the given index of the given listbox or combobox.",
        "_picture = _control lbPictureRight 0",
        "",
        "STRING",
        "CONTROL",
        "SCALAR",
        "control lbPictureRight index",
    ],
    [
        "u",
        "lbpictureright",
        "lbPictureRight",
        "Returns the second (right aligned) picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "_picture = lbPictureRight [101, 0]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lbPictureRight [idc, index]",
    ],
    [
        "u",
        "lbselection",
        "lbSelection",
        "Returns the array of selected rows indices in the given listbox.",
        "_indices = lbSelection _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "lbSelection control",
    ],
    [
        "b",
        "lbsetcolor",
        "lbSetColor",
        "Sets the text color of the item with the given index of the given listbox or combobox. Color is in format <ar>Color</ar>.",
        "_control lbSetColor [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetColor [index, color]",
    ],
    [
        "u",
        "lbsetcolor",
        "lbSetColor",
        "Sets the color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given color. Color is in format <ar>Color</ar>.",
        "lbSetColor [101, 0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetColor [idc, index, color]",
    ],
    [
        "b",
        "lbsetcolorright",
        "lbSetColorRight",
        "Sets the text color of the secondary text (right aligned) of the item with the given index of the given listbox or combobox. Color is in format <ar>Color</ar>.",
        "_control lbSetColorRight [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetColorRight [index, color]",
    ],
    [
        "u",
        "lbsetcolorright",
        "lbSetColorRight",
        "Sets the color of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given color. Color is in format <ar>Color</ar>.",
        "lbSetColorRight [101, 0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetColorRight [idc, index, color]",
    ],
    [
        "b",
        "lbsetcursel",
        "lbSetCurSel",
        "Selects the item with the given index of the given listbox or combobox.",
        "_control lbSetCurSel 0",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control lbSetCurSel index",
    ],
    [
        "u",
        "lbsetcursel",
        "lbSetCurSel",
        "Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "lbSetCurSel [101, 0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetCurSel [idc, index]",
    ],
    [
        "b",
        "lbsetdata",
        "lbSetData",
        "Sets the additional text (invisible) in the item with the given index of the given listbox or combobox to the given data.",
        "_control lbSetData [1, '#1']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetData [index, data]",
    ],
    [
        "u",
        "lbsetdata",
        "lbSetData",
        "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
        "lbSetData [101, 1, '#1']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetData [idc, index, data]",
    ],
    [
        "b",
        "lbsetpicture",
        "lbSetPicture",
        "Sets the picture in the item with the given index of the given listbox or combobox. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "_control lbSetPicture [0, 'iskoda']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPicture [index, name]",
    ],
    [
        "u",
        "lbsetpicture",
        "lbSetPicture",
        "Sets the picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "lbSetPicture [101, 0, 'iskoda']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetPicture [idc, index, name]",
    ],
    [
        "b",
        "lbsetpicturecolor",
        "lbSetPictureColor",
        "Sets the color of the picture of the item with the given index of the given listbox or combobox. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "_control lbSetColor [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPictureColor [index, color]",
    ],
    [
        "u",
        "lbsetpicturecolor",
        "lbSetPictureColor",
        "Sets the color of item's picture with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "lbSetPictureColor [101, 0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetPictureColor [idc, index, color]",
    ],
    [
        "b",
        "lbsetpicturecolordisabled",
        "lbSetPictureColorDisabled",
        "Sets the color of the picture of the item with the given index of the given listbox or combobox when control is disabled. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "_control lbSetColor [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPictureColorDisabled [index, color]",
    ],
    [
        "u",
        "lbsetpicturecolordisabled",
        "lbSetPictureColorDisabled",
        "Sets the disabled color of item's picture with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "lbSetPictureColorDisabled [101, 0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetPictureColorDisabled [idc, index, color]",
    ],
    [
        "b",
        "lbsetpicturecolorselected",
        "lbSetPictureColorSelected",
        "Sets the color of the picture of the item with the given index of the given listbox or combobox when item is selected. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "_control lbSetColor [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPictureColorSelected [index, color]",
    ],
    [
        "u",
        "lbsetpicturecolorselected",
        "lbSetPictureColorSelected",
        "Sets the selected color of item's picture with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "lbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetPictureColorSelected [idc, index, color]",
    ],
    [
        "b",
        "lbsetpictureright",
        "lbSetPictureRight",
        "Sets the second (right aligned) picture in the item with the given index of the given listbox or combobox. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "_control lbSetPictureRight [0, 'iskoda']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPictureRight [index, name]",
    ],
    [
        "u",
        "lbsetpictureright",
        "lbSetPictureRight",
        "Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "lbSetPictureRight [101, 0, 'iskoda']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetPictureRight [idc, index, name]",
    ],
    [
        "b",
        "lbsetpicturerightcolor",
        "lbSetPictureRightColor",
        "Sets the color of the second (right aligned) picture of the of the item with the given index of the given listbox or combobox. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "_control lbSetPictureRightColor [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPictureRightColor [index, color]",
    ],
    [
        "b",
        "lbsetpicturerightcolordisabled",
        "lbSetPictureRightColorDisabled",
        "Sets the color of the second (right aligned) picture of the item with the given index of the given listbox or combobox when control is disabled. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "_control lbSetPictureRightColorDisabled [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPictureRightColorDisabled [index, color]",
    ],
    [
        "b",
        "lbsetpicturerightcolorselected",
        "lbSetPictureRightColorSelected",
        "Sets the color of the second (right aligned) picture of the item with the given index of the given listbox or combobox when item is selected. Color is in format <ar>Color</ar>. (color which consists from only zeros means disable this override)",
        "_control lbSetPictureRightColorSelected [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetPictureRightColorSelected [index, color]",
    ],
    [
        "b",
        "lbsetselectcolor",
        "lbSetSelectColor",
        "Sets the text select color of the item with the given index of the given listbox or combobox. Color is in format <ar>Color</ar>.",
        "_control lbSetSelectColor [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetSelectColor [index, color]",
    ],
    [
        "u",
        "lbsetselectcolor",
        "lbSetSelectColor",
        "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given color. Color is in format <ar>Color</ar>.",
        "lbSetSelectColor [101, 0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetSelectColor [idc, index, color]",
    ],
    [
        "b",
        "lbsetselectcolorright",
        "lbSetSelectColorRight",
        "Sets the text select color of the secondary text (right aligned) of the item with the given index of the given listbox or combobox. Color is in format <ar>Color</ar>.",
        "_control lbSetSelectColorRight [0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetSelectColorRight [index, color]",
    ],
    [
        "u",
        "lbsetselectcolorright",
        "lbSetSelectColorRight",
        "Sets the select color of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given color. Color is in format <ar>Color</ar>.",
        "lbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetSelectColorRight [idc, index, color]",
    ],
    [
        "b",
        "lbsetselected",
        "lbSetSelected",
        "Set the selection state of the given row of the given listbox. Listbox must support multiple selection",
        "_control lbSetSelection [0, true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetSelected [index, selected]",
    ],
    [
        "b",
        "lbsettext",
        "lbSetText",
        "Sets the text in the item with the given index of the given listbox or combobox to the given data.",
        "_control lbSetText [1, '#1']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetText [index, text]",
    ],
    [
        "u",
        "lbsettext",
        "lbSetText",
        "Returns the secondary shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "_text = lbTextRight [101, 0]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lbSetText [idc, index, &quot;text&quot;]",
    ],
    [
        "b",
        "lbsettextright",
        "lbSetTextRight",
        "Sets the secondary text (right aligned) in the item with the given index of the given listbox or combobox to the given data.",
        "_control lbSetTextRight [1, '#1']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetTextRight [index, text]",
    ],
    [
        "b",
        "lbsettooltip",
        "lbSetTooltip",
        "Sets tooltip for item with the given index of the given listbox or combobox to the given data.",
        "_control lbSetData [1, 'tooltip']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetTooltip [index, tooltip]",
    ],
    [
        "u",
        "lbsettooltip",
        "lbSetTooltip",
        "Sets tooltip for item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
        "lbSetTooltip [101, 1, 'tooltip']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetTooltip [idc, index, tooltip]",
    ],
    [
        "b",
        "lbsetvalue",
        "lbSetValue",
        "Sets the additional integer value in the item with the given index of the given listbox or combobox to the given value.",
        "_control lbSetValue [0, 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lbSetValue [index, value]",
    ],
    [
        "u",
        "lbsetvalue",
        "lbSetValue",
        "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.",
        "lbSetValue [101, 0, 1]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSetValue [idc, index, value]",
    ],
    [
        "u",
        "lbsize",
        "lbSize",
        "Returns the number of items in the given listbox or combobox.",
        "_n = lbSize _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "lbSize control",
    ],
    [
        "u",
        "lbsize",
        "lbSize",
        "Returns the number of items in the listbox or combobox with id idc of the topmost user dialog.",
        "_n = lbSize 101",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "lbSize idc",
    ],
    [
        "u",
        "lbsort",
        "lbSort",
        "Sorts the given listbox or combobox by item text.",
        "lbSort _control",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "lbSort control",
    ],
    [
        "u",
        "lbsort",
        "lbSort",
        "Sorts the given listbox or combobox by item text, order can be 'asc' for ascending or 'desc' for descending.",
        "lbSort [_control or idc, 'desc']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lbSort [controlOrIdc, order]",
    ],
    [
        "u",
        "lbsort",
        "lbSort",
        "Sorts the given listbox or combobox by item text.",
        "lbSort 101",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "lbSort idc",
    ],
    [
        "b",
        "lbsortby",
        "lbSortBy",
        "Sorts given listbox by 'TEXT', 'DATA' or 'VALUE' with optional sort order and case sensitivity.",
        "_control lbSortBy ['DATA', true, true]",
        "",
        "NOTHING",
        "SCALAR,CONTROL",
        "ARRAY",
        "controlOrIDC lbSortBy [sortByType, reversedOrder, caseSensitive, useTextRight, unicodeOff]",
    ],
    [
        "u",
        "lbsortbyvalue",
        "lbSortByValue",
        "Sorts the given listbox or combobox by item value.",
        "lbSortByValue _control",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "lbSortByValue control",
    ],
    [
        "u",
        "lbsortbyvalue",
        "lbSortByValue",
        "Sorts the given listbox or combobox by item value.",
        "lbSortByValue 101",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "lbSortByValue idc",
    ],
    [
        "b",
        "lbtext",
        "lbText",
        "Returns the shown text in the item with the given index of the given listbox or combobox.",
        "_text = _control lbText 0",
        "",
        "STRING",
        "CONTROL",
        "SCALAR",
        "control lbText index",
    ],
    [
        "u",
        "lbtext",
        "lbText",
        "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "_text = lbText [101, 0]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lbText [idc, index]",
    ],
    [
        "b",
        "lbtextright",
        "lbTextRight",
        "Returns the second text (right aligned) in the item with the given index of the given listbox or combobox.",
        "_text = _control lbTextRight 0",
        "",
        "STRING",
        "CONTROL",
        "SCALAR",
        "control lbTextRight index",
    ],
    [
        "u",
        "lbtextright",
        "lbTextRight",
        "Returns the secondary shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "_text = lbTextRight [101, 0]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lbTextRight [idc, index]",
    ],
    [
        "b",
        "lbtooltip",
        "lbTooltip",
        "Returns tooltip for item with the given index of the given listbox or combobox",
        "_control lbTooltip 1",
        "",
        "STRING",
        "CONTROL",
        "SCALAR",
        "control lbTooltip index",
    ],
    [
        "u",
        "lbtooltip",
        "lbTooltip",
        "Returns tooltip for the given index of the listbox with id idc of the topmost user dialog",
        "lbTooltip [101, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lbTooltip [idc, index]",
    ],
    [
        "b",
        "lbvalue",
        "lbValue",
        "Returns the additional integer value in the item with the given index of the given listbox or combobox.",
        "_value = _control lbValue 0",
        "",
        "SCALAR",
        "CONTROL",
        "SCALAR",
        "control lbValue index",
    ],
    [
        "u",
        "lbvalue",
        "lbValue",
        "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
        "_value = lbValue [101, 0]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "lbValue [idc, index]",
    ],
    [
        "u",
        "leader",
        "leader",
        "Returns the group leader for the given unit. For dead units, objNull is returned.",
        "leader player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "leader unit",
    ],
    [
        "u",
        "leader",
        "leader",
        "Returns the group leader for the given group. For a dead unit, grpNull is returned.",
        "leader group player == leader player",
        "",
        "OBJECT",
        "",
        "GROUP",
        "leader grp",
    ],
    [
        "u",
        "leader",
        "leader",
        "Return the leader of given team.",
        "",
        "",
        "TEAM_MEMBER",
        "",
        "TEAM_MEMBER",
        "leader team",
    ],
    [
        "u",
        "leaderboarddeinit",
        "leaderboardDeInit",
        "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.",
        "leaderboardDeInit 'TT01'",
        "",
        "BOOL",
        "",
        "STRING",
        "leaderboardDeInit boardName",
    ],
    [
        "u",
        "leaderboardgetrows",
        "leaderboardGetRows",
        "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank, [details]], [player2Name, score, rank, [details]], [player3Name, score, rank, [details]] ... ]; This can be called after the one of the row request function has been called and successfully finished!",
        "leaderboardGetRows 'TT01'",
        "",
        "ARRAY",
        "",
        "STRING",
        "leaderboardGetRows boardName",
    ],
    [
        "u",
        "leaderboardinit",
        "leaderboardInit",
        "Initialize the leaderboard structure for board with given name. Returns true if the board is already initialized.",
        "leaderboardInit 'TT01'",
        "",
        "BOOL",
        "",
        "STRING",
        "leaderboardInit boardName",
    ],
    [
        "u",
        "leaderboardrequestrowsfriends",
        "leaderboardRequestRowsFriends",
        "Requests given leaderboard to download friends rows from the given leaderboard;",
        "leaderboardRequestRowsFriends 'TT01'",
        "",
        "BOOL",
        "",
        "STRING",
        "leaderboardRequestRowsFriends boardName",
    ],
    [
        "u",
        "leaderboardrequestrowsglobal",
        "leaderboardRequestRowsGlobal",
        "Requests given leaderboard to download values from global table; rowOffset:how many rows are skipped; rowsRequested: max. number of rows downloaded. Returns true if request has been started.",
        "leaderboardRequestRowsGlobal ['TT01', 0, 10]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "leaderboardRequestRowsGlobal [boardName, rowOffset, rowsRequested]",
    ],
    [
        "u",
        "leaderboardrequestrowsglobalarounduser",
        "leaderboardRequestRowsGlobalAroundUser",
        "Requests given leaderboard to download rows around the user position in the table; rowOffset:offset from user position (ex. -5 = five position before user etc.); rowsRequested: max. number of rows downloaded; Returns true if request has been started.",
        "leaderboardRequestRowsGlobalAroundUser ['TT01', -5, 10]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "leaderboardRequestRowsGlobalAroundUser [boardName, rowOffset, rowsRequested]",
    ],
    [
        "u",
        "leaderboardsrequestuploadscore",
        "leaderboardsRequestUploadScore",
        "Starts async. operation to upload score to board with given name, value always overwrite the current value in the board. The details array is optional. The board has to be initialized before the call.",
        "leaderboardsRequestUploadScore ['TT01', 1234, [5,6,7,8]]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "leaderboardsRequestUploadScore [boardName, score, [details]]",
    ],
    [
        "u",
        "leaderboardsrequestuploadscorekeepbest",
        "leaderboardsRequestUploadScoreKeepBest",
        "Starts async. operation to upload score to board with given name, value is only stored to board if it's better than one already in the board. The details array is optional. The board has to be initialized before the call.",
        "leaderboardsRequestUploadScore ['TT01', 1234, [5,6,7,8]]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "leaderboardsRequestUploadScoreKeepBest [boardName, score, [details]]",
    ],
    [
        "u",
        "leaderboardstate",
        "leaderboardState",
        "returns state of the board with given name. 0: Busy (async. operation in progress); 1: Async. operation ended with success; 2: Async. operation ended with error; 3: Invalid board (bad board name, not initialized etc.).",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "leaderboardState boardName",
    ],
    [
        "b",
        "leavevehicle",
        "leaveVehicle",
        "Ceases the using of the vehicle in the group. It unassigns all grouped units from the vehicle.",
        "soldierOne leaveVehicle jeepOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "group leaveVehicle vehicle",
    ],
    [
        "b",
        "leavevehicle",
        "leaveVehicle",
        "Ceases the using of the vehicle in the group. It unassigns all grouped units from the vehicle.",
        "groupOne leaveVehicle jeepOne",
        "",
        "NOTHING",
        "GROUP",
        "OBJECT",
        "group leaveVehicle vehicle",
    ],
    [
        "n",
        "librarycredits",
        "libraryCredits",
        "Copyright information needed by libraries used.",
        "libraryCredits",
        "[['Real Virtuality','(C) 2012 Bohemia Interactive','All rights reserved']]",
        "ARRAY",
        "",
        "",
        "libraryCredits",
    ],
    [
        "n",
        "librarydisclaimers",
        "libraryDisclaimers",
        "Disclaimer information needed by libraries used (duplicate disclaimers are removed).",
        "libraryDisclaimers",
        "['All rights reserved']",
        "ARRAY",
        "",
        "",
        "libraryDisclaimers",
    ],
    [
        "u",
        "lifestate",
        "lifeState",
        "Returns the life state of the given unit.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "lifeState unit",
    ],
    [
        "b",
        "lightattachobject",
        "lightAttachObject",
        "Attach light to given object (at given position).",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "light lightAttachObject [object, position]",
    ],
    [
        "u",
        "lightdetachobject",
        "lightDetachObject",
        "Detach light from object.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "lightDetachObject light",
    ],
    [
        "u",
        "lightison",
        "lightIsOn",
        "Checks whether the lampost is turned on. Possible values are 'ON', 'OFF' and 'AUTO' (auto means the lamp will be shining during the night automatically).",
        "lightIsOn nearestObject [player, 'StreetLamp'] != 'OFF'",
        "",
        "STRING",
        "",
        "OBJECT",
        "lightIsOn lamppost",
    ],
    [
        "n",
        "lightnings",
        "lightnings",
        "Return lightnings value.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "lightnings",
    ],
    [
        "b",
        "limitspeed",
        "limitSpeed",
        "Limit speed of given vehicle to given value (in km/h).",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "object limitSpeed speed",
    ],
    [
        "u",
        "linearconversion",
        "linearConversion",
        "Converts value in interval [min, max] to newMin + a*(max-min)/(newMax - newMin), potentially clamps the final value.",
        "linearConversion [4, 8, 5, 0, 1, false]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "linearConversion [min, max, value, newMin, newMax, clamp]",
    ],
    [
        "n",
        "linebreak",
        "lineBreak",
        "Creates a structured text containing a line break.",
        "txt3 = lineBreak",
        "",
        "TEXT",
        "",
        "",
        "lineBreak",
    ],
    [
        "u",
        "lineintersects",
        "lineIntersects",
        "Returns true, if line intersect with any object.",
        "lineIntersects [begPos, endPos, withObj, ignoreObj]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "lineIntersects array",
    ],
    [
        "u",
        "lineintersectsobjs",
        "lineIntersectsObjs",
        "Returns list of objects intersected by given line. Filters (can be combined): CF_ONLY_WATER=1,CF_NEAREST_CONTACT=2,CF_ONLY_STATIC=4,CF_ONLY_DYNAMIC=8,CF_FIRST_CONTACT=16,CF_ALL_OBJECTS=32 (usable only with CF_FIRST_CONTACT and it will check one contact per object)",
        "lineIntersectsObjs [begPos, endPos, withObj, ignoreObj, sortByDist, flags]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "lineIntersectsObjs array",
    ],
    [
        "u",
        "lineintersectssurfaces",
        "lineIntersectsSurfaces",
        "Returns list of objects and points on surfaces intersected by given line",
        "lineIntersectsSurfaces [eyePos player, aimPos tgt, player]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "lineIntersectsSurfaces array",
    ],
    [
        "u",
        "lineintersectswith",
        "lineIntersectsWith",
        "Returns list of objects intersected by given line.",
        "lineIntersectsWith [begPos, endPos, withObj, ignoreObj, sortByDist]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "lineIntersectsWith array",
    ],
    [
        "b",
        "linkitem",
        "linkItem",
        "Create and assign new item to the soldier's body.(NVG, radio, ...)",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit linkItem item",
    ],
    [
        "u",
        "list",
        "list",
        "Returns a list of units that would activate the given trigger. For a trigger of type 'Not present' the list is the same as the list that would be returned for type 'Present'.",
        "list triggerOne",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "list trigger",
    ],
    [
        "b",
        "listobjects",
        "listObjects",
        "Return the list of all objects of given type.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "STRING",
        "map listObjects type",
    ],
    [
        "u",
        "listremotetargets",
        "listRemoteTargets",
        "return list of datalink targets and time for which they will be/were known",
        "",
        "",
        "ARRAY",
        "",
        "SIDE",
        "listRemoteTargets side",
    ],
    [
        "u",
        "listvehiclesensors",
        "listVehicleSensors",
        "return class names and component names of available sensors",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "listVehicleSensors vehicle with sensors",
    ],
    [
        "u",
        "ln",
        "ln",
        "The natural logarithm of x.",
        "ln 10",
        "2.302",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "ln x",
    ],
    [
        "u",
        "lnbaddarray",
        "lnbAddArray",
        "Adds list of rows of strings.",
        "_index = lnbAddArray  [idc,[[[text,text,text], [value], [data]], [[text,text,text], [value, value], [data]]]] . Returns row index.",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "lnbAddArray [IDC,[[[text,text], [value,..], [data,..]], [[text,text], [value,..], [data,..]],]]",
    ],
    [
        "b",
        "lnbaddcolumn",
        "lnbAddColumn",
        "Adds an item with the given text to the given listbox or combobox. It returns the index of the newly added item.",
        "_index = _control lbAdd 'First item'",
        "",
        "SCALAR",
        "CONTROL",
        "SCALAR",
        "control lnbAddColumn position",
    ],
    [
        "u",
        "lnbaddcolumn",
        "lnbAddColumn",
        "Adds an column at given position. It returns the index of the newly added column.",
        "_index = lnbAddColumn [105, 0.8]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "lnbAddColumn [idc, position]",
    ],
    [
        "b",
        "lnbaddrow",
        "lnbAddRow",
        "Adds an row to the end od 2d listbox . It returns the index of the newly added row.",
        "_index = _control lnbAdd [t1,t2,t3,...]",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "control lnbAddRow [text1,text2,...]",
    ],
    [
        "u",
        "lnbaddrow",
        "lnbAddRow",
        "Adds an row of strings.",
        "_index = lnbAddRow [105, ['First column', 'second column', ...]]. Returns row index.",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "lnbAddRow [idc, [text, text,...]]",
    ],
    [
        "u",
        "lnbclear",
        "lnbClear",
        "Clears all items in the given listbox or combobox.",
        "lbClear _control",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "lnbClear control",
    ],
    [
        "u",
        "lnbclear",
        "lnbClear",
        "Clears all items in the 2D listbox.",
        "lnbClear 101",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "lnbClear idc",
    ],
    [
        "b",
        "lnbcolor",
        "lnbColor",
        "Returns the text color of the item with the given position of the given 2D listbox.",
        "_color = _control lnbColor [row, column]",
        "",
        "ARRAY",
        "CONTROL",
        "ARRAY",
        "control lnbColor [row, column]",
    ],
    [
        "u",
        "lnbcolor",
        "lnbColor",
        "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format <ar>Color</ar>.",
        "_color = lnbColor [101, [0,1]]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "lnbColor [idc, [row, column]",
    ],
    [
        "b",
        "lnbcolorright",
        "lnbColorRight",
        "Returns the text color of the secondary text (right aligned) of the item with the given position of the given 2D listbox.",
        "_color = _control lnbColorRight [row, column]",
        "",
        "ARRAY",
        "CONTROL",
        "ARRAY",
        "control lnbColorRight [row, column]",
    ],
    [
        "u",
        "lnbcolorright",
        "lnbColorRight",
        "Returns the secondary text (right aligned) color of the item with the given position of the 2D listbox. The color is returned in format <ar>Color</ar>.",
        "_color = lnbColorRight [101, [0,1]]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "lnbColorRight [idc, [row, column]",
    ],
    [
        "u",
        "lnbcurselrow",
        "lnbCurSelRow",
        "Returns the index of the selected item of the given listbox or combobox.",
        "_index = lbCurSel _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "lnbCurSelRow control",
    ],
    [
        "u",
        "lnbcurselrow",
        "lnbCurSelRow",
        "Returns the index of the selected row id 2D listbox.",
        "_row = lnbCurSel 105",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "lnbCurSelRow idc",
    ],
    [
        "b",
        "lnbdata",
        "lnbData",
        "Returns the additional text (invisible) in an item with the given position of the given 2D listbox.",
        "_data = _control lnbData [row, column]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control lnbData [row, column]",
    ],
    [
        "u",
        "lnbdata",
        "lnbData",
        "Returns the additional text (invisible) in an item with the given position of the 2D listbox.",
        "_data = lnbData [101, [0,1]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lnbData [idc, [row, column]",
    ],
    [
        "b",
        "lnbdeletecolumn",
        "lnbDeleteColumn",
        "Removes the item with the given index from the given listbox or combobox.",
        "_control lbDelete 0",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control lnbDeleteColumn index",
    ],
    [
        "u",
        "lnbdeletecolumn",
        "lnbDeleteColumn",
        "Removes column with given index.",
        "lnbDeleteColumn [101, 0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbDeleteColumn [idc, index]",
    ],
    [
        "b",
        "lnbdeleterow",
        "lnbDeleteRow",
        "Removes row with the given index from the given  listbox or combobox.",
        "_control lnbDelete 0",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control lnbDeleteRow row",
    ],
    [
        "u",
        "lnbdeleterow",
        "lnbDeleteRow",
        "Removes row with given index from the 2D listbox.",
        "lnbDeleteRow [105, 0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbDeleteRow [idc, index]",
    ],
    [
        "u",
        "lnbgetcolumnsposition",
        "lnbGetColumnsPosition",
        "Returns the index of the selected item of the given listbox or combobox.",
        "_index = lbCurSel _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "lnbGetColumnsPosition control",
    ],
    [
        "u",
        "lnbgetcolumnsposition",
        "lnbGetColumnsPosition",
        "Returns the columns position in 2D listbox.",
        "_n = lnbGetColumnsSize 105",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "lnbGetColumnsPosition idc",
    ],
    [
        "b",
        "lnbpicture",
        "lnbPicture",
        "Returns the picture name of the item with the given position of the given listbox or combobox.",
        "_picture = _control lnbPicture [row, column]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control lnbPicture [row, column]",
    ],
    [
        "u",
        "lnbpicture",
        "lnbPicture",
        "Returns the picture name of the item with the given position of the 2D listbox.",
        "_picture = lnbPicture [101, [0,1]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lnbPicture [idc, [row, column]",
    ],
    [
        "b",
        "lnbpictureright",
        "lnbPictureRight",
        "Returns the name of the second (right aligned) picture of the item with the given position of the given listbox or combobox.",
        "_picture = _control lnbPictureRight [row, column]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control lnbPictureRight [row, column]",
    ],
    [
        "u",
        "lnbpictureright",
        "lnbPictureRight",
        "Returns the second (right aligned) picture name of the item with the given position of the 2D listbox.",
        "_picture = lnbPictureRight [101, [0,1]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lnbPictureRight [idc, [row, column]",
    ],
    [
        "b",
        "lnbsetcolor",
        "lnbSetColor",
        "Sets the text color of the item with the given position of the given 2D listbox . Color is in format <ar>Color</ar>.",
        "_control lnbSetColor [[row, column], [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetColor [[row, column], color]",
    ],
    [
        "u",
        "lnbsetcolor",
        "lnbSetColor",
        "Sets the color of the item with the given position of the 2D listbox. Color is in format <ar>Color</ar>.",
        "lnbSetColor [101, [0,1], [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetColor [idc, [row, column], color]",
    ],
    [
        "b",
        "lnbsetcolorright",
        "lnbSetColorRight",
        "Sets the text color of the secondary text (right aligned) of the item with the given position of the given 2D listbox . Color is in format <ar>Color</ar>.",
        "_control lnbSetColorRight [[row, column], [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetColorRight [[row, column], color]",
    ],
    [
        "u",
        "lnbsetcolorright",
        "lnbSetColorRight",
        "Sets the color of the secondary text (right aligned) of the item with the given position of the 2D listbox. Color is in format <ar>Color</ar>.",
        "lnbSetColorRight [101, [0,1], [0, 1, 0, 0.5]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetColorRight [idc, [row, column], color]",
    ],
    [
        "b",
        "lnbsetcolumnspos",
        "lnbSetColumnsPos",
        "Sets position of 2d listbox columns.",
        "_control lbSetColumnsPos [pos1,pos2,...]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetColumnsPos [pos1,pos2,...]",
    ],
    [
        "u",
        "lnbsetcolumnspos",
        "lnbSetColumnsPos",
        "Sets position of 2d listbox columns.",
        "lbSetColumnsPos [101, [pos1,pos2,...]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetColumnsPos [idc, [pos1,pos2,...]]",
    ],
    [
        "b",
        "lnbsetcurselrow",
        "lnbSetCurSelRow",
        "Selects the item with the given index of the given listbox or combobox.",
        "_control lbSetCurSel row",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control lnbSetCurSelRow row",
    ],
    [
        "u",
        "lnbsetcurselrow",
        "lnbSetCurSelRow",
        "Selects the row with the given index of the 2D listbox.",
        "lnbSetCurSel [105, 0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetCurSelRow [idc, index]",
    ],
    [
        "b",
        "lnbsetdata",
        "lnbSetData",
        "Sets the additional text (invisible) in the item with the given position of the given 2D listbox to the given data.",
        "_control lnbSetData [[row, column], '#1']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetData [[row, column], data]",
    ],
    [
        "u",
        "lnbsetdata",
        "lnbSetData",
        "Sets the additional text (invisible) in the item with the given position of the 2D listbox.",
        "lnbSetData [101, [0,1], '#1']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetData [idc, [row, column], data]",
    ],
    [
        "b",
        "lnbsetpicture",
        "lnbSetPicture",
        "Sets the picture in the item with the given position of the given 2D listbox. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "_control lnbSetPicture [[row, column], 'iskoda']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetPicture [[row, column], name]",
    ],
    [
        "u",
        "lnbsetpicture",
        "lnbSetPicture",
        "Sets the picture in the item with the given position of the 2D listbox. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "lnbSetPicture [101, [0,1], 'iskoda']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetPicture [idc, [row, column], name]",
    ],
    [
        "b",
        "lnbsetpicturecolor",
        "lnbSetPictureColor",
        "Sets the picture color in the item with the given position of the given 2D listbox.",
        "_control lnbSetPictureColor [[row, column], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetPictureColor [[row, column], [r,g,b,a]]",
    ],
    [
        "u",
        "lnbsetpicturecolor",
        "lnbSetPictureColor",
        "Sets the picture color in the item with the given position of the 2D listbox.",
        "lnbSetPictureColor [101, [0,1], [1,0,1,1]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetPictureColor [idc, [row, column], [r,g,b,a]]",
    ],
    [
        "b",
        "lnbsetpicturecolorright",
        "lnbSetPictureColorRight",
        "Sets the second (right aligned) picture color in the item with the given position of the given 2D listbox.",
        "_control lnbSetPictureColorRight [[row, column], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetPictureColorRight [[row, column], [r,g,b,a]]",
    ],
    [
        "u",
        "lnbsetpicturecolorright",
        "lnbSetPictureColorRight",
        "Sets the second (right aligned) picture color in the item with the given position of the 2D listbox.",
        "lnbSetPictureColorRight [101, [0,1], [1,0,1,1]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetPictureColorRight [idc, [row, column], [r,g,b,a]]",
    ],
    [
        "b",
        "lnbsetpicturecolorselected",
        "lnbSetPictureColorSelected",
        "Sets the picture color in the item with the given position of the given 2D listbox.",
        "_control lnbSetPictureColor [[row, column], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetPictureColorSelected [[row, column], [r,g,b,a]]",
    ],
    [
        "u",
        "lnbsetpicturecolorselected",
        "lnbSetPictureColorSelected",
        "Sets the picture color in the item with the given position of the 2D listbox.",
        "lnbSetPictureColor [101, [0,1], [1,0,1,1]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetPictureColorSelected [idc, [row, column], [r,g,b,a]]",
    ],
    [
        "b",
        "lnbsetpicturecolorselectedright",
        "lnbSetPictureColorSelectedRight",
        "Sets the second (right aligned) picture color in the item with the given position of the given 2D listbox.",
        "_control lnbSetPictureColorRight [[row, column], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetPictureColorSelectedRight [[row, column], [r,g,b,a]]",
    ],
    [
        "u",
        "lnbsetpicturecolorselectedright",
        "lnbSetPictureColorSelectedRight",
        "Sets the second (right aligned) picture color in the item with the given position of the 2D listbox.",
        "lnbSetPictureColorRight [101, [0,1], [1,0,1,1]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetPictureColorSelectedRight [idc, [row, column], [r,g,b,a]]",
    ],
    [
        "b",
        "lnbsetpictureright",
        "lnbSetPictureRight",
        "Sets the second (right aligned) picture in the item with the given position of the given 2D listbox. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "_control lnbSetPictureRight [[row, column], 'iskoda']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetPictureRight [[row, column], name]",
    ],
    [
        "u",
        "lnbsetpictureright",
        "lnbSetPictureRight",
        "Sets the second (right aligned) picture in the item with the given position of the 2D listbox. Name is the picture name. The picture is searched in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).",
        "lnbSetPictureRight [101, [0,1], 'iskoda']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetPictureRight [idc, [row, column], name]",
    ],
    [
        "b",
        "lnbsettext",
        "lnbSetText",
        "Sets the text in the item with the given index of the given 2D listbox to the given text.",
        "_control lnbSetText [[row, column], '#1']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetText [[row, column], text]",
    ],
    [
        "u",
        "lnbsettext",
        "lnbSetText",
        "Sets the text in the item with the given position of the 2D listbox.",
        "lnbSetText [101, [0,1], '#1']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetText [idc, [row, column], text]",
    ],
    [
        "b",
        "lnbsettextright",
        "lnbSetTextRight",
        "Sets the secondary (right aligned) text in the item with the given index of the given 2D listbox to the given text.",
        "_control lnbSetTextRight [[row, column], '#1']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetTextRight [[row, column], text]",
    ],
    [
        "u",
        "lnbsettextright",
        "lnbSetTextRight",
        "Sets the secondary (right aligned) text in the item with the given index of the given 2D listbox to the given text.",
        "lnbSetTextRight [101, [0,1], '#1']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetTextRight [idc, [row, column], text]",
    ],
    [
        "b",
        "lnbsettooltip",
        "lnbSetTooltip",
        "Sets the tooltip on the item with the given position of the given 2D listbox",
        "_control lnbSetTooltip [[row, column], 'tooltip']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetTooltip [[row, column], text]",
    ],
    [
        "u",
        "lnbsettooltip",
        "lnbSetTooltip",
        "Sets the tooltip on the item with the given position of the given 2D listbox",
        "lnbSetTooltip [101, [0,1], 'tooltip']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetTooltip [idc, [row, column], text]",
    ],
    [
        "b",
        "lnbsetvalue",
        "lnbSetValue",
        "Sets the additional integer value in the item with the given position of the given 2D listbox  to the given value.",
        "_control lnbSetValue [[row, column], 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSetValue [[row, column], value]",
    ],
    [
        "u",
        "lnbsetvalue",
        "lnbSetValue",
        "Sets the additional integer value in the item with the position index of the 2D listbox.",
        "lnbSetValue [101, [0,1], 1]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSetValue [idc, [row, column], value]",
    ],
    [
        "u",
        "lnbsize",
        "lnbSize",
        "Returns the number of items in the given listbox or combobox.",
        "_n = lbSize _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "lnbSize control",
    ],
    [
        "u",
        "lnbsize",
        "lnbSize",
        "Returns [X,Y] size of 2D listbox.",
        "_n = lnbSize 105",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "lnbSize idc",
    ],
    [
        "b",
        "lnbsort",
        "lnbSort",
        "Sorts given listnbox by texts in given column.",
        "_control lnbSort [0, false]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSort [column(, order)]",
    ],
    [
        "u",
        "lnbsort",
        "lnbSort",
        "Sorts given multicolumn listbox by texts in given column in ascending or descending order.",
        "lnbSort [_idc, 0, false]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSort [&lt;control_IDC&gt;, &lt;column&gt;(, &lt;order&gt;)]",
    ],
    [
        "b",
        "lnbsortby",
        "lnbSortBy",
        "Sorts given listnbox by 'TEXT', 'DATA' or 'VALUE' in the given column with optional sort order and case sensitivity.",
        "[_control, 2] lnbSortBy ['DATA', false, true]",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "[controlOrIDC, column] lnbSortBy [sortByType, reversedOrder, caseSensitive, useTextRight, unicodeOff]",
    ],
    [
        "b",
        "lnbsortbyvalue",
        "lnbSortByValue",
        "Sorts given listnbox by values in given column.",
        "_control lnbSortByValue [0, false]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control lnbSortByValue [column(, order)]",
    ],
    [
        "u",
        "lnbsortbyvalue",
        "lnbSortByValue",
        "Sorts given multicolumn listbox by values in given column in ascending or descending order.",
        "lnbSortByValue [_idc, 0, false]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "lnbSortByValue [&lt;control_IDC&gt;, &lt;column&gt;(, &lt;order&gt;)]",
    ],
    [
        "b",
        "lnbtext",
        "lnbText",
        "Returns the shown text in the item with the given position of the given 2D listbox.",
        "_text = _control lnbText [row, column]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control lnbText [row, column]",
    ],
    [
        "u",
        "lnbtext",
        "lnbText",
        "Returns the shown text in the item with the given position of the 2D listbox.",
        "_text = lnbText [101, [0,1]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lnbText [idc, [row, column]]",
    ],
    [
        "b",
        "lnbtextright",
        "lnbTextRight",
        "Returns the shown secondary (right aligned) text in the item with the given position of the given 2D listbox.",
        "_text = _control lnbTextRight [row, column]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control lnbTextRight [row, column]",
    ],
    [
        "u",
        "lnbtextright",
        "lnbTextRight",
        "Returns the shown secondary text (right aligned) in the item with the given position of the 2D listbox.",
        "_text = lnbTextRight [101, [0,1]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "lnbTextRight [idc, [row, column]]",
    ],
    [
        "b",
        "lnbvalue",
        "lnbValue",
        "Returns the additional integer value in the item with the given position of the given 2D listbox.",
        "_value = _control lnbValue [row, column]",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "control lnbValue [row, column]",
    ],
    [
        "u",
        "lnbvalue",
        "lnbValue",
        "Returns the additional integer value in the item with the given position of the 2D listbox.",
        "_value = lnbValue [101, [0,1]]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "lnbValue [idc, [row, column]",
    ],
    [
        "u",
        "load",
        "load",
        "Returns percentage of current sum of mass from items stored in a container or, if unit is given, in all unit's containers",
        "load player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "load unit or container",
    ],
    [
        "u",
        "loadabs",
        "loadAbs",
        "Returns current sum of mass from items stored in a container or, if unit is given, in all unit's containers, linked items and weapons.",
        "loadAbs player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "loadAbs unit or container",
    ],
    [
        "u",
        "loadbackpack",
        "loadBackpack",
        "Returns current sum of mass from items stored in a backpack.",
        "loadBackpack player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "loadBackpack unit",
    ],
    [
        "u",
        "loadconfig",
        "loadConfig",
        "Loads a config file",
        "getText (loadConfig 'mission.sqm' >> 'sourceName')",
        "",
        "CONFIG",
        "",
        "STRING",
        "loadConfig configPath",
    ],
    [
        "u",
        "loadfile",
        "loadFile",
        "Returns contents of a given file. On dedicated server/client connected to a dedicated server, if allowedLoadFileExtensions parameter is used in the DS config file this only returns contents of a file if the file extension is listed in it. The list should contain at least the following extensions: hpp, sqs, sqf, fsm, cpp, paa, txt, xml, inc, ext, sqm, ods, fxy, lip, csv, kb, bik, bikn, html, biedi. Note, this list may not be completely up to date",
        "loadFile 'myFunction.sqf'",
        "'if a>b then {a} else {b}'",
        "STRING",
        "",
        "STRING",
        "loadFile filename",
    ],
    [
        "n",
        "loadgame",
        "loadGame",
        "Load a game from the autosave, if failed, restart the mission.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "loadGame",
    ],
    [
        "b",
        "loadidentity",
        "loadIdentity",
        "Loads person's identity from objects.sav file in campaign directory (from entry name).",
        "player loadIdentity 'playerIdentity'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "person loadIdentity name",
    ],
    [
        "b",
        "loadmagazine",
        "loadMagazine",
        "Initiates the loading action on active weapon of the given turret.",
        "vehicle player loadMagazine [[0],'m256','20Rnd_120mmHE_M1A2']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle loadMagazine [[turret path],magazine name]",
    ],
    [
        "b",
        "loadoverlay",
        "loadOverlay",
        "Creates the load overlay dialog for the specified type of overlay.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "CONFIG",
        "map loadOverlay config",
    ],
    [
        "b",
        "loadstatus",
        "loadStatus",
        "Loads object's properties from objects.sav file in campaign directory (from entry name).",
        "player loadStatus 'playerState'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "object loadStatus name",
    ],
    [
        "u",
        "loaduniform",
        "loadUniform",
        "Returns current sum of mass from items stored in a uniform.",
        "loadUniform player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "loadUniform unit",
    ],
    [
        "u",
        "loadvest",
        "loadVest",
        "Returns current sum of mass from items stored in a vest.",
        "loadVest player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "loadVest unit",
    ],
    [
        "u",
        "local",
        "local",
        "MP: checks whether the given unit is local on the computer. This can be used when one or more activation fields or scripts need to be performed only on one computer\nIn SP all objects are local. Note: all static objects are local on all computers.",
        "local unitName",
        "",
        "BOOL",
        "",
        "OBJECT",
        "local obj",
    ],
    [
        "u",
        "local",
        "local",
        "MP: checks whether the given group is local on the computer.",
        "local group1",
        "",
        "BOOL",
        "",
        "GROUP",
        "local grp",
    ],
    [
        "u",
        "localize",
        "localize",
        "Replaces the string with the given name with the corresponding localized text from the stringtable.csv file.",
        "localize 'STR_DN_FROG'",
        "",
        "STRING",
        "",
        "STRING",
        "localize stringName",
    ],
    [
        "n",
        "localnamespace",
        "localNamespace",
        "Returns the local namespace attached to mission. Same lifetime as missionNamespace but is not global and cannot be serialized",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "localNamespace",
    ],
    [
        "n",
        "locationnull",
        "locationNull",
        "A non-existing location. This value is not equal to anything, including itself.",
        "",
        "",
        "LOCATION",
        "",
        "",
        "locationNull",
    ],
    [
        "u",
        "locationposition",
        "locationPosition",
        "Return position of given location.",
        "",
        "",
        "ARRAY",
        "",
        "LOCATION",
        "locationPosition location",
    ],
    [
        "b",
        "lock",
        "lock",
        "Locks the vehicle (disables mounting / dismounting) for the player.",
        "jeepOne lock true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle lock lock",
    ],
    [
        "b",
        "lock",
        "lock",
        "Locks the vehicle (disables mounting / dismounting) for the player. 0 - Unlocked, 1 - Default, 2 - Locked, 3 - Locked for player",
        "jeepOne lock 3",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle lock lock",
    ],
    [
        "b",
        "lockcamerato",
        "lockCameraTo",
        "Lock/unlock camera to target",
        "uav lockCameraTo [vehicle, [0, 0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "transport lockCameraTo [object/position/objNull, [turretPath]]",
    ],
    [
        "b",
        "lockcargo",
        "lockCargo",
        "Lock the cargo position of the vehicle.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle lockCargo [cargo index, lock]",
    ],
    [
        "b",
        "lockcargo",
        "lockCargo",
        "Lock the all cargo positions of the vehicle.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle lockCargo lock",
    ],
    [
        "b",
        "lockdriver",
        "lockDriver",
        "Lock the driver position of the vehicle.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle lockDriver lock",
    ],
    [
        "u",
        "locked",
        "locked",
        "Checks whether the vehicle is locked for the player. If it's locked, the player cannot mount / dismount without an order. 0 - Unlocked, 1 - Default, 2 - Locked, 3 - Locked for player",
        "locked jeepOne",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "locked unit",
    ],
    [
        "b",
        "lockedcamerato",
        "lockedCameraTo",
        "Returns current camera lock target",
        "uav lockedCameraTo [0, 0]",
        "",
        "ARRAY,NOTHING,OBJECT",
        "OBJECT",
        "ARRAY",
        "transport lockedCameraTo [turretPath]",
    ],
    [
        "b",
        "lockedcargo",
        "lockedCargo",
        "Check whether cargo position of the vehicle is locked.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "SCALAR",
        "vehicle lockedCargo cargo index",
    ],
    [
        "u",
        "lockeddriver",
        "lockedDriver",
        "Check whether driver position of the vehicle turret is locked.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "lockedDriver vehicle",
    ],
    [
        "u",
        "lockedinventory",
        "lockedInventory",
        "Checks whether vehicle inventory is locked",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "lockedInventory vehicle",
    ],
    [
        "b",
        "lockedturret",
        "lockedTurret",
        "Check whether gunner position of the vehicle turret is locked.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "vehicle lockedTurret turret path",
    ],
    [
        "u",
        "lockidentity",
        "lockIdentity",
        "Locks identity of a person. This will disable default identity.",
        "unit lockIdentity",
        "",
        "BOOL",
        "",
        "OBJECT",
        "lockIdentity person",
    ],
    [
        "b",
        "lockinventory",
        "lockInventory",
        "Locks vehicle inventory, making it unaccessible.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle lockInventory locked",
    ],
    [
        "b",
        "lockturret",
        "lockTurret",
        "Lock the gunner position of the vehicle turret.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle lockTurret [turret path, lock]",
    ],
    [
        "b",
        "lockwp",
        "lockWp",
        "Disables switching to the next waypoint (the current waypoint will never complete while lockWp is used). This is sometimes used during cut-scenes.",
        "groupOne lockWP true",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "BOOL",
        "group lockWp lockWP",
    ],
    [
        "u",
        "log",
        "log",
        "The base-10 logarithm of x.",
        "log 10",
        "1",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "log x",
    ],
    [
        "n",
        "logentities",
        "logEntities",
        "Creates a log file containing a list of all game entites in scene.,",
        "",
        "",
        "NOTHING",
        "",
        "",
        "logEntities",
    ],
    [
        "u",
        "lognetwork",
        "logNetwork",
        "Registers new log file for recording a network traffic, returns handle for the log.",
        "logNetwork 'myLog.txt'",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "logNetwork [filename, filter]",
    ],
    [
        "u",
        "lognetworkterminate",
        "logNetworkTerminate",
        "Terminates a network log file with given handle",
        "logNetworkTerminate _handle",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "logNetworkTerminate logHandle",
    ],
    [
        "b",
        "lookat",
        "lookAt",
        "Control what the unit is looking at (target or position) (format <ar>Position</ar>)",
        "someSoldier lookAt otherSoldier; otherSoldier lookAt getMarkerPos 'markerOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY,OBJECT",
        "unit(s) lookAt position",
    ],
    [
        "b",
        "lookatpos",
        "lookAtPos",
        "Center the map on, and point the camera at, the position.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map lookAtPos position",
    ],
    [
        "u",
        "magazinecargo",
        "magazineCargo",
        "Get array with magazines from ammo box (or any general weapon holder container). ",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "magazineCargo box ",
    ],
    [
        "u",
        "magazines",
        "magazines",
        "Returns an array with the type names of all the vehicle's magazines.",
        "magazines player",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazines vehicle or [vehicle, (includeEmpty)]",
    ],
    [
        "u",
        "magazinesallturrets",
        "magazinesAllTurrets",
        "Returns an array with the type names of all the vehicle's magazines and ammo count.",
        "magazinesAllTurrets tank",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazinesAllTurrets vehicle or [vehicle, excludePersonTurrets]",
    ],
    [
        "u",
        "magazinesammo",
        "magazinesAmmo",
        "Returns an array of subarrays with the type names and ammo left of all the vehicle's magazines.",
        "magazinesAmmo player",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazinesAmmo vehicle or [vehicle, (includeEmpty)]",
    ],
    [
        "u",
        "magazinesammocargo",
        "magazinesAmmoCargo",
        "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo magazines.",
        "magazinesAmmoCargo vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "magazinesAmmoCargo vehicle",
    ],
    [
        "u",
        "magazinesammofull",
        "magazinesAmmoFull",
        "Returns an array of subarrays with the type names and ammo left of all the vehicle's magazines.",
        "magazinesAmmoFull player",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazinesAmmoFull vehicle or [vehicle, (includeEmpty)]",
    ],
    [
        "u",
        "magazinesdetail",
        "magazinesDetail",
        "Returns an array with the type names of all the unit's magazines.",
        "magazines player",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazinesDetail unit or [unit, (includeEmpty)]",
    ],
    [
        "u",
        "magazinesdetailbackpack",
        "magazinesDetailBackpack",
        "Returns an array with the type names of all the unit's backpack magazines.",
        "magazinesBackpack player",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazinesDetailBackpack unit or [unit, (includeEmpty)]",
    ],
    [
        "u",
        "magazinesdetailuniform",
        "magazinesDetailUniform",
        "Returns an array with the type names of all the unit's uniform magazines.",
        "magazinesUniform player",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazinesDetailUniform unit or [unit, (includeEmpty)]",
    ],
    [
        "u",
        "magazinesdetailvest",
        "magazinesDetailVest",
        "Returns an array with the type names of all the unit's vest magazines.",
        "magazinesVest player",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "magazinesDetailVest unit or [unit, (includeEmpty)]",
    ],
    [
        "b",
        "magazinesturret",
        "magazinesTurret",
        "Returns all magazines of given turret. Use turret path [-1] for drivers turret.",
        "vehicle player magazinesTurret [0,0]",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "vehicle magazinesTurret turretPath or [turretPath, includeEmpty]",
    ],
    [
        "b",
        "magazineturretammo",
        "magazineTurretAmmo",
        "Returns ammo count of given type from given turret.",
        "vehicle player ammoTurret ['cls', [0]]",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "vehicle magazineTurretAmmo [magazineClass, turretPath]",
    ],
    [
        "u",
        "mapanimadd",
        "mapAnimAdd",
        "Adds the next frame to the map animation. The format of frame is [time, zoom, position], the format of position is <ar>Position2D</ar>.",
        "mapAnimAdd [1, 0.1, getMarkerPos 'anim1']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "mapAnimAdd frame",
    ],
    [
        "n",
        "mapanimclear",
        "mapAnimClear",
        "Clears the map animation.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "mapAnimClear",
    ],
    [
        "n",
        "mapanimcommit",
        "mapAnimCommit",
        "Plays the map animation.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "mapAnimCommit",
    ],
    [
        "n",
        "mapanimdone",
        "mapAnimDone",
        "Checks whether the map animation has finished.",
        "",
        "",
        "BOOL",
        "",
        "",
        "mapAnimDone",
    ],
    [
        "b",
        "mapcenteroncamera",
        "mapCenterOnCamera",
        "Enable / disable continuous centering the map on the camera position",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "BOOL",
        "map mapCenterOnCamera enable",
    ],
    [
        "u",
        "mapcenteroncamera",
        "mapCenterOnCamera",
        "center minimap on camera",
        "",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "mapCenterOnCamera map",
    ],
    [
        "u",
        "mapgridposition",
        "mapGridPosition",
        "Returns the position as map coords.",
        "mapGridPosition player",
        "",
        "STRING",
        "",
        "ARRAY,OBJECT",
        "mapGridPosition object",
    ],
    [
        "n",
        "markasfinishedonsteam",
        "markAsFinishedOnSteam",
        "Marks current mission and finished on steam. Returns true is Steam query is successfully started or false otherwise.",
        "",
        "",
        "BOOL",
        "",
        "",
        "markAsFinishedOnSteam",
    ],
    [
        "u",
        "markeralpha",
        "markerAlpha",
        "Gets the marker alpha. See <f>setMarkerAlpha</f>.",
        "markerAlpha 'MarkerOne'",
        "",
        "SCALAR",
        "",
        "STRING",
        "markerAlpha markerName",
    ],
    [
        "u",
        "markerbrush",
        "markerBrush",
        "Gets the marker brush. See <f>setMarkerBrush</f>.",
        "markerBrush 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "markerBrush name",
    ],
    [
        "u",
        "markerchannel",
        "markerChannel",
        "Gets the markers chat channel.",
        "markerChannel 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "markerChannel name",
    ],
    [
        "u",
        "markercolor",
        "markerColor",
        "Gets the marker color. See <f>setMarkerColor</f>\nNote: this function is identical to <f>getMarkerColor</f>.",
        "markerColor 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "markerColor markerName",
    ],
    [
        "u",
        "markerdir",
        "markerDir",
        "Gets the marker direction. See <f>setMarkerDir</f>.",
        "markerDir 'MarkerOne'",
        "",
        "SCALAR",
        "",
        "STRING",
        "markerDir markerName",
    ],
    [
        "u",
        "markerpolyline",
        "markerPolyline",
        "Gets the markers polyline coordinates.",
        "markerPolyline 'MarkerOne'",
        "",
        "ARRAY",
        "",
        "STRING",
        "markerPolyline name",
    ],
    [
        "u",
        "markerpos",
        "markerPos",
        "Returns the marker position in format [x,z,y]\nNote: this function is identical to <f>getMarkerPos</f>.",
        "markerPos 'markerOne'",
        "",
        "ARRAY",
        "",
        "STRING",
        "markerPos markerName",
    ],
    [
        "u",
        "markerpos",
        "markerPos",
        "Returns the marker position in format [x,z,y], where z is preserved.",
        "markerPos ['markerOne', true]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "markerPos [markerName, preserveElevation]",
    ],
    [
        "u",
        "markershadow",
        "markerShadow",
        "Returns whether marker has shadow enabled. See <f>setMarkerShadow</f>.",
        "markerShadow 'MarkerOne'",
        "",
        "BOOL",
        "",
        "STRING",
        "markerShadow marker",
    ],
    [
        "u",
        "markershape",
        "markerShape",
        "Gets the marker shape. See <f>setMarkerShape</f>.",
        "markerShape 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "markerShape name",
    ],
    [
        "u",
        "markersize",
        "markerSize",
        "Gets the marker size. See <f>setMarkerSize</f>\nNote: this function is identical to <f>getMarkerSize</f>.",
        "markerSize 'MarkerOne'",
        "",
        "ARRAY",
        "",
        "STRING",
        "markerSize markerName",
    ],
    [
        "u",
        "markertext",
        "markerText",
        "Gets the marker text. See <f>setMarkerText</f>.",
        "markerText 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "markerText markerName",
    ],
    [
        "u",
        "markertype",
        "markerType",
        "Gets the type of the marker. See <f>setMarkerType</f>\nNote: this function is identical to <f>getMarkerType</f>.",
        "markerType 'MarkerOne'",
        "",
        "STRING",
        "",
        "STRING",
        "markerType markerName",
    ],
    [
        "b",
        "matrixmultiply",
        "matrixMultiply",
        "Resulting matrix of matrix multiplication",
        "",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "matrix1 matrixMultiply matrix2",
    ],
    [
        "u",
        "matrixtranspose",
        "matrixTranspose",
        "Returns transposed input matrix",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "matrixTranspose matrix",
    ],
    [
        "b",
        "max",
        "max",
        "The greater of a,b",
        "3 max 2",
        "3",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a max b",
    ],
    [
        "u",
        "maxload",
        "maxLoad",
        "Returns maximum load value of a unit or container",
        "maxLoad player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "maxLoad unit or container",
    ],
    [
        "u",
        "members",
        "members",
        "Return a list of members in given team.",
        "_members = members _team",
        "",
        "ARRAY",
        "",
        "TEAM_MEMBER",
        "members team",
    ],
    [
        "b",
        "menuaction",
        "menuAction",
        "Returns action stored in item on given path.",
        "example",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuAction &lt;path&gt;",
    ],
    [
        "u",
        "menuaction",
        "menuAction",
        "Returns action stored in item on given path.",
        "example",
        "",
        "STRING",
        "",
        "ARRAY",
        "menuAction [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menuadd",
        "menuAdd",
        "Adds new submenu entry into item on given path.",
        "example",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuAdd [&lt;path&gt;, &lt;text&gt;]",
    ],
    [
        "u",
        "menuadd",
        "menuAdd",
        "Adds new submenu entry into item on given path.",
        "example",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "menuAdd [&lt;idc&gt;, &lt;path&gt;, &lt;text&gt;]",
    ],
    [
        "b",
        "menuchecked",
        "menuChecked",
        "Returns if item on given path is checked or not.",
        "example",
        "",
        "BOOL",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuChecked &lt;path&gt;",
    ],
    [
        "u",
        "menuchecked",
        "menuChecked",
        "Returns if item on given path is checked or not.",
        "example",
        "",
        "BOOL",
        "",
        "ARRAY",
        "menuChecked [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "u",
        "menuclear",
        "menuClear",
        "Removes all entries from given menu strip.",
        "example",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "menuClear &lt;MenuStripControl&gt;",
    ],
    [
        "u",
        "menuclear",
        "menuClear",
        "Removes all entries from given menu strip.",
        "example",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "menuClear &lt;idc&gt;",
    ],
    [
        "b",
        "menucollapse",
        "menuCollapse",
        "Collapses item on given path and all its childs.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuCollapse &lt;path&gt;",
    ],
    [
        "u",
        "menucollapse",
        "menuCollapse",
        "Collapses item on given path and all its childs.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuCollapse [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menudata",
        "menuData",
        "Returns data stored in menu entry on given path",
        "example",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuData &lt;path&gt;",
    ],
    [
        "u",
        "menudata",
        "menuData",
        "Returns data stored in menu entry on given path",
        "example",
        "",
        "STRING",
        "",
        "ARRAY",
        "menuData [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menudelete",
        "menuDelete",
        "Deletes menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuDelete &lt;path&gt;",
    ],
    [
        "u",
        "menudelete",
        "menuDelete",
        "Deletes menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuDelete [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menuenable",
        "menuEnable",
        "Enables or disables menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuEnable &lt;path&gt; or [&lt;path&gt;, (enable = true)]",
    ],
    [
        "u",
        "menuenable",
        "menuEnable",
        "Enables or disables menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuEnable [&lt;idc&gt;, &lt;path&gt;, (enable = true)]",
    ],
    [
        "b",
        "menuenabled",
        "menuEnabled",
        "Returns if menu entry on given path is enabled or not.",
        "example",
        "",
        "BOOL",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuEnabled &lt;path&gt;",
    ],
    [
        "u",
        "menuenabled",
        "menuEnabled",
        "Returns if menu entry on given path is enabled or not.",
        "example",
        "",
        "BOOL",
        "",
        "ARRAY",
        "menuEnabled [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menuexpand",
        "menuExpand",
        "Expands given menu entry on given path and all its parents so entry is visible.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuExpand &lt;path&gt;",
    ],
    [
        "u",
        "menuexpand",
        "menuExpand",
        "Expands given menu entry on given path and all its parents so entry is visible.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuExpand [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "u",
        "menuhover",
        "menuHover",
        "Returns path to menu entry mouse is currently hovering over.",
        "example",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "menuHover &lt;MenuStripControl&gt;",
    ],
    [
        "u",
        "menuhover",
        "menuHover",
        "Returns path to menu entry mouse is currently hovering over.",
        "example",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "menuHover &lt;idc&gt;",
    ],
    [
        "b",
        "menupicture",
        "menuPicture",
        "Returns picture set into item on given path",
        "example",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuPicture &lt;path&gt;",
    ],
    [
        "u",
        "menupicture",
        "menuPicture",
        "Returns picture set into item on given path",
        "example",
        "",
        "STRING",
        "",
        "ARRAY",
        "menuPicture [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menusetaction",
        "menuSetAction",
        "Sets new action into menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetAction [&lt;path&gt;, &lt;action&gt;]",
    ],
    [
        "u",
        "menusetaction",
        "menuSetAction",
        "Sets new action into menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetAction [&lt;idc&gt;, &lt;path&gt;, &lt;action&gt;]",
    ],
    [
        "b",
        "menusetcheck",
        "menuSetCheck",
        "Sets item on given path to be checked or not.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetCheck [&lt;path&gt;, &lt;bool&gt;]",
    ],
    [
        "u",
        "menusetcheck",
        "menuSetCheck",
        "Sets item on given path to be checked or not.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetCheck [&lt;idc&gt;, &lt;path&gt;, &lt;bool&gt;]",
    ],
    [
        "b",
        "menusetdata",
        "menuSetData",
        "Sets new data into item on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetData [&lt;path&gt;, &lt;data&gt;]",
    ],
    [
        "u",
        "menusetdata",
        "menuSetData",
        "Sets new data into item on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetData [&lt;idc&gt;, &lt;path&gt;, &lt;data&gt;]",
    ],
    [
        "b",
        "menusetpicture",
        "menuSetPicture",
        "Sets new picture into menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetPicture [&lt;path&gt;, &lt;picture&gt;]",
    ],
    [
        "u",
        "menusetpicture",
        "menuSetPicture",
        "Sets new picture into menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetPicture [&lt;idc&gt;, &lt;path&gt;, &lt;picture&gt;]",
    ],
    [
        "b",
        "menusetshortcut",
        "menuSetShortcut",
        "Sets shortcut for the item on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetShortcut [&lt;path&gt;, &lt;shortcut&gt;]",
    ],
    [
        "u",
        "menusetshortcut",
        "menuSetShortcut",
        "Sets shortcut for menu item on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetShortcut [&lt;idc&gt;, &lt;path&gt;, &lt;shortcut&gt;]",
    ],
    [
        "b",
        "menusettext",
        "menuSetText",
        "Sets text for the item on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetText [&lt;path&gt;, &lt;text&gt;]",
    ],
    [
        "u",
        "menusettext",
        "menuSetText",
        "Sets text for menu item on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetText [&lt;idc&gt;, &lt;path&gt;, &lt;text&gt;]",
    ],
    [
        "b",
        "menuseturl",
        "menuSetURL",
        "Sets URL for the item on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetURL [&lt;path&gt;, &lt;url&gt;]",
    ],
    [
        "u",
        "menuseturl",
        "menuSetURL",
        "Sets URL for menu item on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetURL [&lt;idc&gt;, &lt;path&gt;, &lt;url&gt;]",
    ],
    [
        "b",
        "menusetvalue",
        "menuSetValue",
        "Sets new value into menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSetValue [&lt;path&gt;, value]",
    ],
    [
        "u",
        "menusetvalue",
        "menuSetValue",
        "Sets new value into menu entry on given path.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSetValue [&lt;idc&gt;, &lt;path&gt;, value]",
    ],
    [
        "b",
        "menushortcut",
        "menuShortcut",
        "Returns shortcut related to menu entry on given path.",
        "example",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuShortcut &lt;path&gt;",
    ],
    [
        "u",
        "menushortcut",
        "menuShortcut",
        "Returns shortcut related to menu entry on given path.",
        "example",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "menuShortcut [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menushortcuttext",
        "menuShortcutText",
        "Returns text describing shortcut set to item on given path.",
        "example",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuShortcutText &lt;path&gt;",
    ],
    [
        "u",
        "menushortcuttext",
        "menuShortcutText",
        "Returns string containing shortcut text for menu item on given path.",
        "example",
        "",
        "STRING",
        "",
        "ARRAY",
        "menuShortcutText [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menusize",
        "menuSize",
        "Returns how many sub entries is in item on given path.",
        "example",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSize &lt;path&gt;",
    ],
    [
        "u",
        "menusize",
        "menuSize",
        "Returns how many sub entries is in item on given path.",
        "example",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "menuSize [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menusort",
        "menuSort",
        "Sorts subentries of item on given path by their text.",
        "example",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuSort [&lt;path&gt;, &lt;reversed&gt;]",
    ],
    [
        "u",
        "menusort",
        "menuSort",
        "Sorts subentries of item on given path by their text.",
        "example",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "menuSort [&lt;idc&gt;, &lt;path&gt;, &lt;reversed&gt;]",
    ],
    [
        "b",
        "menutext",
        "menuText",
        "Returns current text set in menu entry on given path.",
        "example",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuText &lt;path&gt;",
    ],
    [
        "u",
        "menutext",
        "menuText",
        "Returns current text set in menu entry on given path.",
        "example",
        "",
        "STRING",
        "",
        "ARRAY",
        "menuText [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menuurl",
        "menuURL",
        "Returns current URL set in entry on given path.",
        "example",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuURL &lt;path&gt;",
    ],
    [
        "u",
        "menuurl",
        "menuURL",
        "Returns current URL set in entry on given path.",
        "example",
        "",
        "STRING",
        "",
        "ARRAY",
        "menuURL [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "menuvalue",
        "menuValue",
        "Returns current value set in menu entry on given path.",
        "example",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "&lt;MenuStripControl&gt; menuValue &lt;path&gt;",
    ],
    [
        "u",
        "menuvalue",
        "menuValue",
        "Returns current value set in menu entry on given path.",
        "example",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "menuValue [&lt;idc&gt;, &lt;path&gt;]",
    ],
    [
        "b",
        "merge",
        "merge",
        "Merges other HashMap elements into HashMap and optionally overwrites existing values",
        "_hashMap merge [_otherMap, true]",
        "",
        "NOTHING",
        "HASHMAP",
        "ARRAY,HASHMAP",
        "HashMap merge [hashMap, overwriteExisting]",
    ],
    [
        "b",
        "min",
        "min",
        "The smaller of a,b",
        "3 min 2",
        "2",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a min b",
    ],
    [
        "u",
        "mineactive",
        "mineActive",
        "Checks whether the given mine is active",
        "active mine",
        "",
        "BOOL",
        "",
        "OBJECT",
        "mineActive obj",
    ],
    [
        "b",
        "minedetectedby",
        "mineDetectedBy",
        "Returns true if mine is detected by given side",
        "mine mineDetectedBy (side player)",
        "",
        "BOOL",
        "OBJECT",
        "SIDE",
        "mine mineDetectedBy side",
    ],
    [
        "u",
        "missiletarget",
        "missileTarget",
        "Returns current target of given guided missile",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "missileTarget missile",
    ],
    [
        "u",
        "missiletargetpos",
        "missileTargetPos",
        "Returns assigned position of given manual missile",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "missileTargetPos missile",
    ],
    [
        "n",
        "missionconfigfile",
        "missionConfigFile",
        "Return root of mission description.ext entries hierarchy.",
        "",
        "",
        "CONFIG",
        "",
        "",
        "missionConfigFile",
    ],
    [
        "n",
        "missiondifficulty",
        "missionDifficulty",
        "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it's used one from player's options.",
        "difficulty",
        "",
        "SCALAR",
        "",
        "",
        "missionDifficulty",
    ],
    [
        "n",
        "missionend",
        "missionEnd",
        "Returns mission end in format [endType, isFailMission, isFailed] or [] if mission has not ended",
        "missionEnd",
        "",
        "ARRAY",
        "",
        "",
        "missionEnd",
    ],
    [
        "n",
        "missionname",
        "missionName",
        "Returns the name of the current mission.",
        "",
        "",
        "STRING",
        "",
        "",
        "missionName",
    ],
    [
        "n",
        "missionnamesource",
        "missionNameSource",
        "Returns the original filename of the current mission.",
        "",
        "",
        "STRING",
        "",
        "",
        "missionNameSource",
    ],
    [
        "n",
        "missionnamespace",
        "missionNamespace",
        "Returns the global namespace attached to mission.",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "missionNamespace",
    ],
    [
        "n",
        "missionprofilenamespace",
        "missionProfileNamespace",
        "Returns the profile namespace attached to mission. Same lifetime as profileNamespace",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "missionProfileNamespace",
    ],
    [
        "n",
        "missionstart",
        "missionStart",
        "Returns the time of the mission start in format [year, month, day, hour, minute, second].",
        "",
        "",
        "ARRAY",
        "",
        "",
        "missionStart",
    ],
    [
        "n",
        "missionversion",
        "missionVersion",
        "Returns the version of the current mission.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "missionVersion",
    ],
    [
        "b",
        "mod",
        "mod",
        "The remainder of a divided by b. Note that the remainer is calculated in the real domain.",
        "3 mod 2",
        "1",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "SCALAR,NaN",
        "a mod b",
    ],
    [
        "b",
        "modeltoworld",
        "modelToWorld",
        "Converts position from object model space to world space.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object modelToWorld modelPos",
    ],
    [
        "b",
        "modeltoworldvisual",
        "modelToWorldVisual",
        "Converts position from object model space to world space in render time.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object modelToWorldVisual modelPos",
    ],
    [
        "b",
        "modeltoworldvisualworld",
        "modelToWorldVisualWorld",
        "Converts position from object model space to world space in render time.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object modelToWorldVisualWorld modelPos",
    ],
    [
        "b",
        "modeltoworldworld",
        "modelToWorldWorld",
        "Converts position from object model space to world space (usable by setPosWorld for example).",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object modelToWorldWorld modelPos",
    ],
    [
        "u",
        "modparams",
        "modParams",
        "Returns list of mod parameters according to given options, values are in same order as the given options. Available options: name, picture, logo, logoOver, logoSmall, tooltip, tooltipowned, action, actionName, overview, hidePicture, hideName, defaultMod, serverOnly, active",
        "modParams ['Kart', ['name', 'logo', 'picture']]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "modParams [modName, [options]]",
    ],
    [
        "n",
        "moonintensity",
        "moonIntensity",
        "Returns moon light intensity.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "moonIntensity",
    ],
    [
        "u",
        "moonphase",
        "moonPhase",
        "Returns the moon phase on the specified date.",
        "hint str moonPhase date",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "moonPhase [year, month, day, hour, minute]",
    ],
    [
        "u",
        "morale",
        "morale",
        "Checks a current morale level of the unit (-1..+1).",
        "morale leader player",
        "0.5",
        "SCALAR",
        "",
        "OBJECT",
        "morale unit",
    ],
    [
        "b",
        "move",
        "move",
        "Creates a move waypoint on the given position (format <ar>Position</ar>) and makes it the currently active group waypoint.",
        "groupOne move getPos player",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "ARRAY",
        "group move pos",
    ],
    [
        "u",
        "move3dencamera",
        "move3DENCamera",
        "Moves 3DEN camera to given position.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "move3DENCamera &lt;position, useOffset&gt;",
    ],
    [
        "b",
        "moveinany",
        "moveInAny",
        "Attemps to move unit in any free position in vehicle",
        "player moveInAny vehicle",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "unit moveInAny vehicle",
    ],
    [
        "b",
        "moveincargo",
        "moveInCargo",
        "Moves the soldier into the vehicle's cargo position. (Immediately, without animation).",
        "soldierOne moveInCargo jeepOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier moveInCargo vehicle",
    ],
    [
        "b",
        "moveincargo",
        "moveInCargo",
        "Moves the soldier into a vehicle's specified cargo position. (Immediately, without animation).",
        "soldierOne moveInCargo jeepOne",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "soldier moveInCargo [vehicle, CargoIndex(, canReassign)]",
    ],
    [
        "b",
        "moveincommander",
        "moveInCommander",
        "Moves the soldier into the vehicle's commander position. (Immediatetely, without animation).",
        "soldierOne moveInCommander jeepOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier moveInCommander vehicle",
    ],
    [
        "b",
        "moveindriver",
        "moveInDriver",
        "Moves the soldier into the vehicle's driver position. (Immediately, without animation).",
        "soldierOne moveInDriver jeepOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier moveInDriver vehicle",
    ],
    [
        "b",
        "moveingunner",
        "moveInGunner",
        "Moves the soldier into the vehicle's gunner position. (Immediately, without animation).",
        "soldierOne moveInGunner jeepOne",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "soldier moveInGunner vehicle",
    ],
    [
        "b",
        "moveinturret",
        "moveInTurret",
        "Moves the soldier into the vehicle's turret. (Immediately, without animation).",
        "soldierOne moveInTurret [tank, [0, 0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "soldier moveInTurret [vehicle, turret path]",
    ],
    [
        "b",
        "moveobjecttoend",
        "moveObjectToEnd",
        "Shifts an editor object to the end of the objects array. This means that the object will be drawn last (after all other objects).",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "map moveObjectToEnd object",
    ],
    [
        "b",
        "moveout",
        "moveOut",
        "Moves out person (dead or alive) from the given vehicle",
        "_soldier moveOut _tank",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "person moveOut vehicle",
    ],
    [
        "u",
        "moveout",
        "moveOut",
        "Moves the soldier out of vehicle. (Immediately, without animation).",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "moveOut soldier",
    ],
    [
        "u",
        "movetime",
        "moveTime",
        "Returns the current time of the most important RTM animation currently being played on the soldier.",
        "moveTime player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "moveTime soldier",
    ],
    [
        "b",
        "moveto",
        "moveTo",
        "Low level command to person to move to given position.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person moveTo position",
    ],
    [
        "u",
        "movetocompleted",
        "moveToCompleted",
        "Check if latest low level moveTo command is finished.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "moveToCompleted person",
    ],
    [
        "u",
        "movetofailed",
        "moveToFailed",
        "Check if latest low level moveTo command failed.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "moveToFailed person",
    ],
    [
        "n",
        "musicvolume",
        "musicVolume",
        "Returns the current music volume level as set by <f>fadeMusic</f>.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "musicVolume",
    ],
    [
        "u",
        "name",
        "name",
        "Returns the name of the variable assigned to the object in the mission editor. When used on a vehicle, the name of the first crew member is returned (in order: commander, driver, gunner).",
        "name vehicle player",
        "",
        "STRING",
        "",
        "OBJECT",
        "name object",
    ],
    [
        "u",
        "name",
        "name",
        "Return name of global vatiable containing given location.",
        "",
        "",
        "STRING",
        "",
        "LOCATION",
        "name location",
    ],
    [
        "u",
        "namedproperties",
        "namedProperties",
        "returns list of named properties on Geometry LOD",
        "namedProperties object",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "namedProperties entity",
    ],
    [
        "u",
        "namesound",
        "nameSound",
        "Returns the nameSound of the variable assigned to the object in the mission editor.",
        "nameSound player",
        "",
        "STRING",
        "",
        "OBJECT",
        "nameSound object",
    ],
    [
        "b",
        "nearentities",
        "nearEntities",
        "Find entities in the circle with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed.",
        "_list = position player nearObjects 50",
        "",
        "ARRAY",
        "ARRAY,OBJECT",
        "SCALAR,ARRAY",
        "position nearEntities radius or [typeName, radius] or [[typeName1, typeName2, ...], radius]",
    ],
    [
        "u",
        "nearestbuilding",
        "nearestBuilding",
        "Returns the nearest building to the given object.",
        "neareastBuilding player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "nearestBuilding obj",
    ],
    [
        "u",
        "nearestbuilding",
        "nearestBuilding",
        "Returns the nearest building to the given position.",
        "neareastBuilding position player",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "nearestBuilding pos",
    ],
    [
        "u",
        "nearestlocation",
        "nearestLocation",
        "Find the nearest location (to the given position) of given type.",
        "",
        "",
        "LOCATION",
        "",
        "ARRAY",
        "nearestLocation [position, type]",
    ],
    [
        "u",
        "nearestlocations",
        "nearestLocations",
        "Find the nearest locations (from the given position) of certain types, within the specified distance. If &lt;position to sort from&gt; is provided, locations will be ordered by distance from this point.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "nearestLocations [position, [types], distance, &lt;position to sort from&gt;]",
    ],
    [
        "u",
        "nearestlocationwithdubbing",
        "nearestLocationWithDubbing",
        "Find the nearest location (to the given position) having it speech non-empty.",
        "",
        "",
        "LOCATION",
        "",
        "ARRAY",
        "nearestLocationWithDubbing position",
    ],
    [
        "u",
        "nearestmines",
        "nearestMines",
        "Returns list of nearest mines according to the given params.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "nearestMines [position, types, distance, (sort), (only2D)]",
    ],
    [
        "b",
        "nearestobject",
        "nearestObject",
        "Find object nearest to given position with given type or visitor id.",
        "obj = position player nearestObject 'Building'",
        "",
        "OBJECT",
        "ARRAY",
        "STRING",
        "position nearestObject typeOrId",
    ],
    [
        "b",
        "nearestobject",
        "nearestObject",
        "Find object nearest to given position with given Visitor id.",
        "obj = position player nearestObject 1234",
        "",
        "OBJECT",
        "ARRAY",
        "SCALAR",
        "position nearestObject id",
    ],
    [
        "u",
        "nearestobject",
        "nearestObject",
        "Returns the nearest object of the given type to the given position or object\nPos may be using format [x,y,z, 'type'] or [object, 'type'].",
        "nearestObject [player, 'StreetLamp']",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "nearestObject pos",
    ],
    [
        "u",
        "nearestobjects",
        "nearestObjects",
        "Returns a list of nearest objects of the given types to the given position or object, within the specified distance\nPos may be using format [x,y,z, ['type',...], limit] or [object, ['type',...], limit].",
        "nearestObjects [player, ['Car','Tank'], 200]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "nearestObjects [pos,[map types], radius, testIn2D]",
    ],
    [
        "u",
        "nearestterrainobjects",
        "nearestTerrainObjects",
        "Returns a list of nearest objects of the given map types to the given position or object, within the specified distance. The returned list can be sorted or unsorted\nPos may be using format [x,y,z, ['map type',...], limit] or [object, ['map type',...], limit].",
        "nearestTerrainObjects [player, ['church','chapel'], 200, true]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "nearestTerrainObjects [pos,[map types], radius, sorted, testIn2D]",
    ],
    [
        "b",
        "nearobjects",
        "nearObjects",
        "Find objects in the circle with given radius. If typeName is given, only objects of given type (or its subtype) are listed.",
        "_list = position player nearObjects 50",
        "",
        "ARRAY",
        "ARRAY,OBJECT",
        "SCALAR,ARRAY",
        "position nearObjects radius or [typeName, radius]",
    ],
    [
        "b",
        "nearobjectsready",
        "nearObjectsReady",
        "Check whether all data are loaded to nearObjects will return in reasonable time.",
        "_ok = position player nearObjectsReady 50",
        "",
        "BOOL",
        "ARRAY,OBJECT",
        "SCALAR",
        "position nearObjectsReady radius",
    ],
    [
        "b",
        "nearroads",
        "nearRoads",
        "Find the road segments within the circle of given radius.",
        "_list = player nearRoads 50",
        "",
        "ARRAY",
        "ARRAY,OBJECT",
        "SCALAR",
        "position or object nearRoads radius",
    ],
    [
        "b",
        "nearsupplies",
        "nearSupplies",
        "Find objects in the circle with given radius. If typeName is given, only objects of given type (or its subtype) are listed.",
        "_list = position player nearSuplies 50",
        "",
        "ARRAY",
        "ARRAY,OBJECT",
        "SCALAR,ARRAY",
        "position nearSupplies radius or [typeName, radius]",
    ],
    [
        "b",
        "neartargets",
        "nearTargets",
        "Check target database of the unit for all targets in max. distance radius around it. The output is list of items: [position, type, side, subj. cost, object]",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "SCALAR",
        "unit nearTargets radius",
    ],
    [
        "u",
        "needreload",
        "needReload",
        "Return how much vehicle wants to reload its weapons.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "needReload vehicle",
    ],
    [
        "u",
        "netid",
        "netId",
        "Unique ID of an object.",
        "netId player",
        "1:8965",
        "STRING",
        "",
        "OBJECT",
        "netId object",
    ],
    [
        "u",
        "netid",
        "netId",
        "Unique ID of a group.",
        "netId (group player)",
        "1:5623",
        "STRING",
        "",
        "GROUP",
        "netId group",
    ],
    [
        "n",
        "netobjnull",
        "netObjNull",
        "A non-existing object. This value is not equal to anything, including itself.",
        "myNetObject == objNetNull",
        "false",
        "NetObject",
        "",
        "",
        "netObjNull",
    ],
    [
        "b",
        "newoverlay",
        "newOverlay",
        "Creates the new overlay dialog for the specified type of overlay.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "CONFIG",
        "map newOverlay config",
    ],
    [
        "u",
        "nextmenuitemindex",
        "nextMenuItemIndex",
        "Returns the next available menu item index.",
        "",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "nextMenuItemIndex map",
    ],
    [
        "n",
        "nextweatherchange",
        "nextWeatherChange",
        "Return the time (in seconds) when the next weather change will occur.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "nextWeatherChange",
    ],
    [
        "n",
        "nil",
        "nil",
        "Nil value. This value can be used to undefine an existing variable.",
        "variableToDestroy = nil",
        "",
        "ANY",
        "",
        "",
        "nil",
    ],
    [
        "b",
        "nmenuitems",
        "nMenuItems",
        "Returns the total number of user-added menu items belonging to the given menu.",
        "",
        "",
        "SCALAR",
        "CONTROL",
        "SCALAR,STRING",
        "map nMenuItems menu index",
    ],
    [
        "u",
        "not",
        "not",
        "not a",
        "not false",
        "true",
        "BOOL",
        "",
        "BOOL",
        "not a",
    ],
    [
        "u",
        "numberofenginesrtd",
        "numberOfEnginesRTD",
        "Returns number of engines helicopter has.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "numberOfEnginesRTD RTD_helicopter",
    ],
    [
        "u",
        "numbertodate",
        "numberToDate",
        "Convert float number to date.",
        "date = NumberToDate [2008,0.5324]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "numberToDate [year,time]",
    ],
    [
        "u",
        "objectcurators",
        "objectCurators",
        "Returns array with all curators which can edit given object.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "objectCurators obj",
    ],
    [
        "u",
        "objectfromnetid",
        "objectFromNetId",
        "Get object with given unique ID.",
        "objectFromNetId netId player",
        "player",
        "OBJECT",
        "",
        "STRING",
        "objectFromNetId id",
    ],
    [
        "u",
        "objectparent",
        "objectParent",
        "Returns object's parent.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "objectParent object",
    ],
    [
        "n",
        "objnull",
        "objNull",
        "A non-existing object. This value is not equal to anything, including itself.",
        "player == objNull",
        "false",
        "OBJECT",
        "",
        "",
        "objNull",
    ],
    [
        "b",
        "objstatus",
        "objStatus",
        "Sets the briefing objective status. Status may be one of: 'ACTIVE', 'FAILED', 'DONE' or 'HIDDEN'.",
        "'obj_1' objStatus 'FAILED'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "objective objStatus status",
    ],
    [
        "u",
        "onbriefinggroup",
        "onBriefingGroup",
        "Defines a sound (voice) that is played the first time when the Group section in the briefing is selected.",
        "onBriefingGroup 'GroupVoiceOver'",
        "",
        "NOTHING",
        "",
        "STRING",
        "onBriefingGroup sound",
    ],
    [
        "u",
        "onbriefingnotes",
        "onBriefingNotes",
        "Defines a sound (voice) that is played the first time when the Notes section in the briefing is selected.",
        "onBriefingNotes 'NotesVoiceOver'",
        "",
        "NOTHING",
        "",
        "STRING",
        "onBriefingNotes sound",
    ],
    [
        "u",
        "onbriefingplan",
        "onBriefingPlan",
        "Defines a sound (voice) that is played the first time when the Plan section in the briefing is selected.",
        "onBriefingPlan 'PlanVoiceOver'",
        "",
        "NOTHING",
        "",
        "STRING",
        "onBriefingPlan sound",
    ],
    [
        "u",
        "onbriefingteamswitch",
        "onBriefingTeamSwitch",
        "Defines a sound (voice) that is played the first time when the Team switch section in the briefing is selected.",
        "onBriefingTeamSwitch 'TeamSwitchVoiceOver'",
        "",
        "NOTHING",
        "",
        "STRING",
        "onBriefingTeamSwitch sound",
    ],
    [
        "u",
        "oncommandmodechanged",
        "onCommandModeChanged",
        "Defines an action performed when command mode change. Command receives <br/\n_isHighCommand <t>bool</t> ",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onCommandModeChanged command",
    ],
    [
        "b",
        "ondoubleclick",
        "onDoubleClick",
        "Defines an action performed when the user double clicks on the map. Command receives:<br/\n<br/\n_pos <t>array</t> position<br/\n_units <t>array</t> selected units<br/\n_shift,_alt <t>bool</t> key state",
        "",
        "",
        "ANY",
        "CONTROL",
        "STRING",
        "map onDoubleClick command",
    ],
    [
        "u",
        "oneachframe",
        "onEachFrame",
        "Defines an action performed on each frame (even when game is paused). Code is performed synchronously, cannot contain any sleep or wait.",
        "onEachFrame {}",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onEachFrame command",
    ],
    [
        "u",
        "ongroupiconclick",
        "onGroupIconClick",
        "Defines an action performed when player clicked on group marker (3D or in a map)",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onGroupIconClick command",
    ],
    [
        "u",
        "ongroupiconoverenter",
        "onGroupIconOverEnter",
        "Defines an action performed when player clicked on group marker (3D or in a map)",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onGroupIconOverEnter command",
    ],
    [
        "u",
        "ongroupiconoverleave",
        "onGroupIconOverLeave",
        "Defines an action performed when player clicked on group marker (3D or in a map)",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onGroupIconOverLeave command",
    ],
    [
        "u",
        "onhcgroupselectionchanged",
        "onHCGroupSelectionChanged",
        "Defines an action performed when HC group has been selected. Command receives <br/\n_group <t>group</t> selected group <br/\n_isSelected <t>bool</t> new selection state",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onHCGroupSelectionChanged command",
    ],
    [
        "b",
        "onmapsingleclick",
        "onMapSingleClick",
        "Defines an action performed when the user clicks on the map. Command receives:<br/\n<br/\n_pos <t>array</t> position<br/\n_units <t>array</t> selected units<br/\n_shift,_alt <t>bool</t> key state<br/\n_this <t>any</t> parameters passed to this function<br/\n<br/>If the click is processed, command should return true.",
        "'SoldierEG' onMapSingleClick '_this createUnit [_pos, group player]'",
        "",
        "NOTHING",
        "ANY",
        "STRING,CODE",
        "parameters onMapSingleClick command",
    ],
    [
        "u",
        "onmapsingleclick",
        "onMapSingleClick",
        "Defines an action performed when the user clicks on the map. Command receives:<br/\n<br/\n_pos <t>array</t> position<br/\n_units <t>array</t> selected units<br/\n_shift,_alt <t>bool</t> key state<br/\n<br/>If the click is processed, command should return true.",
        "onMapSingleClick '''SoldierEG'' createUnit [_pos, group player]'",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onMapSingleClick command",
    ],
    [
        "u",
        "onplayerconnected",
        "onPlayerConnected",
        "This statement is launched whenever a player is connected to a MP session. Variables _id, _name and _uid are set. See also getPlayerUID, kickUID, banUID.",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onPlayerConnected statement",
    ],
    [
        "u",
        "onplayerdisconnected",
        "onPlayerDisconnected",
        "This statement is launched whenever a player is disconnected from a MP session. Variables _id, _name and _uid are set.",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onPlayerDisconnected statement",
    ],
    [
        "u",
        "onpreloadfinished",
        "onPreloadFinished",
        "Defines an action performed after the preload screen finished.",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onPreloadFinished command",
    ],
    [
        "u",
        "onpreloadstarted",
        "onPreloadStarted",
        "Defines an action performed just before the preload screen started.",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onPreloadStarted command",
    ],
    [
        "b",
        "onshownewobject",
        "onShowNewObject",
        "Defines an action performed when the user right clicks on the map and selects New Object. Set to empty for default behavior. Command receives:<br/\n<br/\n_pos <t>array</t> position",
        "",
        "",
        "ANY",
        "CONTROL",
        "STRING",
        "map onShowNewObject command",
    ],
    [
        "u",
        "onteamswitch",
        "onTeamSwitch",
        "Defines an action performed when the team switch is finished. Command receives:<br/\n<br/\n_from <t>object</t> previous unit<br/\n_to <t>object</t> current units<br/\n<br/>",
        "",
        "",
        "NOTHING",
        "",
        "STRING,CODE",
        "onTeamSwitch command",
    ],
    [
        "n",
        "opencuratorinterface",
        "openCuratorInterface",
        "Force opens curator interface.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "openCuratorInterface",
    ],
    [
        "u",
        "opendlcpage",
        "openDLCPage",
        "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)",
        "openDLCPage 288520",
        "",
        "BOOL",
        "",
        "SCALAR",
        "openDLCPage appId",
    ],
    [
        "u",
        "opengps",
        "openGPS",
        "Opens or closes GPS minimap, returns true on success",
        "openGPS true;",
        "",
        "BOOL",
        "",
        "BOOL",
        "openGPS show",
    ],
    [
        "u",
        "openmap",
        "openMap",
        "Show player's map. If forced, cannot be closed.",
        "openMap [true,true]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "openMap [show, forced]",
    ],
    [
        "u",
        "openmap",
        "openMap",
        "Show player's map. If forced, cannot be closed.",
        "openMap true",
        "",
        "BOOL",
        "",
        "BOOL",
        "openMap show",
    ],
    [
        "u",
        "opensteamapp",
        "openSteamApp",
        "Opens a Steam application, returns false if it wasn't possible to run the application.",
        "OpenSteamApp '553228'",
        "",
        "BOOL",
        "",
        "SCALAR",
        "openSteamApp appID",
    ],
    [
        "u",
        "openyoutubevideo",
        "openYoutubeVideo",
        "Opens Steam overlay with the given YT video. The YT url is the end of the video page url. Example: for 'https://www.youtube.com/watch?v=DXIoEUq8YE8' set youTubeUrl to 'watch?v=DXIoEUq8YE8'",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "openYoutubeVideo youTubeUrl",
    ],
    [
        "n",
        "opfor",
        "opfor",
        "Pre-defined variable for the opfor side.",
        "",
        "",
        "SIDE",
        "",
        "",
        "opfor",
    ],
    [
        "b",
        "or",
        "or",
        "a or b",
        "not alive player or not alive leader player",
        "",
        "BOOL",
        "BOOL",
        "BOOL",
        "a or b",
    ],
    [
        "b",
        "or",
        "or",
        "a or b, b evaluated only when a is false",
        "not alive player or not alive leader player",
        "",
        "BOOL",
        "BOOL",
        "CODE",
        "a or b",
    ],
    [
        "b",
        "ordergetin",
        "orderGetIn",
        "Forces all units in the list to get in their assigned vehicle.",
        "[unitOne, unitTwo] orderGetIn true",
        "",
        "NOTHING",
        "ARRAY",
        "BOOL",
        "unitArray orderGetIn order",
    ],
    [
        "n",
        "overcast",
        "overcast",
        "Return the current overcast.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "overcast",
    ],
    [
        "n",
        "overcastforecast",
        "overcastForecast",
        "Return the overcast forecast.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "overcastForecast",
    ],
    [
        "u",
        "owner",
        "owner",
        "On server machine, return the ID of the client where the object is local. Otherwise return 0.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "owner object",
    ],
    [
        "b",
        "param",
        "param",
        "Parses array of params by given index and returns the value",
        "_two = [1,2,3] param [1,25];",
        "",
        "ANY",
        "ANY",
        "ARRAY",
        "anything param array",
    ],
    [
        "u",
        "param",
        "param",
        "Parses _this param inside a script by given index and returns the value",
        "[1,2,3] call {_two = param [1,25]};",
        "",
        "ANY",
        "",
        "ARRAY",
        "param array",
    ],
    [
        "b",
        "params",
        "params",
        "Parses array of params into array of private variables",
        "[1,2,3] params ['_one','_two','_three'];",
        "",
        "BOOL",
        "ANY",
        "ARRAY",
        "anything params array",
    ],
    [
        "u",
        "params",
        "params",
        "Parses _this param inside a script into array of private variables",
        "[1,2,3] call {params ['_one','_two','_three']};",
        "",
        "BOOL",
        "",
        "ARRAY",
        "params array",
    ],
    [
        "u",
        "parsenumber",
        "parseNumber",
        "Parse string containing real number.",
        "parseNumber '0.125'",
        "",
        "SCALAR",
        "",
        "STRING",
        "parseNumber string",
    ],
    [
        "u",
        "parsenumber",
        "parseNumber",
        "Parse boolean into 1 or 0",
        "parseNumber true",
        "",
        "SCALAR",
        "",
        "BOOL",
        "parseNumber boolean",
    ],
    [
        "u",
        "parsesimplearray",
        "parseSimpleArray",
        "Parses formatted as simple array string into array. Simple array consists of numbers, strings, booleans and arrays of all of the above",
        "parseSimpleArray '[1,true,[1,2,3]]'",
        "",
        "ARRAY",
        "",
        "STRING",
        "parseSimpleArray stringArray",
    ],
    [
        "u",
        "parsetext",
        "parseText",
        "Creates a structured text by parsing the given XML description.",
        "txt = parseText 'First line&lt;img image=dataisniper.paa/&gt;&ltbr/&gt;Second line'",
        "",
        "TEXT",
        "",
        "STRING",
        "parseText text",
    ],
    [
        "n",
        "parsingnamespace",
        "parsingNamespace",
        "Return the global namespace attached to config parser.",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "parsingNamespace",
    ],
    [
        "n",
        "particlesquality",
        "particlesQuality",
        "Returns current settings for particles quality.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "particlesQuality",
    ],
    [
        "b",
        "periscopeelevation",
        "periscopeElevation",
        "Returns vehicle's periscope elevation of given turret",
        "vehicle player periscopeElevation [0]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle periscopeElevation turret",
    ],
    [
        "n",
        "pi",
        "pi",
        "pi (180 degrees converted to radians)",
        "pi",
        "3.1415",
        "SCALAR",
        "",
        "",
        "pi",
    ],
    [
        "u",
        "pickweaponpool",
        "pickWeaponPool",
        "Transfers weapons and magazines from the cargo space of object obj to the weapon pool (used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "pickWeaponPool obj",
    ],
    [
        "u",
        "pitch",
        "pitch",
        "Returns the pitch of the variable assigned to the object in the mission editor.",
        "pitch player",
        "",
        "STRING",
        "",
        "OBJECT",
        "pitch object",
    ],
    [
        "n",
        "pixelgrid",
        "pixelGrid",
        "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids",
        "gridHeight = pixelH * pixelGrid",
        "",
        "SCALAR",
        "",
        "",
        "pixelGrid",
    ],
    [
        "n",
        "pixelgridbase",
        "pixelGridBase",
        "Returns grid size based on screen resolution.",
        "gridBaseHeight = pixelH * pixelGridBase",
        "",
        "SCALAR",
        "",
        "",
        "pixelGridBase",
    ],
    [
        "n",
        "pixelgridnouiscale",
        "pixelGridNoUIScale",
        "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids",
        "gridHeightNoUIScale = pixelH * pixelGridNoUIScale",
        "",
        "SCALAR",
        "",
        "",
        "pixelGridNoUIScale",
    ],
    [
        "n",
        "pixelh",
        "pixelH",
        "Returns height of one pixel for current resolution",
        "_pixelHeight = pixelH",
        "",
        "SCALAR",
        "",
        "",
        "pixelH",
    ],
    [
        "n",
        "pixelw",
        "pixelW",
        "Returns width of one pixel for current resolution",
        "_pixelWidth = pixelW",
        "",
        "SCALAR",
        "",
        "",
        "pixelW",
    ],
    [
        "u",
        "playableslotsnumber",
        "playableSlotsNumber",
        "Returns the number of available slots in mission per side (both empty and taken). In singleplayer mission, it returns number of playable units per side.",
        "",
        "",
        "SCALAR",
        "",
        "SIDE",
        "playableSlotsNumber side",
    ],
    [
        "n",
        "playableunits",
        "playableUnits",
        "Return a list of playable units (occupied by both AI or players).",
        "",
        "",
        "ARRAY",
        "",
        "",
        "playableUnits",
    ],
    [
        "b",
        "playaction",
        "playAction",
        "When used on a person, a smooth transition to the given action will be initiated.",
        "soldierOne playAction 'SitDown'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier playAction action",
    ],
    [
        "b",
        "playactionnow",
        "playActionNow",
        "When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.",
        "soldierOne playActionNow 'SitDown'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier playActionNow action",
    ],
    [
        "n",
        "player",
        "player",
        "This is the person controlled by the player. In MP this value is different on each computer.",
        "alive player",
        "",
        "OBJECT",
        "",
        "",
        "player",
    ],
    [
        "n",
        "playerrespawntime",
        "playerRespawnTime",
        "Return the player remaining time to respawn.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "playerRespawnTime",
    ],
    [
        "n",
        "playerside",
        "playerSide",
        "Returns the player's side. This is valid even when the player controlled person is dead (a difference from player side).",
        "",
        "",
        "SIDE",
        "",
        "",
        "playerSide",
    ],
    [
        "u",
        "playersnumber",
        "playersNumber",
        "Returns the number of players playing on the given side.",
        "",
        "",
        "SCALAR",
        "",
        "SIDE",
        "playersNumber side",
    ],
    [
        "b",
        "playgesture",
        "playGesture",
        "When used on a person, a smooth transition to the given move will be initiated.",
        "soldierOne playGesture 'Wave'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier playGesture moveName",
    ],
    [
        "u",
        "playmission",
        "playMission",
        "The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped.",
        "playMission['XOutrage','x05Negotiator.Noe']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "playMission [campaign, mission] or [campaign, mission, skipBriefing]",
    ],
    [
        "b",
        "playmove",
        "playMove",
        "When used on a person, a smooth transition to the given move will be initiated.",
        "soldierOne playMove 'Stand'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier playMove moveName",
    ],
    [
        "b",
        "playmovenow",
        "playMoveNow",
        "When used on a person, a smooth transition to the given move will be initiated, but all previous playAction are discarded.",
        "soldierOne playMoveNow 'Stand'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier playMoveNow moveName",
    ],
    [
        "u",
        "playmusic",
        "playMusic",
        "Plays music defined in the description.ext file.",
        "playMusic 'musicname'",
        "",
        "NOTHING",
        "",
        "STRING",
        "playMusic name",
    ],
    [
        "u",
        "playmusic",
        "playMusic",
        "Plays music defined in the description.ext file. The format of nameAndPos is [name,position]. Position is in seconds.",
        "playMusic ['Track13', 30]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "playMusic nameAndPos",
    ],
    [
        "u",
        "playscriptedmission",
        "playScriptedMission",
        "Load the given world, launch an empty mission and execute the given expression. Config (optional) can reference to the config entry replacing description.ext for this mission.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "playScriptedMission [world, expression, config, (ignoreChildWindow)]",
    ],
    [
        "u",
        "playsound",
        "playSound",
        "Plays a sound defined in the description.ext file.",
        "playSound 'soundname'",
        "",
        "OBJECT",
        "",
        "STRING",
        "playSound name",
    ],
    [
        "u",
        "playsound",
        "playSound",
        "Plays a sound defined in the description.ext file. Accomodation set to false disable sound volume changes.",
        "playSound ['soundname', false]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "playSound name, enable / disable sound volume accomodation",
    ],
    [
        "u",
        "playsound3d",
        "playSound3D",
        "Plays a sound with given filename. Position of the source object in world coordinates. Distance is how far is sound audible (0 = no max distance). At least 2 parameters must be added.",
        "playSound3D ['A3Sounds_Fsfx\blip1.wav', player] or playSound3D ['A3Sounds_Fsfx\blip1.wav', player, false, getPos player, 1, 1, 0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "playSound3D [&quot;filename&quot;, source, isInside, position, volume, frequency, distance]",
    ],
    [
        "u",
        "playsoundui",
        "playSoundUI",
        "Plays a sound though the UI sound channel with given params.",
        "playSoundUI ['alarm', 0.5, 2]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "playSoundUI [sound, (volume), (frequency), (iseffect)]",
    ],
    [
        "u",
        "pose",
        "pose",
        "Returns the pose of the given unit.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "pose unit",
    ],
    [
        "u",
        "position",
        "position",
        "Returns the object position in format <ar>Position</ar>.",
        "position player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "position object",
    ],
    [
        "u",
        "position",
        "position",
        "Return (raw) position of given location.",
        "",
        "",
        "ARRAY",
        "",
        "LOCATION",
        "position location",
    ],
    [
        "u",
        "positioncameratoworld",
        "positionCameraToWorld",
        "Transform position from camera coordinate space to world coordinate space.",
        "_worldPos = positionCameraToWorld _cameraPos",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "positionCameraToWorld position",
    ],
    [
        "b",
        "posscreentoworld",
        "posScreenToWorld",
        "Convert screen coordinates in map to world coordinates.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "ARRAY",
        "map posScreenToWorld [x, y]",
    ],
    [
        "b",
        "posworldtoscreen",
        "posWorldToScreen",
        "Convert world coordinates to screen coordinates in map.",
        "",
        "",
        "ARRAY",
        "CONTROL",
        "ARRAY",
        "map posWorldToScreen position",
    ],
    [
        "b",
        "ppeffectadjust",
        "ppEffectAdjust",
        "Adjust parameters for specified post process effect",
        "'radialBlurr' ppEffectEnable []",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "string ppEffectAdjust array",
    ],
    [
        "b",
        "ppeffectadjust",
        "ppEffectAdjust",
        "Set post process effect parameters",
        "hndl ppEffectAdjust [0.0075, 0.0075, 0.1, 0.1]",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "number ppEffectAdjust array",
    ],
    [
        "b",
        "ppeffectcommit",
        "ppEffectCommit",
        "Set time when old pars are replaced by last set, if 0 set immediately",
        "...",
        "",
        "NOTHING",
        "STRING",
        "SCALAR",
        "string ppEffectCommit number",
    ],
    [
        "b",
        "ppeffectcommit",
        "ppEffectCommit",
        "Set time when old pars are replaced by last set, if 0 set immediately",
        "hndl ppEffectCommit 0",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "number ppEffectCommit number",
    ],
    [
        "b",
        "ppeffectcommit",
        "ppEffectCommit",
        "Set time when old pars are replaced by last set, if 0 set immediately",
        "hndl ppEffectCommit 0",
        "",
        "NOTHING",
        "ARRAY",
        "SCALAR",
        "array ppEffectCommit scalar",
    ],
    [
        "u",
        "ppeffectcommitted",
        "ppEffectCommitted",
        "Check whether given post process effect is commited",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "ppEffectCommitted effect",
    ],
    [
        "u",
        "ppeffectcommitted",
        "ppEffectCommitted",
        "Check whether given post process effect is commited",
        "",
        "",
        "BOOL",
        "",
        "SCALAR",
        "ppEffectCommitted effect",
    ],
    [
        "u",
        "ppeffectcreate",
        "ppEffectCreate",
        "Create post process effect specified by name and priority",
        "",
        "",
        "SCALAR,ARRAY",
        "",
        "ARRAY",
        "ppEffectCreate effect",
    ],
    [
        "u",
        "ppeffectdestroy",
        "ppEffectDestroy",
        "Destroy post process effect given by handle",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "ppEffectDestroy effect",
    ],
    [
        "u",
        "ppeffectdestroy",
        "ppEffectDestroy",
        "Create post process effect specified by name and priority",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "ppEffectDestroy effect",
    ],
    [
        "b",
        "ppeffectenable",
        "ppEffectEnable",
        "Enable/disable specified post process effect, is overloaded form multiple effects.",
        "'radialBlurr' ppEffectEnable true, ['chromAberration', 'radialBlurr'] ppEffectEnable true",
        "",
        "NOTHING",
        "STRING",
        "BOOL",
        "string ppEffectEnable bool",
    ],
    [
        "b",
        "ppeffectenable",
        "ppEffectEnable",
        "Enable/disable specified post process effect, is overloaded form multiple effects.",
        "'radialBlurr' ppEffectEnable true, ['chromAberration', 'radialBlurr'] ppEffectEnable true",
        "",
        "NOTHING",
        "ARRAY",
        "BOOL",
        "array ppEffectEnable bool",
    ],
    [
        "b",
        "ppeffectenable",
        "ppEffectEnable",
        "Enable / disable post process effect",
        "hndl ppEffectEnable true",
        "",
        "NOTHING",
        "SCALAR",
        "BOOL",
        "number ppEffectEnable bool",
    ],
    [
        "u",
        "ppeffectenabled",
        "ppEffectEnabled",
        "Check whether given post process effect is enabled",
        "",
        "",
        "BOOL",
        "",
        "SCALAR",
        "ppEffectEnabled effect",
    ],
    [
        "u",
        "ppeffectenabled",
        "ppEffectEnabled",
        "Check whether given post process effect is enabled",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "ppEffectEnabled effect",
    ],
    [
        "b",
        "ppeffectforceinnvg",
        "ppEffectForceInNVG",
        "Forces to use PP effect in NVG",
        "",
        "",
        "NOTHING",
        "SCALAR",
        "BOOL",
        "number ppEffectForceInNVG bool",
    ],
    [
        "u",
        "precision",
        "precision",
        "Return the precision of the given entity.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "precision entity",
    ],
    [
        "u",
        "preloadcamera",
        "preloadCamera",
        "Preload all textures and models around given position",
        "",
        "",
        "BOOL",
        "",
        "ARRAY",
        "preloadCamera position",
    ],
    [
        "b",
        "preloadobject",
        "preloadObject",
        "Preload all data for given object.",
        "",
        "",
        "BOOL",
        "SCALAR",
        "STRING,OBJECT",
        "distance preloadObject object",
    ],
    [
        "u",
        "preloadsound",
        "preloadSound",
        "Make sure sound can start playing without any delay once we need it.",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "preloadSound sound",
    ],
    [
        "u",
        "preloadtitleobj",
        "preloadTitleObj",
        "Object title  - argument uses format ['text','type',speed, showInMap] or ['name','type']. Speed is ignored\nPreload data\nThe object can be defined in the description.ext file.",
        "titleObj ['BISLogo','plain']",
        "",
        "BOOL",
        "",
        "ARRAY",
        "preloadTitleObj effect",
    ],
    [
        "u",
        "preloadtitlersc",
        "preloadTitleRsc",
        "Resource title  - argument uses format ['name','type',speed, showInMap] or ['name','type']. Speed is ignored\nPreload data \nThe resource can be defined in the description.ext file.",
        "titleRsc ['BIS', 'PLAIN']",
        "",
        "BOOL",
        "",
        "ARRAY",
        "preloadTitleRsc effect",
    ],
    [
        "u",
        "preprocessfile",
        "preprocessFile",
        "Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using // or /* and */ and macros defined with #define. On dedicated server/client connected to a dedicated server, if allowedPreprocessFileExtensions parameter is used in the DS config file this only returns contents of a given file if the file extension is listed in it. The list should containt at least the following extensions: hpp, sqs, sqf, fsm, cpp, paa, txt, xml, inc, ext, sqm, ods, fxy, lip, csv, kb, bik, bikn, html, biedi. Note, this list may not be completely up to date",
        "preprocessFile 'myFunction.sqf'",
        "'if a>b then {a} else {b}'",
        "STRING",
        "",
        "STRING",
        "preprocessFile filename",
    ],
    [
        "u",
        "preprocessfilelinenumbers",
        "preprocessFileLineNumbers",
        "Returns the preprocessed contents of a given file. The preprocessor is C-like, it supports comments using // or /* and */ and macros defined with #define. On dedicated server/client connected to a dedicated server, if allowedPreprocessFileExtensions parameter is used in the DS config file this only returns contents of a given file if the file extension is listed in it. The list should containt at least the following extensions: hpp, sqs, sqf, fsm, cpp, paa, txt, xml, inc, ext, sqm, ods, fxy, lip, csv, kb, bik, bikn, html, biedi. Note, this list may not be completely up to date.",
        "preprocessFileLineNumbers 'myFunction.sqf'",
        "'if a>b then {a} else {b}'",
        "STRING",
        "",
        "STRING",
        "preprocessFileLineNumbers filename",
    ],
    [
        "u",
        "primaryweapon",
        "primaryWeapon",
        "Returns the name of the vehicle's primary weapon (an empty string if there is none).",
        "primaryWeapon player",
        "",
        "STRING",
        "",
        "OBJECT",
        "primaryWeapon vehicle",
    ],
    [
        "u",
        "primaryweaponitems",
        "primaryWeaponItems",
        "Get array with all items assigned to a weapon.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "primaryWeaponItems unit",
    ],
    [
        "u",
        "primaryweaponmagazine",
        "primaryWeaponMagazine",
        "Return the names of the types of currently loaded magazines in given weapon.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "primaryWeaponMagazine vehicle",
    ],
    [
        "u",
        "priority",
        "priority",
        "Return the priority of the task.",
        "",
        "",
        "SCALAR",
        "",
        "TASK",
        "priority task",
    ],
    [
        "u",
        "private",
        "private",
        "Introduces one or more local variables in the innermost scope.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY,STRING",
        "private variable",
    ],
    [
        "u",
        "processdiarylink",
        "processDiaryLink",
        "Open the diary screen on the record specified by link.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "processDiaryLink link",
    ],
    [
        "n",
        "productversion",
        "productVersion",
        "Return the product name, version, build and flag if game is modded in form ['product name', 'product short name', version*100, 'build number', 'build', customMods, platform]",
        "productVersion",
        "['ArmA 3', 'Arma3', 137, 87840, 'Development', true, 'Windows']",
        "ARRAY",
        "",
        "",
        "productVersion",
    ],
    [
        "n",
        "profilename",
        "profileName",
        "Returns profile name.",
        "",
        "",
        "STRING",
        "",
        "",
        "profileName",
    ],
    [
        "n",
        "profilenamespace",
        "profileNamespace",
        "Return the global namespace attached to user profile.",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "profileNamespace",
    ],
    [
        "n",
        "profilenamesteam",
        "profileNameSteam",
        "Returns name of the current Steam profile.",
        "",
        "",
        "STRING",
        "",
        "",
        "profileNameSteam",
    ],
    [
        "u",
        "progressloadingscreen",
        "progressLoadingScreen",
        "If loading screen is show, set progress bar to the given value (from interval [0, 1])",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "progressLoadingScreen progress",
    ],
    [
        "u",
        "progressposition",
        "progressPosition",
        "Returns the current position in the progress bar.",
        "_pos = progressPosition _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "progressPosition control",
    ],
    [
        "b",
        "progresssetposition",
        "progressSetPosition",
        "Sets the current position in the progress bar.",
        "_control sliderSetPosition 0",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control progressSetPosition pos",
    ],
    [
        "u",
        "publicvariable",
        "publicVariable",
        "Broadcasts the variable value to all computers\nOnly type <t>Number</t> is supported in versions 1.33 and before\nThe following types are supported since 1.34\n<t>Number</t>, <t>Boolean</t>, <t>Object</t> and <t>Group</t>.",
        "publicVariable 'CTFscoreOne'",
        "",
        "NOTHING",
        "",
        "STRING",
        "publicVariable varName",
    ],
    [
        "b",
        "publicvariableclient",
        "publicVariableClient",
        "Send the variable value to the client computer\nOnly type <t>Number</t> is supported in versions 1.33 and before\nThe following types are supported since 1.34\n<t>Number</t>, <t>Boolean</t>, <t>Object</t> and <t>Group</t>.",
        "3 publicVariableClient 'CTFscoreOne'",
        "",
        "NOTHING",
        "SCALAR",
        "STRING",
        "clientId publicVariableClient varName",
    ],
    [
        "u",
        "publicvariableserver",
        "publicVariableServer",
        "Send the variable value to the server computer\nOnly type <t>Number</t> is supported in versions 1.33 and before\nThe following types are supported since 1.34\n<t>Number</t>, <t>Boolean</t>, <t>Object</t> and <t>Group</t>.",
        "publicVariableServer 'CTFscoreOne'",
        "",
        "NOTHING",
        "",
        "STRING",
        "publicVariableServer varName",
    ],
    [
        "b",
        "pushback",
        "pushBack",
        "Adds an element to the end of a given array.",
        "_array = [1,2,3]; _array pushBack 4; hint str _array; //[1,2,3,4]",
        "",
        "SCALAR",
        "ARRAY",
        "ANY",
        "array pushBack element",
    ],
    [
        "b",
        "pushbackunique",
        "pushBackUnique",
        "Add and element into the end of a given array only if same element is not here already.",
        "array pushBackUnique 'Hello'",
        "",
        "SCALAR",
        "ARRAY",
        "ANY",
        "array pushBackUnique element",
    ],
    [
        "u",
        "putweaponpool",
        "putWeaponPool",
        "Transfers weapons and magazines from the weapon pool (used in campaigns to transfer weapons to the next mission) into the cargo space of object obj.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "putWeaponPool obj",
    ],
    [
        "u",
        "queryitemspool",
        "queryItemsPool",
        "Returns the number of items of type name in the weapon pool (used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "queryItemsPool name",
    ],
    [
        "u",
        "querymagazinepool",
        "queryMagazinePool",
        "Returns the number of magazines of type name in the weapon pool (used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "queryMagazinePool name",
    ],
    [
        "u",
        "queryweaponpool",
        "queryWeaponPool",
        "Returns the number of weapons of type name in the weapon pool (used in campaigns to transfer weapons to the next mission).",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "queryWeaponPool name",
    ],
    [
        "u",
        "rad",
        "rad",
        "Converts x from degrees to radians.",
        "rad 180",
        "3.1415",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "rad x",
    ],
    [
        "b",
        "radiochanneladd",
        "radioChannelAdd",
        "Add the units to the custom radio channel.",
        "",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "chan ix radioChannelAdd [units]",
    ],
    [
        "u",
        "radiochannelcreate",
        "radioChannelCreate",
        "Create Custom Radio Channel with given callSign color, callSign format and units. sentenceColorType sets color for sentences - true for colorMessageProtocol otherwise colorMessage. Returns index to identify/manipulate the created Custom Channel.",
        "",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "radioChannelCreate [[r,g,b,a], label, callSign, [unit1,unit2,...], sentenceColorType]",
    ],
    [
        "u",
        "radiochannelinfo",
        "radioChannelInfo",
        "Returns custom channel information.",
        "",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "radioChannelInfo channelIndex",
    ],
    [
        "b",
        "radiochannelremove",
        "radioChannelRemove",
        "Remove the units from the custom radio channel.",
        "",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "chan ix radioChannelRemove [units]",
    ],
    [
        "b",
        "radiochannelsetcallsign",
        "radioChannelSetCallSign",
        "Set the custom channel call sign.",
        "",
        "",
        "NOTHING",
        "SCALAR",
        "STRING",
        "chan ix radioChannelSetCallSign callSign",
    ],
    [
        "b",
        "radiochannelsetlabel",
        "radioChannelSetLabel",
        "Set the custom channel label.",
        "",
        "",
        "NOTHING",
        "SCALAR",
        "STRING",
        "chan ix radioChannelSetLabel label",
    ],
    [
        "n",
        "radioenabled",
        "radioEnabled",
        "A getter for the <f>enableRadio</f> command.",
        "",
        "",
        "BOOL",
        "",
        "",
        "radioEnabled",
    ],
    [
        "n",
        "radiovolume",
        "radioVolume",
        "Returns the current radio volume level as set by <f>fadeRadio</f>.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "radioVolume",
    ],
    [
        "n",
        "rain",
        "rain",
        "Return the current rain.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "rain",
    ],
    [
        "n",
        "rainbow",
        "rainbow",
        "Return the current rainbow intensity.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "rainbow",
    ],
    [
        "n",
        "rainparams",
        "rainParams",
        "Returns the current params for rain particles",
        "",
        "",
        "ARRAY",
        "",
        "",
        "rainParams",
    ],
    [
        "b",
        "random",
        "random",
        "Returns random number but always the same as long as you provide same seed",
        "12345 random 10",
        "",
        "SCALAR",
        "SCALAR",
        "SCALAR,ARRAY",
        "seed random max",
    ],
    [
        "u",
        "random",
        "random",
        "The random real value from min to max with average of mid",
        "random [0,5,10]",
        "",
        "SCALAR,NaN",
        "",
        "ARRAY",
        "random [min, mid, max]",
    ],
    [
        "u",
        "random",
        "random",
        "The random real value from 0 to x. (0&lt;=random&lt;1)",
        "random 1",
        "",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "random x",
    ],
    [
        "u",
        "rank",
        "rank",
        "Return the rank of the given unit.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "rank unit",
    ],
    [
        "u",
        "rankid",
        "rankId",
        "Return the rank of the given unit for comparison.",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "rankId unit",
    ],
    [
        "u",
        "rating",
        "rating",
        "Checks the unit rating. This rating is increased for killing enemies, decreased for killing friendlies and can be changed by a mission designer.",
        "rating player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "rating unit",
    ],
    [
        "u",
        "rectangular",
        "rectangular",
        "Check if given location has rectangular shape.",
        "",
        "",
        "BOOL",
        "",
        "LOCATION",
        "rectangular location",
    ],
    [
        "b",
        "regexfind",
        "regexFind",
        "Finds occurences of pattern in provided string",
        "'wooKie boOkie cookie' regexFind ['.ookie']",
        "[['wooKie',0],['boOkie',7],['cookie',14]]",
        "ARRAY",
        "STRING",
        "ARRAY",
        "haystack regexFind [pattern, startOffset]",
    ],
    [
        "b",
        "regexmatch",
        "regexMatch",
        "Returns whether the provided pattern matches the string",
        "'I'm a Cookie clicker' regexMatch '.*cookie./i'",
        "",
        "BOOL",
        "STRING",
        "STRING",
        "haystack regexMatch pattern",
    ],
    [
        "b",
        "regexreplace",
        "regexReplace",
        "Replaces occurences of pattern in provided string",
        "'wookie boOkie cookie' regexReplace ['.oo', '[$&]']",
        "'[woo]kie [boO]kie [coo]kie'",
        "STRING",
        "STRING",
        "ARRAY",
        "haystack regexReplace [pattern, replaceString]",
    ],
    [
        "u",
        "registeredtasks",
        "registeredTasks",
        "List all registered task types.",
        "",
        "",
        "ARRAY",
        "",
        "TEAM_MEMBER",
        "registeredTasks teamMember",
    ],
    [
        "b",
        "registertask",
        "registerTask",
        "Register a new task type. Parameters are defined in the given config class (subclass of CfgTasks).",
        "",
        "",
        "BOOL",
        "TEAM_MEMBER",
        "STRING",
        "teamMember registerTask entry name",
    ],
    [
        "b",
        "reload",
        "reload",
        "Reloads given muzzle wih given magazine",
        "player reload ['GL_3GL_F', '1Rnd_HE_Grenade_shell']",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "vehicle reload [(muzzle), (magazine)]",
    ],
    [
        "u",
        "reload",
        "reload",
        "Reload all weapons.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "reload vehicle",
    ],
    [
        "u",
        "reloadenabled",
        "reloadEnabled",
        "Check whether magazine is reloaded whenever emptied.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "reloadEnabled vehicle",
    ],
    [
        "b",
        "remotecontrol",
        "remoteControl",
        "Switch on remote control of the unit.",
        "player remoteControl gunner _uav",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "who remoteControl whom",
    ],
    [
        "b",
        "remoteexec",
        "remoteExec",
        "Executes the function remotely by spawning it. Returns nil in case of error. If JIP is requested it returns an unique JIP id string.",
        "uniquejipID = 'Hello' remoteExec ['hint', [2,3,player], true]; 'Hello again' remoteExec ['hint', 0, 'jipID2']",
        "",
        "STRING,NOTHING",
        "ANY",
        "ARRAY",
        "funcParams remoteExec [funcName, targets, jipID]",
    ],
    [
        "u",
        "remoteexec",
        "remoteExec",
        "Executes the function remotely by spawning it. Returns nil in case of error. If JIP is requested it returns an unique JIP id string.",
        "uniquejipID = remoteExec ['disableDebriefingStats', 0, true]; remoteExec ['disableDebriefingStats', 0, 'jipID2']",
        "",
        "STRING,NOTHING",
        "",
        "ARRAY",
        "remoteExec [funcName, targets, jipID]",
    ],
    [
        "b",
        "remoteexeccall",
        "remoteExecCall",
        "Executes the function remotely by calling it. Returns nil in case of error. If JIP is requested it returns an unique JIP id string.",
        "uniquejipID = 'Hello' remoteExecCall ['hint', [2,3,player], true]; 'Hello again' remoteExecCall ['hint', 0, 'jipID2']",
        "",
        "STRING,NOTHING",
        "ANY",
        "ARRAY",
        "funcParams remoteExecCall [funcName, targets, jipID]",
    ],
    [
        "u",
        "remoteexeccall",
        "remoteExecCall",
        "Executes the function remotely by calling it. Returns nil in case of error. If JIP is requested it returns an unique JIP id string.",
        "uniquejipID = remoteExecCall ['disableDebriefingStats', 0, true]; remoteExecCall ['disableDebriefingStats', 0, 'jipID2']",
        "",
        "STRING,NOTHING",
        "",
        "ARRAY",
        "remoteExecCall [funcName, targets, jipID]",
    ],
    [
        "n",
        "remoteexecutedowner",
        "remoteExecutedOwner",
        "Returns ID of the original owner of the remotely executed command. Return 0 is owner can't be determined",
        "owner = remoteExecOwner;",
        "",
        "SCALAR",
        "",
        "",
        "remoteExecutedOwner",
    ],
    [
        "u",
        "remove3denconnection",
        "remove3DENConnection",
        "Removes connection of given type between <from> items and <to> item.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "remove3DENConnection [&lt;type&gt;, [&lt;from&gt;,...], &lt;to&gt;]",
    ],
    [
        "u",
        "remove3deneventhandler",
        "remove3DENEventHandler",
        "Removes event handler with given ID.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "remove3DENEventHandler [&lt;type&gt;, &lt;id&gt;]",
    ],
    [
        "u",
        "remove3denlayer",
        "remove3DENLayer",
        "Deletes whole layer and moves items from within it into the parent of deleted layer.",
        "",
        "",
        "BOOL",
        "",
        "SCALAR",
        "remove3DENLayer &lt;layerID&gt;",
    ],
    [
        "b",
        "removeaction",
        "removeAction",
        "Removes the action with the given id.",
        "player removeAction 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit removeAction index",
    ],
    [
        "u",
        "removeall3deneventhandlers",
        "removeAll3DENEventHandlers",
        "Removes all registered even handlers",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "removeAll3DENEventHandlers &lt;type&gt;",
    ],
    [
        "u",
        "removeallactions",
        "removeAllActions",
        "Removes the action with the given id.",
        "removeAllActions player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllActions unit",
    ],
    [
        "u",
        "removeallassigneditems",
        "removeAllAssignedItems",
        "Removes all linked items from gear (map, compass, headgear, goggles etc.).",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllAssignedItems unit",
    ],
    [
        "u",
        "removeallbinocularitems",
        "removeAllBinocularItems",
        "Removes all items from weapon except magazine.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllBinocularItems unit",
    ],
    [
        "u",
        "removeallcontainers",
        "removeAllContainers",
        "Removes all containers from the unit.",
        "removeAllContainers player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllContainers unit",
    ],
    [
        "u",
        "removeallcuratoraddons",
        "removeAllCuratorAddons",
        "Restrict access to all addons for given curator.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllCuratorAddons curatorObj",
    ],
    [
        "u",
        "removeallcuratorcameraareas",
        "removeAllCuratorCameraAreas",
        "Delete all curator camera areas.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllCuratorCameraAreas curatorObj",
    ],
    [
        "u",
        "removeallcuratoreditingareas",
        "removeAllCuratorEditingAreas",
        "Delete all curator edit areas.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllCuratorEditingAreas curatorObj",
    ],
    [
        "b",
        "removealleventhandlers",
        "removeAllEventHandlers",
        "Removes all event handlers of the given type which were added by <f>addEventHandler</f>.",
        "player removeAllEventHandlers 'killed'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "object removeAllEventHandlers handlerType",
    ],
    [
        "b",
        "removealleventhandlers",
        "removeAllEventHandlers",
        "Removes all event handlers of the given type which were added by <f>addEventHandler</f>.",
        "(group player) removeAllEventHandlers 'WaypointComplete'",
        "",
        "NOTHING",
        "GROUP",
        "STRING",
        "group removeAllEventHandlers handlerType",
    ],
    [
        "u",
        "removeallhandgunitems",
        "removeAllHandgunItems",
        "Removes all items from weapon except magazine.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllHandgunItems unit",
    ],
    [
        "u",
        "removeallitems",
        "removeAllItems",
        "Removes all items from the uniform, vest and backpack.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllItems unit",
    ],
    [
        "u",
        "removeallitemswithmagazines",
        "removeAllItemsWithMagazines",
        "Removes all items from the uniform, vest and backpack.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllItemsWithMagazines unit",
    ],
    [
        "u",
        "removeallmissioneventhandlers",
        "removeAllMissionEventHandlers",
        "Removes all event handlers of the given type which were added by <f>addMissionEventHandler</f>.",
        "removeAllMissionEventHandlers 'ended'",
        "",
        "NOTHING",
        "",
        "STRING",
        "removeAllMissionEventHandlers type",
    ],
    [
        "b",
        "removeallmpeventhandlers",
        "removeAllMPEventHandlers",
        "Removes all MP event handlers of the given type which were added by <f>addMPEventHandler</f>.",
        "player removeAllMPEventHandlers 'mpkilled'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "object removeAllMPEventHandlers handlerType",
    ],
    [
        "u",
        "removeallmusiceventhandlers",
        "removeAllMusicEventHandlers",
        "Remove all music track event handlers.",
        "removeAllMusicEventHandlers 'MusicStart'",
        "",
        "NOTHING",
        "",
        "STRING",
        "removeAllMusicEventHandlers type",
    ],
    [
        "u",
        "removeallownedmines",
        "removeAllOwnedMines",
        "Remove ownership over all remotely detonable mines from the unit.",
        "removeAllOwnedMines player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllOwnedMines unit",
    ],
    [
        "u",
        "removeallprimaryweaponitems",
        "removeAllPrimaryWeaponItems",
        "Removes all items from weapon except magazine.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllPrimaryWeaponItems unit",
    ],
    [
        "u",
        "removeallsecondaryweaponitems",
        "removeAllSecondaryWeaponItems",
        "Removes all items from weapon except magazine.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllSecondaryWeaponItems unit",
    ],
    [
        "u",
        "removealluseractioneventhandlers",
        "removeAllUserActionEventHandlers",
        "removeAllMissionEventHandlers ['Reload', 'Activate'];",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "removeAllUserActionEventHandlers [keyName, eventType]",
    ],
    [
        "u",
        "removeallweapons",
        "removeAllWeapons",
        "Removes all weapons from the unit.",
        "removeAllWeapons player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeAllWeapons unit",
    ],
    [
        "u",
        "removebackpack",
        "removeBackpack",
        "Remove backpack from unit.",
        "removeBackpack player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeBackpack unit",
    ],
    [
        "u",
        "removebackpackglobal",
        "removeBackpackGlobal",
        "Remove backpack from unit(even non-local).",
        "removeBackpackGlobal player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeBackpackGlobal unit",
    ],
    [
        "b",
        "removebinocularitem",
        "removeBinocularItem",
        "Removes given item from the binocular weapon cargo space.",
        "player removeBinocularItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeBinocularItem item",
    ],
    [
        "b",
        "removecuratoraddons",
        "removeCuratorAddons",
        "Restrict curator use of given addon.",
        "curator removeCuratorAddons [addon1, addon2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "curatorObj removeCuratorAddons [addons]",
    ],
    [
        "b",
        "removecuratorcameraarea",
        "removeCuratorCameraArea",
        "Removes curator camera area",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "curatorObj removeCuratorCameraArea cameraAreaID",
    ],
    [
        "b",
        "removecuratoreditableobjects",
        "removeCuratorEditableObjects",
        "Unregister objects which can be edited by a curator.",
        "0 removeCuratorEditableObjects [cursorTarget, true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "curatorObj removeCuratorEditableObjects [[object],removeCrew = true]",
    ],
    [
        "b",
        "removecuratoreditingarea",
        "removeCuratorEditingArea",
        "Removes editing area for given curator",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "curatorObj removeCuratorEditingArea editAreaID",
    ],
    [
        "b",
        "removediaryrecord",
        "removeDiaryRecord",
        "Remove a log record.",
        "player removeDiaryRecord ['diary', _diaryRec]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person removeDiaryRecord [subject, diaryRecord]",
    ],
    [
        "b",
        "removediarysubject",
        "removeDiarySubject",
        "Remove a subject from a log.",
        "player removeDiarySubject 'myPage'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person removeDiarySubject subject",
    ],
    [
        "b",
        "removedrawicon",
        "removeDrawIcon",
        "Removes an icon for an editor object.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map removeDrawIcon [object, string identifier]",
    ],
    [
        "b",
        "removedrawlinks",
        "removeDrawLinks",
        "Remove all drawn links for the given editor object for the given editor object type. Pass an empty string as param type to remove all draw links for an object.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map removeDrawLinks [from, param type]",
    ],
    [
        "b",
        "removeeventhandler",
        "removeEventHandler",
        "Removes event handler added by <f>addEventHandler</f>. Format of handler is [type,index]. Index is returned by addEventHandler. When any handler is removed, all handler indices higher that the deleted one should be decremented.",
        "player removeEventHandler ['killed',0]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object removeEventHandler handler",
    ],
    [
        "b",
        "removeeventhandler",
        "removeEventHandler",
        "Removes event handler added by <f>addEventHandler</f>. Format of handler is [type,index]. Index is returned by addEventHandler. When any handler is removed, all handler indices higher that the deleted one should be decremented.",
        "(group player) removeEventHandler ['WaypointComplete',0]",
        "",
        "NOTHING",
        "GROUP",
        "ARRAY",
        "group removeEventHandler handlerType",
    ],
    [
        "u",
        "removefromremainscollector",
        "removeFromRemainsCollector",
        "Removes flag from given objects to be managed by unitRemove manager",
        "removeFromRemainsCollector [unit1, unit2]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "removeFromRemainsCollector array",
    ],
    [
        "u",
        "removegoggles",
        "removeGoggles",
        "Remove goggles from unit.",
        "removeBackpack player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeGoggles unit",
    ],
    [
        "b",
        "removegroupicon",
        "removeGroupIcon",
        "Remove icon with given ID from group.",
        "group removeGroupIcon id",
        "",
        "NOTHING",
        "GROUP",
        "SCALAR",
        "group removeGroupIcon icon ID",
    ],
    [
        "b",
        "removehandgunitem",
        "removeHandgunItem",
        "Removes given item from the weapon cargo space.",
        "player removeHandgunItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeHandgunItem item",
    ],
    [
        "u",
        "removeheadgear",
        "removeHeadgear",
        "Remove headgear from unit.",
        "removeBackpack player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeHeadgear unit",
    ],
    [
        "b",
        "removeitem",
        "removeItem",
        "Remove item from the inventory.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeItem item",
    ],
    [
        "b",
        "removeitemfrombackpack",
        "removeItemFromBackpack",
        "Remove item from soldier's uniform.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeItemFromBackpack item",
    ],
    [
        "b",
        "removeitemfromuniform",
        "removeItemFromUniform",
        "Remove item from soldier's uniform.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeItemFromUniform item",
    ],
    [
        "b",
        "removeitemfromvest",
        "removeItemFromVest",
        "Remove item from soldier's uniform.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeItemFromVest item",
    ],
    [
        "b",
        "removeitems",
        "removeItems",
        "Remove all items with given template from the inventory.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeItems item",
    ],
    [
        "b",
        "removemagazine",
        "removeMagazine",
        "Removes the magazine from the unit. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "player removeMagazine 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY,STRING",
        "unit removeMagazine magazineName",
    ],
    [
        "b",
        "removemagazineglobal",
        "removeMagazineGlobal",
        "Removes the magazine from the unit. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "player removeMagazineGlobal 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeMagazineGlobal magazineName",
    ],
    [
        "b",
        "removemagazines",
        "removeMagazines",
        "Removes all magazines of the given type from the unit. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "player removeMagazines 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeMagazines magazineName",
    ],
    [
        "b",
        "removemagazinesturret",
        "removeMagazinesTurret",
        "Removes all magazines of the given type from the unit. Use turret path [-1] for driver's turret. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "vehicle player removeMagazines ['60rnd_cmflaremagazine',,[-1]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "transport removeMagazinesTurret [magazineName, turret path]",
    ],
    [
        "b",
        "removemagazineturret",
        "removeMagazineTurret",
        "Removes the magazine from the turret. Use turret path [-1] for driver's turret.  Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "vehicle player removeMagazine ['60rnd_cmflaremagazine',[-1]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "transport removeMagazineTurret [magazineName, turret path]",
    ],
    [
        "b",
        "removemenuitem",
        "removeMenuItem",
        "Removes a previously added menu item.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "map removeMenuItem index of menu item to delete",
    ],
    [
        "b",
        "removemenuitem",
        "removeMenuItem",
        "Removes a previously added menu item.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "map removeMenuItem text of menu item to delete",
    ],
    [
        "u",
        "removemissioneventhandler",
        "removeMissionEventHandler",
        "Removes event handler added by <f>addMissionEventHandler</f>. Id is returned by addMissionEventHandler. When any handler is removed, all handler indices higher that the deleted one should be decremented.",
        "removeMissionEventHandler ['ended',0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "removeMissionEventHandler [type, id]",
    ],
    [
        "b",
        "removempeventhandler",
        "removeMPEventHandler",
        "Removes MP event handler added by <f>addMPEventHandler</f>. Format of handler is [type,index]. Index is returned by addMPEventHandler. When any handler is removed, all handler indices higher that the deleted one should be decremented.",
        "player removeMPEventHandler ['killed',0]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object removeMPEventHandler handler",
    ],
    [
        "u",
        "removemusiceventhandler",
        "removeMusicEventHandler",
        "Remove specified music track event handler.",
        "removeMusicEventHandler ['MusicTerminate', '1']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "removeMusicEventHandler [type, id]",
    ],
    [
        "b",
        "removeownedmine",
        "removeOwnedMine",
        "Remove ownership over a remotely detonatable mine from the unit.",
        "player removeOwnedMine SuperMine",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "unit removeOwnedMine item",
    ],
    [
        "b",
        "removeprimaryweaponitem",
        "removePrimaryWeaponItem",
        "Removes given item from the weapon cargo space.",
        "player removePrimaryWeaponItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removePrimaryWeaponItem item",
    ],
    [
        "b",
        "removesecondaryweaponitem",
        "removeSecondaryWeaponItem",
        "Removes given item from the weapon cargo space.",
        "player removeSecondaryWeaponItem 'ItemClassName'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeSecondaryWeaponItem item",
    ],
    [
        "b",
        "removesimpletask",
        "removeSimpleTask",
        "Remove a simple task from the list of simple tasks.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "TASK",
        "person removeSimpleTask task",
    ],
    [
        "u",
        "removeswitchableunit",
        "removeSwitchableUnit",
        "Remove a unit from the list of units available for team switch.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeSwitchableUnit person",
    ],
    [
        "b",
        "removeteammember",
        "removeTeamMember",
        "Remove given member from given team.",
        "_team removeTeamMember _teamMember",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "TEAM_MEMBER",
        "team removeTeamMember member",
    ],
    [
        "u",
        "removeuniform",
        "removeUniform",
        "Remove uniform from unit.",
        "removeBackpack player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeUniform unit",
    ],
    [
        "u",
        "removeuseractioneventhandler",
        "removeUserActionEventHandler",
        "removeUserActionEventHandler ['Reload', 'Activate', _reloadUAEH];",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "removeUserActionEventHandler [keyName, eventType, eventID]",
    ],
    [
        "u",
        "removevest",
        "removeVest",
        "Remove vest from unit.",
        "removeBackpack player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "removeVest unit",
    ],
    [
        "b",
        "removeweapon",
        "removeWeapon",
        "Removes the weapon from the unit. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "player removeWeapon 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeWeapon weaponName",
    ],
    [
        "b",
        "removeweaponattachmentcargo",
        "removeWeaponAttachmentCargo",
        "Remove attachment linked to a weapon from the vehicle cargo space.",
        "rearmTruckOne RemoveWeaponAttachment[weaponID,creatorID,'attachment']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle(with supply) removeWeaponAttachmentCargo [weaponID,creatorID,&quot;weaponAttachment&quot;]",
    ],
    [
        "b",
        "removeweaponcargo",
        "removeWeaponCargo",
        "Remove weapon from the vehicle cargo space.",
        "rearmTruckOne removeWeaponCargo [19, 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle(with supply) removeWeaponCargo [weaponID,creatorID]",
    ],
    [
        "b",
        "removeweaponglobal",
        "removeWeaponGlobal",
        "Removes the weapon from the unit. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
        "player removeWeaponGobal 'M16'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit removeWeaponGlobal weaponName",
    ],
    [
        "b",
        "removeweaponturret",
        "removeWeaponTurret",
        "Removes the weapon from the given vehicle's turret. ",
        "vehicle player aremoveWeaponTurret ['Horn',[0,0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle removeWeaponTurret [weaponName,turret array]",
    ],
    [
        "b",
        "reportremotetarget",
        "reportRemoteTarget",
        "Will report target to datalink for given time",
        "side vehicle ReportRemoteTarget [target, 60]",
        "",
        "NOTHING",
        "SIDE",
        "ARRAY",
        "side reportRemoteTarget [target, time]",
    ],
    [
        "u",
        "requiredversion",
        "requiredVersion",
        "Checks whether the appropriate version of the application is available. If it's not, a warning message is shown and false is returned. The version format is 'Major.Minor', e.g. '1.30'.",
        "requiredVersion '1.30'",
        "",
        "BOOL",
        "",
        "STRING",
        "requiredVersion version",
    ],
    [
        "n",
        "resetcamshake",
        "resetCamShake",
        "Resets all camera shakes.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "resetCamShake",
    ],
    [
        "u",
        "resetsubgroupdirection",
        "resetSubgroupDirection",
        "Reset direction of subgroup.",
        "resetSubgroupDirection unit",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "resetSubgroupDirection subgroup member",
    ],
    [
        "n",
        "resistance",
        "resistance",
        "The Resistance side.",
        "",
        "",
        "SIDE",
        "",
        "",
        "resistance",
    ],
    [
        "b",
        "resize",
        "resize",
        "Changes the array size. This function can be used to add or remove elements from the array.",
        "array resize 2",
        "",
        "NOTHING",
        "ARRAY",
        "SCALAR",
        "array resize count",
    ],
    [
        "b",
        "resize",
        "resize",
        "Changes the array size and fills new elements with given value.",
        "array resize [2, 123]",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "array resize [count, fill]",
    ],
    [
        "u",
        "resources",
        "resources",
        "Return a list of the resources belonging to a team.",
        "",
        "",
        "ARRAY",
        "",
        "TEAM_MEMBER",
        "resources teamMember",
    ],
    [
        "b",
        "respawnvehicle",
        "respawnVehicle",
        "Set vehicle as respawnable in MP games. Delay is respawn delay, default respawnDelay from description.ext is used. Count tells how many respawns is processed (default unlimited).",
        "car respawnVehicle [5.0, 3]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle respawnVehicle [delay = -1, count = 0]",
    ],
    [
        "u",
        "restarteditorcamera",
        "restartEditorCamera",
        "Restarts the mission editor camera (if it was deleted by a script, for example).",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "restartEditorCamera map",
    ],
    [
        "b",
        "reveal",
        "reveal",
        "Reveals the unit to the group. It does not matter whether the group can know about the unit or not.",
        "soldierOne reveal soldierTwo",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "OBJECT",
        "group reveal unit",
    ],
    [
        "b",
        "reveal",
        "reveal",
        "Reveals the unit to the group. It does not matter whether the group can know about the unit or not.",
        "soldierOne reveal [soldierTwo,1.5]",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "ARRAY",
        "group reveal unit",
    ],
    [
        "b",
        "revealmine",
        "revealMine",
        "Sets given mine as known to the side.",
        "",
        "",
        "NOTHING",
        "SIDE",
        "OBJECT",
        "side revealMine mine",
    ],
    [
        "u",
        "reverse",
        "reverse",
        "Reverse elements position in the array([0,1,2] -> [2,1,0]).",
        "reverse [0,1,2]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "reverse array",
    ],
    [
        "u",
        "reverse",
        "reverse",
        "Reverses string and returns new string.",
        "reverse 'abc'",
        "cba",
        "STRING",
        "",
        "STRING",
        "reverse string",
    ],
    [
        "n",
        "reversedmousey",
        "reversedMouseY",
        "Return if mouse vertical axe is inverted.",
        "",
        "",
        "BOOL",
        "",
        "",
        "reversedMouseY",
    ],
    [
        "u",
        "roadat",
        "roadAt",
        "Returns the road the object or position is on.",
        "onEachFrame { hint str(roadAt player); }",
        "",
        "OBJECT",
        "",
        "ARRAY,OBJECT",
        "roadAt object or position",
    ],
    [
        "u",
        "roadsconnectedto",
        "roadsConnectedTo",
        "Find the road segments connected to the given road segment.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY,OBJECT",
        "roadsConnectedTo road or [road, extended]",
    ],
    [
        "u",
        "roledescription",
        "roleDescription",
        "Returns friendly role description from editor",
        "roleDescription player",
        "Medic",
        "STRING",
        "",
        "OBJECT",
        "roleDescription player",
    ],
    [
        "u",
        "ropeattachedobjects",
        "ropeAttachedObjects",
        "Returns list of attached objects on ropes",
        "ropeAttachedObjects obj",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "ropeAttachedObjects vehicle",
    ],
    [
        "u",
        "ropeattachedto",
        "ropeAttachedTo",
        "Returns the object it is attached to by the first rope",
        "ropeAttachedTo obj",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "ropeAttachedTo vehicle",
    ],
    [
        "u",
        "ropeattachenabled",
        "ropeAttachEnabled",
        "Check if the vehicle can be attached to ropes",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "ropeAttachEnabled vehicle",
    ],
    [
        "b",
        "ropeattachto",
        "ropeAttachTo",
        "Attach vehicle to rope with optional offset",
        "[veh, [0,0,0], [0,0,-1]] ropeAttachTo rope",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "OBJECT",
        "[vehicle, (toPoint), (ropeEndDownDir)] ropeAttachTo rope",
    ],
    [
        "u",
        "ropecreate",
        "ropeCreate",
        "Create instance of rope object attached on vehicle",
        "ropeCreate [veh1, [0,0,-2], veh2, [0,0,0], 10] or ropeCreate [veh1, [0,0,-2], 10] or ropeCreate [veh1, [0,0,-2], veh2, [0,0,0], 10, [], ['ropeend', [0,0,-1]]]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "ropeCreate [fromObject, fromPoint, toObject, toPoint, (length), ([ropeStart, downDir]), ([ropeEnd, downDir])]",
    ],
    [
        "u",
        "ropecut",
        "ropeCut",
        "Cut rope and detach rope from vehicle",
        "ropeCut [rope, 5]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "ropeCut [rope, distance]",
    ],
    [
        "u",
        "ropedestroy",
        "ropeDestroy",
        "Destroy rope and detach rope from vehicle",
        "ropeDestroy rope",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "ropeDestroy rope",
    ],
    [
        "b",
        "ropedetach",
        "ropeDetach",
        "Detach vehicle from rope",
        "vehicle ropeDetachFrom rope",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "vehicle ropeDetach rope",
    ],
    [
        "u",
        "ropeendposition",
        "ropeEndPosition",
        "Return rope end positions",
        "[start position, end position] ropeEndPosition ropeObj",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "ropeEndPosition rope",
    ],
    [
        "u",
        "ropelength",
        "ropeLength",
        "Return rope length (set by ropeCreate, ropeCut, ropeUnwind)",
        "ropeLength rope",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "ropeLength rope",
    ],
    [
        "u",
        "ropes",
        "ropes",
        "Return vehicle ropes",
        "ropes vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "ropes vehicle",
    ],
    [
        "u",
        "ropesattachedto",
        "ropesAttachedTo",
        "Returns array of objects it is attached to by all ropes",
        "ropesAttachedTo obj",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "ropesAttachedTo vehicle",
    ],
    [
        "u",
        "ropesegments",
        "ropeSegments",
        "Return all rope segments of given rope",
        "ropeSegments myRope",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "ropeSegments rope",
    ],
    [
        "u",
        "ropeunwind",
        "ropeUnwind",
        "Unwind rope to target length. Use relative parameter for change rope length +/- from current length",
        "ropeUnwind [rope, 3, 10]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "ropeUnwind [rope, speed, targetLength, (relative)]",
    ],
    [
        "u",
        "ropeunwound",
        "ropeUnwound",
        "False if unwiding in progress, otherwise true",
        "ropeUnwound rope",
        "",
        "BOOL",
        "",
        "OBJECT",
        "ropeUnwound rope",
    ],
    [
        "u",
        "rotorsforcesrtd",
        "rotorsForcesRTD",
        "Returns force produced by rotors.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "rotorsForcesRTD RTD_helicopter",
    ],
    [
        "u",
        "rotorsrpmrtd",
        "rotorsRpmRTD",
        "Returns rotors RPM.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "rotorsRpmRTD RTD_helicopter",
    ],
    [
        "u",
        "round",
        "round",
        "The round value of x.",
        "round -5.25",
        "-5",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "round x",
    ],
    [
        "n",
        "runinitscript",
        "runInitScript",
        "Launch init.sqs script.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "runInitScript",
    ],
    [
        "n",
        "safezoneh",
        "safeZoneH",
        "Returns the height of the screen in screen measurement units",
        "",
        "",
        "SCALAR",
        "",
        "",
        "safeZoneH",
    ],
    [
        "n",
        "safezonew",
        "safeZoneW",
        "Returns the width of the screen in screen measurement units",
        "",
        "",
        "SCALAR",
        "",
        "",
        "safeZoneW",
    ],
    [
        "n",
        "safezonewabs",
        "safeZoneWAbs",
        "Returns absolute SafeZoneW (all monitors, in case there's more than one)",
        "",
        "",
        "SCALAR",
        "",
        "",
        "safeZoneWAbs",
    ],
    [
        "n",
        "safezonex",
        "safeZoneX",
        "Returns the X of the left border of the screen in screen measurement units",
        "",
        "",
        "SCALAR",
        "",
        "",
        "safeZoneX",
    ],
    [
        "n",
        "safezonexabs",
        "safeZoneXAbs",
        "Returns absolute SafeZoneX (all monitors, in case there's more than one)",
        "",
        "",
        "SCALAR",
        "",
        "",
        "safeZoneXAbs",
    ],
    [
        "n",
        "safezoney",
        "safeZoneY",
        "Returns the Y of the top border of the screen in screen measurement units",
        "",
        "",
        "SCALAR",
        "",
        "",
        "safeZoneY",
    ],
    [
        "u",
        "save3deninventory",
        "save3DENInventory",
        "Saves current state of entitie's inventory to SQM.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "save3DENInventory &lt;entities&gt;",
    ],
    [
        "n",
        "savegame",
        "saveGame",
        "Creates an autosave game (used for Retry).",
        "",
        "",
        "NOTHING",
        "",
        "",
        "saveGame",
    ],
    [
        "b",
        "saveidentity",
        "saveIdentity",
        "Saves person's identity to objects.sav file in campaign directory as entry name.",
        "player saveIdentity 'playerIdentity'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "person saveIdentity name",
    ],
    [
        "n",
        "savejoysticks",
        "saveJoysticks",
        "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "saveJoysticks",
    ],
    [
        "n",
        "savemissionprofilenamespace",
        "saveMissionProfileNamespace",
        "Saves the variables stored in missionProfileNamespace to user profile, returns true on success.",
        "",
        "",
        "BOOL",
        "",
        "",
        "saveMissionProfileNamespace",
    ],
    [
        "u",
        "saveoverlay",
        "saveOverlay",
        "Save the current overlay.",
        "saveOverlay _map",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "saveOverlay map",
    ],
    [
        "n",
        "saveprofilenamespace",
        "saveProfileNamespace",
        "Saves the variables stored in profileNamespace to user profile.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "saveProfileNamespace",
    ],
    [
        "b",
        "savestatus",
        "saveStatus",
        "Saves object's properties to objects.sav file in campaign directory as entry name.",
        "player saveStatus 'playerState'",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "object saveStatus name",
    ],
    [
        "u",
        "savevar",
        "saveVar",
        "Saves the variable value into the global campaign space. The variable is then available to all following missions in the campaign.",
        "saveVar 'varOne'",
        "",
        "NOTHING",
        "",
        "STRING",
        "saveVar varName",
    ],
    [
        "n",
        "savingenabled",
        "savingEnabled",
        "Check if saving the game is enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "savingEnabled",
    ],
    [
        "b",
        "say",
        "say",
        "The unit will play the given sound. If the unit is a person, it will also pefrorm the corresponding lipsync effect. The sound is defined in the description.ext file. If target is given, titles will be written to the conversation history.",
        "soldierOne say 'speechId'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "unit or [unit, target] say speechName",
    ],
    [
        "b",
        "say",
        "say",
        "The format of speechName is [sound, maxTitlesDistance] or [sound, maxTitlesDistance, speed]. The unit will play the given sound. If the unit is a person, it will also pefrorm the corresponding lipsync effect. If the camera is not withing the given range, the title is not shown. The sound is defined in the description.ext file.  If target is given, titles will be written to the conversation history.",
        "",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit or [unit, target] say speechName",
    ],
    [
        "b",
        "say2d",
        "say2D",
        "Functionally same as Say, only difference is sound played as 2D (mono) always.",
        "soldierOne say 'speechId'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "unit or [unit, target] say2D speechName",
    ],
    [
        "b",
        "say2d",
        "say2D",
        "Functionally same as Say, only difference is sound played as 2D (mono) always.",
        "",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit or [unit, target] say2D speechName",
    ],
    [
        "b",
        "say3d",
        "say3D",
        "Functionally same as Say, only difference is sound played as 3D always.",
        "soldierOne say 'speechId'",
        "",
        "OBJECT",
        "ARRAY,OBJECT",
        "STRING",
        "unit or [unit, target] say3D speechName",
    ],
    [
        "b",
        "say3d",
        "say3D",
        "Functionally same as Say, only difference is sound played as 3D always.",
        "",
        "",
        "OBJECT",
        "ARRAY,OBJECT",
        "ARRAY",
        "unit or [unit, target] say3D speechName",
    ],
    [
        "u",
        "scopename",
        "scopeName",
        "defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands. Scope name can be defined only once per scope.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "scopeName name",
    ],
    [
        "u",
        "score",
        "score",
        "MP: returns the unit's score.",
        "score unitOne",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "score unit",
    ],
    [
        "u",
        "scoreside",
        "scoreSide",
        "MP: returns side score.",
        "score west",
        "",
        "SCALAR",
        "",
        "SIDE",
        "scoreSide side",
    ],
    [
        "u",
        "screenshot",
        "screenshot",
        "Captures a screenshot and stores it in DocumentsArma 3Screenshots. If filename is empty, it will be auto-generated. Must have .png extension. Folder size is limited by 'maxScreenShotFolderSizeMB' velu in profile. ",
        "screenshot 'mission1image.png'",
        "",
        "BOOL",
        "",
        "STRING",
        "screenshot filename",
    ],
    [
        "u",
        "screentoworld",
        "screenToWorld",
        "Returns the position on landscape (in world coordinates) corresponding to the given point on screen (in UI coordinates).",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "screenToWorld position",
    ],
    [
        "u",
        "scriptdone",
        "scriptDone",
        "Check if script is already finished",
        "",
        "",
        "BOOL",
        "",
        "SCRIPT",
        "scriptDone script",
    ],
    [
        "u",
        "scriptname",
        "scriptName",
        "Assign a friendly name to the VM script this command is executed from.",
        "scriptName 'Trading'",
        "",
        "NOTHING",
        "",
        "STRING",
        "scriptName name",
    ],
    [
        "n",
        "scriptnull",
        "scriptNull",
        "A non-existing script. This value is not equal to anything, including itself.",
        "script == scriptNull",
        "false",
        "SCRIPT",
        "",
        "",
        "scriptNull",
    ],
    [
        "u",
        "scudstate",
        "scudState",
        "Returns the current state of the given scud launcher. The following states are recognized: 0 - No activity, 1 - Launch preparation, 2 - Launch prepared, 3 - Ignition and 4 - Launched. Note:  non-integral values are used to indicate a transition between states.",
        "scudState scudOne>=4",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "scudState scud",
    ],
    [
        "u",
        "secondaryweapon",
        "secondaryWeapon",
        "Returns the name of a vehicle's secondary weapon (an empty string if there is none).",
        "secondaryWeapon player",
        "",
        "STRING",
        "",
        "OBJECT",
        "secondaryWeapon vehicle",
    ],
    [
        "u",
        "secondaryweaponitems",
        "secondaryWeaponItems",
        "Get array with all items assigned to a weapon.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "secondaryWeaponItems unit",
    ],
    [
        "u",
        "secondaryweaponmagazine",
        "secondaryWeaponMagazine",
        "Return the names of the types of currently loaded magazines in given weapon.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "secondaryWeaponMagazine vehicle",
    ],
    [
        "b",
        "select",
        "select",
        "Selects index element of the array. Index 0 denotes the first element, 1 the second, etc.",
        "[1, 2, 3] select 1",
        "2",
        "ANY",
        "ARRAY",
        "SCALAR",
        "array select index",
    ],
    [
        "b",
        "select",
        "select",
        "If the index is false, this selects the first element of the array. If it is true, it selects the second one.",
        "",
        "",
        "ANY",
        "ARRAY",
        "BOOL",
        "array select index",
    ],
    [
        "b",
        "select",
        "select",
        "Extracts the elements from array between 'start' and 'start+length'.",
        "",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "array select [start,length]",
    ],
    [
        "b",
        "select",
        "select",
        "If the code returns true current array element is selected and added to the resulting array",
        "",
        "",
        "ARRAY",
        "ARRAY",
        "CODE",
        "array select code",
    ],
    [
        "b",
        "select",
        "select",
        "Returns subentry with given index.",
        "(configFile >> 'CfgVehicles') select 0",
        "",
        "CONFIG",
        "CONFIG",
        "SCALAR",
        "config select index",
    ],
    [
        "b",
        "select",
        "select",
        "Extracts the characters in a string between 'start' and 'start+length'.",
        "'Hello' select [1,2]",
        "'el'",
        "STRING",
        "STRING",
        "ARRAY",
        "source string select [start,length]",
    ],
    [
        "u",
        "selectbestplaces",
        "selectBestPlaces",
        "Find the places with the max. value of _expression in the given area.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "selectBestPlaces [_position, _radius, _expression, _precision, _sourcesCount]",
    ],
    [
        "b",
        "selectdiarysubject",
        "selectDiarySubject",
        "Selects the subject page in a log.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "STRING",
        "person selectDiarySubject subject",
    ],
    [
        "u",
        "selectededitorobjects",
        "selectedEditorObjects",
        "Returns a list of currently selected editor objects.",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "selectedEditorObjects map",
    ],
    [
        "b",
        "selecteditorobject",
        "selectEditorObject",
        "Select an editor object. Does not un-select previously selected objects.",
        "",
        "",
        "ANY",
        "CONTROL",
        "STRING",
        "map selectEditorObject object",
    ],
    [
        "b",
        "selectionnames",
        "selectionNames",
        "returns list of modelSelections on the defined LOD resolution",
        "object selectionNames 1000",
        "",
        "ARRAY",
        "OBJECT",
        "SCALAR,STRING",
        "entity selectionNames lod",
    ],
    [
        "u",
        "selectionnames",
        "selectionNames",
        "returns list of modelSelections",
        "selectionNames object",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "selectionNames entity",
    ],
    [
        "b",
        "selectionposition",
        "selectionPosition",
        "Searches for selection in the object model (first in the memory level, then in other levels). Returns position in model space.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "object selectionPosition selectionName",
    ],
    [
        "b",
        "selectionposition",
        "selectionPosition",
        "Searches for selection in the object model in the given LOD level of object model (Memory, Geometry, FireGeometry, LandContact, HitPoints, ViewGeometry) or by LOD resolution. Returns position in model space.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object selectionPosition [selectionName, lodName, (resultType)]",
    ],
    [
        "u",
        "selectionposition",
        "selectionPosition",
        "Returns animation position of the given named selection in optional render or future scope",
        "selectionPosition [_myObj, 'selection', 1, false]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "selectionPosition [object, selection, LODindex, (visual), (resultType)]",
    ],
    [
        "b",
        "selectionvectordirandup",
        "selectionVectorDirAndUp",
        "Searches for selection in the object model in the given LOD level of object model (Memory, Geometry, FireGeometry, LandContact, HitPoints, ViewGeometry) or by LOD resolution. Returns Direction and Up Vector in model space.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object selectionVectorDirAndUp [selectionName, lodName]",
    ],
    [
        "b",
        "selectleader",
        "selectLeader",
        "Select group leader.",
        "group player selectLeader player",
        "",
        "NOTHING",
        "GROUP",
        "OBJECT",
        "group selectLeader unit",
    ],
    [
        "u",
        "selectmax",
        "selectMax",
        "Returns array element with maximum value",
        "selectMax [1,2,3]",
        "3",
        "ANY",
        "",
        "ARRAY",
        "selectMax array",
    ],
    [
        "u",
        "selectmin",
        "selectMin",
        "Returns array element with minimum value",
        "selectMin [1,2,3]",
        "1",
        "ANY",
        "",
        "ARRAY",
        "selectMin array",
    ],
    [
        "n",
        "selectnoplayer",
        "selectNoPlayer",
        "Switch player to no unit.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "selectNoPlayer",
    ],
    [
        "u",
        "selectplayer",
        "selectPlayer",
        "Switch player to given unit.",
        "selectPlayer aP",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "selectPlayer unit",
    ],
    [
        "u",
        "selectrandom",
        "selectRandom",
        "Returns random element of given array",
        "selectRandom [1,2,3]",
        "",
        "ANY",
        "",
        "ARRAY",
        "selectRandom array",
    ],
    [
        "b",
        "selectrandomweighted",
        "selectRandomWeighted",
        "Returns random weighted element of array",
        "[1,2,3] selectRandom [0.1,0.2,0.3]",
        "",
        "ANY",
        "ARRAY",
        "ARRAY",
        "values selectRandomWeighted weights",
    ],
    [
        "u",
        "selectrandomweighted",
        "selectRandomWeighted",
        "Returns random weighted element of array",
        "selectRandomWeighted [1,0.5,2,0.1,3,0.04]",
        "",
        "ANY",
        "",
        "ARRAY",
        "selectRandomWeighted array",
    ],
    [
        "b",
        "selectweapon",
        "selectWeapon",
        "Selects the given weapon\nFor weapon values see <cl>CfgWeapons</cl>.",
        "soldierOne selectWeapon 'LAWLauncher'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit selectWeapon weapon",
    ],
    [
        "b",
        "selectweapon",
        "selectWeapon",
        "Selects the given weapon, muzzle and firemode",
        "soldierOne selectWeapon ['arifle_MX_GL_ACO_F', 'arifle_MX_GL_ACO_F', 'FullAuto']",
        "",
        "BOOL,NOTHING",
        "OBJECT",
        "ARRAY",
        "unit selectWeapon [weapon, muzzle, firemode]",
    ],
    [
        "b",
        "selectweaponturret",
        "selectWeaponTurret",
        "Selects the given weapon on specified turret",
        "tank selectWeaponTurret ['LAWLauncher', [0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle selectWeaponTurret [weapon, turret path, (muzzle), (firemode)]",
    ],
    [
        "u",
        "sendaumessage",
        "sendAUMessage",
        "Send the command to the list of clients or some count of clients.",
        "SendAUMessage [[dpnid1, dpnid2], 'ConnectTo: 192.168.1.66']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "sendAUMessage [count|[clientList], &quot;command&quot;]",
    ],
    [
        "b",
        "sendsimplecommand",
        "sendSimpleCommand",
        "Sends a simple command to the vehicle's driver / gunner.",
        "vehicle player sendSimpleCommand 'STOP'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "object sendSimpleCommand command",
    ],
    [
        "b",
        "sendtask",
        "sendTask",
        "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
        "",
        "",
        "TASK",
        "TEAM_MEMBER",
        "ARRAY",
        "sender sendTask [receiver, [type] or [type, parentTask], priority, name1, value1, name2, value2, ...]",
    ],
    [
        "b",
        "sendtaskresult",
        "sendTaskResult",
        "Send a result of the task to the task sender.",
        "",
        "",
        "NOTHING",
        "TASK",
        "ARRAY",
        "task sendTaskResult [state, result, sentence]",
    ],
    [
        "u",
        "sendudpmessage",
        "sendUDPMessage",
        "Send message to given address using UDP protocol.",
        "",
        "",
        "BOOL",
        "",
        "ARRAY",
        "sendUDPMessage [ip,port,&quot;message&quot;]",
    ],
    [
        "n",
        "sentencesenabled",
        "sentencesEnabled",
        "A getter for the <f>enableSentences</f> command.",
        "",
        "",
        "BOOL",
        "",
        "",
        "sentencesEnabled",
    ],
    [
        "b",
        "servercommand",
        "serverCommand",
        "Process the specified server command\nThis command needs to be executed from UI handler to succeed.",
        "'password' serverCommand '#kick friendlykiller'",
        "",
        "BOOL",
        "STRING",
        "STRING",
        "password serverCommand server command",
    ],
    [
        "u",
        "servercommand",
        "serverCommand",
        "Process the specified server command\nThe Server command string is identical to that used in chat line in MP\nThis command needs to be executed from UI handler to succeed.",
        "serverCommand '#kick friendlykiller'",
        "",
        "BOOL",
        "",
        "STRING",
        "serverCommand server command",
    ],
    [
        "u",
        "servercommandavailable",
        "serverCommandAvailable",
        "Checks whether current user is able to process the specified server command. See also <f>serverCommand</f>",
        "serverCommandAvailable '#kick'",
        "",
        "BOOL",
        "",
        "STRING",
        "serverCommandAvailable server command",
    ],
    [
        "u",
        "servercommandexecutable",
        "serverCommandExecutable",
        "Checks whether current user is able to execute the specified server command\nThis command needs to be executed from UI handler to succeed and mirrors serverCommand behavior. See also <f>serverCommand</f>",
        "serverCommandExecutable '#kick'",
        "",
        "BOOL",
        "",
        "STRING",
        "serverCommandExecutable server command",
    ],
    [
        "n",
        "servername",
        "serverName",
        "Returns server hostname as it appears in server browser",
        "",
        "",
        "STRING",
        "",
        "",
        "serverName",
    ],
    [
        "n",
        "servernamespace",
        "serverNamespace",
        "Returns server namespace",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "serverNamespace",
    ],
    [
        "n",
        "servertime",
        "serverTime",
        "Server time synchronized to clients.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "serverTime",
    ],
    [
        "b",
        "set",
        "set",
        "Format of element is [index, value]\nChanges an element of the given array. If the element does not exist, index+1 is called to create it.",
        "array set [0, 'Hello']",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "array set element",
    ],
    [
        "b",
        "set",
        "set",
        "Sets an entry in the HashMap. Returns whether an already existing entry was replaced.",
        "_hashMap set [1337, player]",
        "false",
        "BOOL",
        "HASHMAP",
        "ARRAY",
        "HashMap set [key, value(, onlyIfUnique)]",
    ],
    [
        "b",
        "set3denattribute",
        "set3DENAttribute",
        "Returns TRUE if change was processed.",
        "0 set3DENAttribute ['Name', 'MyEntity']",
        "",
        "BOOL",
        "ANY",
        "ARRAY",
        "&lt;entity&gt; set3DENAttribute [&lt;attributeType&gt;,&lt;value&gt;]",
    ],
    [
        "u",
        "set3denattributes",
        "set3DENAttributes",
        "Returns TRUE if change was processed.",
        "",
        "",
        "BOOL",
        "",
        "ARRAY",
        "set3DENAttributes [[[&lt;entities&gt;],&lt;attributeType&gt;,&lt;value&gt;], ....]",
    ],
    [
        "u",
        "set3dengrid",
        "set3DENGrid",
        "Sets grid size for given grid type.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "set3DENGrid [&lt;type&gt;, &lt;value&gt;]",
    ],
    [
        "u",
        "set3deniconsvisible",
        "set3DENIconsVisible",
        "Enables or disables icons visibility in 3DEN",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "set3DENIconsVisible [&lt;map:bool&gt;, &lt;scene:bool&gt;]",
    ],
    [
        "b",
        "set3denlayer",
        "set3DENLayer",
        "Sets given editor entity to be in given layer.",
        "'myMarker' set3DENLayer 0",
        "",
        "BOOL",
        "ANY",
        "SCALAR",
        "&lt;entity&gt; set3DENLayer &lt;layerID&gt;",
    ],
    [
        "u",
        "set3denlinesvisible",
        "set3DENLinesVisible",
        "Enables or disables lines visibility in 3DEN",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "set3DENLinesVisible [&lt;map:bool&gt;, &lt;scene:bool&gt;]",
    ],
    [
        "b",
        "set3denlogictype",
        "set3DENLogicType",
        "Swaps type of all listed editorLogics to given logicClassName.",
        "(get3DENSelected 'Logic') set3DENLogicType 'Empty'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "[editorLogics] set3DENLogicType logicClassName",
    ],
    [
        "b",
        "set3denmissionattribute",
        "set3DENMissionAttribute",
        "Sets given value into global 3DEN attribute",
        "'Scenario' get3DENMissionAttribute ['author', 'MyAuthor']",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "&lt;section&gt; set3DENMissionAttribute [&lt;class&gt;, &lt;value&gt;]",
    ],
    [
        "u",
        "set3denmissionattributes",
        "set3DENMissionAttributes",
        "Sets given attribute into the engine.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "set3DENMissionAttributes [[&lt;section&gt;, &lt;class&gt;, &lt;value&gt;],...]",
    ],
    [
        "u",
        "set3denmodelsvisible",
        "set3DENModelsVisible",
        "Enables or disables lines visibility in 3DEN",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "set3DENModelsVisible [&lt;map:bool&gt;, &lt;scene:bool&gt;]",
    ],
    [
        "b",
        "set3denobjecttype",
        "set3DENObjectType",
        "Swaps type of all listed editorObjects to given objectClassName.",
        "(get3DENSelected 'Object') set3DENObjectType 'B_Soldier_F'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "[editorObjects] set3DENObjectType objectClassName",
    ],
    [
        "u",
        "set3denselected",
        "set3DENSelected",
        "Changes selection in 3den to what is inside entities array.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "set3DENSelected &lt;entities&gt;",
    ],
    [
        "u",
        "setacctime",
        "setAccTime",
        "Sets the time acceleration coeficient. It can also be used to slow down time in cutscenes.",
        "setAccTime 0.1",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setAccTime accFactor",
    ],
    [
        "b",
        "setactualcollectivertd",
        "setActualCollectiveRTD",
        "Set wanted RPM of given motor, use index -1 for all motors.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "RTD_helicopter setActualCollectiveRTD Set starting collective.",
    ],
    [
        "b",
        "setairplanethrottle",
        "setAirplaneThrottle",
        "Set wanted throttle position, works only on player's vehicle.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "airplane setAirplaneThrottle value of throttle",
    ],
    [
        "b",
        "setairportside",
        "setAirportSide",
        "Set owner of the airport",
        "0 setAirportSide east",
        "",
        "NOTHING",
        "SCALAR,OBJECT",
        "SIDE",
        "airportId setAirportSide side",
    ],
    [
        "b",
        "setammo",
        "setAmmo",
        "Set how many shots the unit has left for the loaded magazine in the given weapon type.",
        "player setAmmo ['M16',5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit setAmmo [weapon, count]",
    ],
    [
        "b",
        "setammocargo",
        "setAmmoCargo",
        "Sets the amount of ammo resources in the cargo space of a repair vehicle. Ammo resources are used to resupply vehicles; soldiers use individual magazines instead. An amount of one indicates a full cargo.",
        "rearmTruckOne setAmmoCargo 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle setAmmoCargo ammoCargo",
    ],
    [
        "b",
        "setammoonpylon",
        "setAmmoOnPylon",
        "set count of ammo in magazine on pylon",
        "vehicle player SetAmmoOnPylon[1, 12] ",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setAmmoOnPylon [pylon name/index, ammo count]",
    ],
    [
        "b",
        "setanimspeedcoef",
        "setAnimSpeedCoef",
        "Sets a coefficient for animation speed",
        "player setAnimSpeedCoef 0.3",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "soldier setAnimSpeedCoef coef",
    ],
    [
        "u",
        "setaperture",
        "setAperture",
        "Sets custom camera apreture (-1 to do it automatically).",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setAperture set",
    ],
    [
        "u",
        "setaperturenew",
        "setApertureNew",
        "Sets custom camera apreture (-1 to do it automatically).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setApertureNew [min, std, max, std lum]",
    ],
    [
        "u",
        "setarmorypoints",
        "setArmoryPoints",
        "Store the given amount of armory points.",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setArmoryPoints points",
    ],
    [
        "b",
        "setattributes",
        "setAttributes",
        "Returns a structured text created by the given structured or plain text by setting attributes to the given values.",
        "txt = img setAttributes ['image', 'dataiSoldier.paa']",
        "",
        "TEXT",
        "STRING,TEXT",
        "ARRAY",
        "text setAttributes [name1, value1, name2, value2, ...]",
    ],
    [
        "b",
        "setautonomous",
        "setAutonomous",
        "Set UAV autonomous mode.",
        "uav setAutonomous true",
        "",
        "BOOL",
        "OBJECT",
        "BOOL",
        "uav setAutonomous autonomous",
    ],
    [
        "b",
        "setbehaviour",
        "setBehaviour",
        "Sets the group behaviour mode. Behaviour is one of: 'CARELESS', 'SAFE', 'AWARE', 'COMBAT' or 'STEALTH'.",
        "groupOne setBehaviour 'SAFE'",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "STRING",
        "group setBehaviour behaviour",
    ],
    [
        "b",
        "setbehaviourstrong",
        "setBehaviourStrong",
        "Sets the group units behaviour mode and forces group behaviour to same value. Behaviour is one of: 'CARELESS', 'SAFE', 'AWARE', 'COMBAT' or 'STEALTH'.",
        "groupOne setBehaviour 'SAFE'",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "STRING",
        "group setBehaviourStrong behaviour",
    ],
    [
        "b",
        "setbleedingremaining",
        "setBleedingRemaining",
        "Sets bleeding time remaining.",
        "player setBleedingRemaining 1.0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "obj setBleedingRemaining time",
    ],
    [
        "b",
        "setbrakesrtd",
        "setBrakesRTD",
        "Set brakes. If value 1.0f, brakes are on,   If value 0.0f,  brakes are off. index = 1 - left; index = 2 - right; index = 3 - both sides",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "RTD_helicopter setBrakesRTD [value, index]",
    ],
    [
        "b",
        "setcamerainterest",
        "setCameraInterest",
        "Set camera interest for given entity.",
        "_soldier setCameraInterest 50",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "entity setCameraInterest interest",
    ],
    [
        "u",
        "setcamshakedefparams",
        "setCamShakeDefParams",
        "Sets camera shake default params.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setCamShakeDefParams [power, duration, maxDistance, frequency, minSpeed, minMass, caliberCoefHit, caliberCoefFire, vehicleCoef]",
    ],
    [
        "u",
        "setcamshakeparams",
        "setCamShakeParams",
        "Sets camera shake params.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setCamShakeParams [posCoef, rotXCoef, rotYCoef, rotZCoef, interp]",
    ],
    [
        "b",
        "setcamuseti",
        "setCamUseTi",
        "Activate camera thermal vision",
        "",
        "",
        "NOTHING",
        "BOOL",
        "SCALAR",
        "bool setCamUseTi mode index",
    ],
    [
        "b",
        "setcaptive",
        "setCaptive",
        "Marks the unit as captive. If the unit is a vehicle, the vehicle commander is marked instead\nA captive is neutral to everyone\nNote: This function does not remove the unit's weapons.",
        "setCaptive player",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR,BOOL",
        "person setCaptive captive",
    ],
    [
        "b",
        "setcenterofmass",
        "setCenterOfMass",
        "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero means an immediate change.",
        "myObject setCenterOfMass [[0,-1,0],0.5]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setCenterOfMass com or [com, time]; com: vector",
    ],
    [
        "b",
        "setcollisionlight",
        "setCollisionLight",
        "Sets vehicle collision lights(true-on, false-off).",
        "vehicle player SetCollisionLight true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle setCollisionLight true/false",
    ],
    [
        "b",
        "setcombatbehaviour",
        "setCombatBehaviour",
        "Sets the given unit's combat behaviour mode. Behaviour is one of: 'CARELESS', 'SAFE', 'AWARE', 'COMBAT' or 'STEALTH'.",
        "unit1 setCombatBehaviour 'SAFE'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit setCombatBehaviour behaviour",
    ],
    [
        "b",
        "setcombatbehaviour",
        "setCombatBehaviour",
        "Sets the given group combat behaviour mode. Behaviour is one of: 'CARELESS', 'SAFE', 'AWARE', 'COMBAT' or 'STEALTH'.",
        "group1 setCombatBehaviour 'SAFE'",
        "",
        "NOTHING",
        "GROUP",
        "STRING",
        "group setCombatBehaviour behaviour",
    ],
    [
        "b",
        "setcombatmode",
        "setCombatMode",
        "Sets the group's combat mode (engagement rules). Mode can be one of: 'BLUE' (Never fire), 'GREEN' (Hold fire - defend only), 'WHITE' (Hold fire, engage at will), 'YELLOW' (Fire at will) or 'RED' (Fire at will, engage at will).",
        "groupOne setCombatMode 'BLUE'",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "STRING",
        "group setCombatMode mode",
    ],
    [
        "b",
        "setcombatmode",
        "setCombatMode",
        "Sets the team member's combat mode (engagement rules). Mode can be one of: 'BLUE' (Never fire), 'GREEN' (Hold fire - defend only), 'WHITE' (Hold fire, engage at will), 'YELLOW' (Fire at will) or 'RED' (Fire at will, engage at will).",
        "(teamMember agent1) setCombatMode 'BLUE'",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "STRING",
        "teamMember setCombatMode mode",
    ],
    [
        "u",
        "setcompassoscillation",
        "setCompassOscillation",
        "Set Compass Oscillation.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setCompassOscillation [angle, frequencyMin, frequencyMax]",
    ],
    [
        "b",
        "setconvoyseparation",
        "setConvoySeparation",
        "Sets the distance to keep to following vehicle.",
        "vehicle setSeparationDistance 20",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle setConvoySeparation distance",
    ],
    [
        "b",
        "setcruisecontrol",
        "setCruiseControl",
        "Sets the vehicles speed limiter/cruise control parameters",
        "(vehicle player) setCruiseControl [30, true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setCruiseControl [targetSpeed, autoThrust]",
    ],
    [
        "b",
        "setcuratorcameraareaceiling",
        "setCuratorCameraAreaCeiling",
        "Sets maximal height where curator can fly",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "curatorObj setCuratorCameraAreaCeiling height",
    ],
    [
        "b",
        "setcuratorcoef",
        "setCuratorCoef",
        "Sets coef for some action (coef have to be bigger than -1 000 000 anything lower is considered as disabled action)",
        "0 setCuratorCoef [0, 1] or 0 setCuratorCoef [0, false]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "curatorObj setCuratorCoef [action, coefficient/enabled?]",
    ],
    [
        "b",
        "setcuratoreditingareatype",
        "setCuratorEditingAreaType",
        "Set curator areas to act like whitelist(true)/blacklist(false).",
        "curator setCuratorEditingAreaType true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "curatorObj setCuratorEditingAreaType whitelist?",
    ],
    [
        "b",
        "setcuratorwaypointcost",
        "setCuratorWaypointCost",
        "Sets price for waypoint placement.",
        "0 setCuratorWaypointCost 0.1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "curatorObj setCuratorWaypointCost price",
    ],
    [
        "u",
        "setcurrentchannel",
        "setCurrentChannel",
        "Sets given channel as current channel",
        "channelSet = setCurrentChannel 2",
        "",
        "BOOL",
        "",
        "SCALAR",
        "setCurrentChannel channel",
    ],
    [
        "b",
        "setcurrenttask",
        "setCurrentTask",
        "Set the task as a current task of the person.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "TASK",
        "person setCurrentTask task",
    ],
    [
        "b",
        "setcurrentwaypoint",
        "setCurrentWaypoint",
        "Switch the group to process the given waypoint.",
        "",
        "",
        "NOTHING",
        "GROUP",
        "ARRAY",
        "group setCurrentWaypoint waypoint",
    ],
    [
        "b",
        "setcustomaimcoef",
        "setCustomAimCoef",
        "Set custom aim precision coefficient for weapon sway",
        "player setCustomAimCoef 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "player setCustomAimCoef coef",
    ],
    [
        "u",
        "setcustommissiondata",
        "SetCustomMissionData",
        "SetCustomMissionData ['decision1', 'ending2']",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "SetCustomMissionData Setting custom mission text that is sent to analytics. Requires array of strings, max. 5 items, each string max. 16 characters.",
    ],
    [
        "u",
        "setcustomsoundcontroller",
        "setCustomSoundController",
        "Return true if value was set to the controller, false if not",
        "setCustomSoundController [vehicle player, 'CustomSoundController3', 1.5]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "setCustomSoundController [vehicle, controllerIndex, controllerValue]",
    ],
    [
        "b",
        "setcustomweightrtd",
        "setCustomWeightRTD",
        "Add weight to helicopter.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "RTD_helicopter setCustomWeightRTD weight",
    ],
    [
        "b",
        "setdamage",
        "setDamage",
        "Damages / repairs the object. Damage 0 means the object is fully functional, damage 1 means it's completely destroyed / dead\nNote: this function is identical to <f>setDammage</f>. It was introduced to fix a spelling error in the original function name.",
        "player setdamage 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR,ARRAY",
        "object setDamage damage",
    ],
    [
        "b",
        "setdammage",
        "setDammage",
        "Damages / repairs the object. Damage 0 means the object is fully functional, damage 1 means it's completely destroyed / dead.",
        "player setdammage 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "obj setDammage dammage",
    ],
    [
        "u",
        "setdate",
        "setDate",
        "Sets the actual mission date and time.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setDate [year, month, day, hour, minute]",
    ],
    [
        "b",
        "setdebriefingtext",
        "setDebriefingText",
        "Sets debriefing text.",
        "'end1' setDebriefingText ['Title', 'Description', 'Subtitle']",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "endType setDebriefingText [title, description, (subtitle, picture, pictureBackground)]",
    ],
    [
        "u",
        "setdefaultcamera",
        "setDefaultCamera",
        "Sets the position and direction for camera used after camera is set on no object (e.g. leaving a multiplayer game).",
        "setDefaultCamera [ [ 5000,5000,200], [1,1,-1] ]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setDefaultCamera [ position, direction = [0,0,-1]]",
    ],
    [
        "b",
        "setdestination",
        "setDestination",
        "Set the destination for path planning of the pilot.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setDestination [position, planningMode, forceReplan]",
    ],
    [
        "u",
        "setdetailmapblendpars",
        "setDetailMapBlendPars",
        "Sets the detail texture map blend pars.",
        "setDetailMapBlendPars [20, 50]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setDetailMapBlendPars [fullDetail, noDetail]",
    ],
    [
        "b",
        "setdiaryrecordtext",
        "setDiaryRecordText",
        "Set text of a log record.",
        "player setDiaryRecordText [['diary', _diaryRec],['Kill all enemies.']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person setDiaryRecordText [[subject, diaryRecord], [title, text(, icon)]]",
    ],
    [
        "b",
        "setdiarysubjectpicture",
        "setDiarySubjectPicture",
        "Sets diary subject picture.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person setDiarySubjectPicture [subject, picture]",
    ],
    [
        "b",
        "setdir",
        "setDir",
        "Sets the object heading. The accepted heading range is from 0 to 360.",
        "player setDir 180",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "obj setDir heading",
    ],
    [
        "b",
        "setdirection",
        "setDirection",
        "Set a new direction (angle) of given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "SCALAR",
        "location setDirection direction",
    ],
    [
        "b",
        "setdrawicon",
        "setDrawIcon",
        "Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false, icon will not scale depending on the scale of the map. If maintain size is a number, the icon will maintain size if map scale is below that number. is3D, show line and priority are optional.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map setDrawIcon [object, texture, color, offset, width, height, maintain size?, angle, string identifier, shadow, is3D, draw line?, priority]",
    ],
    [
        "b",
        "setdriveonpath",
        "setDriveOnPath",
        "Sets the path to follow for AI driver",
        "vehicle setDriveOnPath [[1000,10,1000],[1100,10,1000]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setDriveOnPath [array of points]",
    ],
    [
        "b",
        "setdropinterval",
        "setDropInterval",
        "Set interval of emitting particles from particle source.",
        "_source setDropInterval 0.05",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "particleSource setDropInterval interval",
    ],
    [
        "b",
        "setdynamicsimulationdistance",
        "setDynamicSimulationDistance",
        "Sets activation distance for given activation category. The recognized activation categories are 'Group', 'Vehicle', 'EmptyVehicle' and 'Prop'",
        "'group' setDynamicSimulationDistance 1000",
        "",
        "NOTHING",
        "STRING",
        "SCALAR",
        "dynamicSimulationClass setDynamicSimulationDistance distance",
    ],
    [
        "b",
        "setdynamicsimulationdistancecoef",
        "setDynamicSimulationDistanceCoef",
        "Sets the activation distance multiplier value for the given category. The recognized activation categories are 'IsMoving'",
        "'IsMoving' setDynamicSimulationDistanceCoef 3",
        "",
        "NOTHING",
        "STRING",
        "SCALAR",
        "dynamicSimulationCoefClass setDynamicSimulationDistanceCoef coef",
    ],
    [
        "b",
        "seteditormode",
        "setEditorMode",
        "Sets map mode to MAP, 3D or PREVIEW.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "STRING",
        "map setEditorMode mode",
    ],
    [
        "b",
        "seteditorobjectscope",
        "setEditorObjectScope",
        "This command defines the level of access a user has to editor objects. objects is an array of either Editor Objects (eg [_unit_0]) or actual Game Objects (eg [player]). If the array is empty then the command will automatically parse all editor objects. editor type is the editor type to effect (eg unit), or  for none. condition is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. scope is one of HIDE, VIEW, SELECT, LINKTO, LINKFROM, ALLNODRAG, ALLNOTREE or ALL. subordinates also is a boolean value, if true then subordinates in the editor will be assigned the same scope as the parent.",
        "_map setEditorObjectScope [[],vehicle,side effectiveCommander _x != side player,HIDE,false];",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map setEditorObjectScope [objects,editor type,condition,scope,subordinates also]",
    ],
    [
        "b",
        "seteffectcondition",
        "setEffectCondition",
        "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result. If the result is a boolean and true, the effect was launched. If the result is an object, the effect was launched if the result is the player or the player vehicle. If the result is an array, the effect was launched if the result contains the player or the player vehicle.",
        "trigger setEffectCondition 'thisList'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "trigger or waypoint setEffectCondition statement",
    ],
    [
        "b",
        "seteffectivecommander",
        "setEffectiveCommander",
        "Sets effectiveCommander of the vehicle",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "vehicle setEffectiveCommander person",
    ],
    [
        "b",
        "setenginerpmrtd",
        "setEngineRpmRTD",
        "Set engines rpm. Index = -1 for all.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "RTD_helicopter setEngineRpmRTD [value, motor index]",
    ],
    [
        "b",
        "setface",
        "setFace",
        "Sets the person's face.",
        "setFace 'Face10'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person setFace soldier",
    ],
    [
        "b",
        "setfaceanimation",
        "setFaceanimation",
        "Sets the facial animation phase (eye blinking). Blink is in the range from 0 to 1.",
        "setFaceAnimation 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "person setFaceanimation blink",
    ],
    [
        "b",
        "setfatigue",
        "setFatigue",
        "Sets the person's relative [0..1] exhaustion (changes stamina accordingly).",
        "player setFatigue 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setFatigue value",
    ],
    [
        "b",
        "setfeaturetype",
        "setFeatureType",
        "Enable/disable object as a feature/landmark. 0 - disable, 1 - object is always visible to object view distance, 2 - objects is visible to terrain view distance, limit is 500 map/static object and 200 dynamic objects including config features and auto features (flying helicopters, airplanes), when limit is reached function return false",
        "landmark setFeatureType 2",
        "",
        "BOOL",
        "OBJECT",
        "SCALAR",
        "obj setFeatureType number",
    ],
    [
        "b",
        "setflaganimationphase",
        "setFlagAnimationPhase",
        "Animates flag",
        "flag1 setFlagAnimationPhase 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "flag setFlagAnimationPhase phase",
    ],
    [
        "b",
        "setflagowner",
        "setFlagOwner",
        "Sets the flag owner. When the owner is set to objNull, the flag is returned to the flagpole.",
        "setFlagOwner objNull",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "flag setFlagOwner owner",
    ],
    [
        "b",
        "setflagside",
        "setFlagSide",
        "Sets the flag side.",
        "setFlagSide east",
        "",
        "NOTHING",
        "OBJECT",
        "SIDE",
        "flag setFlagSide side",
    ],
    [
        "b",
        "setflagtexture",
        "setFlagTexture",
        "Sets the flag texture. If the texture is '', the flag is not drawn. Warning: flags are not performance friendly, use them wisely.",
        "setFlagTexture 'usa_vlajka.pac'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "flag setFlagTexture texture",
    ],
    [
        "b",
        "setfog",
        "setFog",
        "Changes the fog value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Fog can be either a single value indicating fog density or an array [fog, decay, base]: fog - indicates fog density, 0 - no fog, 1 - maximum fog; decay - indicates density falloff with altitude; base - indicates altitude at which fog will have its nominal density.",
        "1800 setFog 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR,ARRAY",
        "time setFog fog",
    ],
    [
        "b",
        "setforcegeneratorrtd",
        "setForceGeneratorRTD",
        "",
        "",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "number setForceGeneratorRTD array",
    ],
    [
        "b",
        "setformation",
        "setFormation",
        "Sets the group formation. Formation is one of: 'COLUMN', 'STAG COLUMN', 'WEDGE', 'ECH LEFT', 'ECH RIGHT', 'VEE' or 'LINE'.",
        "groupOne setFormation 'LINE'",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "STRING",
        "group setFormation formation",
    ],
    [
        "b",
        "setformation",
        "setFormation",
        "Set a new formation to given team.",
        "_team setFormation 'Wedge'",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "STRING",
        "team setFormation formation",
    ],
    [
        "b",
        "setformationtask",
        "setFormationTask",
        "Set the current task of the formation member.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "object setFormationTask task",
    ],
    [
        "b",
        "setformdir",
        "setFormDir",
        "Sets the formation heading. The accepted heading range is from 0 to 360. The formation is facing this direction unless an enemy is seen. When the group is moving, this value is overridden by the movement direction.",
        "player setformdir 180",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "SCALAR",
        "group setFormDir heading",
    ],
    [
        "b",
        "setfriend",
        "setFriend",
        "Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly.",
        "",
        "",
        "NOTHING",
        "SIDE",
        "ARRAY",
        "side1 setFriend [side2, value]",
    ],
    [
        "b",
        "setfromeditor",
        "setFromEditor",
        "Set if given team member was inserted directly from editor.",
        "_teamMember setFromEditor true",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "BOOL",
        "teamMember setFromEditor fromEditor",
    ],
    [
        "b",
        "setfsmvariable",
        "setFSMVariable",
        "Set variable to given value in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.",
        "",
        "",
        "NOTHING",
        "SCALAR",
        "ARRAY",
        "FSM handle setFSMVariable [name, value]",
    ],
    [
        "b",
        "setfuel",
        "setFuel",
        "Sets the fuel amount. A fuel level of one is a full gas tank.",
        "jeepOne setFuel 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle setFuel amount",
    ],
    [
        "b",
        "setfuelcargo",
        "setFuelCargo",
        "Sets the fuel amount in the cargo space of a refuelling vehicle. A fuel level of one is a full gas tank.",
        "refuelTruckOne setFuelCargo 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle setFuelCargo amount",
    ],
    [
        "b",
        "setgroupicon",
        "setGroupIcon",
        "Set group icons properties.",
        "setGroupIcon[id,'b_inf',[offsetX,ofsetY]]",
        "",
        "NOTHING",
        "GROUP",
        "ARRAY",
        "group setGroupIcon properties",
    ],
    [
        "b",
        "setgroupiconparams",
        "setGroupIconParams",
        "Set group icons parameters. [color,string,float,bool]",
        "group setGroupIconParams [[1,1,1,1],'text',scale,show]",
        "",
        "NOTHING",
        "GROUP",
        "ARRAY",
        "group setGroupIconParams properties",
    ],
    [
        "u",
        "setgroupiconsselectable",
        "setGroupIconsSelectable",
        "Sets if group icons raises onclick and onover events.",
        "selectableGroupIcons true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "setGroupIconsSelectable bool",
    ],
    [
        "u",
        "setgroupiconsvisible",
        "setGroupIconsVisible",
        "Sets if group icons are visible.",
        "showGroupIcons [true,true]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setGroupIconsVisible array",
    ],
    [
        "b",
        "setgroupid",
        "setGroupid",
        "Sets the group identity. nameFormat contains strings '%CLASS_NAME' where CLASS_NAME is name of class in CfgWorlds, parameters are names of subclasses of CLASS_NAME with the description of the name subpart.",
        "",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "ARRAY",
        "group setGroupid [nameFomat, nameParam1, ...]",
    ],
    [
        "b",
        "setgroupidglobal",
        "setGroupIdGlobal",
        "Sets the group identity and synchronizes it over the network. NameFormat contains strings '%CLASS_NAME' where CLASS_NAME is name of class in CfgWorlds, parameters are names of subclasses of CLASS_NAME with the description of the name subpart.",
        "",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "ARRAY",
        "group setGroupIdGlobal [nameFomat, nameParam1, ...]",
    ],
    [
        "b",
        "setgroupowner",
        "setGroupOwner",
        "Changes the ownership of a group to a given client. Group leader can't be a player. Only works when called from a server. Returns true if locality was changed.",
        "",
        "",
        "BOOL",
        "GROUP",
        "SCALAR",
        "group setGroupOwner clientId",
    ],
    [
        "b",
        "setgusts",
        "setGusts",
        "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "1800 setGusts 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setGusts gusts",
    ],
    [
        "b",
        "sethidebehind",
        "setHideBehind",
        "It sets the data for hiding. ObjectWhereHide can be taken using findCover. HidePosition can be taken using getHideFrom.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setHideBehind [objectWhereHide, hidePosition]",
    ],
    [
        "b",
        "sethit",
        "setHit",
        "Damage / repair part of object. Damage 0 means fully functional, damage 1 means completely destroyed / dead.",
        "vehicle player setHit ['engine', 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setHit [part, damage]",
    ],
    [
        "b",
        "sethitindex",
        "setHitIndex",
        "Damage / repair part of object. Damage 0 means fully functional, damage 1 means completely destroyed / dead.",
        "vehicle player setHitIndex [0, 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setHitIndex [index, damage]",
    ],
    [
        "b",
        "sethitpointdamage",
        "setHitPointDamage",
        "Damage / repair part of object. Damage 0 means fully functional, damage 1 means completely destroyed / dead. Use name of hit point.",
        "vehicle player setHit ['engine', 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setHitPointDamage [part, damage]",
    ],
    [
        "u",
        "sethorizonparallaxcoef",
        "setHorizonParallaxCoef",
        "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setHorizonParallaxCoef coef",
    ],
    [
        "u",
        "sethudmovementlevels",
        "setHUDMovementLevels",
        "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.Speed [m/s],alt [m], dir [deg]. Use [-1,-1,-1] to keep current position",
        "SetHUDMovementLevels [20,30,-1,-1,0.23,2.1]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setHUDMovementLevels [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]",
    ],
    [
        "u",
        "sethumidity",
        "setHumidity",
        "Sets surface humidity",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setHumidity humidity",
    ],
    [
        "b",
        "setidentity",
        "setIdentity",
        "Sets the identity of a person. Identities are defined in the descripion.ext file of the mission or campaign.",
        "setIdentity 'JohnDoe'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person setIdentity identity",
    ],
    [
        "b",
        "setimportance",
        "setImportance",
        "Set a new importance of given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "SCALAR",
        "location setImportance importance",
    ],
    [
        "u",
        "setinfopanel",
        "setInfoPanel",
        "Opens given component or first component of given component type on specified info panel. Returns true if panel was successfully opened.  'left' or 'right' constants can be used as panel names.",
        "result = setInfoPanel ['VehicleSystemsDisplayManagerComponentRight','SlingLoadDisplayComponent']; ",
        "",
        "BOOL",
        "",
        "ARRAY",
        "setInfoPanel [panel name, component name or type]",
    ],
    [
        "b",
        "setleader",
        "setLeader",
        "Set the leader of given team.",
        "",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "TEAM_MEMBER",
        "team setLeader leader",
    ],
    [
        "b",
        "setlightambient",
        "setLightAmbient",
        "Set ambient color of light.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "light setLightAmbient [r, g, b]",
    ],
    [
        "b",
        "setlightattenuation",
        "setLightAttenuation",
        "Set attenuation of light.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "light setLightAttenuation [startAttenuation, constantAttenuation, linearAttenuation, quadraticAttenuation, hardLimitStart, hardLimitEnd]",
    ],
    [
        "b",
        "setlightbrightness",
        "setLightBrightness",
        "Set brightness of light.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "light setLightBrightness brightness",
    ],
    [
        "b",
        "setlightcolor",
        "setLightColor",
        "Set diffuse color of light.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "light setLightColor [r, g, b]",
    ],
    [
        "b",
        "setlightconepars",
        "setLightConePars",
        "Set the directional light's cone parameters.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "light setLightConePars [outerAngle, innerAngle, fadeCoef]",
    ],
    [
        "b",
        "setlightdaylight",
        "setLightDayLight",
        "Sets if light can be used during day.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "light setLightDayLight bool",
    ],
    [
        "b",
        "setlightflaremaxdistance",
        "setLightFlareMaxDistance",
        "Sets max distance where the flare is visible.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "light setLightFlareMaxDistance flareMaxDistance",
    ],
    [
        "b",
        "setlightflaresize",
        "setLightFlareSize",
        "Sets relative size of the flare for the light.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "light setLightFlareSize flareSize",
    ],
    [
        "b",
        "setlightintensity",
        "setLightIntensity",
        "Set intensity of light.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "light setLightIntensity intensity",
    ],
    [
        "b",
        "setlightir",
        "setLightIR",
        "Set whether light is infrared only.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "light setLightIR isIR",
    ],
    [
        "b",
        "setlightnings",
        "setLightnings",
        "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "1800 setLightnings 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setLightnings value",
    ],
    [
        "b",
        "setlightuseflare",
        "setLightUseFlare",
        "Sets if light should use flare.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "light setLightUseFlare useFlare",
    ],
    [
        "b",
        "setlightvolumeshape",
        "setLightVolumeShape",
        "Set the directional light's visual light volume.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "light setLightVolumeShape [shapeName, scale]",
    ],
    [
        "u",
        "setlocalwindparams",
        "setLocalWindParams",
        "Sets parameters for local wind emiters (like helicopters). Default [1.0, 1.0]",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setLocalWindParams [strength, diameter]",
    ],
    [
        "b",
        "setmagazineturretammo",
        "setMagazineTurretAmmo",
        "Sets ammo count to given amount for given turret.",
        "vehicle player ammoTurret ['cls', [0]]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]",
    ],
    [
        "b",
        "setmarkeralpha",
        "setMarkerAlpha",
        "Sets the marker alpha. The marker is modified on all computers in a network session.",
        "'MarkerOne' setMarkerAlpha 0.5",
        "",
        "NOTHING",
        "STRING",
        "SCALAR",
        "marker setMarkerAlpha alpha",
    ],
    [
        "b",
        "setmarkeralphalocal",
        "setMarkerAlphaLocal",
        "Sets the marker alpha. The marker is only modified on the computer where the command is called.",
        "'MarkerOne' setMarkerAlpha 0.5",
        "",
        "NOTHING",
        "STRING",
        "SCALAR",
        "marker setMarkerAlphaLocal alpha",
    ],
    [
        "b",
        "setmarkerbrush",
        "setMarkerBrush",
        "Selects the fill texture for the marker ('RECTANGLE' or 'ELLIPSE'). Brush is the name of the subclass in CfgMarkerBrushes. The marker is modified on all computers in a network session.",
        "'Marker1' setMarkerBrush 'DiagGrid'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "name setMarkerBrush brush",
    ],
    [
        "b",
        "setmarkerbrushlocal",
        "setMarkerBrushLocal",
        "Selects the fill texture for the marker ('RECTANGLE' or 'ELLIPSE'). Brush is the name of the subclass in CfgMarkerBrushes. The marker is only modified on the computer where the command is called.",
        "'Marker1' setMarkerBrushLocal 'DiagGrid'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "name setMarkerBrushLocal brush",
    ],
    [
        "b",
        "setmarkercolor",
        "setMarkerColor",
        "Sets the marker color. Color is one of: 'Default', 'ColorBlack', 'ColorRed', 'ColorRedAlpha', 'ColorGreen', 'ColorGreenAlpha', 'ColorBlue', 'ColorYellow' or 'ColorWhite'. The marker is modified on all computers in a network session.",
        "'MarkerOne' setMarkerColor 'ColorBlack'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "marker setMarkerColor color",
    ],
    [
        "b",
        "setmarkercolorlocal",
        "setMarkerColorLocal",
        "Sets the marker color. Color is one of: 'Default', 'ColorBlack', 'ColorRed', 'ColorRedAlpha', 'ColorGreen', 'ColorGreenAlpha', 'ColorBlue', 'ColorYellow' or 'ColorWhite'. The marker is only modified on the computer where the command is called.",
        "'MarkerOne' setMarkerColorLocal 'ColorBlack'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "marker setMarkerColorLocal color",
    ],
    [
        "b",
        "setmarkerdir",
        "setMarkerDir",
        "Sets the orientation of the marker. Angle is in degrees. The marker is modified on all computers in a network session.",
        "'Marker1' setMarkerDir 90",
        "",
        "NOTHING",
        "STRING",
        "SCALAR",
        "name setMarkerDir angle",
    ],
    [
        "b",
        "setmarkerdirlocal",
        "setMarkerDirLocal",
        "Sets the orientation of the marker. Angle is in degrees. The marker is only modified on the computer where the command is called.",
        "'Marker1' setMarkerDirLocal 90",
        "",
        "NOTHING",
        "STRING",
        "SCALAR",
        "name setMarkerDirLocal angle",
    ],
    [
        "b",
        "setmarkerpolyline",
        "setMarkerPolyline",
        "Sets the Marker's shape to Polyline and sets the polyline points. The marker is modified on all computers in a network session.",
        "",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "name setMarkerPolyline points",
    ],
    [
        "b",
        "setmarkerpolylinelocal",
        "setMarkerPolylineLocal",
        "Sets the Marker's shape to Polyline and sets the polyline points. The marker is only modified on the computer where the command is called.",
        "",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "name setMarkerPolylineLocal points",
    ],
    [
        "b",
        "setmarkerpos",
        "setMarkerPos",
        "Moves the marker. The format of pos is <ar>Position2D</ar>. The marker is modified on all computers in a network session.",
        "'MarkerOne' setMarkerPos getMarkerPos 'MarkerTwo'",
        "",
        "NOTHING",
        "STRING",
        "ARRAY,OBJECT",
        "markerName setMarkerPos pos",
    ],
    [
        "b",
        "setmarkerposlocal",
        "setMarkerPosLocal",
        "Moves the marker. The format of pos is <ar>Position2D</ar>. The marker is only modified on the computer where the command is called.",
        "'MarkerOne' setMarkerPosLocal getMarkerPos 'MarkerTwo'",
        "",
        "NOTHING",
        "STRING",
        "ARRAY,OBJECT",
        "markerName setMarkerPosLocal pos",
    ],
    [
        "b",
        "setmarkershadow",
        "setMarkerShadow",
        "Sets the marker shadow.",
        "",
        "",
        "NOTHING",
        "STRING",
        "BOOL",
        "markerName setMarkerShadow shadow",
    ],
    [
        "b",
        "setmarkershadowlocal",
        "setMarkerShadowLocal",
        "Sets the marker shadow.",
        "",
        "",
        "NOTHING",
        "STRING",
        "BOOL",
        "markerName setMarkerShadowLocal shadow",
    ],
    [
        "b",
        "setmarkershape",
        "setMarkerShape",
        "Selects the shape (type) of the marker. Shape can be 'ICON', 'RECTANGLE' or 'ELLIPSE'. The marker is modified on all computers in a network session.",
        "'Marker1' setMarkerShape 'RECTANGLE'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "name setMarkerShape shape",
    ],
    [
        "b",
        "setmarkershapelocal",
        "setMarkerShapeLocal",
        "Selects the shape (type) of the marker. Shape can be 'ICON', 'RECTANGLE' or 'ELLIPSE'. The marker is only modified on the computer where the command is called.",
        "'Marker1' setMarkerShapeLocal 'RECTANGLE'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "name setMarkerShapeLocal shape",
    ],
    [
        "b",
        "setmarkersize",
        "setMarkerSize",
        "Sets the marker size. Size is in format [a-axis, b-axis]. The marker is modified on all computers in a network session.",
        "'MarkerOne' setMarkerSize [100, 200]",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "marker setMarkerSize size",
    ],
    [
        "b",
        "setmarkersizelocal",
        "setMarkerSizeLocal",
        "Sets the marker size. Size is in format [a-axis, b-axis]. The marker is only modified on the computer where the command is called.",
        "'MarkerOne' setMarkerSizeLocal [100, 200]",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "marker setMarkerSizeLocal size",
    ],
    [
        "b",
        "setmarkertext",
        "setMarkerText",
        "Sets the text label of an existing marker. The marker is modified on all computers in a network session.",
        "'Marker1' setMarkerText You are here.",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "name setMarkerText text",
    ],
    [
        "b",
        "setmarkertextlocal",
        "setMarkerTextLocal",
        "Sets the text label of an existing marker. The marker is only modified on the computer where the command is called.",
        "'Marker1' setMarkerTextLocal You are here.",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "name setMarkerTextLocal text",
    ],
    [
        "b",
        "setmarkertype",
        "setMarkerType",
        "Sets the marker type. Type may be any of: 'Flag', 'Flag1', 'Dot', 'Destroy', 'Start', 'End', 'Warning', 'Join', 'Pickup', 'Unknown', 'Marker', 'Arrow' or 'Empty'. The marker is modified on all computers in a network session.",
        "'MarkerOne' setMarkerType 'Arrow'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "markerName setMarkerType markerType",
    ],
    [
        "b",
        "setmarkertypelocal",
        "setMarkerTypeLocal",
        "Sets the marker type. Type may be any of: 'Flag', 'Flag1', 'Dot', 'Destroy', 'Start', 'End', 'Warning', 'Join', 'Pickup', 'Unknown', 'Marker', 'Arrow' or 'Empty'. The marker is only modified on the computer where the command is called.",
        "'MarkerOne' setMarkerTypeLocal 'Arrow'",
        "",
        "NOTHING",
        "STRING",
        "STRING",
        "markerName setMarkerTypeLocal markerType",
    ],
    [
        "b",
        "setmass",
        "setMass",
        "Changes the mass of an object smoothly during the given time (in seconds). A time of zero means an immediate change.",
        "myObject setMass [10,0.5]",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR,ARRAY",
        "object setMass mass or [mass, time]",
    ],
    [
        "b",
        "setmaxload",
        "setMaxLoad",
        "Sets maxLoad of a container",
        "backpackContainer  player setMaxLoad 1000;",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "container setMaxLoad maxload",
    ],
    [
        "b",
        "setmimic",
        "setMimic",
        "Sets a unit's mimic. The following values are recognized: 'Default', 'Normal', 'Smile', 'Hurt', 'Ironic', 'Sad', 'Cynic', 'Surprised', 'Agresive' and 'Angry'.",
        "setMimic 'Angry'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person setMimic mimic",
    ],
    [
        "b",
        "setmissiletarget",
        "setMissileTarget",
        "Change missile target",
        "",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "missile setMissileTarget target",
    ],
    [
        "b",
        "setmissiletargetpos",
        "setMissileTargetPos",
        "Change missile target position (position is ATL)",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "missile setMissileTargetPos [x, y, z]",
    ],
    [
        "u",
        "setmouseposition",
        "setMousePosition",
        "Move (UI) mouse pointer to specified position of the screen.",
        "setMousePosition [0.5, 0.5]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setMousePosition [x, y]",
    ],
    [
        "b",
        "setmusiceffect",
        "setMusicEffect",
        "Defines the music track played on activation. Track is a subclass name of CfgMusic. '$NONE$' (no change) or '$STOP$' (stops the current music track).",
        "trigger setMusicEffect 'Track1'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "trigger or waypoint setMusicEffect track",
    ],
    [
        "u",
        "setmusiceventhandler",
        "setMusicEventHandler",
        "Sets given music track event handler.",
        "setMusicEventHandler ['MusicTerminate', '']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setMusicEventHandler [type, function]",
    ],
    [
        "b",
        "setname",
        "setName",
        "Sets the name of a person.",
        "setName 'JohnDee'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person setName name",
    ],
    [
        "b",
        "setname",
        "setName",
        "Sets the name of a person.",
        "setName ['JohnDee', 'John', 'Dee']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "person setName [name, first name, second name]",
    ],
    [
        "b",
        "setname",
        "setName",
        "Set which global variable will contain given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "STRING",
        "location setName name",
    ],
    [
        "b",
        "setnamesound",
        "setNameSound",
        "Sets the nameSound of a person.",
        "nameSound 'JohnDeeSound'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person setNameSound nameSound",
    ],
    [
        "b",
        "setobjectarguments",
        "setObjectArguments",
        "Set object arguments in mission editor.",
        "",
        "",
        "ANY",
        "CONTROL",
        "ARRAY",
        "map setObjectArguments [object, [name1, value1, ...]]",
    ],
    [
        "b",
        "setobjectmaterial",
        "setObjectMaterial",
        "Sets material of object selection. The selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0).",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setObjectMaterial [selection, material]",
    ],
    [
        "b",
        "setobjectmaterialglobal",
        "setObjectMaterialGlobal",
        "Set the material of the given selection on all computers in a network session",
        "player setObjectMaterialGlobal [0, 'A3Structures_FDataWindowswindow_set.rvmat'];",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setObjectMaterialGlobal [selection, material]",
    ],
    [
        "b",
        "setobjectproxy",
        "setObjectProxy",
        "Set the proxy object associated with the given editor object.",
        "",
        "",
        "ANY",
        "CONTROL",
        "ARRAY",
        "map setObjectProxy [object, proxy object]",
    ],
    [
        "b",
        "setobjectscale",
        "setObjectScale",
        "Sets attached or simple object scale.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "object setObjectScale factor",
    ],
    [
        "b",
        "setobjecttexture",
        "setObjectTexture",
        "Textures object selection with texture named in array.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setObjectTexture [selection, texture]",
    ],
    [
        "b",
        "setobjecttextureglobal",
        "setObjectTextureGlobal",
        "Set the texture of the given selection on all computers in a network session",
        "player setObjectTextureGlobal [0,'MyAddon\blue.pac']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setObjectTextureGlobal [selection, texture]",
    ],
    [
        "u",
        "setobjectviewdistance",
        "setObjectViewDistance",
        "Sets the rendering distance of objects.",
        "setobjectviewdistance 2000",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setObjectViewDistance distance",
    ],
    [
        "u",
        "setobjectviewdistance",
        "setObjectViewDistance",
        "Sets the rendering distance of objects.",
        "setobjectviewdistance [2000,50]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setObjectViewDistance [vehiclesZ, shadowsZ]",
    ],
    [
        "b",
        "setopticsmode",
        "setOpticsMode",
        "Sets the current optics mode of the unit's current weapon",
        "player setOpticsMode 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR,ARRAY,STRING",
        "unit setOpticsMode modeClassName or modeIndex or [weaponSlotIndex, modeClassName/Index]",
    ],
    [
        "b",
        "setovercast",
        "setOvercast",
        "Changes the overcast level to the given value smoothly during the given time (in seconds). A time of zero means an immediate change. An overcast level of zero means clear (sunny) weather and with an overcast level of one, storms and showers are very likely.",
        "1800 setOvercast 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setOvercast overcast",
    ],
    [
        "b",
        "setowner",
        "setOwner",
        "On server machine, change ownership of a non-AI object or an agent to a given client. Returns true if locality was changed.",
        "",
        "",
        "BOOL",
        "OBJECT",
        "SCALAR",
        "object setOwner clientId",
    ],
    [
        "b",
        "setoxygenremaining",
        "setOxygenRemaining",
        "Sets oxygen remaining. It has no effect when soldier is not diving.",
        "player setOxygenRemaining 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setOxygenRemaining oxygen",
    ],
    [
        "b",
        "setparticlecircle",
        "setParticleCircle",
        "Update particle source to create particles on circle with given radius. Velocity is transformed and added to total velocity.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "particleSource setParticleCircle [radius, velocity]",
    ],
    [
        "b",
        "setparticleclass",
        "setParticleClass",
        "Set parameters from config class. className is name of the class from CfgCloudlets.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "particleSource setParticleClass className",
    ],
    [
        "b",
        "setparticlefire",
        "setParticleFire",
        "Sets fire parameters to particle effect. Note: You need to create emitter first.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "particleSource setParticleFire [coreIntensity, coreDistance, damageTime]",
    ],
    [
        "b",
        "setparticleparams",
        "setParticleParams",
        "Set parameters to particle source. Array is in format <ar>ParticleArray</ar>.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "particleSource setParticleParams array",
    ],
    [
        "b",
        "setparticlerandom",
        "setParticleRandom",
        "Set randomization of particle source parameters.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "particleSource setParticleRandom [lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}]",
    ],
    [
        "b",
        "setpilotcameradirection",
        "setPilotCameraDirection",
        "Set pilot camera direction",
        "(vehicle player) setPilotCameraDirection [10,10,10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "planeOrHeli setPilotCameraDirection [x,y,z]",
    ],
    [
        "b",
        "setpilotcamerarotation",
        "setPilotCameraRotation",
        "Set pilot camera rotation",
        "(vehicle player) setPilotCameraRotation [0.5,0.2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "planeOrHeli setPilotCameraRotation [xRot, zRot]",
    ],
    [
        "b",
        "setpilotcameratarget",
        "setPilotCameraTarget",
        "Lock/unlock pilot camera rotation to given position or object. Null object will unlock camera.",
        "locked = (vehicle player) setPilotCameraTarget [1120,2110,2410]",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY,OBJECT",
        "planeOrHeli setPilotCameraTarget [position or object]",
    ],
    [
        "b",
        "setpilotlight",
        "setPilotLight",
        "Sets vehicle pilot lights(true-on, false-off).",
        "vehicle player SetPilotLight true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle setPilotLight true/false",
    ],
    [
        "b",
        "setpipeffect",
        "setPiPEffect",
        "Set a Render Target's visual effect (Picture-in-Picture).",
        "rendertarget0 setPiPEffect [0, 0, [], [], []]",
        "",
        "NOTHING",
        "STRING",
        "ARRAY",
        "pipTargetName setPiPEffect [effect, optionalParam1, ..., optionalParamN]",
    ],
    [
        "u",
        "setpipviewdistance",
        "setPiPViewDistance",
        "Sets the rendering distance of objects inside PiP.",
        "setPiPViewDistance 2000",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setPiPViewDistance distance",
    ],
    [
        "b",
        "setpitch",
        "setPitch",
        "Sets the pitch of a persons voice.",
        "setName 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "person setPitch pitch",
    ],
    [
        "b",
        "setplatenumber",
        "setPlateNumber",
        " change plate info on car or motorcycle",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "vehicle setPlateNumber text",
    ],
    [
        "u",
        "setplayable",
        "setPlayable",
        "Create MP role for the unit.",
        "setPlayable aP",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "setPlayable unit",
    ],
    [
        "u",
        "setplayerrespawntime",
        "setPlayerRespawnTime",
        "Set the time interval to wait on player respawn. It is set to mission default on mission start again.",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setPlayerRespawnTime time interval",
    ],
    [
        "b",
        "setplayervonvolume",
        "setPlayerVoNVolume",
        "Sets the players Voice over Net volume",
        "leader player setPlayerVoNVolume 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setPlayerVoNVolume volume",
    ],
    [
        "b",
        "setpos",
        "setPos",
        "Sets the object position. The pos array uses the <ar>Position</ar> format.",
        "player setPos [getpos player select 0, getpos player select 1 + 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setPos pos",
    ],
    [
        "b",
        "setposasl",
        "setPosASL",
        "Sets the object position. The pos array uses the <ar>PositionASL</ar> format.",
        "player setPosASL [getPosASL player select 0, getPosASL player select 1 + 10, getPosASL select 2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setPosASL pos",
    ],
    [
        "b",
        "setposasl2",
        "setPosASL2",
        "Sets the object position. The pos array uses the <ar>PositionASL</ar> format. The version of the command does not offset based on object center.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setPosASL2 pos",
    ],
    [
        "b",
        "setposaslw",
        "setPosASLW",
        "Sets the object position above sea surface. The pos array uses the <ar>PositionASLW</ar> format.",
        "player setPosASLW [getPosASLW player select 0, getPosASLW player select 1 + 10, getPosASLW select 2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setPosASLW pos",
    ],
    [
        "b",
        "setposatl",
        "setPosATL",
        "Sets the object position. The pos array uses the <ar>PositionATL</ar> format.",
        "player setPosASL [getPosATL player select 0, getPosATL player select 1 + 10, getPosATL select 2]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setPosATL pos",
    ],
    [
        "b",
        "setposition",
        "setPosition",
        "Set a new position of given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "ARRAY",
        "location setPosition position",
    ],
    [
        "b",
        "setposworld",
        "setPosWorld",
        "Sets the object position without any additional adjustations. The pos array uses the <ar>Position</ar> format.",
        "player setPosWorld [getposWorld player select 0, getposWorld player select 1 + 10]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setPosWorld pos",
    ],
    [
        "b",
        "setpylonloadout",
        "setPylonLoadout",
        "will add missile to vehicle pylon, TransportPylonsComponent in config is required",
        "vehicle player setPylonLoadout ['pylon1', ''];",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "vehicle setPylonLoadout [pylon name/index, magazine name, forced = false, turret = ([-1] for pilot)]",
    ],
    [
        "b",
        "setpylonspriority",
        "setPylonsPriority",
        "overrides default pylons priorities",
        "vehicle player setPylonsPriority [0,1,2,3,4,5,5,4,3,2,1,0]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setPylonsPriority [priority pylon 1, priority pylon 2,..., priority pylon n]",
    ],
    [
        "b",
        "setradiomsg",
        "setRadioMsg",
        "Sets the radio message (0, 0, map radio) to the given text. Use 'NULL' to disable the radio slot.",
        "0 setRadioMsg 'Alpha Radio'",
        "",
        "NOTHING",
        "SCALAR",
        "STRING",
        "index setRadioMsg text",
    ],
    [
        "b",
        "setrain",
        "setRain",
        "Changes the rain density smoothly during the given time (in seconds). A time of zero means an immediate change. A rain level of zero is no rain and a rain level of one is maximum rain. Rain is not possible when overcast is smaller than 0.7.",
        "60 setRain 1",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setRain rainDensity",
    ],
    [
        "u",
        "setrain",
        "setRain",
        "Sets RainParticles params from array",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setRain [rainDropTexture, texDropCount, minRainDensity, effectRadius, windCoef, dropSpeed, rndSpeed, rndDir, dropWidth, dropHeight, dropColor, lumSunFront, lumSunBack, refractCoef, refractSaturation, snow, dropColorStrong]",
    ],
    [
        "u",
        "setrain",
        "setRain",
        "Sets RainParticles params from config",
        "",
        "",
        "NOTHING",
        "",
        "CONFIG",
        "setRain config",
    ],
    [
        "b",
        "setrainbow",
        "setRainbow",
        "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "1800 setWindStr 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setRainbow rainbow",
    ],
    [
        "b",
        "setrandomlip",
        "setRandomLip",
        "Enables/Disables random lip.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "person setRandomLip bool",
    ],
    [
        "b",
        "setrank",
        "setRank",
        "Sets rank of given unit. Possible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL.",
        "player setRank 'COLONEL'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit setRank rank",
    ],
    [
        "b",
        "setrectangular",
        "setRectangular",
        "Set if given location has rectangular shape.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "BOOL",
        "location setRectangular rectangular",
    ],
    [
        "b",
        "setrepaircargo",
        "setRepairCargo",
        "Sets the amount or repair resources in the cargo space of a repair vehicle. An amount of one is a full cargo space.",
        "repairTruckOne setRepairCargo 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle setRepairCargo amount",
    ],
    [
        "b",
        "setrotorbrakertd",
        "setRotorBrakeRTD",
        "",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "RTD_helicopter setRotorBrakeRTD Toggle a helicopter&apos;s rotor brake on or off.",
    ],
    [
        "u",
        "setshadowdistance",
        "setShadowDistance",
        "Sets the shadows rendering distance.",
        "setShadowDistance 1000",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setShadowDistance newDistance",
    ],
    [
        "b",
        "setshotparents",
        "setShotParents",
        "Request the shot's owner to change its parents.",
        "shot setShotParents[myTank, tankGunner]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "shot setShotParents [newOwner, newShotInstigator]",
    ],
    [
        "b",
        "setside",
        "setSide",
        "Set a new target side of given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "SIDE",
        "location setSide side",
    ],
    [
        "b",
        "setsimpletaskalwaysvisible",
        "setSimpleTaskAlwaysVisible",
        "Makes the given task always visiable or not.",
        "",
        "",
        "NOTHING",
        "TASK",
        "BOOL",
        "task setSimpleTaskAlwaysVisible True/False",
    ],
    [
        "b",
        "setsimpletaskcustomdata",
        "setSimpleTaskCustomData",
        "Set custom data for the task. Tooltip (3 characters max) will be drawn in task list on the right side. Descriptin will be drawn in task description panel on the bottom.",
        "",
        "",
        "NOTHING",
        "TASK",
        "ARRAY",
        "task setSimpleTaskCustomData [iconPath, tooltip, description]",
    ],
    [
        "b",
        "setsimpletaskdescription",
        "setSimpleTaskDescription",
        "Attach descriptions to the simple task.",
        "",
        "",
        "NOTHING",
        "TASK",
        "ARRAY",
        "task setSimpleTaskDescription [description, descriptionShort, DEPRECATED]",
    ],
    [
        "b",
        "setsimpletaskdestination",
        "setSimpleTaskDestination",
        "Attach a destination to the simple task. Overrides setSimpleTaskTarget.",
        "",
        "",
        "NOTHING",
        "TASK",
        "ARRAY",
        "task setSimpleTaskDestination position",
    ],
    [
        "b",
        "setsimpletasktarget",
        "setSimpleTaskTarget",
        "Attach a target to the simple task. Overrides setSimpleTaskDestination.",
        "task setSimpleTaskTarget [vehicle, true]",
        "",
        "NOTHING",
        "TASK",
        "ARRAY",
        "task setSimpleTaskTarget [target,precise position]",
    ],
    [
        "b",
        "setsimpletasktype",
        "setSimpleTaskType",
        "Sets the type of the simple task.",
        "",
        "",
        "NOTHING",
        "TASK",
        "STRING",
        "task setSimpleTaskType TaskType",
    ],
    [
        "u",
        "setsimulweatherlayers",
        "setSimulWeatherLayers",
        "Sets simul weather layers",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setSimulWeatherLayers layers",
    ],
    [
        "b",
        "setsize",
        "setSize",
        "Set a new size (width, height) of given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "ARRAY",
        "location setSize [sizeX, sizeZ]",
    ],
    [
        "b",
        "setskill",
        "setSkill",
        "Sets skill of given type of person (commander unit). Value of skill may vary from 0 to 1.",
        "hero setSkill ['Endurance', 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setSkill [type, skill]",
    ],
    [
        "b",
        "setskill",
        "setSkill",
        "Sets ability levell of person (commander unit). Value of skill may vary from 0 to 1.",
        "hero setSkill 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle setSkill skill",
    ],
    [
        "b",
        "setslingload",
        "setSlingLoad",
        "Create sling loading from first object to second if possible",
        "veh1 setSlingLoad veh2",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "vehicle setSlingLoad cargo",
    ],
    [
        "b",
        "setsoundeffect",
        "setSoundEffect",
        "Defines the different sound effects. Sound / voice plays a 2D / 3D sound from CfgSounds. SoundEnv plays an enviromental sound from CfgEnvSounds. SoundDet (only for triggers) creates a dynamic sound object attached to a trigger defined in CfgSFX.",
        "trigger setSoundEffect ['Alarm', '', '', '']",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "trigger or waypoint setSoundEffect [sound, voice, soundEnv, soundDet]",
    ],
    [
        "b",
        "setspeaker",
        "setSpeaker",
        "Sets the speaker of a person.",
        "setSpeaker 'JohnDee'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "person setSpeaker speaker",
    ],
    [
        "b",
        "setspeech",
        "setSpeech",
        "Add speech to location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "STRING",
        "location setSpeech speech",
    ],
    [
        "b",
        "setspeedmode",
        "setSpeedMode",
        "Sets the group speed mode. Mode may be one of: 'LIMITED' (half speed), 'NORMAL' (full speed, maintain formation) or 'FULL' (do not wait for any other units in the formation).",
        "groupOne setSpeedMode 'LIMITED'",
        "",
        "NOTHING",
        "OBJECT,GROUP",
        "STRING",
        "group setSpeedMode mode",
    ],
    [
        "b",
        "setstamina",
        "setStamina",
        "Set units' stamina (seconds until depletion)",
        "player setStamina 42",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setStamina stamina",
    ],
    [
        "u",
        "setstaminascheme",
        "setStaminaScheme",
        "Set stamina bar color",
        "setStaminaScheme('Default'). The scheme can be 'Normal', 'FastDrain', 'Exhausted', 'Default'",
        "",
        "NOTHING",
        "",
        "STRING",
        "setStaminaScheme scheme",
    ],
    [
        "u",
        "setstatvalue",
        "setStatValue",
        "Sets a value to given stat. ",
        "",
        "",
        "BOOL",
        "",
        "ARRAY",
        "setStatValue [statName, value]",
    ],
    [
        "b",
        "setsuppression",
        "setSuppression",
        "Sets the AI suppression level.",
        "unit setSuppression 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setSuppression value",
    ],
    [
        "u",
        "setsystemofunits",
        "setSystemOfUnits",
        "Set system of units. 0 for metric, 1 for mixed, 2 for imperial.",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setSystemOfUnits value",
    ],
    [
        "b",
        "settargetage",
        "setTargetAge",
        "Sets how the target is known to the other centers. They behave like the target was seen age seconds ago. Possible age values are: 'ACTUAL', '5 MIN', '10 MIN', '15 MIN', '30 MIN', '60 MIN', '120 MIN' or 'UNKNOWN'.",
        "player setTargetAge '10 MIN'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "object setTargetAge age",
    ],
    [
        "b",
        "settaskmarkeroffset",
        "setTaskMarkerOffset",
        "Sets the task marker position in model space [meters].",
        "player setTaskMarkerOffset [0,0.5,1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "obj setTaskMarkerOffset position",
    ],
    [
        "b",
        "settaskresult",
        "setTaskResult",
        "Set a result of the task.",
        "",
        "",
        "NOTHING",
        "TASK",
        "ARRAY",
        "task setTaskResult [state, result]",
    ],
    [
        "b",
        "settaskstate",
        "setTaskState",
        "Set a new state of the task.",
        "",
        "",
        "NOTHING",
        "TASK",
        "STRING",
        "task setTaskState state",
    ],
    [
        "u",
        "setterraingrid",
        "setTerrainGrid",
        "Sets the desired terrain resolution (in meters). For default landscapes the supported resolutions are: 50, 25, 12.5, 6.25 and 3.125. If you select an unsupported resolution, the nearest supported resolution is used instead.",
        "setTerrainGrid 12.5",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setTerrainGrid grid",
    ],
    [
        "u",
        "setterrainheight",
        "setTerrainHeight",
        "Sets terrain height for one or multiple positions",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setTerrainHeight [[[X, Y, newHeight], ...], adjustObjects]",
    ],
    [
        "b",
        "settext",
        "setText",
        "Set a new text attached to given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "STRING",
        "location setText text",
    ],
    [
        "u",
        "settimemultiplier",
        "setTimeMultiplier",
        "Time multiplier for in game time.",
        "setTimeMultiplier 60",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setTimeMultiplier multiplier",
    ],
    [
        "u",
        "settiparameter",
        "setTiParameter",
        "Sets a thermal imaging parameter",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setTiParameter [parameter, value]",
    ],
    [
        "b",
        "settitleeffect",
        "setTitleEffect",
        "Defines the title effect. Type can be 'NONE', 'OBJECT', 'RES' or 'TEXT'. For 'TEXT', the effect defines a subtype: 'PLAIN', 'PLAIN DOWN', 'BLACK', 'BLACK FADED', 'BLACK OUT', 'BLACK IN', 'WHITE OUT' or 'WHITE IN'. Text is shown as text itself. For 'OBJECT', text defines the shown object, a subclass of CfgTitles. For 'RES', text defines a resource class, a subclass of RscTitles.",
        "trigger setTitleEffect ['TEXT', 'PLAIN DOWN', 'Hello world.']",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "ARRAY",
        "trigger or waypoint setTitleEffect [type, effect, text]",
    ],
    [
        "b",
        "settowparent",
        "setTowParent",
        "Sets the towing (parent) vehicle which the towed vehicle should follow.",
        "towedVehicle setTowParent towingVehicle",
        "",
        "NOTHING",
        "OBJECT",
        "OBJECT",
        "vehicle setTowParent vehicle",
    ],
    [
        "u",
        "settrafficdensity",
        "setTrafficDensity",
        "Set the density of ambient cars in a rectangle (in cars per kilometer).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setTrafficDensity [density, xMin, xMax, zMin, zMax]",
    ],
    [
        "u",
        "settrafficdistance",
        "setTrafficDistance",
        "Set maximum ambient traffic draw distance (in 2D).",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setTrafficDistance distance",
    ],
    [
        "u",
        "settrafficgap",
        "setTrafficGap",
        "Set the average gap between ambient cars in a rectangle (in meters).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setTrafficGap [gap, xMin, xMax, zMin, zMax]",
    ],
    [
        "u",
        "settrafficspeed",
        "setTrafficSpeed",
        "Set ambient traffic speed in a rectangle (in kilometers per hour).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setTrafficSpeed [speed, xMin, xMax, zMin, zMax]",
    ],
    [
        "b",
        "settriggeractivation",
        "setTriggerActivation",
        "Defines the trigger activation type. The first argument - who activates trigger (side, radio, vehicle or group member): 'NONE', 'EAST', 'WEST', 'GUER', 'CIV', 'LOGIC', 'ANY', 'ALPHA', 'BRAVO', 'CHARLIE', 'DELTA', 'ECHO', 'FOXTROT', 'GOLF', 'HOTEL', 'INDIA', 'JULIET', 'STATIC', 'VEHICLE', 'GROUP', 'LEADER' or 'MEMBER'. The second argument - when is it activated (presention or detection by the specified side): 'PRESENT', 'NOT PRESENT', 'WEST D', 'EAST D', 'GUER D' or 'CIV D'. The third argument - whether the activation is repeating.",
        "trigger setTriggerActivation ['WEST', 'EAST D', true]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "trigger setTriggerActivation [by, type, repeating]",
    ],
    [
        "b",
        "settriggerarea",
        "setTriggerArea",
        "Defines the area controlled by the trigger. The area is rectangular or elliptic, the width is 2 * a, the height is 2 * b. It is rotated angle degrees.",
        "trigger setTriggerArea [100, 50, 45, false]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "trigger setTriggerArea [a, b, angle, rectangle]",
    ],
    [
        "b",
        "settriggerinterval",
        "setTriggerInterval",
        "Sets the interval in seconds for trigger condition check",
        "trigger setTriggerInterval 5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "trigger setTriggerInterval interval",
    ],
    [
        "b",
        "settriggerstatements",
        "setTriggerStatements",
        "The first argument can modify the condition of when the trigger is activated. The result of the activation defined by trigger activation is in variable this. Variable thisList contains all vehicles which caused the activation. Activ and desactiv expressions are launched upon trigger activation / deactivation.",
        "trigger setTriggerStatements ['this', 'ok = true', 'ok = false']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "trigger setTriggerStatements [cond, activ, desactiv]",
    ],
    [
        "b",
        "settriggertext",
        "setTriggerText",
        "Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers.",
        "trigger setTriggerText 'Call for support'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "trigger setTriggerText text",
    ],
    [
        "b",
        "settriggertimeout",
        "setTriggerTimeout",
        "Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time.",
        "trigger setTriggerTimeout [5, 10, 7, false]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "trigger setTriggerTimeout [min, mid, max, interruptable]",
    ],
    [
        "b",
        "settriggertype",
        "setTriggerType",
        "Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission): 'NONE', 'SWITCH', 'END1', 'END2', 'END3', 'END4', 'END5', 'END6', 'LOOSE' or 'WIN'.",
        "trigger setTriggerType 'END1'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "trigger setTriggerType action",
    ],
    [
        "b",
        "setturretopticsmode",
        "setTurretOpticsMode",
        "Sets the current optics mode of the turret occupied by the unit, or of the specified turret on the vehicle.",
        "player setTurretOpticsMode 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setTurretOpticsMode modeIndex",
    ],
    [
        "b",
        "setturretopticsmode",
        "setTurretOpticsMode",
        "Sets the current optics mode of the specified turret on the vehicle.",
        "vehicle setTurretOpticsMode [[0], 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setTurretOpticsMode [turretPath, modeIndex]",
    ],
    [
        "b",
        "settype",
        "setType",
        "Set a new type of given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "STRING",
        "location setType type",
    ],
    [
        "b",
        "setunconscious",
        "setUnconscious",
        "Set / reset the unconscious life state of the given unit (in MP works only for a local unit).",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "unit setUnconscious set",
    ],
    [
        "b",
        "setunitability",
        "setUnitAbility",
        "Sets skill of given unit. Skill may vary from 0.2 to 1.0.",
        "player setUnitSkill 1.0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setUnitAbility skill",
    ],
    [
        "b",
        "setunitcombatmode",
        "setUnitCombatMode",
        "Sets the unit's combat mode (engagement rules). Mode can be one of: 'BLUE' (Never fire), 'GREEN' (Hold fire - defend only), 'WHITE' (Hold fire, engage at will), 'YELLOW' (Fire at will) or 'RED' (Fire at will, engage at will).",
        "unitOne setCombatMode 'BLUE'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit setUnitCombatMode mode",
    ],
    [
        "b",
        "setunitfreefallheight",
        "setUnitFreefallHeight",
        "Sets minimum freefall height AGL at which unit assumes HALO pose",
        "player setUnitFreefallHeight 1000",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setUnitFreefallHeight height",
    ],
    [
        "b",
        "setunitloadout",
        "setUnitLoadout",
        "Create inventory items from given loadout structure and set them to the unit.",
        "player setUnitLoadout [loadout]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit setUnitLoadout [loadOut structure, fullMagazines(true/false) - optional]",
    ],
    [
        "b",
        "setunitloadout",
        "setUnitLoadout",
        "Create inventory items from given classname(cfgVehicles) and set them to the unit.",
        "player setUnitLoadout className",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit setUnitLoadout className from cfgVehicles",
    ],
    [
        "b",
        "setunitloadout",
        "setUnitLoadout",
        "Create inventory items from given loadout config and set them to the unit.",
        "player setUnitLoadout config",
        "",
        "NOTHING",
        "OBJECT",
        "CONFIG",
        "unit setUnitLoadout config with loadout description",
    ],
    [
        "b",
        "setunitpos",
        "setUnitPos",
        "Sets the unit position rules. Mode may be one of: 'DOWN', 'UP' or 'AUTO'.",
        "soldierOne setUnitPos 'Down'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit setUnitPos mode",
    ],
    [
        "b",
        "setunitposweak",
        "setUnitPosWeak",
        "Equal to setUnitPos, for usage in formation FSM (to avoid collision with setUnitPos used by the mission).",
        "soldierOne setUnitPosWeak 'Down'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit setUnitPosWeak mode",
    ],
    [
        "b",
        "setunitrank",
        "setUnitRank",
        "Sets rank of given unit. Possible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL.",
        "player setUnitRank 'COLONEL'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit setUnitRank rank",
    ],
    [
        "b",
        "setunitrecoilcoefficient",
        "setUnitRecoilCoefficient",
        "Proportionaly increase/decrease unit's recoil.",
        "soldier setUnitRecoilCoefficient 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setUnitRecoilCoefficient coefficient",
    ],
    [
        "b",
        "setunittrait",
        "setUnitTrait",
        "Sets given trait to given soldier",
        "player setUnitTrait ['Medic', 1]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "player setUnitTrait [&lt;skill_name&gt;, &lt;value&gt;, [&lt;isCustom&gt;]]",
    ],
    [
        "b",
        "setunloadincombat",
        "setUnloadInCombat",
        "Check if cargo of this vehicle want to get out when in combat. Vehicle has to be local.",
        "vehicle setUnloadInCombat [true, false]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setUnloadInCombat [allowCargo, allowTurrets]",
    ],
    [
        "b",
        "setuseractiontext",
        "setUserActionText",
        "Change action texts.",
        "player VehSetUserActionText [0, 'hello']",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit setUserActionText [action index, &quot;text&quot;, &quot;text3DBG&quot;, &quot;text3DFG&quot;]",
    ],
    [
        "b",
        "setusermfdtext",
        "setUserMFDText",
        "store user text value in MFD, limit is 50, user0...user49",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle with MFD setUserMFDText [index, value]",
    ],
    [
        "b",
        "setusermfdvalue",
        "setUserMFDValue",
        "store user value in MFD, limit is 50, user0...user49",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle with MFD setUserMFDValue [index, value]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Sets given variable on given UI display",
        "",
        "",
        "NOTHING",
        "DISPLAY",
        "ARRAY",
        "display setVariable [name, value]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Sets given variable on given UI control.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control setVariable [name, value]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Set variable to given value in the variable space of given object. If public is true then the value is broadcast to all computers.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setVariable [name, value, public]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Set variable to given value in the variable space of given group. If public is true then the value is broadcast to all computers.",
        "",
        "",
        "NOTHING",
        "GROUP",
        "ARRAY",
        "group setVariable [name, value, public]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Set variable to given value in the given namespace. 'Public' only allowed for missionNamespace",
        "",
        "",
        "NOTHING",
        "NAMESPACE",
        "ARRAY",
        "namespace setVariable [name, value, public]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Set variable to given value in the variable space of given team member. If public is true then the value is broadcast to all computers.",
        "team1 setVariable ['owner',player,true]",
        "",
        "NOTHING",
        "TEAM_MEMBER",
        "ARRAY",
        "teamMember setVariable [name, value, public]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Set variable to given value in the variable space of given task.",
        "",
        "",
        "NOTHING",
        "TASK",
        "ARRAY",
        "task setVariable [name, value]",
    ],
    [
        "b",
        "setvariable",
        "setVariable",
        "Set variable to given value in the variable space of given location.",
        "",
        "",
        "NOTHING",
        "LOCATION",
        "ARRAY",
        "location setVariable [name, value]",
    ],
    [
        "b",
        "setvectordir",
        "setVectorDir",
        "Set object's direction vector. Up vector will remain unchanged.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setVectorDir [x, z, y]",
    ],
    [
        "b",
        "setvectordirandup",
        "setVectorDirAndUp",
        "Set object's direction and up vector",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setVectorDirAndUp [[x, z, y],[x, y, z]]",
    ],
    [
        "b",
        "setvectorup",
        "setVectorUp",
        "Set object's up vector. Direction vector will remain unchanged.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "object setVectorUp [x, z, y]",
    ],
    [
        "b",
        "setvehicleammo",
        "setVehicleAmmo",
        "Sets how much ammunition (compared to the current stored magazines, but fully loaded) the vehicle has. The value ranges from 0 to 1.",
        "player setVehicleAmmo 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "object setVehicleAmmo value",
    ],
    [
        "b",
        "setvehicleammodef",
        "setVehicleAmmoDef",
        "Sets how much ammunition (compared to the current configuration of magazines, but fully loaded) the vehicle has. The value ranges from 0 to 1.",
        "player setVehicleAmmoDef 0",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit setVehicleAmmoDef value",
    ],
    [
        "b",
        "setvehiclearmor",
        "setVehicleArmor",
        "Sets the armor (or health for men) state of the vehicle (a value from 0 to 1).",
        "player setVehicleArmor 0.5",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "object setVehicleArmor value",
    ],
    [
        "b",
        "setvehiclecargo",
        "setVehicleCargo",
        "Load cargo vehicle inside vehicle if possible.",
        "veh setVehicleCargo cargo",
        "",
        "BOOL",
        "OBJECT",
        "OBJECT",
        "vehicle setVehicleCargo cargo",
    ],
    [
        "b",
        "setvehicleid",
        "setVehicleId",
        "Sets id (integer value) to vehicle. By this id vehicle is referenced by triggers and waypoints.",
        "player setVehicleId 1",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "object setVehicleId id",
    ],
    [
        "b",
        "setvehiclelock",
        "setVehicleLock",
        "Set how vehicle is locked for player. Possible values: UNLOCKED, DEFAULT or LOCKED.",
        "veh1 setVehicleLock 'LOCKED'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "vehicle setVehicleLock state",
    ],
    [
        "b",
        "setvehicleposition",
        "setVehiclePosition",
        "Changes the object position. If the markers array contains more than one marker names, the position of a random one is used. Otherwise, the given position is used. The object is placed inside a circle with this position as its center and placement as its radius.",
        "player setVehiclePosition [[0, 0, 0], ['Marker1'], 0, 'CAN_COLLIDE']",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "object setVehiclePosition [position, markers, placement, special]",
    ],
    [
        "b",
        "setvehicleradar",
        "setVehicleRadar",
        "Overrides AI decision to use radar",
        "vehicle setVehicleRadar true",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "vehicle setVehicleRadar 0 - automatic, 1 - forced on, 2 - forced off",
    ],
    [
        "b",
        "setvehiclereceiveremotetargets",
        "setVehicleReceiveRemoteTargets",
        "vehicle will get information about radar targets from center",
        "vehicle setVehicleReceiveRemoteTargets true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle setVehicleReceiveRemoteTargets bool",
    ],
    [
        "b",
        "setvehiclereportownposition",
        "setVehicleReportOwnPosition",
        "vehicle will report his radar position to center",
        "vehicle setVehicleReportOwnPosition true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle setVehicleReportOwnPosition bool",
    ],
    [
        "b",
        "setvehiclereportremotetargets",
        "setVehicleReportRemoteTargets",
        "vehicle will report radar targets to center",
        "vehicle setVehicleReportRemoteTargets true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "vehicle setVehicleReportRemoteTargets bool",
    ],
    [
        "b",
        "setvehicletipars",
        "setVehicleTiPars",
        "Set TI parameters for specified vehicle, pars: engine/body, tracks/wheels, main gun.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setVehicleTiPars tiParams",
    ],
    [
        "b",
        "setvehiclevarname",
        "setVehicleVarName",
        "Sets the name of the variable which contains a reference to this object. It is necessary in MP to change the variable content after a respawn.",
        "player setVehicleVarName 'aP'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "object setVehicleVarName name",
    ],
    [
        "b",
        "setvelocity",
        "setVelocity",
        "Sets the velocity (speed vector) of a vehicle.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setVelocity [x, z, y]",
    ],
    [
        "b",
        "setvelocitymodelspace",
        "setVelocityModelSpace",
        "Sets the velocity (speed vector) of a vehicle.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "vehicle setVelocityModelSpace [x, z, y]",
    ],
    [
        "b",
        "setvelocitytransformation",
        "setVelocityTransformation",
        "interpolates and sets vectors. Time has to be from &lt;0,1&gt;.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "soldier setVelocityTransformation [position1, position2, velocity1, velocity2, direction1, direction2, up1, up2, time, (customCenter)]",
    ],
    [
        "u",
        "setviewdistance",
        "setViewDistance",
        "Sets the rendering distance. Default is 900 meters. The accepted range is from 500 to 5000 meters.",
        "setviewdistance 2000",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "setViewDistance distance",
    ],
    [
        "b",
        "setvisibleiftreecollapsed",
        "setVisibleIfTreeCollapsed",
        "Sets whether or not the object is visible even if the tree is collapsed.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map setVisibleIfTreeCollapsed [object, visible if tree collapsed]",
    ],
    [
        "b",
        "setwantedrpmrtd",
        "setWantedRPMRTD",
        "Set wanted RPM of given motor, use index -1 for all motors.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "RTD_helicopter setWantedRPMRTD [value &lt;0,1&gt;, time to reach, motor index]",
    ],
    [
        "b",
        "setwaves",
        "setWaves",
        "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "1800 setWaves 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setWaves waves",
    ],
    [
        "b",
        "setwaypointbehaviour",
        "setWaypointBehaviour",
        "Switches the unit behaviour when the waypoint becomes active. Possible values are: 'UNCHANGED', 'CARELESS', 'SAFE', 'AWARE', 'COMBAT' and 'STEALTH'.",
        "[grp, 2] setWaypointBehaviour 'AWARE'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointBehaviour mode",
    ],
    [
        "b",
        "setwaypointcombatmode",
        "setWaypointCombatMode",
        "The group combat mode is switched when the waypoint becomes active. Possible values are: 'NO CHANGE', 'BLUE', 'GREEN', 'WHITE', 'YELLOW' and 'RED'.",
        "[grp, 2] setWaypointCombatMode 'RED'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointCombatMode mode",
    ],
    [
        "b",
        "setwaypointcompletionradius",
        "setWaypointCompletionRadius",
        "Set the radius around the waypoint where is the waypoint completed.",
        "[grp, 2] setWaypointCompletionRadius 30",
        "",
        "NOTHING",
        "ARRAY",
        "SCALAR",
        "waypoint setWaypointCompletionRadius radius",
    ],
    [
        "b",
        "setwaypointdescription",
        "setWaypointDescription",
        "Sets the description shown in the HUD while the waypoint is active.",
        "[grp, 2] setWaypointDescription 'Move here.'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointDescription text",
    ],
    [
        "b",
        "setwaypointforcebehaviour",
        "setWaypointForceBehaviour",
        "Forces the behavior of waypoint, disables AUTOCOMBAT",
        "[grp, 2] setWaypointForceBehaviour true",
        "",
        "NOTHING",
        "ARRAY",
        "BOOL",
        "waypoint setWaypointForceBehaviour mode",
    ],
    [
        "b",
        "setwaypointformation",
        "setWaypointFormation",
        "Switches the group formation when the waypoint becomes active. Possible values are: 'NO CHANGE', 'COLUMN', 'STAG COLUMN', 'WEDGE', 'ECH LEFT', 'ECH RIGHT', 'VEE' and 'LINE'.",
        "[grp, 2] setWaypointFormation 'LINE'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointFormation formation",
    ],
    [
        "b",
        "setwaypointhouseposition",
        "setWaypointHousePosition",
        "For waypoints attached to a house, this defines the target house position.",
        "[grp, 2] setWaypointHousePosition 1",
        "",
        "NOTHING",
        "ARRAY",
        "SCALAR",
        "waypoint setWaypointHousePosition pos",
    ],
    [
        "b",
        "setwaypointloiteraltitude",
        "setWaypointLoiterAltitude",
        "Assignes loiter altitude to waypoint",
        "[_grp, 2] setWaypointLoiterAltitude 100",
        "",
        "NOTHING",
        "ARRAY",
        "SCALAR",
        "waypoint setWaypointLoiterAltitude loiter altitude",
    ],
    [
        "b",
        "setwaypointloiterradius",
        "setWaypointLoiterRadius",
        "Assignes loiter radius to waypoint",
        "[_grp, 2] setWaypointLoiterRadius 200",
        "",
        "NOTHING",
        "ARRAY",
        "SCALAR",
        "waypoint setWaypointLoiterRadius loiter radius",
    ],
    [
        "b",
        "setwaypointloitertype",
        "setWaypointLoiterType",
        "Assignes loiter type to waypoint",
        "[_grp, 2] setWaypointLoiterType 'CIRCLE'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointLoiterType loiter type",
    ],
    [
        "b",
        "setwaypointname",
        "setWaypointName",
        "Changes the waypoint name.",
        "[grp, 2] WaypointSetName 'someName'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointName name",
    ],
    [
        "b",
        "setwaypointposition",
        "setWaypointPosition",
        "Moves the waypoint to a random position in a circle with the given center and radius.",
        "[grp, 2] setWaypointPosition [position player, 0]",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "waypoint setWaypointPosition [center, radius]",
    ],
    [
        "b",
        "setwaypointscript",
        "setWaypointScript",
        "Attaches a script to a scripted waypoint. Command consist of a script name and additional script arguments.",
        "[grp, 2] setWaypointScript 'find.sqs player'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointScript command",
    ],
    [
        "b",
        "setwaypointspeed",
        "setWaypointSpeed",
        "Switches the group speed mode when the waypoint becomes active. Possible values are: 'UNCHANGED', 'LIMITED', 'NORMAL' and 'FULL'.",
        "[grp, 2] setWaypointSpeed 'FULL'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointSpeed mode",
    ],
    [
        "b",
        "setwaypointstatements",
        "setWaypointStatements",
        "The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.",
        "[grp, 2] setWaypointStatements ['true', '']",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "waypoint setWaypointStatements [condition, statement]",
    ],
    [
        "b",
        "setwaypointtimeout",
        "setWaypointTimeout",
        "Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid).",
        "[grp, 2] setWaypointTimeout [5, 10, 6]",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "waypoint setWaypointTimeout [min, mid, max]",
    ],
    [
        "b",
        "setwaypointtype",
        "setWaypointType",
        "Changes the waypoint type. Type can be: 'MOVE', 'DESTROY', 'GETIN', 'SAD', 'JOIN', 'LEADER', 'GETOUT', 'CYCLE', 'LOAD', 'UNLOAD', 'TR UNLOAD', 'HOLD', 'SENTRY', 'GUARD', 'TALK', 'SCRIPTED', 'SUPPORT', 'GETIN NEAREST', 'AND' or 'OR'.",
        "[grp, 2] setWaypointType 'HOLD'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint setWaypointType type",
    ],
    [
        "b",
        "setwaypointvisible",
        "setWaypointVisible",
        "Set waypoint's visibility.",
        "[grp, 2] setWaypointVisible false",
        "",
        "NOTHING",
        "ARRAY",
        "BOOL",
        "waypoint setWaypointVisible visible",
    ],
    [
        "b",
        "setweaponreloadingtime",
        "setWeaponReloadingTime",
        "Set phase of weapon reloading. ReloadTime goes from 0 to 1, where 0 is the end of loading procedure. Returns true if given weapon was found for given gunner",
        "_done = _vehicle setWeaponReloadingTime [_gunner, currentMuzzle _gunner, 0.5]",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "vehicle setWeaponReloadingTime [gunner, muzzleName, reloadTime &lt;0-1&gt;]",
    ],
    [
        "b",
        "setweaponzeroing",
        "setWeaponZeroing",
        "Sets the zeroing on specified weapon muzzle",
        "",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "unit setWeaponZeroing [weaponClass, muzzleClass, zeroingIndex]",
    ],
    [
        "u",
        "setwind",
        "setWind",
        "Set current (forced == false) or permanent (forced == true) wind direction and force.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setWind [x, z, forced]",
    ],
    [
        "b",
        "setwinddir",
        "setWindDir",
        "Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "1800 setWindDir 120",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setWindDir azimut",
    ],
    [
        "u",
        "setwinddir",
        "setWindDir",
        "Set current wind direction and force.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "setWindDir [x, z]",
    ],
    [
        "b",
        "setwindforce",
        "setWindForce",
        "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can chage rapidly and max. wind speed i 35m/s.",
        "1800 setFog 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setWindForce wind",
    ],
    [
        "b",
        "setwindstr",
        "setWindStr",
        "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
        "1800 setWindStr 0.5",
        "",
        "NOTHING",
        "SCALAR",
        "SCALAR",
        "time setWindStr value",
    ],
    [
        "b",
        "setwingforcescalertd",
        "setWingForceScaleRTD",
        "Set effectivity of wings. Values <0.0,1.0>. Use -1 to keep original value.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "RTD_helicopter setWingForceScaleRTD [left horizontal, right horizontal, vertical]",
    ],
    [
        "b",
        "setwppos",
        "setWPPos",
        "Sets the waypoint position. Waypoint uses format <ar>Waypoint</ar>. Position uses format <ar>Position2D</ar>.",
        "[groupOne, 1] setWPPos getMarkerPos 'MarkerOne'",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "wapoint setWPPos position",
    ],
    [
        "b",
        "show3dicons",
        "show3DIcons",
        "Toggle the drawing of 3D icons.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "map show3DIcons bool",
    ],
    [
        "u",
        "showchat",
        "showChat",
        "Shows/hides the whole chat window.",
        "showChat false",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showChat true/false",
    ],
    [
        "u",
        "showcinemaborder",
        "showCinemaBorder",
        "Forces drawing of the cinema borders. This is normally used in cutscenes to indicate the player has no control.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showCinemaBorder show",
    ],
    [
        "u",
        "showcommandingmenu",
        "showCommandingMenu",
        "Create the commanding menu described by the given config class. When class name is empty, current commanding menu is hidden.",
        "",
        "",
        "NOTHING",
        "",
        "STRING",
        "showCommandingMenu class name",
    ],
    [
        "u",
        "showcompass",
        "showCompass",
        "Enables the compass (the default is true).",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showCompass show",
    ],
    [
        "u",
        "showcuratorcompass",
        "showCuratorCompass",
        "Hides or shows compass in curator interface.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showCuratorCompass show",
    ],
    [
        "u",
        "showgps",
        "showGps",
        "Enables the GPS receiver (the default is false).",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showGps show",
    ],
    [
        "u",
        "showhud",
        "showHUD",
        "Enable / disable showing of HUD.",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showHUD enable",
    ],
    [
        "u",
        "showhud",
        "showHUD",
        "Enable / disable showing of particular HUD elements.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "showHUD [hud, info, radar, compass, direction, menu, group, cursors, panels, kills, icon3d]",
    ],
    [
        "b",
        "showlegend",
        "showLegend",
        "Shows/hides map legend.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "BOOL",
        "map showLegend bool",
    ],
    [
        "u",
        "showmap",
        "showMap",
        "Enables the map (the default is true).",
        "showMap true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showMap show",
    ],
    [
        "n",
        "shownartillerycomputer",
        "shownArtilleryComputer",
        "Checks whether the player has the artillery computer currently enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownArtilleryComputer",
    ],
    [
        "n",
        "shownchat",
        "shownChat",
        "Checks whether the player chat is visible.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownChat",
    ],
    [
        "n",
        "showncompass",
        "shownCompass",
        "Checks whether the player has the compass enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownCompass",
    ],
    [
        "n",
        "showncuratorcompass",
        "shownCuratorCompass",
        "Returns true if compass is shown.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownCuratorCompass",
    ],
    [
        "b",
        "showneweditorobject",
        "showNewEditorObject",
        "Show the add editor object dialog, type is editor object type, class is class definition to automatically select, side filters by a certain side, pos is position to create the object.",
        "",
        "",
        "ANY",
        "CONTROL",
        "ARRAY",
        "map showNewEditorObject [type, class, side, position]",
    ],
    [
        "n",
        "showngps",
        "shownGps",
        "Checks whether the player has the GPS receiver enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownGps",
    ],
    [
        "n",
        "shownhud",
        "shownHUD",
        "Returns array of booleans corresponding to visible HUD elements [hud, info, radar, compass, direction, menu, group, cursors, panels, icon3d]",
        "",
        "",
        "ARRAY",
        "",
        "",
        "shownHUD",
    ],
    [
        "n",
        "shownmap",
        "shownMap",
        "Checks whether the player has the map enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownMap",
    ],
    [
        "n",
        "shownpad",
        "shownPad",
        "Checks whether the player has the notebook enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownPad",
    ],
    [
        "n",
        "shownradio",
        "shownRadio",
        "Checks whether the player has the radio transmitter enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownRadio",
    ],
    [
        "n",
        "shownscoretable",
        "shownScoretable",
        "Returns state of scoretable, 0, 1 or -1 (forced not visible, forced visible, default).",
        "",
        "",
        "SCALAR",
        "",
        "",
        "shownScoretable",
    ],
    [
        "n",
        "shownsubtitles",
        "shownSubtitles",
        "A getter for the <f>showSubtitles</f> command.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownSubtitles",
    ],
    [
        "n",
        "shownuavfeed",
        "shownUAVFeed",
        "True if UAV view is visible.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownUAVFeed",
    ],
    [
        "n",
        "shownwarrant",
        "shownWarrant",
        "Checks whether the player has the ID card enabled\n(Obsolete).",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownWarrant",
    ],
    [
        "n",
        "shownwatch",
        "shownWatch",
        "Checks whether the player has the watch enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "shownWatch",
    ],
    [
        "u",
        "showpad",
        "showPad",
        "Enables the notepad (the default is true).",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showPad show",
    ],
    [
        "u",
        "showradio",
        "showRadio",
        "Enables the radio (the default is false).",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showRadio show",
    ],
    [
        "u",
        "showscoretable",
        "showScoretable",
        "Shows/Hides score table, 1 to force visible, 0 to force invisible, -1 default",
        "",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "showScoretable show",
    ],
    [
        "u",
        "showsubtitles",
        "showSubtitles",
        "Enable / disable showing of subtitles. Return the previous state.",
        "",
        "",
        "BOOL",
        "",
        "BOOL",
        "showSubtitles enable",
    ],
    [
        "u",
        "showuavfeed",
        "showUAVFeed",
        "Show UAV view.",
        "showUAVFeed true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showUAVFeed show",
    ],
    [
        "u",
        "showwarrant",
        "showWarrant",
        "Obsolete\nEnables the ID card (the default is false).",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showWarrant show",
    ],
    [
        "u",
        "showwatch",
        "showWatch",
        "Enables the watch (the default is true).",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showWatch show",
    ],
    [
        "b",
        "showwaypoint",
        "showWaypoint",
        "Sets the condition determining when the waypoint is shown. Possible values are: 'NEVER', 'EASY' and 'ALWAYS'.",
        "[grp, 2] showWaypoint 'ALWAYS'",
        "",
        "NOTHING",
        "ARRAY",
        "STRING",
        "waypoint showWaypoint show",
    ],
    [
        "u",
        "showwaypoints",
        "showWaypoints",
        "Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings",
        "",
        "",
        "NOTHING",
        "",
        "BOOL",
        "showWaypoints show",
    ],
    [
        "u",
        "side",
        "side",
        "Returns the side of the unit.",
        "side player == west",
        "",
        "SIDE",
        "",
        "OBJECT",
        "side unit",
    ],
    [
        "u",
        "side",
        "side",
        "Returns the side of the group.",
        "side group player == west",
        "",
        "SIDE",
        "",
        "GROUP",
        "side group",
    ],
    [
        "u",
        "side",
        "side",
        "Return target side of given location.",
        "",
        "",
        "SIDE",
        "",
        "LOCATION",
        "side location",
    ],
    [
        "n",
        "sideambientlife",
        "sideAmbientLife",
        "The Ambient Life side",
        "",
        "",
        "SIDE",
        "",
        "",
        "sideAmbientLife",
    ],
    [
        "b",
        "sidechat",
        "sideChat",
        "Types text to the side radio channel\nNote: this function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on all of them.",
        "soldierOne sideChat 'Show this text'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "unit sideChat chatText",
    ],
    [
        "n",
        "sideempty",
        "sideEmpty",
        "The Empty side",
        "",
        "",
        "SIDE",
        "",
        "",
        "sideEmpty",
    ],
    [
        "n",
        "sideenemy",
        "sideEnemy",
        "The Enemy side (used for renegades).",
        "",
        "",
        "SIDE",
        "",
        "",
        "sideEnemy",
    ],
    [
        "n",
        "sidefriendly",
        "sideFriendly",
        "The Friendly side (used for captives).",
        "",
        "",
        "SIDE",
        "",
        "",
        "sideFriendly",
    ],
    [
        "n",
        "sidelogic",
        "sideLogic",
        "The Logic side.",
        "",
        "",
        "SIDE",
        "",
        "",
        "sideLogic",
    ],
    [
        "b",
        "sideradio",
        "sideRadio",
        "Sends the message to the side radio channel. The message is defined in the description.ext file or radio protocol.",
        "soldierOne sideRadio 'messageOne'",
        "",
        "NOTHING",
        "ARRAY,OBJECT",
        "STRING",
        "unit sideRadio radioName",
    ],
    [
        "n",
        "sideunknown",
        "sideUnknown",
        "The unknown side.",
        "",
        "",
        "SIDE",
        "",
        "",
        "sideUnknown",
    ],
    [
        "u",
        "simpletasks",
        "simpleTasks",
        "Return all simple tasks assigned to given person.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "simpleTasks person",
    ],
    [
        "u",
        "simulationenabled",
        "simulationEnabled",
        "Check if the entity has enabled simulation.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "simulationEnabled entity",
    ],
    [
        "u",
        "simulclouddensity",
        "simulCloudDensity",
        "Returns density of clouds at given position.",
        "",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "simulCloudDensity position",
    ],
    [
        "u",
        "simulcloudocclusion",
        "simulCloudOcclusion",
        "Returns clouds occlusion between two given points (0 = no clouds, 1 = full clouds).",
        "",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "simulCloudOcclusion [position1, position2]",
    ],
    [
        "u",
        "simulinclouds",
        "simulInClouds",
        "Returns if given position is in clouds.",
        "",
        "",
        "BOOL",
        "",
        "ARRAY",
        "simulInClouds position",
    ],
    [
        "n",
        "simulweathersync",
        "simulWeatherSync",
        "Synchronizes SW with arma weather, generates all keyframes.",
        "",
        "",
        "NOTHING",
        "",
        "",
        "simulWeatherSync",
    ],
    [
        "u",
        "sin",
        "sin",
        "The sine of x, the argument is in degrees.",
        "sin 30",
        "0.5",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "sin x",
    ],
    [
        "u",
        "size",
        "size",
        "Return size of given location (width, height).",
        "",
        "",
        "ARRAY",
        "",
        "LOCATION",
        "size location",
    ],
    [
        "u",
        "sizeof",
        "sizeOf",
        "Return the size of the entity of given type.",
        "",
        "",
        "SCALAR",
        "",
        "STRING",
        "sizeOf typeName",
    ],
    [
        "b",
        "skill",
        "skill",
        "Returns skill of given type of person (commander unit). Value of skill may vary from 0 to 1.",
        "hero skill 'Endurance'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "vehicle skill type",
    ],
    [
        "u",
        "skill",
        "skill",
        "Returns the current level of ability of the person.",
        "skill player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "skill person",
    ],
    [
        "b",
        "skillfinal",
        "skillFinal",
        "Returns final (calculated) skill of given type of person (commander unit). Value of skill may vary from 0 to 1.",
        "hero skill 'Endurance'",
        "",
        "SCALAR",
        "OBJECT",
        "STRING",
        "vehicle skillFinal type",
    ],
    [
        "u",
        "skiptime",
        "skipTime",
        "Skips the specified time. Daytime is adjusted, a weather change is estimated and no changes to any units are done. Duration is in hours.",
        "skipTime 2.5",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "skipTime duration",
    ],
    [
        "u",
        "sleep",
        "sleep",
        "Suspend execution of script for given time.",
        "sleep 0.5",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "sleep delay",
    ],
    [
        "u",
        "sliderposition",
        "sliderPosition",
        "Returns the current thumb position of the given slider.",
        "_pos = sliderPosition _control",
        "",
        "SCALAR",
        "",
        "CONTROL",
        "sliderPosition control",
    ],
    [
        "u",
        "sliderposition",
        "sliderPosition",
        "Returns the current thumb position of the slider with id idc of the topmost user dialog.",
        "_pos = sliderPosition 101",
        "",
        "SCALAR",
        "",
        "SCALAR",
        "sliderPosition idc",
    ],
    [
        "u",
        "sliderrange",
        "sliderRange",
        "Returns the limits (as an array [min, max]) of the given slider.",
        "_limits = sliderRange _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "sliderRange control",
    ],
    [
        "u",
        "sliderrange",
        "sliderRange",
        "Returns the limits (as an array [min, max]) of the slider with id idc of the topmost user dialog.",
        "_limits = sliderRange 100",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "sliderRange idc",
    ],
    [
        "b",
        "slidersetposition",
        "sliderSetPosition",
        "Sets the current thumb position of the given slider.",
        "_control sliderSetPosition 0",
        "",
        "NOTHING",
        "CONTROL",
        "SCALAR",
        "control sliderSetPosition pos",
    ],
    [
        "u",
        "slidersetposition",
        "sliderSetPosition",
        "Sets the current thumb position of the slider with id idc of the topmost user dialog.",
        "sliderSetPosition [100, 0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "sliderSetPosition [idc, pos]",
    ],
    [
        "b",
        "slidersetrange",
        "sliderSetRange",
        "Sets the limits of the slider with id idc of the given slider.",
        "_control sliderSetRange [0, 10]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control sliderSetRange [min, max]",
    ],
    [
        "u",
        "slidersetrange",
        "sliderSetRange",
        "Sets the limits of the slider with id idc of the topmost user dialog.",
        "sliderSetRange [100, 0, 10]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "sliderSetRange [idc, min, max]",
    ],
    [
        "b",
        "slidersetspeed",
        "sliderSetSpeed",
        "Sets the speed (a click on the arrow results in a move per line. A click on the scale outside the thumb results in a move per page) of the given slider.",
        "_control sliderSetSpeed [0.5, 2.0]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control sliderSetSpeed [line, page, (step)]",
    ],
    [
        "u",
        "slidersetspeed",
        "sliderSetSpeed",
        "Sets the speed (a click on the arrow results in a move per line. A click on the scale outside the thumb results in a move per page) of the slider with id idc of the topmost user dialog.",
        "sliderSetSpeed [100, 0.5, 2.0]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "sliderSetSpeed [idc, line, page, (step)]",
    ],
    [
        "u",
        "sliderspeed",
        "sliderSpeed",
        "Returns the speed (as an array [line, page, step]) of the given slider.",
        "_speed = sliderSpeed _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "sliderSpeed control",
    ],
    [
        "u",
        "sliderspeed",
        "sliderSpeed",
        "Returns the speed (as an array [line, page, step]) of the slider with id idc of the topmost user dialog.",
        "_speed = sliderSpeed",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "sliderSpeed idc",
    ],
    [
        "n",
        "slingloadassistantshown",
        "slingLoadAssistantShown",
        "Return true if Sling Load Assistant is shown.",
        "slingLoadAssistantShown",
        "",
        "BOOL",
        "",
        "",
        "slingLoadAssistantShown",
    ],
    [
        "u",
        "soldiermagazines",
        "soldierMagazines",
        "Get array with all magazines from vest.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "soldierMagazines unit",
    ],
    [
        "u",
        "someammo",
        "someAmmo",
        "Checks whether the unit has some ammo remaining.",
        "someAmmo vehicle player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "someAmmo unit",
    ],
    [
        "b",
        "sort",
        "sort",
        "Tries to sort given array in ascending (true) or descending (false) order.",
        "arr = [4,3,5]; arr sort true;",
        "",
        "NOTHING",
        "ARRAY",
        "BOOL",
        "array sort order",
    ],
    [
        "n",
        "soundvolume",
        "soundVolume",
        "Returns the current sound volume level as set by <f>fadeSound</f>.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "soundVolume",
    ],
    [
        "b",
        "spawn",
        "spawn",
        "Executes a script. Argument is passed to the script as local variable _this.",
        "",
        "",
        "SCRIPT",
        "ANY",
        "CODE",
        "arguments spawn script",
    ],
    [
        "u",
        "speaker",
        "speaker",
        "Returns the speaker of the variable assigned to the object in the mission editor.",
        "speaker player",
        "",
        "STRING",
        "",
        "OBJECT",
        "speaker object",
    ],
    [
        "n",
        "speechvolume",
        "speechVolume",
        "Returns the current speech volume level as set by <f>fadeSpeech</f>.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "speechVolume",
    ],
    [
        "u",
        "speed",
        "speed",
        "Returns the object speed (in km/h).",
        "speed player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "speed obj",
    ],
    [
        "u",
        "speedmode",
        "speedMode",
        "Returns the speed mode of the group ('LIMITED', 'NORMAL' or 'FULL').",
        "speedMode group player",
        "",
        "STRING",
        "",
        "OBJECT,GROUP",
        "speedMode grp",
    ],
    [
        "b",
        "splitstring",
        "splitString",
        "Splits string into tokens by given delimiter(s)",
        "'1:2:3' splitString ':'",
        "",
        "ARRAY",
        "STRING",
        "STRING",
        "string splitString string",
    ],
    [
        "u",
        "sqrt",
        "sqrt",
        "The square root of x.",
        "sqrt 9",
        "3",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "sqrt x",
    ],
    [
        "u",
        "squadparams",
        "squadParams",
        "Returns data about squad of given unit loaded from squad.xml",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "squadParams unit",
    ],
    [
        "u",
        "stance",
        "stance",
        "Returns the stance of the given unit.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "stance unit",
    ],
    [
        "u",
        "startloadingscreen",
        "startLoadingScreen",
        "Shows loading screen with the given text, using the given resource. When loading screen is shown, simulation and scene drawing is disabled, scripts run at full speed.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "startLoadingScreen [text] or [text, resource]",
    ],
    [
        "b",
        "step",
        "step",
        "Optionally can set step. If you want to count down, step must be specified, and set negative. Default value is 1.",
        "for '_x' from 20 to 10 step -2 do {..code..}",
        "",
        "FOR",
        "FOR",
        "SCALAR",
        "for /.../ step step",
    ],
    [
        "b",
        "stop",
        "stop",
        "Stops an AI unit. This function is obsolete. Use disableAI to get better control over stopping a unit.",
        "soldierOne stop true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "unit stop stop",
    ],
    [
        "u",
        "stopenginertd",
        "stopEngineRTD",
        "Instant engines stop.",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "stopEngineRTD RTD_helicopter",
    ],
    [
        "u",
        "stopped",
        "stopped",
        "Checks whether the unit is stopped using the 'stop' command.",
        "stopped jeepOne",
        "",
        "BOOL",
        "",
        "OBJECT",
        "stopped unit",
    ],
    [
        "u",
        "str",
        "str",
        "Converts any variable to a string.",
        "str(2+3)",
        "'5'",
        "STRING",
        "",
        "ANY",
        "str any value",
    ],
    [
        "n",
        "sunormoon",
        "sunOrMoon",
        "Returns sun to moon transition state.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "sunOrMoon",
    ],
    [
        "u",
        "supportinfo",
        "supportInfo",
        "Creates list of supported operators and type. Each field of array has format: 'x:name' where x is 't' - type, 'n' - nullar operator, 'u' - unary operator, 'b' - binary operator. 'name' is operator's/type's name (in case operator, type of input operands is included). `mask` parameter can be empty string, or one of field. In this case, function returns empty array, if operator is not included in list. `mask` can contain wildcards, for example: *:name, t:*, t:name* or *:*. Use 'i:<command>' to get extended info about command.",
        "supportInfo 'b:select*'",
        "['b:ARRAY select SCALAR','b:ARRAY select BOOL']",
        "ARRAY",
        "",
        "STRING",
        "supportInfo mask",
    ],
    [
        "b",
        "suppressfor",
        "suppressFor",
        "Makes the unit to apply suppressive fire on known enemies.",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit suppressFor timeToSuppress",
    ],
    [
        "u",
        "surfaceiswater",
        "surfaceIsWater",
        "Returns whether water is on given position.",
        "",
        "",
        "BOOL",
        "",
        "ARRAY",
        "surfaceIsWater [x, y]",
    ],
    [
        "u",
        "surfacenormal",
        "surfaceNormal",
        "Returns surface normal on given position.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "surfaceNormal [x, y]",
    ],
    [
        "u",
        "surfacetexture",
        "surfaceTexture",
        "Returns the texture of the surface on given position.",
        "",
        "",
        "STRING",
        "",
        "ARRAY",
        "surfaceTexture [x, y]",
    ],
    [
        "u",
        "surfacetype",
        "surfaceType",
        "Returns what surface is on given position.",
        "",
        "",
        "STRING",
        "",
        "ARRAY",
        "surfaceType [x, y]",
    ],
    [
        "b",
        "swimindepth",
        "swimInDepth",
        "Sets the target depth level for swimming soldier.",
        "soldier SwimInDepth -20",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "unit swimInDepth height",
    ],
    [
        "u",
        "switch",
        "switch",
        "Begins switch form",
        "switch (_a) do { case 1: {block}; case 2 : {block}; default {block};}",
        "",
        "SWITCH",
        "",
        "ANY",
        "switch exp",
    ],
    [
        "n",
        "switchableunits",
        "switchableUnits",
        "Return a list of units accessible through team switch.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "switchableUnits",
    ],
    [
        "b",
        "switchaction",
        "switchAction",
        "When used on a person, the given action is started immediately (there is no transition). Use switchmove '' to switch back to the default movement if there is no transition back, otherwise the person may be stuck.",
        "soldierOne switchAction 'SitDown'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier switchAction action",
    ],
    [
        "b",
        "switchcamera",
        "switchCamera",
        "Switches the camera to the given vehicle / camera. Mode is one of: 'INTERNAL' (1st person), 'GUNNER' (optics / sights), 'EXTERNAL' (3rd person) or 'GROUP' (group).",
        "sniperOne switchCamera 'gunner'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit switchCamera mode",
    ],
    [
        "u",
        "switchcamera",
        "switchCamera",
        "Switches camera to the given unit without changing the camera mode",
        "switchCamera cursorTarget",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "switchCamera unit",
    ],
    [
        "b",
        "switchgesture",
        "switchGesture",
        "When used on a person, the given move is started immediately (there is no transition).",
        "soldierOne switchGesture 'Wave'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier switchGesture moveName",
    ],
    [
        "b",
        "switchlight",
        "switchLight",
        "Controls the lamppost mode. Mode may be 'ON', 'OFF' and 'AUTO'. 'AUTO' is default and means the lampost is only on during nighttime.",
        "nearestObject  [player, 'StreetLamp'] switchLight 'Off'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "lamppost switchLight mode",
    ],
    [
        "b",
        "switchmove",
        "switchMove",
        "When used on a person, the given move is started immediately (there is no transition). Use switchmove '' to switch back to the default movement if there is no transition back, otherwise the person may be stuck.",
        "soldierOne switchMove 'FXStandDip'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "soldier switchMove moveName",
    ],
    [
        "u",
        "synchronizedobjects",
        "synchronizedObjects",
        "Return the list of objects synchronized with the given unit/trigger.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "synchronizedObjects unit/trigger",
    ],
    [
        "u",
        "synchronizedtriggers",
        "synchronizedTriggers",
        "Return the list of triggers synchronized with a given waypoint.",
        "synchronizedTriggers [group player, 1]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "synchronizedTriggers waypoint",
    ],
    [
        "u",
        "synchronizedwaypoints",
        "synchronizedWaypoints",
        "Return the list of waypoints synchronized with a given trigger.",
        "synchronizedWaypoints trigger1",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "synchronizedWaypoints trigger",
    ],
    [
        "u",
        "synchronizedwaypoints",
        "synchronizedWaypoints",
        "Return the list of waypoints synchronized with a given waypoint.",
        "synchronizedWaypoints [group player, 1]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "synchronizedWaypoints waypoint",
    ],
    [
        "b",
        "synchronizeobjectsadd",
        "synchronizeObjectsAdd",
        "Add given objects to the unit/trigger's list of synchronized objects.",
        "player synchronizeObjectsAdd cursorTarget",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit/trigger synchronizeObjectsAdd [objects]",
    ],
    [
        "b",
        "synchronizeobjectsremove",
        "synchronizeObjectsRemove",
        "Remove given objects from the unit/trigger's list of synchronized objects.",
        "player syncrhonizeObjectsRemove cursorTarget",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "unit/trigger synchronizeObjectsRemove [objects]",
    ],
    [
        "b",
        "synchronizetrigger",
        "synchronizeTrigger",
        "Synchronizes the trigger with waypoints. Each waypoint is given as an array [group, index].",
        "trigger synchronizeWaypoint []",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "trigger synchronizeTrigger [waypoint1, waypoint2, ...]",
    ],
    [
        "b",
        "synchronizewaypoint",
        "synchronizeWaypoint",
        "Synchronizes the waypoint with other waypoints. Each waypoint is given as an array [group, index].",
        "[group1, 2] synchronizeWaypoint [[group2, 3]]",
        "",
        "NOTHING",
        "ARRAY",
        "ARRAY",
        "waypoint synchronizeWaypoint [waypoint1, waypoint2, ...]",
    ],
    [
        "b",
        "synchronizewaypoint",
        "synchronizeWaypoint",
        "Synchronizes the trigger with waypoints. Each waypoint is given as an array [group, index].",
        "trigger synchronizeWaypoint []",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "trigger synchronizeWaypoint [waypoint1, waypoint2, ...]",
    ],
    [
        "u",
        "systemchat",
        "systemChat",
        "Types text to the system radio channel\nNote: this function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on all of them.",
        "systemChat 'Dam of Peace'",
        "",
        "NOTHING",
        "",
        "STRING",
        "systemChat chatText",
    ],
    [
        "n",
        "systemofunits",
        "systemOfUnits",
        "Returns 0 for metric, 1 for mixed (ground units uses metric, air units uses imperial) and 2 for imperial.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "systemOfUnits",
    ],
    [
        "n",
        "systemtime",
        "systemTime",
        "Returns the current local system time in format [year, month, day, hour, minute, second, millisecond].",
        "",
        "",
        "ARRAY",
        "",
        "",
        "systemTime",
    ],
    [
        "n",
        "systemtimeutc",
        "systemTimeUTC",
        "Returns the current UTC system time in format [year, month, day, hour, minute, second, millisecond].",
        "",
        "",
        "ARRAY",
        "",
        "",
        "systemTimeUTC",
    ],
    [
        "u",
        "tan",
        "tan",
        "The tangens of x, the argument is in degrees.",
        "tan 45",
        "1",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "tan x",
    ],
    [
        "b",
        "targetknowledge",
        "targetKnowledge",
        "Returns units knowledge about target. The array has format [known by group, known by unit, last time target was seen by unit, last time target endangered unit, target side, position error, target position]",
        "player targetKnowledge target",
        "",
        "ARRAY",
        "OBJECT",
        "OBJECT",
        "unit targetKnowledge target",
    ],
    [
        "b",
        "targets",
        "targets",
        "Returns targets known by given unit filtered by given sides and distance.",
        "player targets [[EAST, GUER], 100]",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "unit targets [[sides...](, distance, age, center)]",
    ],
    [
        "b",
        "targetsaggregate",
        "targetsAggregate",
        "Aggregate candidates.",
        "",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "[speaker, side, unit, place, time] targetsAggregate candidates",
    ],
    [
        "b",
        "targetsquery",
        "targetsQuery",
        "Find all targets known to sender matching given query.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "speaker targetsQuery [receiver, side, unit, place, time]",
    ],
    [
        "u",
        "taskalwaysvisible",
        "taskAlwaysVisible",
        "Returns true if task is flagged to be always visible or false if not. (always visible in 3D).",
        "",
        "",
        "BOOL",
        "",
        "TASK",
        "taskAlwaysVisible task",
    ],
    [
        "u",
        "taskchildren",
        "taskChildren",
        "Return the child tasks of the specified task.",
        "",
        "",
        "ARRAY",
        "",
        "TASK",
        "taskChildren task",
    ],
    [
        "u",
        "taskcompleted",
        "taskCompleted",
        "Return if task is completed. (state Succeeded, Failed or Canceled)",
        "",
        "",
        "BOOL",
        "",
        "TASK",
        "taskCompleted task",
    ],
    [
        "u",
        "taskcustomdata",
        "taskCustomData",
        "Returns array of custom data [icon,iconText,descriptionText] as defined via setSimpleTaskCustomData",
        "",
        "",
        "ARRAY",
        "",
        "TASK",
        "taskCustomData task",
    ],
    [
        "u",
        "taskdescription",
        "taskDescription",
        "Returns the descripction of the task.",
        "",
        "",
        "ARRAY",
        "",
        "TASK",
        "taskDescription task",
    ],
    [
        "u",
        "taskdestination",
        "taskDestination",
        "Returns the position of the task (as specified by destination parameter in config).",
        "",
        "",
        "ARRAY",
        "",
        "TASK",
        "taskDestination task",
    ],
    [
        "u",
        "taskhint",
        "taskHint",
        "Shows info about new,changed or failed task. The text can contain several lines. \n is used to indicate the end of a line.",
        "taskHint 'Capture town.'",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "taskHint text",
    ],
    [
        "u",
        "taskmarkeroffset",
        "taskMarkerOffset",
        "Returns model space position for the task marker",
        "taskMarkerOffset player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "taskMarkerOffset obj",
    ],
    [
        "u",
        "taskname",
        "taskName",
        "Returns the name of the task.",
        "",
        "",
        "STRING",
        "",
        "TASK",
        "taskName task",
    ],
    [
        "n",
        "tasknull",
        "taskNull",
        "A non-existing task. This value is not equal to anything, including itself.",
        "taskNull == taskNull",
        "false",
        "TASK",
        "",
        "",
        "taskNull",
    ],
    [
        "u",
        "taskparent",
        "taskParent",
        "Return the parent task of the specified task.",
        "",
        "",
        "TASK",
        "",
        "TASK",
        "taskParent task",
    ],
    [
        "u",
        "taskresult",
        "taskResult",
        "Return the result of the given task.",
        "",
        "",
        "ARRAY",
        "",
        "TASK",
        "taskResult task",
    ],
    [
        "u",
        "taskstate",
        "taskState",
        "Return the state of the given task.",
        "",
        "",
        "STRING",
        "",
        "TASK",
        "taskState task",
    ],
    [
        "u",
        "tasktype",
        "taskType",
        "Returns the task type name.",
        "",
        "",
        "STRING",
        "",
        "TASK",
        "taskType task",
    ],
    [
        "u",
        "teammember",
        "teamMember",
        "Return an agent for given person.",
        "_agent = teamMember player",
        "",
        "TEAM_MEMBER",
        "",
        "OBJECT",
        "teamMember person",
    ],
    [
        "n",
        "teammembernull",
        "teamMemberNull",
        "A non-existing team member. This value is not equal to anything, including itself.",
        "_teamMember == teamMemberNull",
        "false",
        "TEAM_MEMBER",
        "",
        "",
        "teamMemberNull",
    ],
    [
        "u",
        "teamname",
        "teamName",
        "Return a name of given team.",
        "_name = teamName _team",
        "",
        "STRING",
        "",
        "TEAM_MEMBER",
        "teamName team",
    ],
    [
        "n",
        "teams",
        "teams",
        "Return a list of teams in the current mission.",
        "_teams = teams",
        "",
        "ARRAY",
        "",
        "",
        "teams",
    ],
    [
        "n",
        "teamswitch",
        "teamSwitch",
        "Invoke the team switch dialog (force it even when conditions are not met).",
        "",
        "",
        "NOTHING",
        "",
        "",
        "teamSwitch",
    ],
    [
        "n",
        "teamswitchenabled",
        "teamSwitchEnabled",
        "Check if tam switch is currently enabled.",
        "",
        "",
        "BOOL",
        "",
        "",
        "teamSwitchEnabled",
    ],
    [
        "u",
        "teamtype",
        "teamType",
        "Return a type of given team.",
        "_type = teamType _team",
        "",
        "STRING",
        "",
        "TEAM_MEMBER",
        "teamType team",
    ],
    [
        "u",
        "terminate",
        "terminate",
        "Terminate (abort) the script",
        "",
        "",
        "NOTHING",
        "",
        "SCRIPT",
        "terminate script",
    ],
    [
        "u",
        "terrainintersect",
        "terrainIntersect",
        "Checks for intersection of terrain between two positions. Returns true if intersects with terrain",
        "_doesIntersect = terrainIntersect [ position player, position enemy1 ];",
        "",
        "BOOL",
        "",
        "ARRAY",
        "terrainIntersect [ position begin, position end ]",
    ],
    [
        "u",
        "terrainintersectasl",
        "terrainIntersectASL",
        "Checks for intersection of terrain between two positions. Returns true if intersects with terrain",
        "_doesIntersect = terrainIntersectASL [ getposAsl player, getposAsl enemy1 ];",
        "",
        "BOOL",
        "",
        "ARRAY",
        "terrainIntersectASL [ positionASL begin, positionASL end ]",
    ],
    [
        "u",
        "terrainintersectatasl",
        "terrainIntersectAtASL",
        "Checks for intersection of terrain between two positions. Returns resulting position if intersects with terrain or [0,0,0] if not",
        "_intersectPos = terrainIntersectAtASL [ getposAsl player, getposAsl enemy1 ];",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "terrainIntersectAtASL [ positionASL begin, positionASL end ]",
    ],
    [
        "u",
        "text",
        "text",
        "Creates a structured text containing the given plain text.",
        "txt2 = text 'Hello world.'",
        "",
        "TEXT",
        "",
        "STRING",
        "text text",
    ],
    [
        "u",
        "text",
        "text",
        "Return text attached to given location.",
        "",
        "",
        "STRING",
        "",
        "LOCATION",
        "text location",
    ],
    [
        "u",
        "textlog",
        "textLog",
        "Dumps the argument value into the debugging output.",
        "textLog player",
        "",
        "NOTHING",
        "",
        "ANY",
        "textLog anything",
    ],
    [
        "u",
        "textlogformat",
        "textLogFormat",
        "Shortcut to textLog format [format, arg1, arg2, ...] (for better performance in retail version).",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "textLogFormat [format, arg1,  arg2, ...]",
    ],
    [
        "u",
        "tg",
        "tg",
        "The tangens of x, the argument is in degrees.",
        "tg 45",
        "1",
        "SCALAR,NaN",
        "",
        "SCALAR,NaN",
        "tg x",
    ],
    [
        "b",
        "then",
        "then",
        "The code is executed when the if condition is met. If the code is executed, the last value calculated in the code is returned. If the code is not executed, <t>nothing</t> is returned.",
        "if (a>b) then {c=1}",
        "",
        "ANY",
        "IF",
        "CODE",
        "if then codeToExecute",
    ],
    [
        "b",
        "then",
        "then",
        "The first or second element of the array is executed depending on the result of the if condition. The result of the executed expression is returned as a result (the result may be <t>nothing</t>).",
        "if (a>b) then {c=1} else {c=2};if (a>b) then [{c=1},{c=2}]",
        "",
        "ANY",
        "IF",
        "ARRAY",
        "if then else",
    ],
    [
        "b",
        "throw",
        "throw",
        "if result of condition is true, throw command is executed",
        "if (a < 0) throw 'a is less than zero';",
        "",
        "NOTHING",
        "IF",
        "ANY",
        "if throw code",
    ],
    [
        "u",
        "throw",
        "throw",
        "Throws an exception. The exception is processed by first catch block. See <f>try</f>.",
        "throw 'invalid argument'",
        "",
        "NOTHING",
        "",
        "ANY",
        "throw expression",
    ],
    [
        "n",
        "time",
        "time",
        "Returns the time that elapsed since the mission started (in seconds).",
        "",
        "",
        "SCALAR",
        "",
        "",
        "time",
    ],
    [
        "n",
        "timemultiplier",
        "timeMultiplier",
        "Returns game time multiplier setted to speed up game time",
        "multiplier",
        "",
        "SCALAR",
        "",
        "",
        "timeMultiplier",
    ],
    [
        "u",
        "titlecut",
        "titleCut",
        "Obsolete.",
        "",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "titleCut effect",
    ],
    [
        "u",
        "titlefadeout",
        "titleFadeOut",
        "Terminate the title effect and set duration of the fade out phase to the given time.",
        "titleFadeIn 1.0",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "titleFadeOut duration",
    ],
    [
        "u",
        "titleobj",
        "titleObj",
        "Object title - the argument uses format ['text','type',speed, showInMap] or ['name','type']. If speed is not given, it's assumed to be one\nThe object can be defined in the description.ext file.",
        "titleObj ['BISLogo','plain']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "titleObj effect",
    ],
    [
        "u",
        "titlersc",
        "titleRsc",
        "Resource title - the argument uses format ['name','type',speed, showInMap] or ['name','type']. If speed is not given, it's assumed to be one\nResource can be defined in the description.ext file.",
        "titleRsc ['BIS', 'PLAIN']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "titleRsc effect",
    ],
    [
        "u",
        "titletext",
        "titleText",
        "Text title - the argument uses format ['text','type',speed, showInMap, isStructuredText] or ['text','type']. If speed is not given, it's assumed to be one.",
        "titleText ['Show this text', 'PLAIN']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "titleText effect",
    ],
    [
        "b",
        "to",
        "to",
        "Continue sequence of 'for' command.",
        "for '_x' from 10 to 20 do {..code..}",
        "",
        "FOR",
        "FOR",
        "SCALAR",
        "for &quot;_var&quot; from a to b",
    ],
    [
        "b",
        "toarray",
        "toArray",
        "Converts Hashmap into [[key,value],[key,value],...] array, or to splitArray [[key,key,...],[value,value,...]] array.",
        "_array = _hashMap toArray true",
        "",
        "ARRAY",
        "HASHMAP",
        "BOOL",
        "hashMap toArray splitArray",
    ],
    [
        "u",
        "toarray",
        "toArray",
        "Converts a string into an array of characters.",
        "toArray 'ArmA'",
        "[65, 114, 109, 65]",
        "ARRAY",
        "",
        "STRING",
        "toArray string",
    ],
    [
        "u",
        "toarray",
        "toArray",
        "Converts Hashmap into [[key,key,...],[value,value,...]] array.",
        "_array = toArray _hashMap",
        "",
        "ARRAY",
        "",
        "HASHMAP",
        "toArray hashMap",
    ],
    [
        "b",
        "tofixed",
        "toFixed",
        "Formats a number using fixed-point notation",
        "0.34324 toFixed 3",
        "",
        "STRING",
        "SCALAR",
        "SCALAR",
        "number toFixed digits",
    ],
    [
        "u",
        "tofixed",
        "toFixed",
        "Uses fixed-point notation in all number to string conversions until the end of the current scope",
        "toFixed 4;",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "toFixed digits",
    ],
    [
        "u",
        "tolower",
        "toLower",
        "Converts a string to lower case.",
        "toLower 'ArmA'",
        "'arma'",
        "STRING",
        "",
        "STRING",
        "toLower string",
    ],
    [
        "u",
        "toloweransi",
        "toLowerANSI",
        "Converts an ANSI string to lower case. Faster than toLower but less versatile.",
        "toLowerAnsi 'ArmA'",
        "'arma'",
        "STRING",
        "",
        "STRING",
        "toLowerANSI string",
    ],
    [
        "u",
        "tostring",
        "toString",
        "Converts an array of characters into a string.",
        "toString [65, 114, 109, 65]",
        "'ArmA'",
        "STRING",
        "",
        "ARRAY",
        "toString characters",
    ],
    [
        "u",
        "tostring",
        "toString",
        "Converts script code into string",
        "toString {123}",
        "'123'",
        "STRING",
        "",
        "CODE",
        "toString code",
    ],
    [
        "u",
        "toupper",
        "toUpper",
        "Converts a string to upper case.",
        "toUpper 'ArmA'",
        "'ARMA'",
        "STRING",
        "",
        "STRING",
        "toUpper string",
    ],
    [
        "u",
        "toupperansi",
        "toUpperANSI",
        "Converts an ANSI string to upper case. Faster than toUpper but less versatile.",
        "toUpperAnsi 'ArmA'",
        "'ARMA'",
        "STRING",
        "",
        "STRING",
        "toUpperANSI string",
    ],
    [
        "u",
        "triggeractivated",
        "triggerActivated",
        "Returns true if the trigger has been activated.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "triggerActivated trigger",
    ],
    [
        "u",
        "triggeractivation",
        "triggerActivation",
        "Returns trigger activation in the form [by, type, repeating]",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "triggerActivation trigger",
    ],
    [
        "u",
        "triggerammo",
        "triggerAmmo",
        "Triggers ammo as if it did hit",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "triggerAmmo ammo",
    ],
    [
        "u",
        "triggerarea",
        "triggerArea",
        "Returns trigger area in the form [a, b, angle, rectangle]",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "triggerArea trigger",
    ],
    [
        "u",
        "triggerattachedvehicle",
        "triggerAttachedVehicle",
        "Returns vehicle attached to the trigger (for example using <f>triggerAttachVehicle</f>)",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "triggerAttachedVehicle trigger",
    ],
    [
        "b",
        "triggerattachobject",
        "triggerAttachObject",
        "Assigns a static object to the trigger. The activation source is changed to 'STATIC'.",
        "trigger triggerAttachObject 1234",
        "",
        "NOTHING",
        "OBJECT",
        "SCALAR",
        "trigger triggerAttachObject objectId",
    ],
    [
        "b",
        "triggerattachvehicle",
        "triggerAttachVehicle",
        "If [] is given, the trigger is detached from the assigned vehicle. If the activation source is 'VEHICLE', 'GROUP', 'LEADER' or 'MEMBER', it's changed to 'NONE'. If [vehicle] is given, the trigger is attached to the vehicle or its group. When the source is 'GROUP', 'LEADER' or 'MEMBER', it's attached to the group, otherwise it's attached to the vehicle and the source is changed to 'VEHICLE'.",
        "trigger triggerAttachVehicle [player]",
        "",
        "NOTHING",
        "OBJECT",
        "ARRAY",
        "trigger triggerAttachVehicle [] or [vehicle]",
    ],
    [
        "b",
        "triggerdynamicsimulation",
        "triggerDynamicSimulation",
        "Controls ability of given unit to activate dynamically disabled entities. If false, dynamically disabled entities won't be activated by units presence",
        "player triggerDynamicSimulation false",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "unit triggerDynamicSimulation bool",
    ],
    [
        "u",
        "triggerinterval",
        "triggerInterval",
        "Returns trigger condition check interval in seconds",
        "",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "triggerInterval trigger",
    ],
    [
        "u",
        "triggerstatements",
        "triggerStatements",
        "Returns trigger statements in the form [cond, activ, desactiv]",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "triggerStatements trigger",
    ],
    [
        "u",
        "triggertext",
        "triggerText",
        "Returns trigger text.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "triggerText trigger",
    ],
    [
        "u",
        "triggertimeout",
        "triggerTimeout",
        "Returns trigger timeout in the form [min, mid, max, interruptable]",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "triggerTimeout trigger",
    ],
    [
        "u",
        "triggertimeoutcurrent",
        "triggerTimeoutCurrent",
        "Returns trigger timeout or -1 if countdown is not in progress.",
        "triggerTimeoutCurrent triggerOne",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "triggerTimeoutCurrent trigger",
    ],
    [
        "u",
        "triggertype",
        "triggerType",
        "Returns trigger type.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "triggerType trigger",
    ],
    [
        "b",
        "trim",
        "trim",
        "Trim all characters in charList from string on specified sides.",
        "'## Hello World++ ' trim ['# +', 0]",
        "'Hello World'",
        "STRING",
        "STRING",
        "ARRAY",
        "str1 trim [charList, side]",
    ],
    [
        "u",
        "trim",
        "trim",
        "Strips whitespace from both ends of string.",
        "trim ' Hello World  '",
        "'Hello World'",
        "STRING",
        "",
        "STRING",
        "trim string",
    ],
    ["n", "true", "true", "Always true.", "", "", "BOOL", "", "", "true"],
    [
        "b",
        "try",
        "try",
        "Try with additional argument",
        "[123] try {if (typeName _this != typeName 0) throw 'Not a Number'} catch {hint _exception};",
        "",
        "EXCEPTION",
        "ANY",
        "CODE",
        "anything try code",
    ],
    [
        "u",
        "try",
        "try",
        "Defines try-catch structure. This is structured exception block. Any thrown exception in try block is caught in catch block. The structured exception block has following form<pre>try   //begin of try-catch block\n   //block, that can throw exception\ncatch\n   //block, that process an exception. Exception is described in _exception variable\n}</pre>\n",
        "",
        "",
        "EXCEPTION",
        "",
        "CODE",
        "try code",
    ],
    [
        "b",
        "turretlocal",
        "turretLocal",
        "Checks whether the given vehicle's turret is local or is not.",
        "vehicle player isTurretLocal [0,0]",
        "",
        "BOOL",
        "OBJECT",
        "ARRAY",
        "vehicle turretLocal turret array",
    ],
    [
        "b",
        "turretowner",
        "turretOwner",
        "Returns id of owner of given turret",
        "vehicle turretOwner [0]",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "vehicle turretOwner [turret path]",
    ],
    [
        "b",
        "turretunit",
        "turretUnit",
        "Returns the unit in the vehicle turret.",
        "_gunner = tank turretUnit [0];",
        "",
        "OBJECT",
        "OBJECT",
        "ARRAY",
        "vehicle turretUnit turret path",
    ],
    [
        "b",
        "tvadd",
        "tvAdd",
        "Adds an item with given text to Tree View under specified path (zero based).",
        "_control tvAdd [[0], 'text']",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "control tvAdd [[path], text]",
    ],
    [
        "u",
        "tvadd",
        "tvAdd",
        "Adds an item with given text to Tree View with given idc under specified path (zero based).",
        "tvAdd [101, [0], 'First item']",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "tvAdd [idc, [path], text]",
    ],
    [
        "u",
        "tvclear",
        "tvClear",
        "Removes all items from Tree View with given idc.",
        "tvClear 101",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "tvClear idc",
    ],
    [
        "u",
        "tvclear",
        "tvClear",
        "Removes all items from Tree View with given idc.",
        "tvClear 101",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "tvClear idc",
    ],
    [
        "b",
        "tvcollapse",
        "tvCollapse",
        "Collapses given path.",
        "_control tvCollapse [0]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvCollapse [path]",
    ],
    [
        "u",
        "tvcollapse",
        "tvCollapse",
        "Collapses tree item pointed to by path. IDC means id of parent Tree View.",
        "tvCollapse [101,[0]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvCollapse [idc, [path]]",
    ],
    [
        "u",
        "tvcollapseall",
        "tvCollapseAll",
        "Collapses whole tree. IDC means id of Tree to collapse.",
        "tvCollapseAll 101",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "tvCollapseAll idc",
    ],
    [
        "u",
        "tvcollapseall",
        "tvCollapseAll",
        "Collapses whole tree. IDC means id of Tree to collapse.",
        "tvCollapseAll ctrl",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "tvCollapseAll ctrl",
    ],
    [
        "b",
        "tvcount",
        "tvCount",
        "Returns count of items in given path.",
        "_control tvCount [0]",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "control tvCount [path]",
    ],
    [
        "u",
        "tvcount",
        "tvCount",
        "Returns children count of item on given path. IDC means id of parent Tree View.",
        "tvCount [101,[0]]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "tvCount [idc, [path]]",
    ],
    [
        "u",
        "tvcursel",
        "tvCurSel",
        "Returns path to currently selected item. IDC means id of parent Tree View.",
        "tvCurSel 101",
        "",
        "ARRAY",
        "",
        "SCALAR",
        "tvCurSel idc",
    ],
    [
        "u",
        "tvcursel",
        "tvCurSel",
        "Returns path to currently selected item.",
        "tvCurSel _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "tvCurSel control",
    ],
    [
        "b",
        "tvdata",
        "tvData",
        "Returns string from given path.",
        "_control tvData [0]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control tvData [path]",
    ],
    [
        "u",
        "tvdata",
        "tvData",
        "Returns string data from item on given path. IDC means id of parent Tree View.",
        "tvData [101,[0]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "tvData [idc, [path]]",
    ],
    [
        "b",
        "tvdelete",
        "tvDelete",
        "Deletes item in given path.",
        "_control tvDelete [0]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvDelete [path]",
    ],
    [
        "u",
        "tvdelete",
        "tvDelete",
        "Removes an item on given path from Tree View with given idc.",
        "tvDelete [101, [0,0]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvDelete [idc, [path]]",
    ],
    [
        "b",
        "tvexpand",
        "tvExpand",
        "Expands given path.",
        "_control tvExpand [0]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvExpand [path]",
    ],
    [
        "u",
        "tvexpand",
        "tvExpand",
        "Expands tree item pointed to by path. IDC means id of parent Tree View.",
        "tvExpand [101,[0]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvExpand [idc, [path]]",
    ],
    [
        "u",
        "tvexpandall",
        "tvExpandAll",
        "Expands whole tree. IDC means id of Tree to expand.",
        "tvExpandAll 101",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "tvExpandAll idc",
    ],
    [
        "u",
        "tvexpandall",
        "tvExpandAll",
        "Expands whole tree. IDC means id of Tree to expand.",
        "tvExpandAll ctrl",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "tvExpandAll ctrl",
    ],
    [
        "b",
        "tvisselected",
        "tvIsSelected",
        "Returns true if given treeview item is selected.",
        "_control tvIsSelected [0]",
        "",
        "BOOL",
        "CONTROL",
        "ARRAY",
        "control tvIsSelected [path]",
    ],
    [
        "b",
        "tvpicture",
        "tvPicture",
        "Returns picture on given path of tree.",
        "_control tvPicture [0]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control tvPicture [path]",
    ],
    [
        "u",
        "tvpicture",
        "tvPicture",
        "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
        "tvPicture [101,[0]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "tvPicture [idc, [path]]",
    ],
    [
        "b",
        "tvpictureright",
        "tvPictureRight",
        "Returns picture on given path of tree.",
        "_control tvPicture [0]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control tvPictureRight [path]",
    ],
    [
        "u",
        "tvpictureright",
        "tvPictureRight",
        "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
        "tvPicture [101,[0]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "tvPictureRight [idc, [path]]",
    ],
    [
        "u",
        "tvselection",
        "tvSelection",
        "Returns array of paths to selected items.",
        "tvSelection _control",
        "",
        "ARRAY",
        "",
        "CONTROL",
        "tvSelection tree",
    ],
    [
        "b",
        "tvsetcolor",
        "tvSetColor",
        "Sets color to given path",
        "_control tvSetColor [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetColor [path, color]",
    ],
    [
        "b",
        "tvsetcursel",
        "tvSetCurSel",
        "Sets cursor to given path.",
        "_control tvSetCurSel [0]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetCurSel [path]",
    ],
    [
        "u",
        "tvsetcursel",
        "tvSetCurSel",
        "Sets cursor to given item on given path. IDC means id of parent Tree View.",
        "tvSetCurSel [101,[0]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetCurSel [idc, [path]]",
    ],
    [
        "b",
        "tvsetdata",
        "tvSetData",
        "Sets data to given path.",
        "_control tvSetData [[0], 'text']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetData [[path], text]",
    ],
    [
        "u",
        "tvsetdata",
        "tvSetData",
        "Sets string data to item on given path. IDC means id of parent Tree View.",
        "tvSetData [101,[0],'Test data']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetData [idc, [path], &quot;data&quot;]",
    ],
    [
        "b",
        "tvsetpicture",
        "tvSetPicture",
        "Sets picture to item selected by path.",
        "_control tvSetPicture [[0], 'picture']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPicture [[path], name]",
    ],
    [
        "u",
        "tvsetpicture",
        "tvSetPicture",
        "Sets picture to item selected by path. IDC means id of parent Tree View. Name is the picture name. The picture is searched in the mission directory",
        "tvSetPicture [101,[0],'picture']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetPicture [idc, [path],name]",
    ],
    [
        "b",
        "tvsetpicturecolor",
        "tvSetPictureColor",
        "Sets the color of a tree item's left picture specified by path.",
        "_control tvSetPictureColor [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPictureColor [[path], [r,g,b,a]]",
    ],
    [
        "u",
        "tvsetpicturecolor",
        "tvSetPictureColor",
        "Sets color of picture to item selected by path. IDC means id of parent Tree View.",
        "tvSetPictureColor [101,[0],[1,0,1,1]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetPictureColor [idc, [path], [r,g,b,a]]",
    ],
    [
        "b",
        "tvsetpicturecolordisabled",
        "tvSetPictureColorDisabled",
        "Sets the color of a tree item's left picture specified by path when the item or its parent tree is disabled.",
        "_control tvSetPictureColorDisabled [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPictureColorDisabled [[path], [r,g,b,a]]",
    ],
    [
        "b",
        "tvsetpicturecolorselected",
        "tvSetPictureColorSelected",
        "Sets the color of a tree item's left picture specified by path when the item is selected.",
        "_control tvSetPictureColorSelected [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPictureColorSelected [[path], [r,g,b,a]]",
    ],
    [
        "b",
        "tvsetpictureright",
        "tvSetPictureRight",
        "Sets picture to item selected by path.",
        "_control tvSetPicture [[0], 'picture']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPictureRight [[path], name]",
    ],
    [
        "u",
        "tvsetpictureright",
        "tvSetPictureRight",
        "Sets picture to item selected by path. IDC means id of parent Tree View. Name is the picture name. The picture is searched in the mission directory",
        "tvSetPicture [101,[0],'picture']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetPictureRight [idc, [path],name]",
    ],
    [
        "b",
        "tvsetpicturerightcolor",
        "tvSetPictureRightColor",
        "Sets the color of a tree item's right picture specified by path.",
        "_control tvSetPictureRightColor [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPictureRightColor [[path], [r,g,b,a]]",
    ],
    [
        "u",
        "tvsetpicturerightcolor",
        "tvSetPictureRightColor",
        "Sets color of picture to item selected by path. IDC means id of parent Tree View.",
        "tvSetPictureColor [101,[0],[1,0,1,1]]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetPictureRightColor [idc, [path], [r,g,b,a]]",
    ],
    [
        "b",
        "tvsetpicturerightcolordisabled",
        "tvSetPictureRightColorDisabled",
        "Sets the color of a tree item's left picture specified by path when the item or its parent tree is disabled.",
        "_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPictureRightColorDisabled [[path], [r,g,b,a]]",
    ],
    [
        "b",
        "tvsetpicturerightcolorselected",
        "tvSetPictureRightColorSelected",
        "Sets the color of a tree item's right picture specified by path when the item is selected.",
        "_control tvSetPictureRightColorSelected [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetPictureRightColorSelected [[path], [r,g,b,a]]",
    ],
    [
        "b",
        "tvsetselectcolor",
        "tvSetSelectColor",
        "Sets selected color to given path",
        "_control tvSetSelectColor [[0], [1,0,1,1]]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetSelectColor [path, color]",
    ],
    [
        "b",
        "tvsetselected",
        "tvSetSelected",
        "Sets the selection state of given treeview item in multi-select control.",
        "_control tvSetSelected [[0], true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetSelected [path, selected]",
    ],
    [
        "b",
        "tvsettext",
        "tvSetText",
        "Sets text to given path.",
        "_control tvSetData [[0], 'text']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetText [[path], text]",
    ],
    [
        "u",
        "tvsettext",
        "tvSetText",
        "Sets text in the item on given path. IDC means id of parent Tree View.",
        "tvText [101,[0]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "tvSetText [idc, [path], &quot;text&quot;]",
    ],
    [
        "b",
        "tvsettooltip",
        "tvSetTooltip",
        "Sets tooltip for item in the given path of the given ctree control to the given data.",
        "_control lbSetData [1, 'tooltip']",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetTooltip [[path], tooltip]",
    ],
    [
        "u",
        "tvsettooltip",
        "tvSetTooltip",
        "Sets tooltip for item with the given index of the tree view with id idc of the topmost user dialog to the given data.",
        "tvSetTooltip [101, 1, 'tooltip']",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetTooltip [idc, index, tooltip]",
    ],
    [
        "b",
        "tvsetvalue",
        "tvSetValue",
        "Sets value to given path.",
        "_control tvSetValue [[0], 1]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSetValue [[path], val]",
    ],
    [
        "u",
        "tvsetvalue",
        "tvSetValue",
        "Sets scalar data to item on given path. IDC means id of parent Tree View.",
        "tvSetValue [101,[0], 555]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSetValue [idc, [path], val]",
    ],
    [
        "b",
        "tvsort",
        "tvSort",
        "Sorts childrens of given item by data.",
        "_control tvSort [[0], true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSort [[path], reversed]",
    ],
    [
        "u",
        "tvsort",
        "tvSort",
        "Sorts children of given item by data. Param reversed is optional. IDC means id of parent Tree View.",
        "tvSort [101,[0],false]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSort [idc,[path],reversed]",
    ],
    [
        "b",
        "tvsortall",
        "tvSortAll",
        "Sorts all children of given item by data.",
        "_control tvSortAll [[], true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSortAll [[path], reversed]",
    ],
    [
        "b",
        "tvsortbyvalue",
        "tvSortByValue",
        "Sorts childrens of given item by value.",
        "_control tvSortByValue [[0], true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSortByValue [[path], reversed]",
    ],
    [
        "u",
        "tvsortbyvalue",
        "tvSortByValue",
        "Sorts children of given item by value. Param reversed is optional. IDC means id of parent Tree View.",
        "tvSort [101,[0],false]",
        "",
        "NOTHING",
        "",
        "ARRAY",
        "tvSortByValue [idc,[path],reversed]",
    ],
    [
        "b",
        "tvsortbyvalueall",
        "tvSortByValueAll",
        "Sorts all children of given item by value.",
        "_control tvSortByValueAll [[], true]",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "control tvSortByValueAll [[path], reversed]",
    ],
    [
        "b",
        "tvtext",
        "tvText",
        "Gets text from given path",
        "_control tvText [0]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control tvText [path]",
    ],
    [
        "u",
        "tvtext",
        "tvText",
        "Returns shown text in the item on given path. IDC means id of parent Tree View.",
        "tvText [101,[0]]",
        "",
        "STRING",
        "",
        "ARRAY",
        "tvText [idc, [path]]",
    ],
    [
        "b",
        "tvtooltip",
        "tvTooltip",
        "Returns the tooltip in the path of given ctree.",
        "_text = _control tvText [0]",
        "",
        "STRING",
        "CONTROL",
        "ARRAY",
        "control tvTooltip [path]",
    ],
    [
        "u",
        "tvtooltip",
        "tvTooltip",
        "Returns the tooltip of the item in the given path of the treeview with id idc of the topmost user dialog.",
        "_text = lbText [101, 0]",
        "",
        "STRING",
        "",
        "ARRAY",
        "tvTooltip [idc, path]",
    ],
    [
        "b",
        "tvvalue",
        "tvValue",
        "Reads value from given path.",
        "_control tvValue [0]",
        "",
        "SCALAR",
        "CONTROL",
        "ARRAY",
        "control tvValue [path]",
    ],
    [
        "u",
        "tvvalue",
        "tvValue",
        "Returns scalar data from item on given path. IDC means id of parent Tree View.",
        "tvValue [101,[0]]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "tvValue [idc, [path]]",
    ],
    [
        "u",
        "type",
        "type",
        "Returns the name of the task.",
        "",
        "",
        "STRING",
        "",
        "TASK",
        "type task",
    ],
    [
        "u",
        "type",
        "type",
        "Return type of given location.",
        "",
        "",
        "STRING",
        "",
        "LOCATION",
        "type location",
    ],
    [
        "u",
        "typename",
        "typeName",
        "Returns type-name of expression. Type is returned as string",
        "typeName 'hello'",
        "'string'",
        "STRING",
        "",
        "ANY",
        "typeName any",
    ],
    [
        "u",
        "typeof",
        "typeOf",
        "Returns the name of the type of the given object.",
        "typeOf player",
        "'SoldierWB'",
        "STRING",
        "",
        "OBJECT",
        "typeOf object",
    ],
    [
        "u",
        "uavcontrol",
        "UAVControl",
        "Get list with unit connected to vehicle and position in that vehicle.",
        "UAVControl cameraOn",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "UAVControl Uav",
    ],
    [
        "n",
        "uinamespace",
        "uiNamespace",
        "Returns the global namespace attached to user interface.",
        "",
        "",
        "NAMESPACE",
        "",
        "",
        "uiNamespace",
    ],
    [
        "u",
        "uisleep",
        "uiSleep",
        "Suspend execution of script for given uitime.",
        "uisleep 0.5",
        "",
        "NOTHING",
        "",
        "SCALAR",
        "uiSleep delay",
    ],
    [
        "u",
        "unassigncurator",
        "unassignCurator",
        "Unassign curator (will destroy both sides of connection).",
        "",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "unassignCurator curatorObj",
    ],
    [
        "b",
        "unassignitem",
        "unassignItem",
        "Unassign existing item to the soldier's containers. ",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit unassignItem item",
    ],
    [
        "u",
        "unassignteam",
        "unassignTeam",
        "Unassigns the vehicle (its commander unit) from his team. This is equal to vehicle assignTeam 'MAIN'.",
        "unassignTeam soldier2",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "unassignTeam vehicle",
    ],
    [
        "u",
        "unassignvehicle",
        "unassignVehicle",
        "The person is unassigned from the vehicle. If he is currently inside, the group leader will issue an order to disembark.",
        "unassignVehicle player",
        "",
        "NOTHING",
        "",
        "OBJECT",
        "unassignVehicle unit",
    ],
    [
        "u",
        "underwater",
        "underwater",
        "Return whether object is fully underwater.",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "underwater object",
    ],
    [
        "u",
        "uniform",
        "uniform",
        "Returns name of currently used uniform.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "uniform unit",
    ],
    [
        "u",
        "uniformcontainer",
        "uniformContainer",
        "Returns container of currently used uniform.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "uniformContainer unit",
    ],
    [
        "u",
        "uniformitems",
        "uniformItems",
        "Get array with all items from uniform.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "uniformItems unit",
    ],
    [
        "u",
        "uniformmagazines",
        "uniformMagazines",
        "Get array with all magazines from vest.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "uniformMagazines unit",
    ],
    [
        "u",
        "uniqueunititems",
        "uniqueUnitItems",
        "Returns accumulated inventory items of unit",
        "",
        "",
        "HASHMAP",
        "",
        "ARRAY,OBJECT",
        "uniqueUnitItems man",
    ],
    [
        "u",
        "unitaddons",
        "unitAddons",
        "Get list with addons which unitClass belongs to.",
        "unitAddons unitClass",
        "",
        "ARRAY",
        "",
        "STRING",
        "unitAddons unitClass",
    ],
    [
        "u",
        "unitaimposition",
        "unitAimPosition",
        "Returns future unit aiming position.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "unitAimPosition object",
    ],
    [
        "u",
        "unitaimpositionvisual",
        "unitAimPositionVisual",
        "Returns actual unit aiming position (also used to draw group markers).",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "unitAimPositionVisual object",
    ],
    [
        "u",
        "unitbackpack",
        "unitBackpack",
        "Returns unit's backpack.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "unitBackpack unit",
    ],
    [
        "u",
        "unitcombatmode",
        "unitCombatMode",
        "Returns the combat mode of the given unit ('BLUE','GREEN','YELLOW' or 'RED').",
        "combatMode player",
        "",
        "STRING",
        "",
        "OBJECT",
        "unitCombatMode unit",
    ],
    [
        "u",
        "unitisuav",
        "unitIsUAV",
        "Returns true if the unit type is UAV - coresponding to transport param 'isUAV').",
        "",
        "",
        "BOOL",
        "",
        "OBJECT",
        "unitIsUAV object",
    ],
    [
        "u",
        "unitpos",
        "unitPos",
        "Return the unit position rules.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "unitPos person",
    ],
    [
        "u",
        "unitready",
        "unitReady",
        "Checks whether the unit is ready. A unit is busy when it's given an order like 'move', until the command is finished.",
        "unitReady player",
        "",
        "BOOL",
        "",
        "ARRAY,OBJECT",
        "unitReady unit",
    ],
    [
        "u",
        "unitrecoilcoefficient",
        "unitRecoilCoefficient",
        "Returns unit's custom recoil coefficient.",
        " coef = unitRecoilCoefficient player",
        "",
        "SCALAR",
        "",
        "OBJECT",
        "unitRecoilCoefficient soldier",
    ],
    [
        "u",
        "units",
        "units",
        "Returns an array with all the units in the group.",
        "player in units group player",
        "",
        "ARRAY",
        "",
        "GROUP",
        "units grp",
    ],
    [
        "u",
        "units",
        "units",
        "Returns an array with all the units in the group of the given object. For a destroyed object an empty array is returned.",
        "player in units player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "units unit",
    ],
    [
        "u",
        "units",
        "units",
        "Returns all units on a specific side.",
        "units west",
        "",
        "ANY",
        "",
        "SIDE",
        "units side",
    ],
    [
        "b",
        "unitsbelowheight",
        "unitsBelowHeight",
        "Return units in group below passed height.",
        "group player unitsBelowHeight 50",
        "",
        "ARRAY",
        "GROUP",
        "SCALAR",
        "group unitsBelowHeight height",
    ],
    [
        "b",
        "unitsbelowheight",
        "unitsBelowHeight",
        "Return units below passed height.",
        "units group player unitsBelowHeight 50",
        "",
        "ARRAY",
        "ARRAY",
        "SCALAR",
        "array unitsBelowHeight height",
    ],
    [
        "b",
        "unitturret",
        "unitTurret",
        "Returns the turret path the vehicle gunner is in.",
        "_turretPath = tank unitTurret player;",
        "",
        "ARRAY",
        "OBJECT",
        "OBJECT",
        "vehicle unitTurret gunner",
    ],
    [
        "b",
        "unlinkitem",
        "unlinkItem",
        "Unlink and remove existing linked item from soldier",
        "",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit unlinkItem item",
    ],
    [
        "u",
        "unlockachievement",
        "unlockAchievement",
        "Unlock the given achievement.",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "unlockAchievement name",
    ],
    [
        "b",
        "unregistertask",
        "unregisterTask",
        "Unregister a task type.",
        "",
        "",
        "BOOL",
        "TEAM_MEMBER",
        "STRING",
        "teamMember unregisterTask name",
    ],
    [
        "b",
        "updatedrawicon",
        "updateDrawIcon",
        "Updates the icon to be shown in 2D editor for the specified editor object. If maintain size is false, icon will not scale depending on the scale of the map. If maintain size is a number, the icon will maintain size if map scale is below that number.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map updateDrawIcon [object, string identifier, color, offset, width, height, maintain size?, angle, shadow]",
    ],
    [
        "b",
        "updatemenuitem",
        "updateMenuItem",
        "Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.",
        "",
        "",
        "NOTHING",
        "CONTROL",
        "ARRAY",
        "map updateMenuItem [menu item index,text,command]",
    ],
    [
        "u",
        "updateobjecttree",
        "updateObjectTree",
        "Update the editor object tree.",
        "",
        "",
        "NOTHING",
        "",
        "CONTROL",
        "updateObjectTree map",
    ],
    [
        "u",
        "useaiopermapobstructiontest",
        "useAIOperMapObstructionTest",
        "Enable or disable secondary obstruction test on road paths",
        "useAIOperMapObstructionTest true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "useAIOperMapObstructionTest true/false",
    ],
    [
        "u",
        "useaisteeringcomponent",
        "useAISteeringComponent",
        "Enable or disable new ai driving routines.",
        "useAISteeringComponent true",
        "",
        "NOTHING",
        "",
        "BOOL",
        "useAISteeringComponent true/false",
    ],
    [
        "b",
        "useaudiotimeformoves",
        "useAudioTimeForMoves",
        "Switch between elapsed gamet time and audio time being used as animation timer. Used for audio/animation synchronization.",
        "player useAudioTimeForMoves true",
        "",
        "NOTHING",
        "OBJECT",
        "BOOL",
        "soldier useAudioTimeForMoves toggle",
    ],
    [
        "n",
        "userinputdisabled",
        "userInputDisabled",
        "Returns true when all user input is disabled.",
        "disabled = userInputDisabled;",
        "",
        "BOOL",
        "",
        "",
        "userInputDisabled",
    ],
    [
        "u",
        "values",
        "values",
        "Returns all values stored in the HashMap.",
        "values _hashMap",
        "[1337, 'string', true, {hint 'hello';}]",
        "ARRAY",
        "",
        "HASHMAP",
        "values HashMap",
    ],
    [
        "b",
        "vectoradd",
        "vectorAdd",
        "Adds two 3D vectors",
        "vector1 vectorAdd vector2",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "vector vectorAdd vector",
    ],
    [
        "b",
        "vectorcos",
        "vectorCos",
        "Cosine of angle between 2 vectors",
        "vector1 vectorCos vector2",
        "",
        "SCALAR",
        "ARRAY",
        "ARRAY",
        "vector vectorCos vector",
    ],
    [
        "b",
        "vectorcrossproduct",
        "vectorCrossProduct",
        "Cross product of two 3D vectors",
        "left vectorCrossProduct right",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "vector vectorCrossProduct vector",
    ],
    [
        "b",
        "vectordiff",
        "vectorDiff",
        "Subtracts right 3D vector from left",
        "left vectorDiff right",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "vector vectorDiff vector",
    ],
    [
        "u",
        "vectordir",
        "vectorDir",
        "Return object's direction vector in world coordinates as [x, z, y].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "vectorDir obj",
    ],
    [
        "u",
        "vectordirvisual",
        "vectorDirVisual",
        "Return object's direction vector in world coordinates as [x, z, y].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "vectorDirVisual obj",
    ],
    [
        "b",
        "vectordistance",
        "vectorDistance",
        "Squared distance between 2 vectors",
        "vector1 vectorDistance vector2",
        "",
        "SCALAR",
        "ARRAY",
        "ARRAY",
        "vector vectorDistance vector",
    ],
    [
        "b",
        "vectordistancesqr",
        "vectorDistanceSqr",
        "Squared distance between 2 vectors",
        "vector1 vectorDistanceSqr vector2",
        "",
        "SCALAR",
        "ARRAY",
        "ARRAY",
        "vector vectorDistanceSqr vector",
    ],
    [
        "b",
        "vectordotproduct",
        "vectorDotProduct",
        "Dot product of two 3D vectors",
        "vector1 vectorDotProduct vector2",
        "",
        "SCALAR",
        "ARRAY",
        "ARRAY",
        "vector vectorDotProduct vector",
    ],
    [
        "b",
        "vectorfromto",
        "vectorFromTo",
        "Unit vector equal to direction from left to right vector",
        "vector1 vectorFromTo vector2",
        "",
        "ARRAY",
        "ARRAY",
        "ARRAY",
        "vector vectorFromTo vector",
    ],
    [
        "u",
        "vectorlinearconversion",
        "vectorLinearConversion",
        "Returns lerped vector between given 2 points",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "vectorLinearConversion [min, max, value, vector3Min, vector3Max, clamp]",
    ],
    [
        "u",
        "vectormagnitude",
        "vectorMagnitude",
        "Magnitude of a vector",
        "vectorMagnitude [0,8,7]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "vectorMagnitude array",
    ],
    [
        "u",
        "vectormagnitudesqr",
        "vectorMagnitudeSqr",
        "Squared magnitude of a vector",
        "vectorMagnitudeSqr [4,1,3]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "vectorMagnitudeSqr array",
    ],
    [
        "b",
        "vectormodeltoworld",
        "vectorModelToWorld",
        "Converts direction from object model space to world space. ",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object vectorModelToWorld modelDir",
    ],
    [
        "b",
        "vectormodeltoworldvisual",
        "vectorModelToWorldVisual",
        "Converts direction from object model space to world space in render time. ",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object vectorModelToWorldVisual modelDir",
    ],
    [
        "b",
        "vectormultiply",
        "vectorMultiply",
        "Multiplies vector by a scalar",
        "vector1 vectorMultiply 3.14",
        "",
        "ARRAY",
        "ARRAY",
        "SCALAR",
        "vector vectorMultiply scalar",
    ],
    [
        "u",
        "vectornormalized",
        "vectorNormalized",
        "Normalized vector (unit vector), if original vector is zero, result is a zero vector as well",
        "vectorNormalized [4,1,3]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "vectorNormalized array",
    ],
    [
        "u",
        "vectorup",
        "vectorUp",
        "Return object's up vector in world coordinates as [x, z, y].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "vectorUp obj",
    ],
    [
        "u",
        "vectorupvisual",
        "vectorUpVisual",
        "Return object's up vector in world coordinates as [x, z, y].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "vectorUpVisual obj",
    ],
    [
        "b",
        "vectorworldtomodel",
        "vectorWorldToModel",
        "Converts direction from world space to object model space.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object vectorWorldToModel worldDir",
    ],
    [
        "b",
        "vectorworldtomodelvisual",
        "vectorWorldToModelVisual",
        "Converts direction from world space to object model space  in render time.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object vectorWorldToModelVisual worldDir",
    ],
    [
        "u",
        "vehicle",
        "vehicle",
        "Returns the vehicle in which the given unit is mounted. If there is none, the unit is returned.",
        "vehicle player != player",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "vehicle unit",
    ],
    [
        "u",
        "vehiclecargoenabled",
        "vehicleCargoEnabled",
        "Check if the vehicle has enabled transporting other vehicles or not.",
        "vehicleCargoEnabled veh",
        "",
        "BOOL",
        "",
        "OBJECT",
        "vehicleCargoEnabled vehicle",
    ],
    [
        "b",
        "vehiclechat",
        "vehicleChat",
        "Types text to the vehicle radio channel\nNote: this function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on all of them.",
        "soldierOne vehicleChat 'Show this text'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit vehicleChat chatText",
    ],
    [
        "u",
        "vehiclemoveinfo",
        "vehicleMoveInfo",
        "Returns array with vehicle move info in format [moveMode, turnMode]",
        "vehicleMoveInfo tank",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "vehicleMoveInfo vehicle",
    ],
    [
        "b",
        "vehicleradio",
        "vehicleRadio",
        "Sends the message to the vehicle radio channel. The message is defined in the description.ext file or radio protocol.",
        "soldierOne vehicleRadio 'messageOne'",
        "",
        "NOTHING",
        "OBJECT",
        "STRING",
        "unit vehicleRadio radioName",
    ],
    [
        "u",
        "vehiclereceiveremotetargets",
        "vehicleReceiveRemoteTargets",
        "Returns vehicle receives radar targets from center.",
        "value = vehicleReportRemoteTargets vehicle",
        "",
        "BOOL",
        "",
        "OBJECT",
        "vehicleReceiveRemoteTargets vehicle",
    ],
    [
        "u",
        "vehiclereportownposition",
        "vehicleReportOwnPosition",
        "Returns vehicle reports own radar position to center.",
        "value = vehicleReportOwnPosition vehicle",
        "",
        "BOOL",
        "",
        "OBJECT",
        "vehicleReportOwnPosition vehicle",
    ],
    [
        "u",
        "vehiclereportremotetargets",
        "vehicleReportRemoteTargets",
        "Returns true if vehicle reports radar targets to center.",
        "value = vehicleReportRemoteTargets vehicle",
        "",
        "BOOL",
        "",
        "OBJECT",
        "vehicleReportRemoteTargets vehicle",
    ],
    [
        "n",
        "vehicles",
        "vehicles",
        "Return a list of vehicles in the current mission.",
        "_vehicles = vehicles",
        "",
        "ARRAY",
        "",
        "",
        "vehicles",
    ],
    [
        "u",
        "vehiclevarname",
        "vehicleVarName",
        "Returns the name of the variable which contains a reference to this object.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "vehicleVarName object",
    ],
    [
        "u",
        "velocity",
        "velocity",
        "Returns the velocity (speed vector) of the vehicle as an array with format [x, z, y].",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "velocity vehicle",
    ],
    [
        "u",
        "velocitymodelspace",
        "velocityModelSpace",
        "Returns the velocity (speed vector) of the vehicle as an array with format [x, z, y]. Vector is in model space",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "velocityModelSpace vehicle",
    ],
    [
        "u",
        "verifysignature",
        "verifySignature",
        "Check if file is signed by any key present in game keys folders. Note: On client, it does not check against the keys accepted by server.",
        "",
        "",
        "BOOL",
        "",
        "STRING",
        "verifySignature filename",
    ],
    [
        "u",
        "vest",
        "vest",
        "Returns name of currently used vest.",
        "",
        "",
        "STRING",
        "",
        "OBJECT",
        "vest unit",
    ],
    [
        "u",
        "vestcontainer",
        "vestContainer",
        "Returns container of currently used vest.",
        "",
        "",
        "OBJECT",
        "",
        "OBJECT",
        "vestContainer unit",
    ],
    [
        "u",
        "vestitems",
        "vestItems",
        "Get array with all items from vest.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "vestItems unit",
    ],
    [
        "u",
        "vestmagazines",
        "vestMagazines",
        "Get array with all magazines from vest.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "vestMagazines unit",
    ],
    [
        "n",
        "viewdistance",
        "viewDistance",
        "Returns the rendering distance.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "viewDistance",
    ],
    [
        "n",
        "visiblecompass",
        "visibleCompass",
        "Checks whether the player has the compass opened and visible.",
        "",
        "",
        "BOOL",
        "",
        "",
        "visibleCompass",
    ],
    [
        "n",
        "visiblegps",
        "visibleGps",
        "Checks whether the player has the GPS receiver opened and visible.",
        "",
        "",
        "BOOL",
        "",
        "",
        "visibleGps",
    ],
    [
        "n",
        "visiblemap",
        "visibleMap",
        "Returns true if the main map is shown (active).",
        "",
        "",
        "BOOL",
        "",
        "",
        "visibleMap",
    ],
    [
        "u",
        "visibleposition",
        "visiblePosition",
        "Returns the object rendered position in format <ar>Position</ar>.",
        "visiblePosition player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "visiblePosition object",
    ],
    [
        "u",
        "visiblepositionasl",
        "visiblePositionASL",
        "Returns the object rendered position in format <ar>PositionASL</ar>.",
        "visiblePositionASL player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "visiblePositionASL object",
    ],
    [
        "n",
        "visiblescoretable",
        "visibleScoretable",
        "Checks whether the scoretable is visible.",
        "",
        "",
        "BOOL",
        "",
        "",
        "visibleScoretable",
    ],
    [
        "n",
        "visiblewatch",
        "visibleWatch",
        "Checks whether the player has the watch opened and visible.",
        "",
        "",
        "BOOL",
        "",
        "",
        "visibleWatch",
    ],
    [
        "u",
        "waituntil",
        "waitUntil",
        "Suspend execution of script until condition is satisfied.",
        "_i = 0; waitUntil {_i = _i + 1; _i >= 100}",
        "",
        "NOTHING",
        "",
        "CODE",
        "waitUntil condition",
    ],
    [
        "n",
        "waves",
        "waves",
        "Return waves value.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "waves",
    ],
    [
        "u",
        "waypointattachedobject",
        "waypointAttachedObject",
        "Gets the object attached to the waypoint.",
        "waypointAttachedObject [groupOne, 1]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "waypointAttachedObject waypoint",
    ],
    [
        "u",
        "waypointattachedvehicle",
        "waypointAttachedVehicle",
        "Gets the vehicle attached to the waypoint.",
        "waypointAttachedVehicle [groupOne, 1]",
        "",
        "OBJECT",
        "",
        "ARRAY",
        "waypointAttachedVehicle waypoint",
    ],
    [
        "b",
        "waypointattachobject",
        "waypointAttachObject",
        "Attaches a static object to the given waypoint.",
        "[grp, 2] waypointAttachObject 1234",
        "",
        "NOTHING",
        "ARRAY",
        "SCALAR,OBJECT",
        "waypoint waypointAttachObject idStatic or object",
    ],
    [
        "b",
        "waypointattachvehicle",
        "waypointAttachVehicle",
        "Attaches a vehicle to the given waypoint.",
        "[grp, 2] waypointAttachVehicle vehicle player",
        "",
        "NOTHING",
        "ARRAY",
        "OBJECT",
        "waypoint waypointAttachVehicle vehicle",
    ],
    [
        "u",
        "waypointbehaviour",
        "waypointBehaviour",
        "Gets the waypoint behavior.",
        "waypointBehaviour [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointBehaviour waypoint",
    ],
    [
        "u",
        "waypointcombatmode",
        "waypointCombatMode",
        "Gets the waypoint combat mode.",
        "waypointCombatMode [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointCombatMode waypoint",
    ],
    [
        "u",
        "waypointcompletionradius",
        "waypointCompletionRadius",
        "Gets the radius around the waypoint where is the waypoint completed.",
        "_radius = waypointCompletionRadius [groupOne, 1]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "waypointCompletionRadius waypoint",
    ],
    [
        "u",
        "waypointdescription",
        "waypointDescription",
        "Gets the waypoint description.",
        "waypointDescription [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointDescription waypoint",
    ],
    [
        "u",
        "waypointforcebehaviour",
        "waypointForceBehaviour",
        "Returns true if the waypoint behavior is forced.",
        "waypointForceBehaviour [groupOne, 1]",
        "",
        "BOOL",
        "",
        "ARRAY",
        "waypointForceBehaviour waypoint",
    ],
    [
        "u",
        "waypointformation",
        "waypointFormation",
        "Gets the waypoint formation.",
        "waypointFormation [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointFormation waypoint",
    ],
    [
        "u",
        "waypointhouseposition",
        "waypointHousePosition",
        "Gets the house position assigned to the waypoint.",
        "waypointHousePosition [groupOne, 1]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "waypointHousePosition waypoint",
    ],
    [
        "u",
        "waypointloiteraltitude",
        "waypointLoiterAltitude",
        "Gets the waypoint loiter altitude. Waypoint uses format <ar>Waypoint</ar>\n",
        "waypointLoiterAltitude [groupOne, 1]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "waypointLoiterAltitude waypoint",
    ],
    [
        "u",
        "waypointloiterradius",
        "waypointLoiterRadius",
        "Gets the waypoint loiter radius. Waypoint uses format <ar>Waypoint</ar>\n",
        "waypointLoiterRadius [groupOne, 1]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "waypointLoiterRadius waypoint",
    ],
    [
        "u",
        "waypointloitertype",
        "waypointLoiterType",
        "Gets the waypoint loiter type. Waypoint uses format <ar>Waypoint</ar>\n",
        "waypointLoiterType [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointLoiterType waypoint",
    ],
    [
        "u",
        "waypointname",
        "waypointName",
        "Gets the waypoint name.",
        "waypointName [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointName waypoint",
    ],
    [
        "u",
        "waypointposition",
        "waypointPosition",
        "Gets the waypoint position. Waypoint uses format <ar>Waypoint</ar>\nNote: this function is identical to <f>getWaypointPosition</f>.",
        "waypointPosition [groupOne, 1]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "waypointPosition waypoint",
    ],
    [
        "u",
        "waypoints",
        "waypoints",
        "Return the list of waypoints for given group.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT,GROUP",
        "waypoints group",
    ],
    [
        "u",
        "waypointscript",
        "waypointScript",
        "Gets the waypoint script.",
        "waypointScript [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointScript waypoint",
    ],
    [
        "u",
        "waypointsenableduav",
        "waypointsEnabledUAV",
        "Returns if player can set waypoints for given UAV in AV terminal",
        "waypointsEnabledUAV vehicle",
        "",
        "BOOL",
        "",
        "OBJECT",
        "waypointsEnabledUAV vehicle",
    ],
    [
        "u",
        "waypointshow",
        "waypointShow",
        "Gets the waypoint show/hide status.",
        "waypointShow [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointShow waypoint",
    ],
    [
        "u",
        "waypointspeed",
        "waypointSpeed",
        "Gets the waypoint speed.",
        "waypointSpeed [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointSpeed waypoint",
    ],
    [
        "u",
        "waypointstatements",
        "waypointStatements",
        "Gets the waypoint statements.",
        "waypointStatements [groupOne, 1]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "waypointStatements waypoint",
    ],
    [
        "u",
        "waypointtimeout",
        "waypointTimeout",
        "Gets the waypoint timeout values.",
        "waypointTimeout [groupOne, 1]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "waypointTimeout waypoint",
    ],
    [
        "u",
        "waypointtimeoutcurrent",
        "waypointTimeoutCurrent",
        "Gets the current waypoint timeout or -1 if countdown is not in progress.",
        "waypointTimeoutCurrent groupOne",
        "",
        "SCALAR",
        "",
        "GROUP",
        "waypointTimeoutCurrent waypoint",
    ],
    [
        "u",
        "waypointtype",
        "waypointType",
        "Gets the waypoint type.",
        "waypointType [groupOne, 1]",
        "",
        "STRING",
        "",
        "ARRAY",
        "waypointType waypoint",
    ],
    [
        "u",
        "waypointvisible",
        "waypointVisible",
        "Gets waypoint visibility.",
        "visible = waypointVisible [groupOne, 1]",
        "",
        "SCALAR",
        "",
        "ARRAY",
        "waypointVisible waypoint",
    ],
    [
        "b",
        "weaponaccessories",
        "weaponAccessories",
        "Get array with all items linked to a given weapon.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "vehicle weaponAccessories weapon",
    ],
    [
        "b",
        "weaponaccessoriescargo",
        "weaponAccessoriesCargo",
        "Show list of attachments linked to a given weapon",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "vehicle weaponAccessoriesCargo [weaponId,creatorId]",
    ],
    [
        "u",
        "weaponcargo",
        "weaponCargo",
        "Get array with weapons from ammo box (or any general weapon holder container). ",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "weaponCargo box",
    ],
    [
        "b",
        "weapondirection",
        "weaponDirection",
        "Returns direction where is given weapon aiming.",
        "_dir = _vehicle weaponDirection 'M16'",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "vehicle weaponDirection weaponName",
    ],
    [
        "u",
        "weaponinertia",
        "weaponInertia",
        "Returns current rate of how much the weapon view is distorted because of quick aiming",
        "weaponInertia player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "weaponInertia soldier",
    ],
    [
        "u",
        "weaponlowered",
        "weaponLowered",
        "True if given soldier's weapon is lowered.",
        "weaponLowered player",
        "",
        "BOOL",
        "",
        "OBJECT",
        "weaponLowered soldier",
    ],
    [
        "b",
        "weaponreloadingtime",
        "weaponReloadingTime",
        "Returns current phase of weapon reloading from 0 to 1, where 0 is the end of loading procedure. -1 if not available",
        "_reloadPhase = _vehicle weaponReloadingTime [_gunner, currentMuzzle _gunner]",
        "",
        "SCALAR",
        "OBJECT",
        "ARRAY",
        "vehicle weaponReloadingTime [gunner, muzzleName]",
    ],
    [
        "u",
        "weapons",
        "weapons",
        "Returns an array of names of all the vehicle's weapons.",
        "weapons player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "weapons vehicle",
    ],
    [
        "b",
        "weaponsinfo",
        "weaponsInfo",
        "Returns extended info of entities weapons",
        "player weaponsInfo ['', true]",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "entity weaponsInfo [params...]",
    ],
    [
        "u",
        "weaponsitems",
        "weaponsItems",
        "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons like [['arifle_MX_ACO_pointer_F','','acc_pointer_IR','optic_Aco',['30Rnd_65x39_caseless_mag',29],[],]]",
        "weaponsItems player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "weaponsItems vehicle",
    ],
    [
        "u",
        "weaponsitemscargo",
        "weaponsItemsCargo",
        "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons like [['arifle_MX_ACO_pointer_F','','acc_pointer_IR','optic_Aco',['30Rnd_65x39_caseless_mag',29],[],]]",
        "weaponsItemsCargo vehicle player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "weaponsItemsCargo vehicle",
    ],
    [
        "b",
        "weaponstate",
        "weaponState",
        "Returns the state of given weapon as an array of strings in the follow format [WeaponName, MuzzleName, ModeName, MagazineName, AmmoCount, RoundReloadPhase, MagazineReloadPhase]",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "STRING",
        "unit weaponState weaponOrMuzzle",
    ],
    [
        "u",
        "weaponstate",
        "weaponState",
        "Returns the current weapon state as an array of strings in the follow format [WeaponName, MuzzleName, ModeName, MagazineName, AmmoCount, RoundReloadPhase, MagazineReloadPhase]",
        "weaponState player",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "weaponState unit",
    ],
    [
        "u",
        "weaponstate",
        "weaponState",
        "Returns the current weapon state as an array of strings in the follow format [WeaponName, MuzzleName, ModeName, MagazineName, AmmoCount, RoundReloadPhase, MagazineReloadPhase]",
        "weaponState [vehicle player, [0]]",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "weaponState [veh, turret path, (weapon), (muzzle), (firemode)]",
    ],
    [
        "b",
        "weaponsturret",
        "weaponsTurret",
        "Returns all weapons of given turret. Use turret path [-1] for drivers turret.",
        "vehicle player weaponsTurret [0,0]",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "vehicle weaponsTurret turretPath",
    ],
    [
        "u",
        "weightrtd",
        "weightRTD",
        "Returns weight of helicopter.",
        " [fuselage weight, crew weight, fuel weight, custom weight, weapons weight]",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "weightRTD helicopter",
    ],
    ["n", "west", "west", "The West side.", "", "", "SIDE", "", "", "west"],
    [
        "u",
        "wfsidetext",
        "WFSideText",
        "Returns the unlocalized text value of a side as: East, West, Resistance, Civilian, or Unknown.",
        "WFSideText West",
        "",
        "STRING",
        "",
        "SIDE",
        "WFSideText side",
    ],
    [
        "u",
        "wfsidetext",
        "WFSideText",
        "Returns the unlocalized text value of a object's side as: East, West, Resistance, Civilian, or Unknown.",
        "WFSideText player",
        "",
        "STRING",
        "",
        "OBJECT",
        "WFSideText object",
    ],
    [
        "u",
        "wfsidetext",
        "WFSideText",
        "Returns the unlocalized text value of a group's side as: East, West, Resistance, Civilian, or Unknown.",
        "WFSideText group player",
        "",
        "STRING",
        "",
        "GROUP",
        "WFSideText group",
    ],
    [
        "u",
        "while",
        "while",
        "The first part of the while construct.",
        "while 'x<10' do {x=x+1}",
        "",
        "WHILE",
        "",
        "CODE",
        "while condition",
    ],
    [
        "n",
        "wind",
        "wind",
        "Return the current wind vector.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "wind",
    ],
    [
        "n",
        "winddir",
        "windDir",
        "Return the current wind azimut.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "windDir",
    ],
    [
        "n",
        "windrtd",
        "windRTD",
        "Returns wind strength and direction.",
        "",
        "",
        "ARRAY",
        "",
        "",
        "windRTD",
    ],
    [
        "n",
        "windstr",
        "windStr",
        "Return the current wind strength.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "windStr",
    ],
    [
        "u",
        "wingsforcesrtd",
        "wingsForcesRTD",
        "Returns force produced by wings.",
        "",
        "",
        "ARRAY",
        "",
        "OBJECT",
        "wingsForcesRTD RTD_helicopter",
    ],
    [
        "u",
        "with",
        "with",
        "The first part of the with construct.",
        "with missionNamespace do {global=global+1}",
        "",
        "WITH",
        "",
        "NAMESPACE",
        "with namespace",
    ],
    [
        "n",
        "worldname",
        "worldName",
        "Return the name of the currently loaded world.",
        "",
        "",
        "STRING",
        "",
        "",
        "worldName",
    ],
    [
        "n",
        "worldsize",
        "worldSize",
        "Return the name of the currently loaded world.",
        "",
        "",
        "SCALAR",
        "",
        "",
        "worldSize",
    ],
    [
        "b",
        "worldtomodel",
        "worldToModel",
        "Converts position from world space to object model space.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object worldToModel worldPos",
    ],
    [
        "b",
        "worldtomodelvisual",
        "worldToModelVisual",
        "Converts position from world space to object model space in render time.",
        "",
        "",
        "ARRAY",
        "OBJECT",
        "ARRAY",
        "object worldToModelVisual worldPos",
    ],
    [
        "u",
        "worldtoscreen",
        "worldToScreen",
        "Converts position in world space into screen (UI) space.",
        "",
        "",
        "ARRAY",
        "",
        "ARRAY",
        "worldToScreen position",
    ],
    [
        "b",
        "||",
        "||",
        "a or b",
        "!alive player || !alive leader player",
        "",
        "BOOL",
        "BOOL",
        "BOOL",
        "a || b",
    ],
    [
        "b",
        "||",
        "||",
        "a or b, b evaluated only when a is false",
        "!alive player || !alive leader player",
        "",
        "BOOL",
        "BOOL",
        "CODE",
        "a || b",
    ],
];
