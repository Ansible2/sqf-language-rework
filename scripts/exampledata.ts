const thing =
    "{{RV|type=command |game1= ofp |version1= 1.00 |game2= ofpe |version2= 1.00 |game3= arma1 |version3= 1.00 |game4= arma2 |version4= 1.00 |game5= arma2oa |version5= 1.50 |game6= tkoh |version6= 1.00 |game7= arma3 |version7= 0.50 |gr1= Strings |gr2= Arrays |gr3= Locations |gr4= HashMap |gr5= Unit Control |descr= Checks whether value is in array, unit is in vehicle, position is inside location or ANSI string is part of other ANSI string. If Unicode support is desired, see [[forceUnicode]]. {{Feature | Informative | [[String]] comparison is case-sensitive (see Examples '''2''' and '''6''').}} |s1= value [[in]] array |p1= value: [[Anything]] - Any value (cannot match [[Array]] before {{arma3}}) |p2= array: [[Array]] - Array of values |r1= [[Boolean]] |s2= unit [[in]] vehicle |p21= unit: [[Object]] - Entity person |p22= vehicle: [[Object]] - Entity vehicle |r2= [[Boolean]] |s3= position [[in]] location |s3since= arma3 0.50 |p41= position: [[Array]] - Format [[Position#Introduction|Position2D]] or [[Position#Introduction|Position3D]] |p42= location: [[Location]] |r3= [[Boolean]] |s4= needle [[in]] haystack |s4since= arma3 1.96 |p61= needle: [[String]] - String to search '''for''' |p62= haystack: [[String]] - String to search '''in''' |r4= [[Boolean]] |s5= key [[in]] hashMap |s5since= arma3 2.02 |p81= key: [[HashMapKey]] |p82= hashMap : [[HashMap]] |r5= [[Boolean]] |x1= <sqf>1 in [0, 1, 2]; // true</sqf> |x2= <sqf>private _myArray = [\"Aaa\", \"AAa\", \"AAA\"]; \"aaa\" in _myArray; // false \"AAa\" in _myArray; // true // Case-insensitive alternatives: _myArray findIf { _x == \"aaa\"; } != -1; // true ({ if (_x == \"aaa\") exitWith { _forEachIndex }; -1 } forEach _myArray) != -1; // true, less performant but valid before the introduction of the findIf command { if (_x == \"aaa\") exitWith { 1 } } count _myArray > 0; // true { _x == \"aaa\"; } count _myArray > 0; // true, worst performance, only option available in OFP</sqf> |x3= <sqf>[1,2,3] in [[1,2,3], [4,5,6]]; // true - Arma 3 only</sqf> |x4= <sqf>private _isInCar = player in Car;</sqf> |x5= <sqf>private _isInside = [1000,2000,0] in MyLocation;</sqf> |x6= <sqf>private _isInString = \"foo\" in \"foobar\"; // true _isInString = \"Foo\" in \"foobar\"; // false</sqf> |x7= <sqf>private _onFoot = _unit in _unit;</sqf> Other options: <sqf>private _onFoot = vehicle _unit == _unit;</sqf> <sqf>private _onFoot = isNull objectParent _unit;</sqf> |seealso= [[inPolygon]] [[inArea]] [[find]] [[findIf]] [[toArray]] [[forceUnicode]] }} <dl class=\"command_description\"> <dt></dt> <dd class=\"notedate\">Posted on October 8, 2019 - 21:08 (UTC)</dd> <dt class=\"note\">[[User:Lou Montana|Lou Montana]]</dt> <dd class=\"note\">''From a description note:''<br> ''<unit>'' [[in]] ''<vehicle>'' literally does this: {{hl|c= [[vehicle]] <unit> {{=}}{{=}} <vehicle>}}. If ''<vehicle>'' is the same as ''<unit>'' the expression will return [[true]] for when the ''<unit>'' is on foot and [[false]] for when ''<unit>'' is in vehicle . </dd> </dl>";

const thing2 = `{{TabView |selected= 2 |title1= {{TabView/GameTitle|ofp|tkoh}} |content1= {{RV|type=command |game1= ofp |version1= 1.10 |game2= arma1 |version2= 1.00 |game3= arma2 |version3= 1.00 |game4= arma2oa |version4= 1.50 |game5= tkoh |version5= 1.00 |gr1= Interaction |arg= global |eff= local |descr= Adds an entry to the action menu of an object. The action can only be activated when in proximity to the object '''and''' looking at it. Adding an action to the player makes that action available to the player at all times. For event handling of user interaction see [[inGameUISetEventHandler]]. |mp= The command will be ignored on dedicated servers, probably because no UI exists. |pr= {{Feature|ofp|Due to a bug in {{ofp}}, actions added ''via'' [[addAction]] do not get properly updated after mounting vehicles. When several actions are available while mounting a vehicle and it drives away from the actions' position, they will still be shown in the menu until dismounting/boarding the vehicle again.}} |s1= object [[addAction]] [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, positionInModel, radius, radiusView, showIn3D, available, textDefault, textToolTip] |p1= '''object''': [[Object]] - Unit, vehicle or static object. '''No [[createAgent|agents]]!''' |p2= '''title''': [[String]] - The action name which is displayed in the action menu, may contain [[Structured Text]]. Because of that '''<''' and '''>''' symbols will be interpreted as opening and closing XML tags. To avoid this use {{hl|&amp;lt;}} for '''&lt;''' and {{hl|&amp;gt;}} for '''&gt;'''. The title text appearance can be changed with [[setUserActionText]] |p3= '''script''': [[String]] - path to the script file, relative to the mission folder. It will run in [[Scheduler#Scheduled Environment|scheduled environment]], i.e. it is ok to use [[sleep]]. Parameters array passed to the script upon activation in ''[[Magic Variables#this|_this]]'' variable is: <sqf>params ["_target", "_caller", "_actionId", "_arguments"];</sqf> * '''target''': [[Object]] - the object which the action is assigned to * '''caller''': [[Object]] - the unit that activated the action * '''actionID''': [[Number]] - activated action's ID (same as [[addAction]]'s return value) * '''arguments''': [[Anything]] - arguments given to the script if you are using the extended syntax |p4= '''arguments''': [[Anything]] - (Optional, default [[nil]]) arguments to pass to the script. Accessible with <sqf inline>_this select 3</sqf> inside the script. If [[Array]] is used as an argument for example, its first element reference would be <sqf inline>_this select 3 select 0</sqf> |p4since= arma1 1.00 |p5= '''priority''': [[Number]] - (Optional, default 1.5) Priority value of the action. Actions will be arranged in descending order according to this value. Every game action has a preset priority value. Value can be negative or decimal fraction. Actions with same values will be arranged in order which they were made, newest at the bottom. The bigger the number the higher the action will be positioned on the menu. Typical range is 0 to 6 |p5since= arma1 1.00 |p6= '''showWindow''': [[Boolean]] - (Optional, default [[true]]) If set to [[true]], players see "Titletext" at mid-lower screen, as they approach the object. Only the title text for the action with highest priority and ''showWindow'' set to [[true]] will be shown |p6since= arma1 1.00 |p7= '''hideOnUse''': [[Boolean]] - (Optional, default [[true]]) If set to [[true]], it will hide the action menu after selecting it. If set to [[false]], it will leave the action menu open and visible after selecting the action, leaving the same action highlighted, for the purpose of allowing you to re-select that same action quickly, or to select another action |p7since= arma1 1.00 |p8= '''shortcut''': [[String]] - (Optional, default "") One of the [[:Category:Key Actions|key names]] defined in bin.pbo (e.g. "moveForward"). Adding available shortcut will bind corresponding keyboard key to this action. Shortcut availability can be tested with [[inputAction]] command |p8since= arma1 1.00 |p9= '''condition''': [[String]] - (Optional, default "true") Expression that must return [[true]] for the action to be shown. '''Special variables''' passed to the script code are: * ''_target'': [[Object]] - The object to which action is attached or, if the object is a unit inside of vehicle, the vehicle * ''_this'': [[Object]] - Caller person to whom the action is shown (or not shown if ''condition'' returns [[false]]) * ''_originalTarget'': [[Object]] - The original object to which the action is attached, regardless if the object/unit is in a vehicle or not {{Feature|important| * ''condition'' is evaluated on each frame in [[Scheduler#Unscheduled Environment|unscheduled environment]]. * ''condition'' is '''not''' evaluated if a dialog is open. * If action is added to an object and not to the [[player]], ''condition'' will only get evaluated if the player is closer than ~50m to the object surface and is looking at the object. * If action is added to [[player]], ''condition'' is evaluated all the time.}} |p9since= arma2 1.00 |p10= '''radius''': [[Number]] - (Optional, default 50) Maximum 3D [[distance]] in meters between the activating unit's [[eyePos]] and the ''object<nowiki>'</nowiki>s'' ''memoryPoint'', ''selection'' or [[position]]. -1 disables the radius |p10since= tkoh 1.00 |p11= '''radiusView''': [[Number]] - (Optional, default '''unknown''') Maximum distance in meters the cursor can be away from the 3D action to activate it. -1 disables this radius |p11since= tkoh 1.00 |p12= '''showIn3D''': [[Number]] - (Optional, default '''unknown''') Condition for showing the action in 3D space. Can be combined e.g. <sqf inline>2 + 32</sqf> * 1 - show * 2 - draw if unit is pilot * 4 - draw if unit is inside vehicle * 8 - draw if unit is outside vehicle * 16 - draw if not in external camera * 32 - draw if not in internal camera * 64 - draw if not in gunner camera (turret optics) |p12since= tkoh 1.00 |p13= '''available''': [[Number]] - (Optional, default '''unknown''') Condition for being able to activate the action. Can be combined e.g. <sqf inline>1 + 4</sqf> * 0 - disabled * 1 - unit is pilot or copilot * 2 - unit is inside target * 4 - unit is not inside target |p13since= tkoh 1.00 |p14= '''textDefault''': [[String]] - (optional, default "") Structured Text which is shown as the 3D action (so it can be an icon), or in the center of the screen when the action is highlighted in the action menu for a 2D action |p14since= tkoh 1.00 |p15= '''textToolTip''': [[String]] - (optional, default "") Structured Text which is faded in under the textDefault when hovering over the action in 3D space |p15since= tkoh 1.00 |r1= [[Number]] - The added action's ID. Action can be removed with [[removeAction]] (see also [[removeAllActions]]). IDs are incrementing, the first given action to each unit has the ID 0, the second the ID 1, etc. IDs are also passed to the called script (see [[#Syntax|''script'' parameter]]) |x1= <sqf> // short and sweet player addAction ["a useless action that does nothing", {}]; player addAction ["<t color='#FF0000'>This Useless Action Is RED</t>", {hint "RED"}]; player addAction ["Hint Hello!", { hint format ["Hello %1!", name player] }]; player addAction ["String Exec", "hint 'this is also compiled'"]; </sqf> |x2= <sqf>_actionID = player addAction ["Exec the file", "scriptFile.sqf"];</sqf> '''scriptFile.sqf:''' <sqf>hint str _this;</sqf> |x3= {{tkoh}}: <sqf> _heli addAction [ "Test", "myTest.sqf", "", 1, true, true, "", "true", "display1", 2, 0.25, 9, 0, "<img image=\'\HSim\UI_H\data\\ui_action_autohover_ca.paa\' size='1.8' shadow=0 />", "<br />My test tooltip" ]; </sqf> |seealso= [[actionIDs]] [[actionParams]] [[setUserActionText]] [[inGameUISetEventHandler]] [[showHUD]] [[inputAction]] [[removeAction]], [[removeAllActions]], [[action]] }} |title2= {{TabView/GameTitle|arma3}} |content2= {{RV|type=command |game1= arma3 |version1= 0.50 |arg= global |eff= local |gr1= Interaction |descr= Adds an entry to the action menu of an object. The action can only be activated when in proximity to the object '''and''' looking at it. Adding an action to the player makes that action available to the player at all times. For event handling of user interaction see [[inGameUISetEventHandler]]. |mp= The command will be ignored on dedicated servers, probably because no UI exists. |s1= object [[addAction]] [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, selection, memoryPoint] |p1= '''object''': [[Object]] - unit, vehicle or static object. '''No [[createAgent|agents]] and [[Arma 3 Simple Objects|simple objects]]!''' |p2= '''title''': [[String]] - the action name displayed in the action menu, may contain [[Structured Text]]. Because of that '''<''' and '''>''' symbols will be interpreted as opening and closing XML tags. To avoid this use {{hl|&amp;lt;}} for '''&lt;''' and {{hl|&amp;gt;}} for '''&gt;'''. The title text appearance can be changed with [[setUserActionText]] |p3= '''script''': [[String]] or [[Code]] - either path to the script file, relative to the mission folder or string with code or the actual script code. If the string is a path to script file, the script file '''must''' have extension .[[SQS Syntax|SQS]] or .[[SQF Syntax|SQF]]. The script, whether it is a file or a code, will run in [[Scheduler#Scheduled Environment|scheduled environment]], i.e. it is ok to use [[sleep]]. Parameters array passed to the script upon activation in ''[[Magic Variables#this|_this]]'' variable is: <sqf>params ["_target", "_caller", "_actionId", "_arguments"];</sqf> * '''target''': [[Object]] - the object which the action is assigned to * '''caller''': [[Object]] - the unit that activated the action * '''actionID''': [[Number]] - activated action's ID (same as [[addAction]]'s return value) * '''arguments''': [[Anything]] - arguments given to the script if you are using the extended syntax |p4= '''arguments''': [[Anything]] - (Optional, default [[nil]]) arguments to pass to the script. Accessible with <sqf inline>_this select 3</sqf> inside the script. If [[Array]] is used as an argument for example, its first element reference would be <sqf inline>_this select 3 select 0</sqf> |p5= '''priority''': [[Number]] - (Optional, default 1.5) priority value of the action. Actions will be arranged in descending order according to this value. Every game action has a preset priority value. Value can be negative or decimal fraction. Actions with same values will be arranged in order which they were made, newest at the bottom. The bigger the number the higher the action will be positioned on the menu. Typical range is 0 to 6 |p6= '''showWindow''': [[Boolean]] - (Optional, default [[true]]) if set to [[true]], players see "Titletext" at mid-lower screen, as they approach the object. Only the title text for the action with highest priority and ''showWindow'' set to [[true]] will be shown |p7= '''hideOnUse''': [[Boolean]] - (Optional, default [[true]]) if set to [[true]], it will hide the action menu after selecting it. If set to [[false]], it will leave the action menu open and visible after selecting the action, leaving the same action highlighted, for the purpose of allowing you to re-select that same action quickly, or to select another action |p8= '''shortcut''': [[String]] - (Optional, default "") One of the [[:Category:Key Actions|key names]] defined in bin.pbo (e.g. "moveForward"). Adding available shortcut will bind corresponding keyboard key to this action. Shortcut availability can be tested with [[inputAction]] command |p9= '''condition''': [[String]] - (Optional, default "true") expression that must return [[true]] for the action to be shown. '''Special variables''' passed to the script code are: * ''_target'': [[Object]] - The object to which action is attached or, if the object is a unit inside of vehicle, the vehicle * ''_this'': [[Object]] - Caller person to whom the action is shown (or not shown if ''condition'' returns [[false]]) * ''_originalTarget'': [[Object]] - The original object to which the action is attached, regardless if the object/unit is in a vehicle or not * ''_actionId'': [[Number]] - checked action's ID (same as [[addAction]]'s return value) {{Feature|warning|If the player is the group leader, has an action added to them, and selects a subordinate, {{hl|''_this''}} alternatively switches between the player and this selected unit - RPT logging {{hl|Unknown attribute itemsCmd}} in the process.}} {{Feature|important| * ''condition'' is evaluated on each frame in [[Scheduler#Unscheduled Environment|unscheduled environment]]. * ''condition'' is '''not''' evaluated if a dialog is open. * If action is added to an object and not to the [[player]], ''condition'' will only get evaluated if the player is closer than ~50m to the object surface and is looking at the object. * If action is added to [[player]], ''condition'' is evaluated all the time. }} |p10= '''radius''': [[Number]] - (Optional, default 50) maximum 3D [[distance]] in meters between the activating unit's [[eyePos]] and ''object''<nowiki/>'s ''memoryPoint'', ''selection'' or [[position]]. -1 disables the radius; hardcoded limit is '''50''' |p10since= arma3 1.64 |p11= '''unconscious''': [[Boolean]] - (Optional, default [[false]]) if [[true]] will be shown to incapacitated player. See also [[setUnconscious]] and [[lifeState]] |p11since= arma3 1.64 |p12= '''selection''': [[String]] - (Optional, default "") ''object''<nowiki/>'s geometry LOD's named selection |p12since= arma3 1.70 |p13= '''memoryPoint''': [[String]] - (Optional, default "") ''object''<nowiki/>'s memory point. If ''selection'' is supplied, ''memoryPoint'' is not used |p13since= arma3 1.82 |r1= [[Number]] - The added action's ID. Action can be removed with [[removeAction]] (see also [[removeAllActions]]). IDs are incrementing, the first given action to each unit has the ID 0, the second the ID 1, etc. IDs are also passed to the called script (see [[#Syntax|''script'' parameter]]) |x1= <sqf> // short and sweet player addAction ["a useless action that does nothing", {}]; player addAction ["<t color='#FF0000'>This Useless Action Is RED</t>", { hint "RED" }]; player addAction ["Hint Hello!", { hint format ["Hello %1!", name player] }]; player addAction ["String Exec", "hint 'this is also compiled'"]; </sqf> |x2= <sqf>_actionID = player addAction ["Exec the file", "scriptFile.sqf"];</sqf> '''scriptFile.sqf:''' <sqf>hint str _this;</sqf> |x3= <sqf> // create object on the server and add action to the object on every client if (isServer) then { private _object = "some_obj_class" createVehicle [1234, 1234, 0]; [_object, ["Greetings!", { hint "Hello!"; }]] remoteExec ["addAction"]; // Note: does not return action id }; </sqf> |x4= Default parameters: <sqf> this addAction [ "title", { params ["_target", "_caller", "_actionId", "_arguments"]; }, nil, 1.5, true, true, "", "true", // _target, _this, _originalTarget 50, false, "", "" ]; </sqf> |x5= Default parameters with comments: <sqf>this addAction [ "title", // title { params ["_target", "_caller", "_actionId", "_arguments"]; // script }, nil, // arguments 1.5, // priority true, // showWindow true, // hideOnUse "", // shortcut "true", // condition 50, // radius false, // unconscious "", // selection "" // memoryPoint ]; </sqf> |seealso= [[actionIDs]] [[actionParams]] [[setUserActionText]] [[inGameUISetEventHandler]] [[showHUD]] [[inputAction]] [[removeAction]], [[removeAllActions]], [[action]], [[BIS_fnc_holdActionAdd]] }} }} {{Note |user= Dedmen |timestamp= 20180502134400 |text= If you want to replicate vanilla Actions like "Treat yourself" where the scroll menu only shows text and it displays the icon mid-screen you can use <sqf> private _actionId = player addAction ["Heal", {}]; player setUserActionText [_actionId, "Heal", \"<img size='2' image=\'\a3\\ui_f\data\IGUI\Cfg\Actions\heal_ca\'/>"]; </sqf> }} {{Note |user= PierreMGI |timestamp= 20200512104200 |text= [[addAction]] on unit or player stays on corpse after kill. So this action is lost for the new body after respawn. If you want a persistent addAction, you need to add it in the respawn script (onPlayerRespawn.sqf or [[addMissionEventHandler]] "entityRespawned" or addMPEventHandler "MPrespawn"... You can use [[removeAllActions]] on corpse. }} {{Note |user= Leopard20 |timestamp= 20220828215200 |text= If the server blocks [[execVM]] in [[Arma_3:_CfgRemoteExec|CfgRemoteExec]], you can't use path to script: <sqf> _obj addAction ["Test", "path\script.sqf"]; // "path\script.sqf" won't execute </sqf> You can, however, do this: <sqf> _obj addAction ["Test", {_this spawn compile preprocessFileLineNumbers "path\script.sqf"}]; </sqf> But it's recommended to use functions if the script is called frequently. }}`;
